
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000068  00800200  000009b8  00000a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000025  00800268  00800268  00000ab4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ab4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000248  00000000  00000000  00000ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001cfd  00000000  00000000  00000d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003f3  00000000  00000000  00002a29  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000120f  00000000  00000000  00002e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000052c  00000000  00000000  0000402c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000064a  00000000  00000000  00004558  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b66  00000000  00000000  00004ba2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002b0  00000000  00000000  00005708  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	11 c3       	rjmp	.+1570   	; 0x628 <__vector_1>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 eb       	ldi	r30, 0xB8	; 184
  fc:	f9 e0       	ldi	r31, 0x09	; 9
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 36       	cpi	r26, 0x68	; 104
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a8 e6       	ldi	r26, 0x68	; 104
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ad 38       	cpi	r26, 0x8D	; 141
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	33 d4       	rcall	.+2150   	; 0x986 <main>
 120:	49 c4       	rjmp	.+2194   	; 0x9b4 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <lcd_set_4bit>:
	print_sensor(1,9,1);	//Prints Value of White Line Sensor3	
}

void atNode()
{
	buzzer();
 124:	86 e6       	ldi	r24, 0x66	; 102
 126:	9e e0       	ldi	r25, 0x0E	; 14
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <lcd_set_4bit+0x4>
 12c:	00 00       	nop
 12e:	40 98       	cbi	0x08, 0	; 8
 130:	41 98       	cbi	0x08, 1	; 8
 132:	80 e3       	ldi	r24, 0x30	; 48
 134:	88 b9       	out	0x08, r24	; 8
 136:	42 9a       	sbi	0x08, 2	; 8
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	97 e4       	ldi	r25, 0x47	; 71
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <lcd_set_4bit+0x18>
 140:	00 c0       	rjmp	.+0      	; 0x142 <lcd_set_4bit+0x1e>
 142:	00 00       	nop
 144:	42 98       	cbi	0x08, 2	; 8
 146:	86 e6       	ldi	r24, 0x66	; 102
 148:	9e e0       	ldi	r25, 0x0E	; 14
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <lcd_set_4bit+0x26>
 14e:	00 00       	nop
 150:	40 98       	cbi	0x08, 0	; 8
 152:	41 98       	cbi	0x08, 1	; 8
 154:	80 e3       	ldi	r24, 0x30	; 48
 156:	88 b9       	out	0x08, r24	; 8
 158:	42 9a       	sbi	0x08, 2	; 8
 15a:	8f ef       	ldi	r24, 0xFF	; 255
 15c:	97 e4       	ldi	r25, 0x47	; 71
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <lcd_set_4bit+0x3a>
 162:	00 c0       	rjmp	.+0      	; 0x164 <lcd_set_4bit+0x40>
 164:	00 00       	nop
 166:	42 98       	cbi	0x08, 2	; 8
 168:	86 e6       	ldi	r24, 0x66	; 102
 16a:	9e e0       	ldi	r25, 0x0E	; 14
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <lcd_set_4bit+0x48>
 170:	00 00       	nop
 172:	40 98       	cbi	0x08, 0	; 8
 174:	41 98       	cbi	0x08, 1	; 8
 176:	80 e3       	ldi	r24, 0x30	; 48
 178:	88 b9       	out	0x08, r24	; 8
 17a:	42 9a       	sbi	0x08, 2	; 8
 17c:	8f ef       	ldi	r24, 0xFF	; 255
 17e:	97 e4       	ldi	r25, 0x47	; 71
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <lcd_set_4bit+0x5c>
 184:	00 c0       	rjmp	.+0      	; 0x186 <lcd_set_4bit+0x62>
 186:	00 00       	nop
 188:	42 98       	cbi	0x08, 2	; 8
 18a:	86 e6       	ldi	r24, 0x66	; 102
 18c:	9e e0       	ldi	r25, 0x0E	; 14
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <lcd_set_4bit+0x6a>
 192:	00 00       	nop
 194:	40 98       	cbi	0x08, 0	; 8
 196:	41 98       	cbi	0x08, 1	; 8
 198:	80 e2       	ldi	r24, 0x20	; 32
 19a:	88 b9       	out	0x08, r24	; 8
 19c:	42 9a       	sbi	0x08, 2	; 8
 19e:	8f ef       	ldi	r24, 0xFF	; 255
 1a0:	97 e4       	ldi	r25, 0x47	; 71
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <lcd_set_4bit+0x7e>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <lcd_set_4bit+0x84>
 1a8:	00 00       	nop
 1aa:	42 98       	cbi	0x08, 2	; 8
 1ac:	08 95       	ret

000001ae <lcd_wr_command>:
 1ae:	98 b1       	in	r25, 0x08	; 8
 1b0:	9f 70       	andi	r25, 0x0F	; 15
 1b2:	98 b9       	out	0x08, r25	; 8
 1b4:	98 b1       	in	r25, 0x08	; 8
 1b6:	28 2f       	mov	r18, r24
 1b8:	20 7f       	andi	r18, 0xF0	; 240
 1ba:	92 2b       	or	r25, r18
 1bc:	98 b9       	out	0x08, r25	; 8
 1be:	40 98       	cbi	0x08, 0	; 8
 1c0:	41 98       	cbi	0x08, 1	; 8
 1c2:	42 9a       	sbi	0x08, 2	; 8
 1c4:	ef ef       	ldi	r30, 0xFF	; 255
 1c6:	f7 e4       	ldi	r31, 0x47	; 71
 1c8:	31 97       	sbiw	r30, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <lcd_wr_command+0x1a>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <lcd_wr_command+0x20>
 1ce:	00 00       	nop
 1d0:	42 98       	cbi	0x08, 2	; 8
 1d2:	98 b1       	in	r25, 0x08	; 8
 1d4:	9f 70       	andi	r25, 0x0F	; 15
 1d6:	98 b9       	out	0x08, r25	; 8
 1d8:	98 b1       	in	r25, 0x08	; 8
 1da:	82 95       	swap	r24
 1dc:	80 7f       	andi	r24, 0xF0	; 240
 1de:	89 2b       	or	r24, r25
 1e0:	88 b9       	out	0x08, r24	; 8
 1e2:	40 98       	cbi	0x08, 0	; 8
 1e4:	41 98       	cbi	0x08, 1	; 8
 1e6:	42 9a       	sbi	0x08, 2	; 8
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	97 e4       	ldi	r25, 0x47	; 71
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <lcd_wr_command+0x3e>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <lcd_wr_command+0x44>
 1f2:	00 00       	nop
 1f4:	42 98       	cbi	0x08, 2	; 8
 1f6:	08 95       	ret

000001f8 <lcd_init>:
 1f8:	95 df       	rcall	.-214    	; 0x124 <lcd_set_4bit>
 1fa:	86 e6       	ldi	r24, 0x66	; 102
 1fc:	9e e0       	ldi	r25, 0x0E	; 14
 1fe:	01 97       	sbiw	r24, 0x01	; 1
 200:	f1 f7       	brne	.-4      	; 0x1fe <lcd_init+0x6>
 202:	00 00       	nop
 204:	88 e2       	ldi	r24, 0x28	; 40
 206:	d3 df       	rcall	.-90     	; 0x1ae <lcd_wr_command>
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	d1 df       	rcall	.-94     	; 0x1ae <lcd_wr_command>
 20c:	86 e0       	ldi	r24, 0x06	; 6
 20e:	cf df       	rcall	.-98     	; 0x1ae <lcd_wr_command>
 210:	8e e0       	ldi	r24, 0x0E	; 14
 212:	cd df       	rcall	.-102    	; 0x1ae <lcd_wr_command>
 214:	80 e8       	ldi	r24, 0x80	; 128
 216:	cb cf       	rjmp	.-106    	; 0x1ae <lcd_wr_command>
 218:	08 95       	ret

0000021a <lcd_wr_char>:
 21a:	98 b1       	in	r25, 0x08	; 8
 21c:	9f 70       	andi	r25, 0x0F	; 15
 21e:	98 b9       	out	0x08, r25	; 8
 220:	98 b1       	in	r25, 0x08	; 8
 222:	28 2f       	mov	r18, r24
 224:	20 7f       	andi	r18, 0xF0	; 240
 226:	92 2b       	or	r25, r18
 228:	98 b9       	out	0x08, r25	; 8
 22a:	40 9a       	sbi	0x08, 0	; 8
 22c:	41 98       	cbi	0x08, 1	; 8
 22e:	42 9a       	sbi	0x08, 2	; 8
 230:	ef ef       	ldi	r30, 0xFF	; 255
 232:	f7 e4       	ldi	r31, 0x47	; 71
 234:	31 97       	sbiw	r30, 0x01	; 1
 236:	f1 f7       	brne	.-4      	; 0x234 <lcd_wr_char+0x1a>
 238:	00 c0       	rjmp	.+0      	; 0x23a <lcd_wr_char+0x20>
 23a:	00 00       	nop
 23c:	42 98       	cbi	0x08, 2	; 8
 23e:	98 b1       	in	r25, 0x08	; 8
 240:	9f 70       	andi	r25, 0x0F	; 15
 242:	98 b9       	out	0x08, r25	; 8
 244:	98 b1       	in	r25, 0x08	; 8
 246:	82 95       	swap	r24
 248:	80 7f       	andi	r24, 0xF0	; 240
 24a:	89 2b       	or	r24, r25
 24c:	88 b9       	out	0x08, r24	; 8
 24e:	40 9a       	sbi	0x08, 0	; 8
 250:	41 98       	cbi	0x08, 1	; 8
 252:	42 9a       	sbi	0x08, 2	; 8
 254:	8f ef       	ldi	r24, 0xFF	; 255
 256:	97 e4       	ldi	r25, 0x47	; 71
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <lcd_wr_char+0x3e>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <lcd_wr_char+0x44>
 25e:	00 00       	nop
 260:	42 98       	cbi	0x08, 2	; 8
 262:	08 95       	ret

00000264 <lcd_home>:
 264:	80 e8       	ldi	r24, 0x80	; 128
 266:	a3 cf       	rjmp	.-186    	; 0x1ae <lcd_wr_command>
 268:	08 95       	ret

0000026a <lcd_string>:
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	ec 01       	movw	r28, r24
 270:	88 81       	ld	r24, Y
 272:	88 23       	and	r24, r24
 274:	29 f0       	breq	.+10     	; 0x280 <lcd_string+0x16>
 276:	21 96       	adiw	r28, 0x01	; 1
 278:	d0 df       	rcall	.-96     	; 0x21a <lcd_wr_char>
 27a:	89 91       	ld	r24, Y+
 27c:	81 11       	cpse	r24, r1
 27e:	fc cf       	rjmp	.-8      	; 0x278 <lcd_string+0xe>
 280:	df 91       	pop	r29
 282:	cf 91       	pop	r28
 284:	08 95       	ret

00000286 <lcd_cursor>:
 286:	82 30       	cpi	r24, 0x02	; 2
 288:	69 f0       	breq	.+26     	; 0x2a4 <lcd_cursor+0x1e>
 28a:	18 f4       	brcc	.+6      	; 0x292 <lcd_cursor+0xc>
 28c:	81 30       	cpi	r24, 0x01	; 1
 28e:	31 f0       	breq	.+12     	; 0x29c <lcd_cursor+0x16>
 290:	08 95       	ret
 292:	83 30       	cpi	r24, 0x03	; 3
 294:	59 f0       	breq	.+22     	; 0x2ac <lcd_cursor+0x26>
 296:	84 30       	cpi	r24, 0x04	; 4
 298:	69 f0       	breq	.+26     	; 0x2b4 <lcd_cursor+0x2e>
 29a:	08 95       	ret
 29c:	8f e7       	ldi	r24, 0x7F	; 127
 29e:	86 0f       	add	r24, r22
 2a0:	86 cf       	rjmp	.-244    	; 0x1ae <lcd_wr_command>
 2a2:	08 95       	ret
 2a4:	8f eb       	ldi	r24, 0xBF	; 191
 2a6:	86 0f       	add	r24, r22
 2a8:	82 cf       	rjmp	.-252    	; 0x1ae <lcd_wr_command>
 2aa:	08 95       	ret
 2ac:	83 e9       	ldi	r24, 0x93	; 147
 2ae:	86 0f       	add	r24, r22
 2b0:	7e cf       	rjmp	.-260    	; 0x1ae <lcd_wr_command>
 2b2:	08 95       	ret
 2b4:	83 ed       	ldi	r24, 0xD3	; 211
 2b6:	86 0f       	add	r24, r22
 2b8:	7a cf       	rjmp	.-268    	; 0x1ae <lcd_wr_command>
 2ba:	08 95       	ret

000002bc <lcd_print>:
 2bc:	0f 93       	push	r16
 2be:	1f 93       	push	r17
 2c0:	cf 93       	push	r28
 2c2:	df 93       	push	r29
 2c4:	8a 01       	movw	r16, r20
 2c6:	e9 01       	movw	r28, r18
 2c8:	88 23       	and	r24, r24
 2ca:	11 f0       	breq	.+4      	; 0x2d0 <lcd_print+0x14>
 2cc:	61 11       	cpse	r22, r1
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <lcd_print+0x18>
 2d0:	c9 df       	rcall	.-110    	; 0x264 <lcd_home>
 2d2:	01 c0       	rjmp	.+2      	; 0x2d6 <lcd_print+0x1a>
 2d4:	d8 df       	rcall	.-80     	; 0x286 <lcd_cursor>
 2d6:	c5 30       	cpi	r28, 0x05	; 5
 2d8:	d1 05       	cpc	r29, r1
 2da:	09 f0       	breq	.+2      	; 0x2de <lcd_print+0x22>
 2dc:	cd c0       	rjmp	.+410    	; 0x478 <lcd_print+0x1bc>
 2de:	98 01       	movw	r18, r16
 2e0:	32 95       	swap	r19
 2e2:	22 95       	swap	r18
 2e4:	2f 70       	andi	r18, 0x0F	; 15
 2e6:	23 27       	eor	r18, r19
 2e8:	3f 70       	andi	r19, 0x0F	; 15
 2ea:	23 27       	eor	r18, r19
 2ec:	a7 e4       	ldi	r26, 0x47	; 71
 2ee:	b3 e0       	ldi	r27, 0x03	; 3
 2f0:	52 d3       	rcall	.+1700   	; 0x996 <__umulhisi3>
 2f2:	96 95       	lsr	r25
 2f4:	87 95       	ror	r24
 2f6:	96 95       	lsr	r25
 2f8:	87 95       	ror	r24
 2fa:	96 95       	lsr	r25
 2fc:	87 95       	ror	r24
 2fe:	c0 96       	adiw	r24, 0x30	; 48
 300:	90 93 79 02 	sts	0x0279, r25
 304:	80 93 78 02 	sts	0x0278, r24
 308:	88 df       	rcall	.-240    	; 0x21a <lcd_wr_char>
 30a:	98 01       	movw	r18, r16
 30c:	36 95       	lsr	r19
 30e:	27 95       	ror	r18
 310:	36 95       	lsr	r19
 312:	27 95       	ror	r18
 314:	36 95       	lsr	r19
 316:	27 95       	ror	r18
 318:	a5 ec       	ldi	r26, 0xC5	; 197
 31a:	b0 e2       	ldi	r27, 0x20	; 32
 31c:	3c d3       	rcall	.+1656   	; 0x996 <__umulhisi3>
 31e:	ac 01       	movw	r20, r24
 320:	52 95       	swap	r21
 322:	42 95       	swap	r20
 324:	4f 70       	andi	r20, 0x0F	; 15
 326:	45 27       	eor	r20, r21
 328:	5f 70       	andi	r21, 0x0F	; 15
 32a:	45 27       	eor	r20, r21
 32c:	50 93 7b 02 	sts	0x027B, r21
 330:	40 93 7a 02 	sts	0x027A, r20
 334:	9a 01       	movw	r18, r20
 336:	ad ec       	ldi	r26, 0xCD	; 205
 338:	bc ec       	ldi	r27, 0xCC	; 204
 33a:	2d d3       	rcall	.+1626   	; 0x996 <__umulhisi3>
 33c:	96 95       	lsr	r25
 33e:	87 95       	ror	r24
 340:	96 95       	lsr	r25
 342:	87 95       	ror	r24
 344:	96 95       	lsr	r25
 346:	87 95       	ror	r24
 348:	9c 01       	movw	r18, r24
 34a:	22 0f       	add	r18, r18
 34c:	33 1f       	adc	r19, r19
 34e:	88 0f       	add	r24, r24
 350:	99 1f       	adc	r25, r25
 352:	88 0f       	add	r24, r24
 354:	99 1f       	adc	r25, r25
 356:	88 0f       	add	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	82 0f       	add	r24, r18
 35c:	93 1f       	adc	r25, r19
 35e:	48 1b       	sub	r20, r24
 360:	59 0b       	sbc	r21, r25
 362:	ca 01       	movw	r24, r20
 364:	c0 96       	adiw	r24, 0x30	; 48
 366:	90 93 8c 02 	sts	0x028C, r25
 36a:	80 93 8b 02 	sts	0x028B, r24
 36e:	55 df       	rcall	.-342    	; 0x21a <lcd_wr_char>
 370:	04 c0       	rjmp	.+8      	; 0x37a <lcd_print+0xbe>
 372:	c3 30       	cpi	r28, 0x03	; 3
 374:	d1 05       	cpc	r29, r1
 376:	09 f0       	breq	.+2      	; 0x37a <lcd_print+0xbe>
 378:	84 c0       	rjmp	.+264    	; 0x482 <lcd_print+0x1c6>
 37a:	98 01       	movw	r18, r16
 37c:	36 95       	lsr	r19
 37e:	27 95       	ror	r18
 380:	36 95       	lsr	r19
 382:	27 95       	ror	r18
 384:	ab e7       	ldi	r26, 0x7B	; 123
 386:	b4 e1       	ldi	r27, 0x14	; 20
 388:	06 d3       	rcall	.+1548   	; 0x996 <__umulhisi3>
 38a:	ac 01       	movw	r20, r24
 38c:	56 95       	lsr	r21
 38e:	47 95       	ror	r20
 390:	50 93 7b 02 	sts	0x027B, r21
 394:	40 93 7a 02 	sts	0x027A, r20
 398:	9a 01       	movw	r18, r20
 39a:	ad ec       	ldi	r26, 0xCD	; 205
 39c:	bc ec       	ldi	r27, 0xCC	; 204
 39e:	fb d2       	rcall	.+1526   	; 0x996 <__umulhisi3>
 3a0:	96 95       	lsr	r25
 3a2:	87 95       	ror	r24
 3a4:	96 95       	lsr	r25
 3a6:	87 95       	ror	r24
 3a8:	96 95       	lsr	r25
 3aa:	87 95       	ror	r24
 3ac:	9c 01       	movw	r18, r24
 3ae:	22 0f       	add	r18, r18
 3b0:	33 1f       	adc	r19, r19
 3b2:	88 0f       	add	r24, r24
 3b4:	99 1f       	adc	r25, r25
 3b6:	88 0f       	add	r24, r24
 3b8:	99 1f       	adc	r25, r25
 3ba:	88 0f       	add	r24, r24
 3bc:	99 1f       	adc	r25, r25
 3be:	82 0f       	add	r24, r18
 3c0:	93 1f       	adc	r25, r19
 3c2:	48 1b       	sub	r20, r24
 3c4:	59 0b       	sbc	r21, r25
 3c6:	ca 01       	movw	r24, r20
 3c8:	c0 96       	adiw	r24, 0x30	; 48
 3ca:	90 93 88 02 	sts	0x0288, r25
 3ce:	80 93 87 02 	sts	0x0287, r24
 3d2:	23 df       	rcall	.-442    	; 0x21a <lcd_wr_char>
 3d4:	98 01       	movw	r18, r16
 3d6:	ad ec       	ldi	r26, 0xCD	; 205
 3d8:	bc ec       	ldi	r27, 0xCC	; 204
 3da:	dd d2       	rcall	.+1466   	; 0x996 <__umulhisi3>
 3dc:	ac 01       	movw	r20, r24
 3de:	56 95       	lsr	r21
 3e0:	47 95       	ror	r20
 3e2:	56 95       	lsr	r21
 3e4:	47 95       	ror	r20
 3e6:	56 95       	lsr	r21
 3e8:	47 95       	ror	r20
 3ea:	50 93 7b 02 	sts	0x027B, r21
 3ee:	40 93 7a 02 	sts	0x027A, r20
 3f2:	9a 01       	movw	r18, r20
 3f4:	d0 d2       	rcall	.+1440   	; 0x996 <__umulhisi3>
 3f6:	96 95       	lsr	r25
 3f8:	87 95       	ror	r24
 3fa:	96 95       	lsr	r25
 3fc:	87 95       	ror	r24
 3fe:	96 95       	lsr	r25
 400:	87 95       	ror	r24
 402:	9c 01       	movw	r18, r24
 404:	22 0f       	add	r18, r18
 406:	33 1f       	adc	r19, r19
 408:	88 0f       	add	r24, r24
 40a:	99 1f       	adc	r25, r25
 40c:	88 0f       	add	r24, r24
 40e:	99 1f       	adc	r25, r25
 410:	88 0f       	add	r24, r24
 412:	99 1f       	adc	r25, r25
 414:	82 0f       	add	r24, r18
 416:	93 1f       	adc	r25, r19
 418:	48 1b       	sub	r20, r24
 41a:	59 0b       	sbc	r21, r25
 41c:	ca 01       	movw	r24, r20
 41e:	c0 96       	adiw	r24, 0x30	; 48
 420:	90 93 86 02 	sts	0x0286, r25
 424:	80 93 85 02 	sts	0x0285, r24
 428:	f8 de       	rcall	.-528    	; 0x21a <lcd_wr_char>
 42a:	03 c0       	rjmp	.+6      	; 0x432 <lcd_print+0x176>
 42c:	c1 30       	cpi	r28, 0x01	; 1
 42e:	d1 05       	cpc	r29, r1
 430:	f1 f4       	brne	.+60     	; 0x46e <lcd_print+0x1b2>
 432:	98 01       	movw	r18, r16
 434:	ad ec       	ldi	r26, 0xCD	; 205
 436:	bc ec       	ldi	r27, 0xCC	; 204
 438:	ae d2       	rcall	.+1372   	; 0x996 <__umulhisi3>
 43a:	96 95       	lsr	r25
 43c:	87 95       	ror	r24
 43e:	96 95       	lsr	r25
 440:	87 95       	ror	r24
 442:	96 95       	lsr	r25
 444:	87 95       	ror	r24
 446:	9c 01       	movw	r18, r24
 448:	22 0f       	add	r18, r18
 44a:	33 1f       	adc	r19, r19
 44c:	88 0f       	add	r24, r24
 44e:	99 1f       	adc	r25, r25
 450:	88 0f       	add	r24, r24
 452:	99 1f       	adc	r25, r25
 454:	88 0f       	add	r24, r24
 456:	99 1f       	adc	r25, r25
 458:	82 0f       	add	r24, r18
 45a:	93 1f       	adc	r25, r19
 45c:	08 1b       	sub	r16, r24
 45e:	19 0b       	sbc	r17, r25
 460:	c8 01       	movw	r24, r16
 462:	c0 96       	adiw	r24, 0x30	; 48
 464:	90 93 8a 02 	sts	0x028A, r25
 468:	80 93 89 02 	sts	0x0289, r24
 46c:	d6 de       	rcall	.-596    	; 0x21a <lcd_wr_char>
 46e:	26 97       	sbiw	r28, 0x06	; 6
 470:	64 f0       	brlt	.+24     	; 0x48a <lcd_print+0x1ce>
 472:	85 e4       	ldi	r24, 0x45	; 69
 474:	d2 de       	rcall	.-604    	; 0x21a <lcd_wr_char>
 476:	09 c0       	rjmp	.+18     	; 0x48a <lcd_print+0x1ce>
 478:	c4 30       	cpi	r28, 0x04	; 4
 47a:	d1 05       	cpc	r29, r1
 47c:	09 f0       	breq	.+2      	; 0x480 <lcd_print+0x1c4>
 47e:	79 cf       	rjmp	.-270    	; 0x372 <lcd_print+0xb6>
 480:	44 cf       	rjmp	.-376    	; 0x30a <lcd_print+0x4e>
 482:	c2 30       	cpi	r28, 0x02	; 2
 484:	d1 05       	cpc	r29, r1
 486:	91 f6       	brne	.-92     	; 0x42c <lcd_print+0x170>
 488:	a5 cf       	rjmp	.-182    	; 0x3d4 <lcd_print+0x118>
 48a:	df 91       	pop	r29
 48c:	cf 91       	pop	r28
 48e:	1f 91       	pop	r17
 490:	0f 91       	pop	r16
 492:	08 95       	ret

00000494 <timer5_init>:
 494:	e1 e2       	ldi	r30, 0x21	; 33
 496:	f1 e0       	ldi	r31, 0x01	; 1
 498:	10 82       	st	Z, r1
 49a:	8f ef       	ldi	r24, 0xFF	; 255
 49c:	80 93 25 01 	sts	0x0125, r24
 4a0:	91 e0       	ldi	r25, 0x01	; 1
 4a2:	90 93 24 01 	sts	0x0124, r25
 4a6:	10 92 29 01 	sts	0x0129, r1
 4aa:	80 93 28 01 	sts	0x0128, r24
 4ae:	10 92 2b 01 	sts	0x012B, r1
 4b2:	80 93 2a 01 	sts	0x012A, r24
 4b6:	10 92 2d 01 	sts	0x012D, r1
 4ba:	80 93 2c 01 	sts	0x012C, r24
 4be:	89 ea       	ldi	r24, 0xA9	; 169
 4c0:	80 93 20 01 	sts	0x0120, r24
 4c4:	8b e0       	ldi	r24, 0x0B	; 11
 4c6:	80 83       	st	Z, r24
 4c8:	08 95       	ret

000004ca <motion_pin_config>:
 4ca:	81 b1       	in	r24, 0x01	; 1
 4cc:	8f 60       	ori	r24, 0x0F	; 15
 4ce:	81 b9       	out	0x01, r24	; 1
 4d0:	82 b1       	in	r24, 0x02	; 2
 4d2:	80 7f       	andi	r24, 0xF0	; 240
 4d4:	82 b9       	out	0x02, r24	; 2
 4d6:	ea e0       	ldi	r30, 0x0A	; 10
 4d8:	f1 e0       	ldi	r31, 0x01	; 1
 4da:	80 81       	ld	r24, Z
 4dc:	88 61       	ori	r24, 0x18	; 24
 4de:	80 83       	st	Z, r24
 4e0:	eb e0       	ldi	r30, 0x0B	; 11
 4e2:	f1 e0       	ldi	r31, 0x01	; 1
 4e4:	80 81       	ld	r24, Z
 4e6:	88 61       	ori	r24, 0x18	; 24
 4e8:	80 83       	st	Z, r24
 4ea:	08 95       	ret

000004ec <motion_set>:
 4ec:	92 b1       	in	r25, 0x02	; 2
 4ee:	90 7f       	andi	r25, 0xF0	; 240
 4f0:	8f 70       	andi	r24, 0x0F	; 15
 4f2:	98 2b       	or	r25, r24
 4f4:	92 b9       	out	0x02, r25	; 2
 4f6:	08 95       	ret

000004f8 <forward>:
 4f8:	86 e0       	ldi	r24, 0x06	; 6
 4fa:	f8 cf       	rjmp	.-16     	; 0x4ec <motion_set>
 4fc:	08 95       	ret

000004fe <left>:
 4fe:	85 e0       	ldi	r24, 0x05	; 5
 500:	f5 cf       	rjmp	.-22     	; 0x4ec <motion_set>
 502:	08 95       	ret

00000504 <right>:
 504:	8a e0       	ldi	r24, 0x0A	; 10
 506:	f2 cf       	rjmp	.-28     	; 0x4ec <motion_set>
 508:	08 95       	ret

0000050a <soft_left>:
 50a:	84 e0       	ldi	r24, 0x04	; 4
 50c:	ef cf       	rjmp	.-34     	; 0x4ec <motion_set>
 50e:	08 95       	ret

00000510 <soft_right>:
 510:	82 e0       	ldi	r24, 0x02	; 2
 512:	ec cf       	rjmp	.-40     	; 0x4ec <motion_set>
 514:	08 95       	ret

00000516 <stop>:
 516:	80 e0       	ldi	r24, 0x00	; 0
 518:	e9 cf       	rjmp	.-46     	; 0x4ec <motion_set>
 51a:	08 95       	ret

0000051c <lcd_port_config>:
 51c:	87 b1       	in	r24, 0x07	; 7
 51e:	87 6f       	ori	r24, 0xF7	; 247
 520:	87 b9       	out	0x07, r24	; 7
 522:	88 b1       	in	r24, 0x08	; 8
 524:	80 78       	andi	r24, 0x80	; 128
 526:	88 b9       	out	0x08, r24	; 8
 528:	08 95       	ret

0000052a <color_sensor_pin_config>:
 52a:	8a b1       	in	r24, 0x0a	; 10
 52c:	8e 6f       	ori	r24, 0xFE	; 254
 52e:	8a b9       	out	0x0a, r24	; 10
 530:	58 9a       	sbi	0x0b, 0	; 11
 532:	08 95       	ret

00000534 <adc_pin_config>:
 534:	10 ba       	out	0x10, r1	; 16
 536:	11 ba       	out	0x11, r1	; 17
 538:	10 92 07 01 	sts	0x0107, r1
 53c:	10 92 08 01 	sts	0x0108, r1
 540:	08 95       	ret

00000542 <servo1_pin_config>:
 542:	25 9a       	sbi	0x04, 5	; 4
 544:	2d 9a       	sbi	0x05, 5	; 5
 546:	08 95       	ret

00000548 <servo2_pin_config>:
 548:	26 9a       	sbi	0x04, 6	; 4
 54a:	2e 9a       	sbi	0x05, 6	; 5
 54c:	08 95       	ret

0000054e <servo3_pin_config>:
 54e:	27 9a       	sbi	0x04, 7	; 4
 550:	2f 9a       	sbi	0x05, 7	; 5
 552:	08 95       	ret

00000554 <timer1_init>:
 554:	e1 e8       	ldi	r30, 0x81	; 129
 556:	f0 e0       	ldi	r31, 0x00	; 0
 558:	10 82       	st	Z, r1
 55a:	8c ef       	ldi	r24, 0xFC	; 252
 55c:	80 93 85 00 	sts	0x0085, r24
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	80 93 84 00 	sts	0x0084, r24
 566:	93 e0       	ldi	r25, 0x03	; 3
 568:	90 93 89 00 	sts	0x0089, r25
 56c:	8f ef       	ldi	r24, 0xFF	; 255
 56e:	80 93 88 00 	sts	0x0088, r24
 572:	90 93 8b 00 	sts	0x008B, r25
 576:	80 93 8a 00 	sts	0x008A, r24
 57a:	90 93 8d 00 	sts	0x008D, r25
 57e:	80 93 8c 00 	sts	0x008C, r24
 582:	90 93 87 00 	sts	0x0087, r25
 586:	80 93 86 00 	sts	0x0086, r24
 58a:	8b ea       	ldi	r24, 0xAB	; 171
 58c:	80 93 80 00 	sts	0x0080, r24
 590:	10 92 82 00 	sts	0x0082, r1
 594:	8c e0       	ldi	r24, 0x0C	; 12
 596:	80 83       	st	Z, r24
 598:	08 95       	ret

0000059a <port_init>:
 59a:	c0 df       	rcall	.-128    	; 0x51c <lcd_port_config>
 59c:	cb df       	rcall	.-106    	; 0x534 <adc_pin_config>
 59e:	3b 9a       	sbi	0x07, 3	; 7
 5a0:	43 98       	cbi	0x08, 3	; 8
 5a2:	cf df       	rcall	.-98     	; 0x542 <servo1_pin_config>
 5a4:	d1 df       	rcall	.-94     	; 0x548 <servo2_pin_config>
 5a6:	d3 df       	rcall	.-90     	; 0x54e <servo3_pin_config>
 5a8:	c0 cf       	rjmp	.-128    	; 0x52a <color_sensor_pin_config>
 5aa:	08 95       	ret

000005ac <buzzer_on>:
 5ac:	86 b1       	in	r24, 0x06	; 6
 5ae:	88 60       	ori	r24, 0x08	; 8
 5b0:	88 b9       	out	0x08, r24	; 8
 5b2:	08 95       	ret

000005b4 <buzzer_off>:
 5b4:	86 b1       	in	r24, 0x06	; 6
 5b6:	87 7f       	andi	r24, 0xF7	; 247
 5b8:	88 b9       	out	0x08, r24	; 8
 5ba:	08 95       	ret

000005bc <ADC_Conversion>:
 5bc:	88 30       	cpi	r24, 0x08	; 8
 5be:	18 f0       	brcs	.+6      	; 0x5c6 <ADC_Conversion+0xa>
 5c0:	98 e0       	ldi	r25, 0x08	; 8
 5c2:	90 93 7b 00 	sts	0x007B, r25
 5c6:	87 70       	andi	r24, 0x07	; 7
 5c8:	80 62       	ori	r24, 0x20	; 32
 5ca:	80 93 7c 00 	sts	0x007C, r24
 5ce:	ea e7       	ldi	r30, 0x7A	; 122
 5d0:	f0 e0       	ldi	r31, 0x00	; 0
 5d2:	80 81       	ld	r24, Z
 5d4:	80 64       	ori	r24, 0x40	; 64
 5d6:	80 83       	st	Z, r24
 5d8:	80 81       	ld	r24, Z
 5da:	84 ff       	sbrs	r24, 4
 5dc:	fd cf       	rjmp	.-6      	; 0x5d8 <ADC_Conversion+0x1c>
 5de:	80 91 79 00 	lds	r24, 0x0079
 5e2:	ea e7       	ldi	r30, 0x7A	; 122
 5e4:	f0 e0       	ldi	r31, 0x00	; 0
 5e6:	90 81       	ld	r25, Z
 5e8:	90 61       	ori	r25, 0x10	; 16
 5ea:	90 83       	st	Z, r25
 5ec:	10 92 7b 00 	sts	0x007B, r1
 5f0:	08 95       	ret

000005f2 <print_sensor>:
 5f2:	cf 93       	push	r28
 5f4:	df 93       	push	r29
 5f6:	c8 2f       	mov	r28, r24
 5f8:	d6 2f       	mov	r29, r22
 5fa:	84 2f       	mov	r24, r20
 5fc:	df df       	rcall	.-66     	; 0x5bc <ADC_Conversion>
 5fe:	80 93 84 02 	sts	0x0284, r24
 602:	48 2f       	mov	r20, r24
 604:	50 e0       	ldi	r21, 0x00	; 0
 606:	23 e0       	ldi	r18, 0x03	; 3
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	6d 2f       	mov	r22, r29
 60c:	8c 2f       	mov	r24, r28
 60e:	56 de       	rcall	.-852    	; 0x2bc <lcd_print>
 610:	df 91       	pop	r29
 612:	cf 91       	pop	r28
 614:	08 95       	ret

00000616 <color_sensor_pin_interrupt_init>:
 616:	f8 94       	cli
 618:	e9 e6       	ldi	r30, 0x69	; 105
 61a:	f0 e0       	ldi	r31, 0x00	; 0
 61c:	80 81       	ld	r24, Z
 61e:	82 60       	ori	r24, 0x02	; 2
 620:	80 83       	st	Z, r24
 622:	e8 9a       	sbi	0x1d, 0	; 29
 624:	78 94       	sei
 626:	08 95       	ret

00000628 <__vector_1>:
 628:	1f 92       	push	r1
 62a:	0f 92       	push	r0
 62c:	0f b6       	in	r0, 0x3f	; 63
 62e:	0f 92       	push	r0
 630:	11 24       	eor	r1, r1
 632:	8f 93       	push	r24
 634:	9f 93       	push	r25
 636:	af 93       	push	r26
 638:	bf 93       	push	r27
 63a:	80 91 6e 02 	lds	r24, 0x026E
 63e:	90 91 6f 02 	lds	r25, 0x026F
 642:	a0 91 70 02 	lds	r26, 0x0270
 646:	b0 91 71 02 	lds	r27, 0x0271
 64a:	01 96       	adiw	r24, 0x01	; 1
 64c:	a1 1d       	adc	r26, r1
 64e:	b1 1d       	adc	r27, r1
 650:	80 93 6e 02 	sts	0x026E, r24
 654:	90 93 6f 02 	sts	0x026F, r25
 658:	a0 93 70 02 	sts	0x0270, r26
 65c:	b0 93 71 02 	sts	0x0271, r27
 660:	bf 91       	pop	r27
 662:	af 91       	pop	r26
 664:	9f 91       	pop	r25
 666:	8f 91       	pop	r24
 668:	0f 90       	pop	r0
 66a:	0f be       	out	0x3f, r0	; 63
 66c:	0f 90       	pop	r0
 66e:	1f 90       	pop	r1
 670:	18 95       	reti

00000672 <adc_init>:
 672:	ea e7       	ldi	r30, 0x7A	; 122
 674:	f0 e0       	ldi	r31, 0x00	; 0
 676:	10 82       	st	Z, r1
 678:	10 92 7b 00 	sts	0x007B, r1
 67c:	80 e2       	ldi	r24, 0x20	; 32
 67e:	80 93 7c 00 	sts	0x007C, r24
 682:	80 e8       	ldi	r24, 0x80	; 128
 684:	80 bf       	out	0x30, r24	; 48
 686:	86 e8       	ldi	r24, 0x86	; 134
 688:	80 83       	st	Z, r24
 68a:	08 95       	ret

0000068c <init_devices>:
 68c:	f8 94       	cli
 68e:	85 df       	rcall	.-246    	; 0x59a <port_init>
 690:	c2 df       	rcall	.-124    	; 0x616 <color_sensor_pin_interrupt_init>
 692:	ef df       	rcall	.-34     	; 0x672 <adc_init>
 694:	1a df       	rcall	.-460    	; 0x4ca <motion_pin_config>
 696:	fe de       	rcall	.-516    	; 0x494 <timer5_init>
 698:	5d df       	rcall	.-326    	; 0x554 <timer1_init>
 69a:	78 94       	sei
 69c:	08 95       	ret

0000069e <set_color>:
 69e:	83 e0       	ldi	r24, 0x03	; 3
 6a0:	8d df       	rcall	.-230    	; 0x5bc <ADC_Conversion>
 6a2:	80 93 6d 02 	sts	0x026D, r24
 6a6:	82 e0       	ldi	r24, 0x02	; 2
 6a8:	89 df       	rcall	.-238    	; 0x5bc <ADC_Conversion>
 6aa:	80 93 6c 02 	sts	0x026C, r24
 6ae:	81 e0       	ldi	r24, 0x01	; 1
 6b0:	85 df       	rcall	.-246    	; 0x5bc <ADC_Conversion>
 6b2:	80 93 6b 02 	sts	0x026B, r24
 6b6:	43 e0       	ldi	r20, 0x03	; 3
 6b8:	61 e0       	ldi	r22, 0x01	; 1
 6ba:	81 e0       	ldi	r24, 0x01	; 1
 6bc:	9a df       	rcall	.-204    	; 0x5f2 <print_sensor>
 6be:	42 e0       	ldi	r20, 0x02	; 2
 6c0:	65 e0       	ldi	r22, 0x05	; 5
 6c2:	81 e0       	ldi	r24, 0x01	; 1
 6c4:	96 df       	rcall	.-212    	; 0x5f2 <print_sensor>
 6c6:	41 e0       	ldi	r20, 0x01	; 1
 6c8:	69 e0       	ldi	r22, 0x09	; 9
 6ca:	81 e0       	ldi	r24, 0x01	; 1
 6cc:	92 cf       	rjmp	.-220    	; 0x5f2 <print_sensor>
 6ce:	08 95       	ret

000006d0 <lcd>:
 6d0:	cf 93       	push	r28
 6d2:	df 93       	push	r29
 6d4:	ec 01       	movw	r28, r24
 6d6:	81 e0       	ldi	r24, 0x01	; 1
 6d8:	6a dd       	rcall	.-1324   	; 0x1ae <lcd_wr_command>
 6da:	63 e0       	ldi	r22, 0x03	; 3
 6dc:	82 e0       	ldi	r24, 0x02	; 2
 6de:	d3 dd       	rcall	.-1114   	; 0x286 <lcd_cursor>
 6e0:	ce 01       	movw	r24, r28
 6e2:	c3 dd       	rcall	.-1146   	; 0x26a <lcd_string>
 6e4:	df 91       	pop	r29
 6e6:	cf 91       	pop	r28
 6e8:	08 95       	ret

000006ea <fixLeft>:
 6ea:	80 91 69 02 	lds	r24, 0x0269
 6ee:	8f 5f       	subi	r24, 0xFF	; 255
 6f0:	80 93 69 02 	sts	0x0269, r24
 6f4:	d4 df       	rcall	.-88     	; 0x69e <set_color>
 6f6:	09 df       	rcall	.-494    	; 0x50a <soft_left>
 6f8:	d2 cf       	rjmp	.-92     	; 0x69e <set_color>
 6fa:	08 95       	ret

000006fc <fixRight>:
 6fc:	80 91 6a 02 	lds	r24, 0x026A
 700:	8f 5f       	subi	r24, 0xFF	; 255
 702:	80 93 6a 02 	sts	0x026A, r24
 706:	cb df       	rcall	.-106    	; 0x69e <set_color>
 708:	03 df       	rcall	.-506    	; 0x510 <soft_right>
 70a:	c9 cf       	rjmp	.-110    	; 0x69e <set_color>
 70c:	08 95       	ret

0000070e <buzzer>:
 70e:	4e df       	rcall	.-356    	; 0x5ac <buzzer_on>
 710:	2c ec       	ldi	r18, 0xCC	; 204
 712:	8c e0       	ldi	r24, 0x0C	; 12
 714:	94 e0       	ldi	r25, 0x04	; 4
 716:	21 50       	subi	r18, 0x01	; 1
 718:	80 40       	sbci	r24, 0x00	; 0
 71a:	90 40       	sbci	r25, 0x00	; 0
 71c:	e1 f7       	brne	.-8      	; 0x716 <buzzer+0x8>
 71e:	00 c0       	rjmp	.+0      	; 0x720 <buzzer+0x12>
 720:	49 cf       	rjmp	.-366    	; 0x5b4 <buzzer_off>
 722:	08 95       	ret

00000724 <fixPath>:
}

// Function for robot velocity control
void velocity (unsigned char left_motor, unsigned char right_motor)
{
	OCR5AL = (unsigned char)left_motor;
 724:	84 e6       	ldi	r24, 0x64	; 100
 726:	80 93 28 01 	sts	0x0128, r24
	OCR5BL = (unsigned char)right_motor;
 72a:	80 93 2a 01 	sts	0x012A, r24
}

void fixPath()
{
	velocity(100,100);
	set_color();
 72e:	b7 df       	rcall	.-146    	; 0x69e <set_color>
	if(Left_white_line>0x28 && Right_white_line>0x28)
 730:	80 91 6d 02 	lds	r24, 0x026D
 734:	89 32       	cpi	r24, 0x29	; 41
 736:	20 f1       	brcs	.+72     	; 0x780 <fixPath+0x5c>
 738:	80 91 6b 02 	lds	r24, 0x026B
 73c:	89 32       	cpi	r24, 0x29	; 41
 73e:	30 f0       	brcs	.+12     	; 0x74c <fixPath+0x28>
	{
		lcd("fixPath.if.lcd");
 740:	80 e0       	ldi	r24, 0x00	; 0
 742:	92 e0       	ldi	r25, 0x02	; 2
 744:	c5 df       	rcall	.-118    	; 0x6d0 <lcd>
		set_color();
 746:	ab df       	rcall	.-170    	; 0x69e <set_color>
	print_sensor(1,9,1);	//Prints Value of White Line Sensor3	
}

void atNode()
{
	buzzer();
 748:	e2 df       	rcall	.-60     	; 0x70e <buzzer>
 74a:	d9 c0       	rjmp	.+434    	; 0x8fe <fixPath+0x1da>
		lcd("fixPath.if.lcd");
		set_color();
		atNode();		
	}
	
	else if(Left_white_line>0x28 && Right_white_line<0x28)
 74c:	88 32       	cpi	r24, 0x28	; 40
 74e:	08 f0       	brcs	.+2      	; 0x752 <fixPath+0x2e>
 750:	34 c0       	rjmp	.+104    	; 0x7ba <fixPath+0x96>
	{
		lcd("fixLEft");
 752:	8f e0       	ldi	r24, 0x0F	; 15
 754:	92 e0       	ldi	r25, 0x02	; 2
 756:	bc df       	rcall	.-136    	; 0x6d0 <lcd>
		set_color();
 758:	a2 df       	rcall	.-188    	; 0x69e <set_color>
		while(1) 
		{
			fixLeft();
 75a:	c7 df       	rcall	.-114    	; 0x6ea <fixLeft>
			set_color();
 75c:	a0 df       	rcall	.-192    	; 0x69e <set_color>
			if(Center_white_line>40 && Right_white_line<40 && Left_white_line<40)
 75e:	80 91 6c 02 	lds	r24, 0x026C
 762:	89 32       	cpi	r24, 0x29	; 41
 764:	d0 f3       	brcs	.-12     	; 0x75a <fixPath+0x36>
 766:	80 91 6b 02 	lds	r24, 0x026B
 76a:	88 32       	cpi	r24, 0x28	; 40
 76c:	b0 f7       	brcc	.-20     	; 0x75a <fixPath+0x36>
 76e:	80 91 6d 02 	lds	r24, 0x026D
 772:	88 32       	cpi	r24, 0x28	; 40
 774:	90 f7       	brcc	.-28     	; 0x75a <fixPath+0x36>
				break;
		}
		stop();
 776:	cf de       	rcall	.-610    	; 0x516 <stop>
		lcd("-");
 778:	8a e3       	ldi	r24, 0x3A	; 58
 77a:	92 e0       	ldi	r25, 0x02	; 2
 77c:	a9 df       	rcall	.-174    	; 0x6d0 <lcd>
 77e:	bf c0       	rjmp	.+382    	; 0x8fe <fixPath+0x1da>
	}
	
	else if(Right_white_line>0x28 && Left_white_line<0x28)
 780:	90 91 6b 02 	lds	r25, 0x026B
 784:	99 32       	cpi	r25, 0x29	; 41
 786:	c8 f0       	brcs	.+50     	; 0x7ba <fixPath+0x96>
 788:	88 32       	cpi	r24, 0x28	; 40
 78a:	b8 f4       	brcc	.+46     	; 0x7ba <fixPath+0x96>
	{
		lcd("fixRight");
 78c:	87 e1       	ldi	r24, 0x17	; 23
 78e:	92 e0       	ldi	r25, 0x02	; 2
 790:	9f df       	rcall	.-194    	; 0x6d0 <lcd>
		set_color();
 792:	85 df       	rcall	.-246    	; 0x69e <set_color>
		while(1)
		{
			
			fixRight();
 794:	b3 df       	rcall	.-154    	; 0x6fc <fixRight>
			set_color();
 796:	83 df       	rcall	.-250    	; 0x69e <set_color>
			if(Center_white_line>40 && Right_white_line<40 && Left_white_line<40)
 798:	80 91 6c 02 	lds	r24, 0x026C
 79c:	89 32       	cpi	r24, 0x29	; 41
 79e:	d0 f3       	brcs	.-12     	; 0x794 <fixPath+0x70>
 7a0:	80 91 6b 02 	lds	r24, 0x026B
 7a4:	88 32       	cpi	r24, 0x28	; 40
 7a6:	b0 f7       	brcc	.-20     	; 0x794 <fixPath+0x70>
 7a8:	80 91 6d 02 	lds	r24, 0x026D
 7ac:	88 32       	cpi	r24, 0x28	; 40
 7ae:	90 f7       	brcc	.-28     	; 0x794 <fixPath+0x70>
				break;
		}
		stop();
 7b0:	b2 de       	rcall	.-668    	; 0x516 <stop>
		lcd("-");
 7b2:	8a e3       	ldi	r24, 0x3A	; 58
 7b4:	92 e0       	ldi	r25, 0x02	; 2
 7b6:	8c df       	rcall	.-232    	; 0x6d0 <lcd>
 7b8:	a2 c0       	rjmp	.+324    	; 0x8fe <fixPath+0x1da>
	}
	
	else
	{
		lcd("xxDEATHxx");
 7ba:	80 e2       	ldi	r24, 0x20	; 32
 7bc:	92 e0       	ldi	r25, 0x02	; 2
 7be:	88 df       	rcall	.-240    	; 0x6d0 <lcd>
		miss=0;
 7c0:	10 92 68 02 	sts	0x0268, r1
}

// Function for robot velocity control
void velocity (unsigned char left_motor, unsigned char right_motor)
{
	OCR5AL = (unsigned char)left_motor;
 7c4:	86 e9       	ldi	r24, 0x96	; 150
 7c6:	80 93 28 01 	sts	0x0128, r24
	OCR5BL = (unsigned char)right_motor;
 7ca:	80 93 2a 01 	sts	0x012A, r24
		velocity(150,150);
		set_color();
 7ce:	67 df       	rcall	.-306    	; 0x69e <set_color>
		if(missR>missL)
 7d0:	90 91 6a 02 	lds	r25, 0x026A
 7d4:	80 91 69 02 	lds	r24, 0x0269
 7d8:	89 17       	cp	r24, r25
 7da:	08 f0       	brcs	.+2      	; 0x7de <fixPath+0xba>
 7dc:	37 c0       	rjmp	.+110    	; 0x84c <fixPath+0x128>
		{
			lcd_print(2,1,0,1);
 7de:	21 e0       	ldi	r18, 0x01	; 1
 7e0:	30 e0       	ldi	r19, 0x00	; 0
 7e2:	40 e0       	ldi	r20, 0x00	; 0
 7e4:	50 e0       	ldi	r21, 0x00	; 0
 7e6:	61 e0       	ldi	r22, 0x01	; 1
 7e8:	82 e0       	ldi	r24, 0x02	; 2
 7ea:	68 dd       	rcall	.-1328   	; 0x2bc <lcd_print>
			lcd("xxDEATH-right1");
 7ec:	8a e2       	ldi	r24, 0x2A	; 42
 7ee:	92 e0       	ldi	r25, 0x02	; 2
 7f0:	6f df       	rcall	.-290    	; 0x6d0 <lcd>
			do 
			{
				
				set_color();
 7f2:	55 df       	rcall	.-342    	; 0x69e <set_color>
				right();
 7f4:	87 de       	rcall	.-754    	; 0x504 <right>
				miss++;
 7f6:	80 91 68 02 	lds	r24, 0x0268
 7fa:	8f 5f       	subi	r24, 0xFF	; 255
 7fc:	80 93 68 02 	sts	0x0268, r24
			}while(Center_white_line<40 && miss<mthresh);
 800:	90 91 6c 02 	lds	r25, 0x026C
 804:	98 32       	cpi	r25, 0x28	; 40
 806:	10 f4       	brcc	.+4      	; 0x80c <fixPath+0xe8>
 808:	85 30       	cpi	r24, 0x05	; 5
 80a:	98 f3       	brcs	.-26     	; 0x7f2 <fixPath+0xce>
			lcd("--");
 80c:	89 e3       	ldi	r24, 0x39	; 57
 80e:	92 e0       	ldi	r25, 0x02	; 2
 810:	5f df       	rcall	.-322    	; 0x6d0 <lcd>
			stop();
 812:	81 de       	rcall	.-766    	; 0x516 <stop>
			if(miss>mthresh)
 814:	80 91 68 02 	lds	r24, 0x0268
 818:	86 30       	cpi	r24, 0x06	; 6
 81a:	b0 f0       	brcs	.+44     	; 0x848 <fixPath+0x124>
			{
				lcd_print(2,1,1,1);
 81c:	21 e0       	ldi	r18, 0x01	; 1
 81e:	30 e0       	ldi	r19, 0x00	; 0
 820:	41 e0       	ldi	r20, 0x01	; 1
 822:	50 e0       	ldi	r21, 0x00	; 0
 824:	61 e0       	ldi	r22, 0x01	; 1
 826:	82 e0       	ldi	r24, 0x02	; 2
 828:	49 dd       	rcall	.-1390   	; 0x2bc <lcd_print>
				lcd("xxDEATH-left1");
 82a:	8c e3       	ldi	r24, 0x3C	; 60
 82c:	92 e0       	ldi	r25, 0x02	; 2
 82e:	50 df       	rcall	.-352    	; 0x6d0 <lcd>
				miss=0;
 830:	10 92 68 02 	sts	0x0268, r1
				do 
				{
					
					set_color();
 834:	34 df       	rcall	.-408    	; 0x69e <set_color>
					left();
 836:	63 de       	rcall	.-826    	; 0x4fe <left>
				} while (Center_white_line<(2*mthresh));	
 838:	80 91 6c 02 	lds	r24, 0x026C
 83c:	90 e0       	ldi	r25, 0x00	; 0
 83e:	0a 97       	sbiw	r24, 0x0a	; 10
 840:	cc f3       	brlt	.-14     	; 0x834 <fixPath+0x110>
				lcd("--");
 842:	89 e3       	ldi	r24, 0x39	; 57
 844:	92 e0       	ldi	r25, 0x02	; 2
 846:	44 df       	rcall	.-376    	; 0x6d0 <lcd>
			}
			stop();
 848:	66 de       	rcall	.-820    	; 0x516 <stop>
 84a:	58 c0       	rjmp	.+176    	; 0x8fc <fixPath+0x1d8>
		}
		else
		{
			miss=0;
 84c:	10 92 68 02 	sts	0x0268, r1
			lcd_print(2,1,2,1);
 850:	21 e0       	ldi	r18, 0x01	; 1
 852:	30 e0       	ldi	r19, 0x00	; 0
 854:	42 e0       	ldi	r20, 0x02	; 2
 856:	50 e0       	ldi	r21, 0x00	; 0
 858:	61 e0       	ldi	r22, 0x01	; 1
 85a:	82 e0       	ldi	r24, 0x02	; 2
 85c:	2f dd       	rcall	.-1442   	; 0x2bc <lcd_print>
			lcd("xxDEATH-left2");
 85e:	8a e4       	ldi	r24, 0x4A	; 74
 860:	92 e0       	ldi	r25, 0x02	; 2
 862:	36 df       	rcall	.-404    	; 0x6d0 <lcd>
			do
			{
				
				set_color();
 864:	1c df       	rcall	.-456    	; 0x69e <set_color>
				left();
 866:	4b de       	rcall	.-874    	; 0x4fe <left>
				miss++;
 868:	80 91 68 02 	lds	r24, 0x0268
 86c:	8f 5f       	subi	r24, 0xFF	; 255
 86e:	80 93 68 02 	sts	0x0268, r24
			}while(Center_white_line<40 && miss<mthresh);
 872:	90 91 6c 02 	lds	r25, 0x026C
 876:	98 32       	cpi	r25, 0x28	; 40
 878:	10 f4       	brcc	.+4      	; 0x87e <fixPath+0x15a>
 87a:	85 30       	cpi	r24, 0x05	; 5
 87c:	98 f3       	brcs	.-26     	; 0x864 <fixPath+0x140>
			lcd("--");
 87e:	89 e3       	ldi	r24, 0x39	; 57
 880:	92 e0       	ldi	r25, 0x02	; 2
 882:	26 df       	rcall	.-436    	; 0x6d0 <lcd>
			
			stop();
 884:	48 de       	rcall	.-880    	; 0x516 <stop>
			buzzer();
 886:	43 df       	rcall	.-378    	; 0x70e <buzzer>
			
			if (miss>=mthresh)
 888:	80 91 68 02 	lds	r24, 0x0268
 88c:	85 30       	cpi	r24, 0x05	; 5
 88e:	58 f1       	brcs	.+86     	; 0x8e6 <fixPath+0x1c2>
			{
				miss=0;
 890:	10 92 68 02 	sts	0x0268, r1
				lcd_print(2,1,3,1);
 894:	21 e0       	ldi	r18, 0x01	; 1
 896:	30 e0       	ldi	r19, 0x00	; 0
 898:	43 e0       	ldi	r20, 0x03	; 3
 89a:	50 e0       	ldi	r21, 0x00	; 0
 89c:	61 e0       	ldi	r22, 0x01	; 1
 89e:	82 e0       	ldi	r24, 0x02	; 2
 8a0:	0d dd       	rcall	.-1510   	; 0x2bc <lcd_print>
}

// Function for robot velocity control
void velocity (unsigned char left_motor, unsigned char right_motor)
{
	OCR5AL = (unsigned char)left_motor;
 8a2:	86 e9       	ldi	r24, 0x96	; 150
 8a4:	80 93 28 01 	sts	0x0128, r24
	OCR5BL = (unsigned char)right_motor;
 8a8:	80 93 2a 01 	sts	0x012A, r24
				//buzzer_on();
				//_delay_ms(1000);
				velocity(150,150);
				lcd("xxDEATH-right2");
 8ac:	88 e5       	ldi	r24, 0x58	; 88
 8ae:	92 e0       	ldi	r25, 0x02	; 2
 8b0:	0f df       	rcall	.-482    	; 0x6d0 <lcd>
				do
				{
					
					set_color();
 8b2:	f5 de       	rcall	.-534    	; 0x69e <set_color>
					right();
 8b4:	27 de       	rcall	.-946    	; 0x504 <right>
				} while (Center_white_line<40 &&  miss<(2*mthresh));
 8b6:	80 91 6c 02 	lds	r24, 0x026C
 8ba:	88 32       	cpi	r24, 0x28	; 40
 8bc:	28 f4       	brcc	.+10     	; 0x8c8 <fixPath+0x1a4>
 8be:	80 91 68 02 	lds	r24, 0x0268
 8c2:	90 e0       	ldi	r25, 0x00	; 0
 8c4:	0a 97       	sbiw	r24, 0x0a	; 10
 8c6:	ac f3       	brlt	.-22     	; 0x8b2 <fixPath+0x18e>
				lcd("--");
 8c8:	89 e3       	ldi	r24, 0x39	; 57
 8ca:	92 e0       	ldi	r25, 0x02	; 2
 8cc:	01 df       	rcall	.-510    	; 0x6d0 <lcd>
				stop();
 8ce:	23 de       	rcall	.-954    	; 0x516 <stop>
				if(miss>=30)
 8d0:	80 91 68 02 	lds	r24, 0x0268
 8d4:	8e 31       	cpi	r24, 0x1E	; 30
 8d6:	38 f0       	brcs	.+14     	; 0x8e6 <fixPath+0x1c2>
				{
					lcd_print(2,1,8,10);
 8d8:	2a e0       	ldi	r18, 0x0A	; 10
 8da:	30 e0       	ldi	r19, 0x00	; 0
 8dc:	48 e0       	ldi	r20, 0x08	; 8
 8de:	50 e0       	ldi	r21, 0x00	; 0
 8e0:	61 e0       	ldi	r22, 0x01	; 1
 8e2:	82 e0       	ldi	r24, 0x02	; 2
 8e4:	eb dc       	rcall	.-1578   	; 0x2bc <lcd_print>
				}
			}
			stop();
 8e6:	17 de       	rcall	.-978    	; 0x516 <stop>
			lcd("--");
 8e8:	89 e3       	ldi	r24, 0x39	; 57
 8ea:	92 e0       	ldi	r25, 0x02	; 2
 8ec:	f1 de       	rcall	.-542    	; 0x6d0 <lcd>
			lcd_print(2,1,9,1);
 8ee:	21 e0       	ldi	r18, 0x01	; 1
 8f0:	30 e0       	ldi	r19, 0x00	; 0
 8f2:	49 e0       	ldi	r20, 0x09	; 9
 8f4:	50 e0       	ldi	r21, 0x00	; 0
 8f6:	61 e0       	ldi	r22, 0x01	; 1
 8f8:	82 e0       	ldi	r24, 0x02	; 2
 8fa:	e0 dc       	rcall	.-1600   	; 0x2bc <lcd_print>
		}
		stop();
 8fc:	0c de       	rcall	.-1000   	; 0x516 <stop>
	
	}
	lcd("-");
 8fe:	8a e3       	ldi	r24, 0x3A	; 58
 900:	92 e0       	ldi	r25, 0x02	; 2
 902:	e6 ce       	rjmp	.-564    	; 0x6d0 <lcd>
 904:	08 95       	ret

00000906 <goForward>:

}
void goForward()
{
 906:	ff 92       	push	r15
 908:	0f 93       	push	r16
 90a:	1f 93       	push	r17
 90c:	cf 93       	push	r28
 90e:	df 93       	push	r29
	set_color();
 910:	c6 de       	rcall	.-628    	; 0x69e <set_color>
	if(!(Center_white_line>0x28 && Left_white_line<0x28 && Right_white_line<0x28))
 912:	80 91 6c 02 	lds	r24, 0x026C
 916:	89 32       	cpi	r24, 0x29	; 41
 918:	40 f0       	brcs	.+16     	; 0x92a <goForward+0x24>
 91a:	80 91 6d 02 	lds	r24, 0x026D
 91e:	88 32       	cpi	r24, 0x28	; 40
 920:	20 f4       	brcc	.+8      	; 0x92a <goForward+0x24>
 922:	80 91 6b 02 	lds	r24, 0x026B
 926:	88 32       	cpi	r24, 0x28	; 40
 928:	08 f0       	brcs	.+2      	; 0x92c <goForward+0x26>
		fixPath();
 92a:	fc de       	rcall	.-520    	; 0x724 <fixPath>
}

// Function for robot velocity control
void velocity (unsigned char left_motor, unsigned char right_motor)
{
	OCR5AL = (unsigned char)left_motor;
 92c:	08 e2       	ldi	r16, 0x28	; 40
 92e:	11 e0       	ldi	r17, 0x01	; 1
 930:	0f 2e       	mov	r0, r31
 932:	f0 ef       	ldi	r31, 0xF0	; 240
 934:	ff 2e       	mov	r15, r31
 936:	f0 2d       	mov	r31, r0
	OCR5BL = (unsigned char)right_motor;
 938:	ca e2       	ldi	r28, 0x2A	; 42
 93a:	d1 e0       	ldi	r29, 0x01	; 1
	do
	{
		set_color();
 93c:	b0 de       	rcall	.-672    	; 0x69e <set_color>
		forward();
 93e:	dc dd       	rcall	.-1096   	; 0x4f8 <forward>
}

// Function for robot velocity control
void velocity (unsigned char left_motor, unsigned char right_motor)
{
	OCR5AL = (unsigned char)left_motor;
 940:	f8 01       	movw	r30, r16
 942:	f0 82       	st	Z, r15
	OCR5BL = (unsigned char)right_motor;
 944:	f8 82       	st	Y, r15
		velocity(240,240);
		if(Left_white_line>0x28 && Right_white_line>0x28)
 946:	80 91 6d 02 	lds	r24, 0x026D
 94a:	89 32       	cpi	r24, 0x29	; 41
 94c:	30 f0       	brcs	.+12     	; 0x95a <goForward+0x54>
 94e:	80 91 6b 02 	lds	r24, 0x026B
 952:	89 32       	cpi	r24, 0x29	; 41
 954:	10 f0       	brcs	.+4      	; 0x95a <goForward+0x54>
		{
			set_color();
 956:	a3 de       	rcall	.-698    	; 0x69e <set_color>
	print_sensor(1,9,1);	//Prints Value of White Line Sensor3	
}

void atNode()
{
	buzzer();
 958:	da de       	rcall	.-588    	; 0x70e <buzzer>
		if(Left_white_line>0x28 && Right_white_line>0x28)
		{
			set_color();
			atNode();
		}
	}while(Center_white_line>0x28 && Left_white_line<0x28 && Right_white_line<0x28);
 95a:	80 91 6c 02 	lds	r24, 0x026C
 95e:	89 32       	cpi	r24, 0x29	; 41
 960:	40 f0       	brcs	.+16     	; 0x972 <goForward+0x6c>
 962:	80 91 6d 02 	lds	r24, 0x026D
 966:	88 32       	cpi	r24, 0x28	; 40
 968:	20 f4       	brcc	.+8      	; 0x972 <goForward+0x6c>
 96a:	80 91 6b 02 	lds	r24, 0x026B
 96e:	88 32       	cpi	r24, 0x28	; 40
 970:	28 f3       	brcs	.-54     	; 0x93c <goForward+0x36>
	
	set_color();
 972:	95 de       	rcall	.-726    	; 0x69e <set_color>
	stop();
 974:	d0 dd       	rcall	.-1120   	; 0x516 <stop>
	fixPath();
 976:	d6 de       	rcall	.-596    	; 0x724 <fixPath>
	goForward();
 978:	c6 df       	rcall	.-116    	; 0x906 <goForward>
}
 97a:	df 91       	pop	r29
 97c:	cf 91       	pop	r28
 97e:	1f 91       	pop	r17
 980:	0f 91       	pop	r16
 982:	ff 90       	pop	r15
 984:	08 95       	ret

00000986 <main>:
	_delay_ms(90);
	buzzer_off();
}
int main()
{
	init_devices();
 986:	82 de       	rcall	.-764    	; 0x68c <init_devices>
	lcd_set_4bit();
 988:	cd db       	rcall	.-2150   	; 0x124 <lcd_set_4bit>
	lcd_init();
 98a:	36 dc       	rcall	.-1940   	; 0x1f8 <lcd_init>
	
	set_color();
 98c:	88 de       	rcall	.-752    	; 0x69e <set_color>
	goForward();
 98e:	bb df       	rcall	.-138    	; 0x906 <goForward>
 990:	80 e0       	ldi	r24, 0x00	; 0
 992:	90 e0       	ldi	r25, 0x00	; 0
 994:	08 95       	ret

00000996 <__umulhisi3>:
 996:	a2 9f       	mul	r26, r18
 998:	b0 01       	movw	r22, r0
 99a:	b3 9f       	mul	r27, r19
 99c:	c0 01       	movw	r24, r0
 99e:	a3 9f       	mul	r26, r19
 9a0:	70 0d       	add	r23, r0
 9a2:	81 1d       	adc	r24, r1
 9a4:	11 24       	eor	r1, r1
 9a6:	91 1d       	adc	r25, r1
 9a8:	b2 9f       	mul	r27, r18
 9aa:	70 0d       	add	r23, r0
 9ac:	81 1d       	adc	r24, r1
 9ae:	11 24       	eor	r1, r1
 9b0:	91 1d       	adc	r25, r1
 9b2:	08 95       	ret

000009b4 <_exit>:
 9b4:	f8 94       	cli

000009b6 <__stop_program>:
 9b6:	ff cf       	rjmp	.-2      	; 0x9b6 <__stop_program>
