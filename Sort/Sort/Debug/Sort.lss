
Sort.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800200  000015e6  0000167a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000015e6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003a  0080023a  0080023a  000016b4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000016b4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000310  00000000  00000000  000016e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002b52  00000000  00000000  000019f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004b4  00000000  00000000  00004546  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001aaf  00000000  00000000  000049fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000728  00000000  00000000  000064ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000776  00000000  00000000  00006bd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001778  00000000  00000000  0000734a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000360  00000000  00000000  00008ac2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	53 c2       	rjmp	.+1190   	; 0x4ac <__vector_1>
       6:	00 00       	nop
       8:	8e c0       	rjmp	.+284    	; 0x126 <__bad_interrupt>
       a:	00 00       	nop
       c:	8c c0       	rjmp	.+280    	; 0x126 <__bad_interrupt>
       e:	00 00       	nop
      10:	8a c0       	rjmp	.+276    	; 0x126 <__bad_interrupt>
      12:	00 00       	nop
      14:	88 c0       	rjmp	.+272    	; 0x126 <__bad_interrupt>
      16:	00 00       	nop
      18:	86 c0       	rjmp	.+268    	; 0x126 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	84 c0       	rjmp	.+264    	; 0x126 <__bad_interrupt>
      1e:	00 00       	nop
      20:	82 c0       	rjmp	.+260    	; 0x126 <__bad_interrupt>
      22:	00 00       	nop
      24:	80 c0       	rjmp	.+256    	; 0x126 <__bad_interrupt>
      26:	00 00       	nop
      28:	7e c0       	rjmp	.+252    	; 0x126 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7c c0       	rjmp	.+248    	; 0x126 <__bad_interrupt>
      2e:	00 00       	nop
      30:	7a c0       	rjmp	.+244    	; 0x126 <__bad_interrupt>
      32:	00 00       	nop
      34:	78 c0       	rjmp	.+240    	; 0x126 <__bad_interrupt>
      36:	00 00       	nop
      38:	76 c0       	rjmp	.+236    	; 0x126 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	74 c0       	rjmp	.+232    	; 0x126 <__bad_interrupt>
      3e:	00 00       	nop
      40:	72 c0       	rjmp	.+228    	; 0x126 <__bad_interrupt>
      42:	00 00       	nop
      44:	70 c0       	rjmp	.+224    	; 0x126 <__bad_interrupt>
      46:	00 00       	nop
      48:	6e c0       	rjmp	.+220    	; 0x126 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6c c0       	rjmp	.+216    	; 0x126 <__bad_interrupt>
      4e:	00 00       	nop
      50:	6a c0       	rjmp	.+212    	; 0x126 <__bad_interrupt>
      52:	00 00       	nop
      54:	68 c0       	rjmp	.+208    	; 0x126 <__bad_interrupt>
      56:	00 00       	nop
      58:	66 c0       	rjmp	.+204    	; 0x126 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	64 c0       	rjmp	.+200    	; 0x126 <__bad_interrupt>
      5e:	00 00       	nop
      60:	62 c0       	rjmp	.+196    	; 0x126 <__bad_interrupt>
      62:	00 00       	nop
      64:	60 c0       	rjmp	.+192    	; 0x126 <__bad_interrupt>
      66:	00 00       	nop
      68:	5e c0       	rjmp	.+188    	; 0x126 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5c c0       	rjmp	.+184    	; 0x126 <__bad_interrupt>
      6e:	00 00       	nop
      70:	5a c0       	rjmp	.+180    	; 0x126 <__bad_interrupt>
      72:	00 00       	nop
      74:	58 c0       	rjmp	.+176    	; 0x126 <__bad_interrupt>
      76:	00 00       	nop
      78:	56 c0       	rjmp	.+172    	; 0x126 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	54 c0       	rjmp	.+168    	; 0x126 <__bad_interrupt>
      7e:	00 00       	nop
      80:	52 c0       	rjmp	.+164    	; 0x126 <__bad_interrupt>
      82:	00 00       	nop
      84:	50 c0       	rjmp	.+160    	; 0x126 <__bad_interrupt>
      86:	00 00       	nop
      88:	4e c0       	rjmp	.+156    	; 0x126 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4c c0       	rjmp	.+152    	; 0x126 <__bad_interrupt>
      8e:	00 00       	nop
      90:	4a c0       	rjmp	.+148    	; 0x126 <__bad_interrupt>
      92:	00 00       	nop
      94:	48 c0       	rjmp	.+144    	; 0x126 <__bad_interrupt>
      96:	00 00       	nop
      98:	46 c0       	rjmp	.+140    	; 0x126 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	44 c0       	rjmp	.+136    	; 0x126 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	42 c0       	rjmp	.+132    	; 0x126 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	40 c0       	rjmp	.+128    	; 0x126 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3e c0       	rjmp	.+124    	; 0x126 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3c c0       	rjmp	.+120    	; 0x126 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	3a c0       	rjmp	.+116    	; 0x126 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	38 c0       	rjmp	.+112    	; 0x126 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	36 c0       	rjmp	.+108    	; 0x126 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	34 c0       	rjmp	.+104    	; 0x126 <__bad_interrupt>
      be:	00 00       	nop
      c0:	32 c0       	rjmp	.+100    	; 0x126 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	30 c0       	rjmp	.+96     	; 0x126 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2e c0       	rjmp	.+92     	; 0x126 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2c c0       	rjmp	.+88     	; 0x126 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	2a c0       	rjmp	.+84     	; 0x126 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	28 c0       	rjmp	.+80     	; 0x126 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	26 c0       	rjmp	.+76     	; 0x126 <__bad_interrupt>
      da:	00 00       	nop
      dc:	24 c0       	rjmp	.+72     	; 0x126 <__bad_interrupt>
      de:	00 00       	nop
      e0:	22 c0       	rjmp	.+68     	; 0x126 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e6 ee       	ldi	r30, 0xE6	; 230
      fc:	f5 e1       	ldi	r31, 0x15	; 21
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	aa 33       	cpi	r26, 0x3A	; 58
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	aa e3       	ldi	r26, 0x3A	; 58
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a4 37       	cpi	r26, 0x74	; 116
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 59 09 	call	0x12b2	; 0x12b2 <main>
     122:	0c 94 f1 0a 	jmp	0x15e2	; 0x15e2 <_exit>

00000126 <__bad_interrupt>:
     126:	6c cf       	rjmp	.-296    	; 0x0 <__vectors>

00000128 <lcd_wr_command>:
}


void gotoSort()
{
	forwardJaa();
     128:	98 b1       	in	r25, 0x08	; 8
     12a:	9f 70       	andi	r25, 0x0F	; 15
     12c:	98 b9       	out	0x08, r25	; 8
     12e:	98 b1       	in	r25, 0x08	; 8
     130:	28 2f       	mov	r18, r24
     132:	20 7f       	andi	r18, 0xF0	; 240
     134:	92 2b       	or	r25, r18
     136:	98 b9       	out	0x08, r25	; 8
     138:	40 98       	cbi	0x08, 0	; 8
     13a:	41 98       	cbi	0x08, 1	; 8
     13c:	42 9a       	sbi	0x08, 2	; 8
     13e:	ef ef       	ldi	r30, 0xFF	; 255
     140:	f7 e4       	ldi	r31, 0x47	; 71
     142:	31 97       	sbiw	r30, 0x01	; 1
     144:	f1 f7       	brne	.-4      	; 0x142 <lcd_wr_command+0x1a>
     146:	00 c0       	rjmp	.+0      	; 0x148 <lcd_wr_command+0x20>
     148:	00 00       	nop
     14a:	42 98       	cbi	0x08, 2	; 8
     14c:	98 b1       	in	r25, 0x08	; 8
     14e:	9f 70       	andi	r25, 0x0F	; 15
     150:	98 b9       	out	0x08, r25	; 8
     152:	98 b1       	in	r25, 0x08	; 8
     154:	82 95       	swap	r24
     156:	80 7f       	andi	r24, 0xF0	; 240
     158:	89 2b       	or	r24, r25
     15a:	88 b9       	out	0x08, r24	; 8
     15c:	40 98       	cbi	0x08, 0	; 8
     15e:	41 98       	cbi	0x08, 1	; 8
     160:	42 9a       	sbi	0x08, 2	; 8
     162:	8f ef       	ldi	r24, 0xFF	; 255
     164:	97 e4       	ldi	r25, 0x47	; 71
     166:	01 97       	sbiw	r24, 0x01	; 1
     168:	f1 f7       	brne	.-4      	; 0x166 <lcd_wr_command+0x3e>
     16a:	00 c0       	rjmp	.+0      	; 0x16c <lcd_wr_command+0x44>
     16c:	00 00       	nop
     16e:	42 98       	cbi	0x08, 2	; 8
     170:	08 95       	ret

00000172 <lcd_wr_char>:
     172:	98 b1       	in	r25, 0x08	; 8
     174:	9f 70       	andi	r25, 0x0F	; 15
     176:	98 b9       	out	0x08, r25	; 8
     178:	98 b1       	in	r25, 0x08	; 8
     17a:	28 2f       	mov	r18, r24
     17c:	20 7f       	andi	r18, 0xF0	; 240
     17e:	92 2b       	or	r25, r18
     180:	98 b9       	out	0x08, r25	; 8
     182:	40 9a       	sbi	0x08, 0	; 8
     184:	41 98       	cbi	0x08, 1	; 8
     186:	42 9a       	sbi	0x08, 2	; 8
     188:	ef ef       	ldi	r30, 0xFF	; 255
     18a:	f7 e4       	ldi	r31, 0x47	; 71
     18c:	31 97       	sbiw	r30, 0x01	; 1
     18e:	f1 f7       	brne	.-4      	; 0x18c <lcd_wr_char+0x1a>
     190:	00 c0       	rjmp	.+0      	; 0x192 <lcd_wr_char+0x20>
     192:	00 00       	nop
     194:	42 98       	cbi	0x08, 2	; 8
     196:	98 b1       	in	r25, 0x08	; 8
     198:	9f 70       	andi	r25, 0x0F	; 15
     19a:	98 b9       	out	0x08, r25	; 8
     19c:	98 b1       	in	r25, 0x08	; 8
     19e:	82 95       	swap	r24
     1a0:	80 7f       	andi	r24, 0xF0	; 240
     1a2:	89 2b       	or	r24, r25
     1a4:	88 b9       	out	0x08, r24	; 8
     1a6:	40 9a       	sbi	0x08, 0	; 8
     1a8:	41 98       	cbi	0x08, 1	; 8
     1aa:	42 9a       	sbi	0x08, 2	; 8
     1ac:	8f ef       	ldi	r24, 0xFF	; 255
     1ae:	97 e4       	ldi	r25, 0x47	; 71
     1b0:	01 97       	sbiw	r24, 0x01	; 1
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcd_wr_char+0x3e>
     1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcd_wr_char+0x44>
     1b6:	00 00       	nop
     1b8:	42 98       	cbi	0x08, 2	; 8
     1ba:	08 95       	ret

000001bc <lcd_home>:
     1bc:	80 e8       	ldi	r24, 0x80	; 128
     1be:	b4 cf       	rjmp	.-152    	; 0x128 <lcd_wr_command>
     1c0:	08 95       	ret

000001c2 <lcd_string>:
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
     1c6:	ec 01       	movw	r28, r24
     1c8:	88 81       	ld	r24, Y
     1ca:	88 23       	and	r24, r24
     1cc:	29 f0       	breq	.+10     	; 0x1d8 <lcd_string+0x16>
     1ce:	21 96       	adiw	r28, 0x01	; 1
     1d0:	d0 df       	rcall	.-96     	; 0x172 <lcd_wr_char>
     1d2:	89 91       	ld	r24, Y+
     1d4:	81 11       	cpse	r24, r1
     1d6:	fc cf       	rjmp	.-8      	; 0x1d0 <lcd_string+0xe>
     1d8:	df 91       	pop	r29
     1da:	cf 91       	pop	r28
     1dc:	08 95       	ret

000001de <lcd_cursor>:
     1de:	82 30       	cpi	r24, 0x02	; 2
     1e0:	69 f0       	breq	.+26     	; 0x1fc <lcd_cursor+0x1e>
     1e2:	18 f4       	brcc	.+6      	; 0x1ea <lcd_cursor+0xc>
     1e4:	81 30       	cpi	r24, 0x01	; 1
     1e6:	31 f0       	breq	.+12     	; 0x1f4 <lcd_cursor+0x16>
     1e8:	08 95       	ret
     1ea:	83 30       	cpi	r24, 0x03	; 3
     1ec:	59 f0       	breq	.+22     	; 0x204 <lcd_cursor+0x26>
     1ee:	84 30       	cpi	r24, 0x04	; 4
     1f0:	69 f0       	breq	.+26     	; 0x20c <lcd_cursor+0x2e>
     1f2:	08 95       	ret
     1f4:	8f e7       	ldi	r24, 0x7F	; 127
     1f6:	86 0f       	add	r24, r22
     1f8:	97 cf       	rjmp	.-210    	; 0x128 <lcd_wr_command>
     1fa:	08 95       	ret
     1fc:	8f eb       	ldi	r24, 0xBF	; 191
     1fe:	86 0f       	add	r24, r22
     200:	93 cf       	rjmp	.-218    	; 0x128 <lcd_wr_command>
     202:	08 95       	ret
     204:	83 e9       	ldi	r24, 0x93	; 147
     206:	86 0f       	add	r24, r22
     208:	8f cf       	rjmp	.-226    	; 0x128 <lcd_wr_command>
     20a:	08 95       	ret
     20c:	83 ed       	ldi	r24, 0xD3	; 211
     20e:	86 0f       	add	r24, r22
     210:	8b cf       	rjmp	.-234    	; 0x128 <lcd_wr_command>
     212:	08 95       	ret

00000214 <lcd_print>:
     214:	0f 93       	push	r16
     216:	1f 93       	push	r17
     218:	cf 93       	push	r28
     21a:	df 93       	push	r29
     21c:	8a 01       	movw	r16, r20
     21e:	e9 01       	movw	r28, r18
     220:	88 23       	and	r24, r24
     222:	11 f0       	breq	.+4      	; 0x228 <lcd_print+0x14>
     224:	61 11       	cpse	r22, r1
     226:	02 c0       	rjmp	.+4      	; 0x22c <lcd_print+0x18>
     228:	c9 df       	rcall	.-110    	; 0x1bc <lcd_home>
     22a:	01 c0       	rjmp	.+2      	; 0x22e <lcd_print+0x1a>
     22c:	d8 df       	rcall	.-80     	; 0x1de <lcd_cursor>
     22e:	c5 30       	cpi	r28, 0x05	; 5
     230:	d1 05       	cpc	r29, r1
     232:	09 f0       	breq	.+2      	; 0x236 <lcd_print+0x22>
     234:	d5 c0       	rjmp	.+426    	; 0x3e0 <lcd_print+0x1cc>
     236:	98 01       	movw	r18, r16
     238:	32 95       	swap	r19
     23a:	22 95       	swap	r18
     23c:	2f 70       	andi	r18, 0x0F	; 15
     23e:	23 27       	eor	r18, r19
     240:	3f 70       	andi	r19, 0x0F	; 15
     242:	23 27       	eor	r18, r19
     244:	a7 e4       	ldi	r26, 0x47	; 71
     246:	b3 e0       	ldi	r27, 0x03	; 3
     248:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <__umulhisi3>
     24c:	96 95       	lsr	r25
     24e:	87 95       	ror	r24
     250:	96 95       	lsr	r25
     252:	87 95       	ror	r24
     254:	96 95       	lsr	r25
     256:	87 95       	ror	r24
     258:	c0 96       	adiw	r24, 0x30	; 48
     25a:	90 93 5a 02 	sts	0x025A, r25
     25e:	80 93 59 02 	sts	0x0259, r24
     262:	87 df       	rcall	.-242    	; 0x172 <lcd_wr_char>
     264:	98 01       	movw	r18, r16
     266:	36 95       	lsr	r19
     268:	27 95       	ror	r18
     26a:	36 95       	lsr	r19
     26c:	27 95       	ror	r18
     26e:	36 95       	lsr	r19
     270:	27 95       	ror	r18
     272:	a5 ec       	ldi	r26, 0xC5	; 197
     274:	b0 e2       	ldi	r27, 0x20	; 32
     276:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <__umulhisi3>
     27a:	ac 01       	movw	r20, r24
     27c:	52 95       	swap	r21
     27e:	42 95       	swap	r20
     280:	4f 70       	andi	r20, 0x0F	; 15
     282:	45 27       	eor	r20, r21
     284:	5f 70       	andi	r21, 0x0F	; 15
     286:	45 27       	eor	r20, r21
     288:	50 93 5d 02 	sts	0x025D, r21
     28c:	40 93 5c 02 	sts	0x025C, r20
     290:	9a 01       	movw	r18, r20
     292:	ad ec       	ldi	r26, 0xCD	; 205
     294:	bc ec       	ldi	r27, 0xCC	; 204
     296:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <__umulhisi3>
     29a:	96 95       	lsr	r25
     29c:	87 95       	ror	r24
     29e:	96 95       	lsr	r25
     2a0:	87 95       	ror	r24
     2a2:	96 95       	lsr	r25
     2a4:	87 95       	ror	r24
     2a6:	9c 01       	movw	r18, r24
     2a8:	22 0f       	add	r18, r18
     2aa:	33 1f       	adc	r19, r19
     2ac:	88 0f       	add	r24, r24
     2ae:	99 1f       	adc	r25, r25
     2b0:	88 0f       	add	r24, r24
     2b2:	99 1f       	adc	r25, r25
     2b4:	88 0f       	add	r24, r24
     2b6:	99 1f       	adc	r25, r25
     2b8:	82 0f       	add	r24, r18
     2ba:	93 1f       	adc	r25, r19
     2bc:	48 1b       	sub	r20, r24
     2be:	59 0b       	sbc	r21, r25
     2c0:	ca 01       	movw	r24, r20
     2c2:	c0 96       	adiw	r24, 0x30	; 48
     2c4:	90 93 73 02 	sts	0x0273, r25
     2c8:	80 93 72 02 	sts	0x0272, r24
     2cc:	52 df       	rcall	.-348    	; 0x172 <lcd_wr_char>
     2ce:	04 c0       	rjmp	.+8      	; 0x2d8 <lcd_print+0xc4>
     2d0:	c3 30       	cpi	r28, 0x03	; 3
     2d2:	d1 05       	cpc	r29, r1
     2d4:	09 f0       	breq	.+2      	; 0x2d8 <lcd_print+0xc4>
     2d6:	89 c0       	rjmp	.+274    	; 0x3ea <lcd_print+0x1d6>
     2d8:	98 01       	movw	r18, r16
     2da:	36 95       	lsr	r19
     2dc:	27 95       	ror	r18
     2de:	36 95       	lsr	r19
     2e0:	27 95       	ror	r18
     2e2:	ab e7       	ldi	r26, 0x7B	; 123
     2e4:	b4 e1       	ldi	r27, 0x14	; 20
     2e6:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <__umulhisi3>
     2ea:	ac 01       	movw	r20, r24
     2ec:	56 95       	lsr	r21
     2ee:	47 95       	ror	r20
     2f0:	50 93 5d 02 	sts	0x025D, r21
     2f4:	40 93 5c 02 	sts	0x025C, r20
     2f8:	9a 01       	movw	r18, r20
     2fa:	ad ec       	ldi	r26, 0xCD	; 205
     2fc:	bc ec       	ldi	r27, 0xCC	; 204
     2fe:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <__umulhisi3>
     302:	96 95       	lsr	r25
     304:	87 95       	ror	r24
     306:	96 95       	lsr	r25
     308:	87 95       	ror	r24
     30a:	96 95       	lsr	r25
     30c:	87 95       	ror	r24
     30e:	9c 01       	movw	r18, r24
     310:	22 0f       	add	r18, r18
     312:	33 1f       	adc	r19, r19
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	88 0f       	add	r24, r24
     31a:	99 1f       	adc	r25, r25
     31c:	88 0f       	add	r24, r24
     31e:	99 1f       	adc	r25, r25
     320:	82 0f       	add	r24, r18
     322:	93 1f       	adc	r25, r19
     324:	48 1b       	sub	r20, r24
     326:	59 0b       	sbc	r21, r25
     328:	ca 01       	movw	r24, r20
     32a:	c0 96       	adiw	r24, 0x30	; 48
     32c:	90 93 6e 02 	sts	0x026E, r25
     330:	80 93 6d 02 	sts	0x026D, r24
     334:	1e df       	rcall	.-452    	; 0x172 <lcd_wr_char>
     336:	98 01       	movw	r18, r16
     338:	ad ec       	ldi	r26, 0xCD	; 205
     33a:	bc ec       	ldi	r27, 0xCC	; 204
     33c:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <__umulhisi3>
     340:	ac 01       	movw	r20, r24
     342:	56 95       	lsr	r21
     344:	47 95       	ror	r20
     346:	56 95       	lsr	r21
     348:	47 95       	ror	r20
     34a:	56 95       	lsr	r21
     34c:	47 95       	ror	r20
     34e:	50 93 5d 02 	sts	0x025D, r21
     352:	40 93 5c 02 	sts	0x025C, r20
     356:	9a 01       	movw	r18, r20
     358:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <__umulhisi3>
     35c:	96 95       	lsr	r25
     35e:	87 95       	ror	r24
     360:	96 95       	lsr	r25
     362:	87 95       	ror	r24
     364:	96 95       	lsr	r25
     366:	87 95       	ror	r24
     368:	9c 01       	movw	r18, r24
     36a:	22 0f       	add	r18, r18
     36c:	33 1f       	adc	r19, r19
     36e:	88 0f       	add	r24, r24
     370:	99 1f       	adc	r25, r25
     372:	88 0f       	add	r24, r24
     374:	99 1f       	adc	r25, r25
     376:	88 0f       	add	r24, r24
     378:	99 1f       	adc	r25, r25
     37a:	82 0f       	add	r24, r18
     37c:	93 1f       	adc	r25, r19
     37e:	48 1b       	sub	r20, r24
     380:	59 0b       	sbc	r21, r25
     382:	ca 01       	movw	r24, r20
     384:	c0 96       	adiw	r24, 0x30	; 48
     386:	90 93 6a 02 	sts	0x026A, r25
     38a:	80 93 69 02 	sts	0x0269, r24
     38e:	f1 de       	rcall	.-542    	; 0x172 <lcd_wr_char>
     390:	03 c0       	rjmp	.+6      	; 0x398 <lcd_print+0x184>
     392:	c1 30       	cpi	r28, 0x01	; 1
     394:	d1 05       	cpc	r29, r1
     396:	f9 f4       	brne	.+62     	; 0x3d6 <lcd_print+0x1c2>
     398:	98 01       	movw	r18, r16
     39a:	ad ec       	ldi	r26, 0xCD	; 205
     39c:	bc ec       	ldi	r27, 0xCC	; 204
     39e:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <__umulhisi3>
     3a2:	96 95       	lsr	r25
     3a4:	87 95       	ror	r24
     3a6:	96 95       	lsr	r25
     3a8:	87 95       	ror	r24
     3aa:	96 95       	lsr	r25
     3ac:	87 95       	ror	r24
     3ae:	9c 01       	movw	r18, r24
     3b0:	22 0f       	add	r18, r18
     3b2:	33 1f       	adc	r19, r19
     3b4:	88 0f       	add	r24, r24
     3b6:	99 1f       	adc	r25, r25
     3b8:	88 0f       	add	r24, r24
     3ba:	99 1f       	adc	r25, r25
     3bc:	88 0f       	add	r24, r24
     3be:	99 1f       	adc	r25, r25
     3c0:	82 0f       	add	r24, r18
     3c2:	93 1f       	adc	r25, r19
     3c4:	08 1b       	sub	r16, r24
     3c6:	19 0b       	sbc	r17, r25
     3c8:	c8 01       	movw	r24, r16
     3ca:	c0 96       	adiw	r24, 0x30	; 48
     3cc:	90 93 71 02 	sts	0x0271, r25
     3d0:	80 93 70 02 	sts	0x0270, r24
     3d4:	ce de       	rcall	.-612    	; 0x172 <lcd_wr_char>
     3d6:	26 97       	sbiw	r28, 0x06	; 6
     3d8:	64 f0       	brlt	.+24     	; 0x3f2 <lcd_print+0x1de>
     3da:	85 e4       	ldi	r24, 0x45	; 69
     3dc:	ca de       	rcall	.-620    	; 0x172 <lcd_wr_char>
     3de:	09 c0       	rjmp	.+18     	; 0x3f2 <lcd_print+0x1de>
     3e0:	c4 30       	cpi	r28, 0x04	; 4
     3e2:	d1 05       	cpc	r29, r1
     3e4:	09 f0       	breq	.+2      	; 0x3e8 <lcd_print+0x1d4>
     3e6:	74 cf       	rjmp	.-280    	; 0x2d0 <lcd_print+0xbc>
     3e8:	3d cf       	rjmp	.-390    	; 0x264 <lcd_print+0x50>
     3ea:	c2 30       	cpi	r28, 0x02	; 2
     3ec:	d1 05       	cpc	r29, r1
     3ee:	89 f6       	brne	.-94     	; 0x392 <lcd_print+0x17e>
     3f0:	a2 cf       	rjmp	.-188    	; 0x336 <lcd_print+0x122>
     3f2:	df 91       	pop	r29
     3f4:	cf 91       	pop	r28
     3f6:	1f 91       	pop	r17
     3f8:	0f 91       	pop	r16
     3fa:	08 95       	ret

000003fc <motion_set>:
     3fc:	92 b1       	in	r25, 0x02	; 2
     3fe:	90 7f       	andi	r25, 0xF0	; 240
     400:	8f 70       	andi	r24, 0x0F	; 15
     402:	98 2b       	or	r25, r24
     404:	92 b9       	out	0x02, r25	; 2
     406:	08 95       	ret

00000408 <forward>:
     408:	86 e0       	ldi	r24, 0x06	; 6
     40a:	f8 cf       	rjmp	.-16     	; 0x3fc <motion_set>
     40c:	08 95       	ret

0000040e <back>:
     40e:	89 e0       	ldi	r24, 0x09	; 9
     410:	f5 cf       	rjmp	.-22     	; 0x3fc <motion_set>
     412:	08 95       	ret

00000414 <left>:
     414:	85 e0       	ldi	r24, 0x05	; 5
     416:	f2 cf       	rjmp	.-28     	; 0x3fc <motion_set>
     418:	08 95       	ret

0000041a <right>:
     41a:	8a e0       	ldi	r24, 0x0A	; 10
     41c:	ef cf       	rjmp	.-34     	; 0x3fc <motion_set>
     41e:	08 95       	ret

00000420 <stop>:
     420:	80 e0       	ldi	r24, 0x00	; 0
     422:	ec cf       	rjmp	.-40     	; 0x3fc <motion_set>
     424:	08 95       	ret

00000426 <buzzer_on>:
     426:	86 b1       	in	r24, 0x06	; 6
     428:	88 60       	ori	r24, 0x08	; 8
     42a:	88 b9       	out	0x08, r24	; 8
     42c:	08 95       	ret

0000042e <buzzer_off>:
     42e:	86 b1       	in	r24, 0x06	; 6
     430:	87 7f       	andi	r24, 0xF7	; 247
     432:	88 b9       	out	0x08, r24	; 8
     434:	08 95       	ret

00000436 <angle_rotate>:
     436:	10 92 45 02 	sts	0x0245, r1
     43a:	10 92 46 02 	sts	0x0246, r1
     43e:	10 92 47 02 	sts	0x0247, r1
     442:	10 92 48 02 	sts	0x0248, r1
     446:	10 92 49 02 	sts	0x0249, r1
     44a:	10 92 4a 02 	sts	0x024A, r1
     44e:	10 92 4b 02 	sts	0x024B, r1
     452:	10 92 4c 02 	sts	0x024C, r1
     456:	bc 01       	movw	r22, r24
     458:	80 e0       	ldi	r24, 0x00	; 0
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <__floatunsisf>
     460:	28 e4       	ldi	r18, 0x48	; 72
     462:	31 ee       	ldi	r19, 0xE1	; 225
     464:	42 e8       	ldi	r20, 0x82	; 130
     466:	50 e4       	ldi	r21, 0x40	; 64
     468:	8b d7       	rcall	.+3862   	; 0x1380 <__divsf3>
     46a:	f2 d7       	rcall	.+4068   	; 0x1450 <__fixunssfsi>
     46c:	67 2b       	or	r22, r23
     46e:	11 f4       	brne	.+4      	; 0x474 <angle_rotate+0x3e>
     470:	d7 cf       	rjmp	.-82     	; 0x420 <stop>
     472:	08 95       	ret
     474:	ff cf       	rjmp	.-2      	; 0x474 <angle_rotate+0x3e>

00000476 <ADC_Conversion>:
     476:	88 30       	cpi	r24, 0x08	; 8
     478:	18 f0       	brcs	.+6      	; 0x480 <ADC_Conversion+0xa>
     47a:	98 e0       	ldi	r25, 0x08	; 8
     47c:	90 93 7b 00 	sts	0x007B, r25
     480:	87 70       	andi	r24, 0x07	; 7
     482:	80 62       	ori	r24, 0x20	; 32
     484:	80 93 7c 00 	sts	0x007C, r24
     488:	ea e7       	ldi	r30, 0x7A	; 122
     48a:	f0 e0       	ldi	r31, 0x00	; 0
     48c:	80 81       	ld	r24, Z
     48e:	80 64       	ori	r24, 0x40	; 64
     490:	80 83       	st	Z, r24
     492:	80 81       	ld	r24, Z
     494:	84 ff       	sbrs	r24, 4
     496:	fd cf       	rjmp	.-6      	; 0x492 <ADC_Conversion+0x1c>
     498:	80 91 79 00 	lds	r24, 0x0079
     49c:	ea e7       	ldi	r30, 0x7A	; 122
     49e:	f0 e0       	ldi	r31, 0x00	; 0
     4a0:	90 81       	ld	r25, Z
     4a2:	90 61       	ori	r25, 0x10	; 16
     4a4:	90 83       	st	Z, r25
     4a6:	10 92 7b 00 	sts	0x007B, r1
     4aa:	08 95       	ret

000004ac <__vector_1>:
     4ac:	1f 92       	push	r1
     4ae:	0f 92       	push	r0
     4b0:	0f b6       	in	r0, 0x3f	; 63
     4b2:	0f 92       	push	r0
     4b4:	11 24       	eor	r1, r1
     4b6:	8f 93       	push	r24
     4b8:	9f 93       	push	r25
     4ba:	af 93       	push	r26
     4bc:	bf 93       	push	r27
     4be:	80 91 4d 02 	lds	r24, 0x024D
     4c2:	90 91 4e 02 	lds	r25, 0x024E
     4c6:	a0 91 4f 02 	lds	r26, 0x024F
     4ca:	b0 91 50 02 	lds	r27, 0x0250
     4ce:	01 96       	adiw	r24, 0x01	; 1
     4d0:	a1 1d       	adc	r26, r1
     4d2:	b1 1d       	adc	r27, r1
     4d4:	80 93 4d 02 	sts	0x024D, r24
     4d8:	90 93 4e 02 	sts	0x024E, r25
     4dc:	a0 93 4f 02 	sts	0x024F, r26
     4e0:	b0 93 50 02 	sts	0x0250, r27
     4e4:	bf 91       	pop	r27
     4e6:	af 91       	pop	r26
     4e8:	9f 91       	pop	r25
     4ea:	8f 91       	pop	r24
     4ec:	0f 90       	pop	r0
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	0f 90       	pop	r0
     4f2:	1f 90       	pop	r1
     4f4:	18 95       	reti

000004f6 <servo_1>:
     4f6:	10 92 89 00 	sts	0x0089, r1
     4fa:	68 2f       	mov	r22, r24
     4fc:	70 e0       	ldi	r23, 0x00	; 0
     4fe:	80 e0       	ldi	r24, 0x00	; 0
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	d2 d7       	rcall	.+4004   	; 0x14a8 <__floatunsisf>
     504:	2b e7       	ldi	r18, 0x7B	; 123
     506:	34 e1       	ldi	r19, 0x14	; 20
     508:	4e ee       	ldi	r20, 0xEE	; 238
     50a:	5f e3       	ldi	r21, 0x3F	; 63
     50c:	39 d7       	rcall	.+3698   	; 0x1380 <__divsf3>
     50e:	20 e0       	ldi	r18, 0x00	; 0
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	4c e0       	ldi	r20, 0x0C	; 12
     514:	52 e4       	ldi	r21, 0x42	; 66
     516:	d0 d6       	rcall	.+3488   	; 0x12b8 <__addsf3>
     518:	9b d7       	rcall	.+3894   	; 0x1450 <__fixunssfsi>
     51a:	60 93 88 00 	sts	0x0088, r22
     51e:	08 95       	ret

00000520 <filter_red>:
     520:	5e 98       	cbi	0x0b, 6	; 11
     522:	5f 98       	cbi	0x0b, 7	; 11
     524:	08 95       	ret

00000526 <filter_green>:
     526:	5e 9a       	sbi	0x0b, 6	; 11
     528:	5f 9a       	sbi	0x0b, 7	; 11
     52a:	08 95       	ret

0000052c <filter_blue>:
     52c:	5e 98       	cbi	0x0b, 6	; 11
     52e:	5f 9a       	sbi	0x0b, 7	; 11
     530:	08 95       	ret

00000532 <red_read>:
     532:	f6 df       	rcall	.-20     	; 0x520 <filter_red>
     534:	10 92 4d 02 	sts	0x024D, r1
     538:	10 92 4e 02 	sts	0x024E, r1
     53c:	10 92 4f 02 	sts	0x024F, r1
     540:	10 92 50 02 	sts	0x0250, r1
     544:	2f ef       	ldi	r18, 0xFF	; 255
     546:	8f e7       	ldi	r24, 0x7F	; 127
     548:	94 e0       	ldi	r25, 0x04	; 4
     54a:	21 50       	subi	r18, 0x01	; 1
     54c:	80 40       	sbci	r24, 0x00	; 0
     54e:	90 40       	sbci	r25, 0x00	; 0
     550:	e1 f7       	brne	.-8      	; 0x54a <red_read+0x18>
     552:	00 c0       	rjmp	.+0      	; 0x554 <red_read+0x22>
     554:	00 00       	nop
     556:	80 91 4d 02 	lds	r24, 0x024D
     55a:	90 91 4e 02 	lds	r25, 0x024E
     55e:	a0 91 4f 02 	lds	r26, 0x024F
     562:	b0 91 50 02 	lds	r27, 0x0250
     566:	80 93 62 02 	sts	0x0262, r24
     56a:	90 93 63 02 	sts	0x0263, r25
     56e:	a0 93 64 02 	sts	0x0264, r26
     572:	b0 93 65 02 	sts	0x0265, r27
     576:	61 e0       	ldi	r22, 0x01	; 1
     578:	81 e0       	ldi	r24, 0x01	; 1
     57a:	31 de       	rcall	.-926    	; 0x1de <lcd_cursor>
     57c:	85 e1       	ldi	r24, 0x15	; 21
     57e:	92 e0       	ldi	r25, 0x02	; 2
     580:	20 de       	rcall	.-960    	; 0x1c2 <lcd_string>
     582:	40 91 62 02 	lds	r20, 0x0262
     586:	50 91 63 02 	lds	r21, 0x0263
     58a:	60 91 64 02 	lds	r22, 0x0264
     58e:	70 91 65 02 	lds	r23, 0x0265
     592:	25 e0       	ldi	r18, 0x05	; 5
     594:	30 e0       	ldi	r19, 0x00	; 0
     596:	61 e0       	ldi	r22, 0x01	; 1
     598:	82 e0       	ldi	r24, 0x02	; 2
     59a:	3c de       	rcall	.-904    	; 0x214 <lcd_print>
     59c:	2f ef       	ldi	r18, 0xFF	; 255
     59e:	8f ef       	ldi	r24, 0xFF	; 255
     5a0:	9c e2       	ldi	r25, 0x2C	; 44
     5a2:	21 50       	subi	r18, 0x01	; 1
     5a4:	80 40       	sbci	r24, 0x00	; 0
     5a6:	90 40       	sbci	r25, 0x00	; 0
     5a8:	e1 f7       	brne	.-8      	; 0x5a2 <red_read+0x70>
     5aa:	00 c0       	rjmp	.+0      	; 0x5ac <red_read+0x7a>
     5ac:	00 00       	nop
     5ae:	81 e0       	ldi	r24, 0x01	; 1
     5b0:	bb cd       	rjmp	.-1162   	; 0x128 <lcd_wr_command>
     5b2:	08 95       	ret

000005b4 <green_read>:
     5b4:	b8 df       	rcall	.-144    	; 0x526 <filter_green>
     5b6:	10 92 4d 02 	sts	0x024D, r1
     5ba:	10 92 4e 02 	sts	0x024E, r1
     5be:	10 92 4f 02 	sts	0x024F, r1
     5c2:	10 92 50 02 	sts	0x0250, r1
     5c6:	2f ef       	ldi	r18, 0xFF	; 255
     5c8:	8f e7       	ldi	r24, 0x7F	; 127
     5ca:	94 e0       	ldi	r25, 0x04	; 4
     5cc:	21 50       	subi	r18, 0x01	; 1
     5ce:	80 40       	sbci	r24, 0x00	; 0
     5d0:	90 40       	sbci	r25, 0x00	; 0
     5d2:	e1 f7       	brne	.-8      	; 0x5cc <green_read+0x18>
     5d4:	00 c0       	rjmp	.+0      	; 0x5d6 <green_read+0x22>
     5d6:	00 00       	nop
     5d8:	80 91 4d 02 	lds	r24, 0x024D
     5dc:	90 91 4e 02 	lds	r25, 0x024E
     5e0:	a0 91 4f 02 	lds	r26, 0x024F
     5e4:	b0 91 50 02 	lds	r27, 0x0250
     5e8:	80 93 5e 02 	sts	0x025E, r24
     5ec:	90 93 5f 02 	sts	0x025F, r25
     5f0:	a0 93 60 02 	sts	0x0260, r26
     5f4:	b0 93 61 02 	sts	0x0261, r27
     5f8:	61 e0       	ldi	r22, 0x01	; 1
     5fa:	81 e0       	ldi	r24, 0x01	; 1
     5fc:	f0 dd       	rcall	.-1056   	; 0x1de <lcd_cursor>
     5fe:	80 e2       	ldi	r24, 0x20	; 32
     600:	92 e0       	ldi	r25, 0x02	; 2
     602:	df dd       	rcall	.-1090   	; 0x1c2 <lcd_string>
     604:	40 91 5e 02 	lds	r20, 0x025E
     608:	50 91 5f 02 	lds	r21, 0x025F
     60c:	60 91 60 02 	lds	r22, 0x0260
     610:	70 91 61 02 	lds	r23, 0x0261
     614:	25 e0       	ldi	r18, 0x05	; 5
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	61 e0       	ldi	r22, 0x01	; 1
     61a:	82 e0       	ldi	r24, 0x02	; 2
     61c:	fb dd       	rcall	.-1034   	; 0x214 <lcd_print>
     61e:	2f ef       	ldi	r18, 0xFF	; 255
     620:	8f ef       	ldi	r24, 0xFF	; 255
     622:	9c e2       	ldi	r25, 0x2C	; 44
     624:	21 50       	subi	r18, 0x01	; 1
     626:	80 40       	sbci	r24, 0x00	; 0
     628:	90 40       	sbci	r25, 0x00	; 0
     62a:	e1 f7       	brne	.-8      	; 0x624 <green_read+0x70>
     62c:	00 c0       	rjmp	.+0      	; 0x62e <green_read+0x7a>
     62e:	00 00       	nop
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	7a cd       	rjmp	.-1292   	; 0x128 <lcd_wr_command>
     634:	08 95       	ret

00000636 <blue_read>:
     636:	7a df       	rcall	.-268    	; 0x52c <filter_blue>
     638:	10 92 4d 02 	sts	0x024D, r1
     63c:	10 92 4e 02 	sts	0x024E, r1
     640:	10 92 4f 02 	sts	0x024F, r1
     644:	10 92 50 02 	sts	0x0250, r1
     648:	2f ef       	ldi	r18, 0xFF	; 255
     64a:	8f e7       	ldi	r24, 0x7F	; 127
     64c:	94 e0       	ldi	r25, 0x04	; 4
     64e:	21 50       	subi	r18, 0x01	; 1
     650:	80 40       	sbci	r24, 0x00	; 0
     652:	90 40       	sbci	r25, 0x00	; 0
     654:	e1 f7       	brne	.-8      	; 0x64e <blue_read+0x18>
     656:	00 c0       	rjmp	.+0      	; 0x658 <blue_read+0x22>
     658:	00 00       	nop
     65a:	80 91 4d 02 	lds	r24, 0x024D
     65e:	90 91 4e 02 	lds	r25, 0x024E
     662:	a0 91 4f 02 	lds	r26, 0x024F
     666:	b0 91 50 02 	lds	r27, 0x0250
     66a:	80 93 51 02 	sts	0x0251, r24
     66e:	90 93 52 02 	sts	0x0252, r25
     672:	a0 93 53 02 	sts	0x0253, r26
     676:	b0 93 54 02 	sts	0x0254, r27
     67a:	61 e0       	ldi	r22, 0x01	; 1
     67c:	81 e0       	ldi	r24, 0x01	; 1
     67e:	af dd       	rcall	.-1186   	; 0x1de <lcd_cursor>
     680:	8d e2       	ldi	r24, 0x2D	; 45
     682:	92 e0       	ldi	r25, 0x02	; 2
     684:	9e dd       	rcall	.-1220   	; 0x1c2 <lcd_string>
     686:	40 91 51 02 	lds	r20, 0x0251
     68a:	50 91 52 02 	lds	r21, 0x0252
     68e:	60 91 53 02 	lds	r22, 0x0253
     692:	70 91 54 02 	lds	r23, 0x0254
     696:	25 e0       	ldi	r18, 0x05	; 5
     698:	30 e0       	ldi	r19, 0x00	; 0
     69a:	61 e0       	ldi	r22, 0x01	; 1
     69c:	82 e0       	ldi	r24, 0x02	; 2
     69e:	ba dd       	rcall	.-1164   	; 0x214 <lcd_print>
     6a0:	2f ef       	ldi	r18, 0xFF	; 255
     6a2:	8f ef       	ldi	r24, 0xFF	; 255
     6a4:	9c e2       	ldi	r25, 0x2C	; 44
     6a6:	21 50       	subi	r18, 0x01	; 1
     6a8:	80 40       	sbci	r24, 0x00	; 0
     6aa:	90 40       	sbci	r25, 0x00	; 0
     6ac:	e1 f7       	brne	.-8      	; 0x6a6 <blue_read+0x70>
     6ae:	00 c0       	rjmp	.+0      	; 0x6b0 <blue_read+0x7a>
     6b0:	00 00       	nop
     6b2:	81 e0       	ldi	r24, 0x01	; 1
     6b4:	39 cd       	rjmp	.-1422   	; 0x128 <lcd_wr_command>
     6b6:	08 95       	ret

000006b8 <set_color>:
     6b8:	83 e0       	ldi	r24, 0x03	; 3
     6ba:	dd de       	rcall	.-582    	; 0x476 <ADC_Conversion>
     6bc:	80 93 5b 02 	sts	0x025B, r24
     6c0:	82 e0       	ldi	r24, 0x02	; 2
     6c2:	d9 de       	rcall	.-590    	; 0x476 <ADC_Conversion>
     6c4:	80 93 6f 02 	sts	0x026F, r24
     6c8:	81 e0       	ldi	r24, 0x01	; 1
     6ca:	d5 de       	rcall	.-598    	; 0x476 <ADC_Conversion>
     6cc:	80 93 67 02 	sts	0x0267, r24
     6d0:	08 95       	ret

000006d2 <correct>:
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	85 e0       	ldi	r24, 0x05	; 5
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	90 93 56 02 	sts	0x0256, r25
     6de:	80 93 55 02 	sts	0x0255, r24
     6e2:	c3 e0       	ldi	r28, 0x03	; 3
     6e4:	d0 e0       	ldi	r29, 0x00	; 0
     6e6:	96 de       	rcall	.-724    	; 0x414 <left>
     6e8:	23 e0       	ldi	r18, 0x03	; 3
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	49 e0       	ldi	r20, 0x09	; 9
     6ee:	53 e0       	ldi	r21, 0x03	; 3
     6f0:	67 e0       	ldi	r22, 0x07	; 7
     6f2:	82 e0       	ldi	r24, 0x02	; 2
     6f4:	8f dd       	rcall	.-1250   	; 0x214 <lcd_print>
     6f6:	80 91 55 02 	lds	r24, 0x0255
     6fa:	90 91 56 02 	lds	r25, 0x0256
     6fe:	9b de       	rcall	.-714    	; 0x436 <angle_rotate>
     700:	8f de       	rcall	.-738    	; 0x420 <stop>
     702:	da df       	rcall	.-76     	; 0x6b8 <set_color>
     704:	80 91 6f 02 	lds	r24, 0x026F
     708:	89 32       	cpi	r24, 0x29	; 41
     70a:	68 f4       	brcc	.+26     	; 0x726 <correct+0x54>
     70c:	21 97       	sbiw	r28, 0x01	; 1
     70e:	20 97       	sbiw	r28, 0x00	; 0
     710:	51 f7       	brne	.-44     	; 0x6e6 <correct+0x14>
     712:	83 de       	rcall	.-762    	; 0x41a <right>
     714:	80 91 6f 02 	lds	r24, 0x026F
     718:	88 32       	cpi	r24, 0x28	; 40
     71a:	28 f4       	brcc	.+10     	; 0x726 <correct+0x54>
     71c:	cd df       	rcall	.-102    	; 0x6b8 <set_color>
     71e:	80 91 6f 02 	lds	r24, 0x026F
     722:	88 32       	cpi	r24, 0x28	; 40
     724:	d8 f3       	brcs	.-10     	; 0x71c <correct+0x4a>
     726:	df 91       	pop	r29
     728:	cf 91       	pop	r28
     72a:	08 95       	ret

0000072c <noNatak>:
     72c:	d2 df       	rcall	.-92     	; 0x6d2 <correct>
     72e:	78 ce       	rjmp	.-784    	; 0x420 <stop>
     730:	08 95       	ret

00000732 <forwardJaa>:
     732:	ff 92       	push	r15
     734:	0f 93       	push	r16
     736:	1f 93       	push	r17
     738:	cf 93       	push	r28
     73a:	df 93       	push	r29
     73c:	08 e2       	ldi	r16, 0x28	; 40
     73e:	11 e0       	ldi	r17, 0x01	; 1
     740:	0f 2e       	mov	r0, r31
     742:	f8 ec       	ldi	r31, 0xC8	; 200
     744:	ff 2e       	mov	r15, r31
     746:	f0 2d       	mov	r31, r0
     748:	ca e2       	ldi	r28, 0x2A	; 42
     74a:	d1 e0       	ldi	r29, 0x01	; 1
     74c:	b5 df       	rcall	.-150    	; 0x6b8 <set_color>
     74e:	80 91 6f 02 	lds	r24, 0x026F
     752:	89 32       	cpi	r24, 0x29	; 41
     754:	50 f0       	brcs	.+20     	; 0x76a <forwardJaa+0x38>
     756:	80 91 5b 02 	lds	r24, 0x025B
     75a:	89 32       	cpi	r24, 0x29	; 41
     75c:	20 f4       	brcc	.+8      	; 0x766 <forwardJaa+0x34>
     75e:	80 91 67 02 	lds	r24, 0x0267
     762:	89 32       	cpi	r24, 0x29	; 41
     764:	10 f0       	brcs	.+4      	; 0x76a <forwardJaa+0x38>
     766:	50 de       	rcall	.-864    	; 0x408 <forward>
     768:	0a c0       	rjmp	.+20     	; 0x77e <forwardJaa+0x4c>
     76a:	4e de       	rcall	.-868    	; 0x408 <forward>
     76c:	f8 01       	movw	r30, r16
     76e:	f0 82       	st	Z, r15
     770:	f8 82       	st	Y, r15
     772:	80 91 6f 02 	lds	r24, 0x026F
     776:	89 32       	cpi	r24, 0x29	; 41
     778:	48 f7       	brcc	.-46     	; 0x74c <forwardJaa+0x1a>
     77a:	d8 df       	rcall	.-80     	; 0x72c <noNatak>
     77c:	da df       	rcall	.-76     	; 0x732 <forwardJaa>
     77e:	df 91       	pop	r29
     780:	cf 91       	pop	r28
     782:	1f 91       	pop	r17
     784:	0f 91       	pop	r16
     786:	ff 90       	pop	r15
     788:	08 95       	ret

0000078a <nodeRight>:
     78a:	3e de       	rcall	.-900    	; 0x408 <forward>
     78c:	46 de       	rcall	.-884    	; 0x41a <right>
     78e:	8a e5       	ldi	r24, 0x5A	; 90
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	51 ce       	rjmp	.-862    	; 0x436 <angle_rotate>
     794:	08 95       	ret

00000796 <nodeLeft>:
     796:	38 de       	rcall	.-912    	; 0x408 <forward>
     798:	3d de       	rcall	.-902    	; 0x414 <left>
     79a:	84 e6       	ldi	r24, 0x64	; 100
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	4b ce       	rjmp	.-874    	; 0x436 <angle_rotate>
     7a0:	08 95       	ret

000007a2 <buzzer>:
     7a2:	41 de       	rcall	.-894    	; 0x426 <buzzer_on>
     7a4:	44 ce       	rjmp	.-888    	; 0x42e <buzzer_off>
     7a6:	08 95       	ret

000007a8 <uTurn>:
     7a8:	fc df       	rcall	.-8      	; 0x7a2 <buzzer>
     7aa:	37 de       	rcall	.-914    	; 0x41a <right>
     7ac:	8e eb       	ldi	r24, 0xBE	; 190
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	42 ce       	rjmp	.-892    	; 0x436 <angle_rotate>
     7b2:	08 95       	ret

000007b4 <adjC>:
     7b4:	80 91 00 02 	lds	r24, 0x0200
     7b8:	81 30       	cpi	r24, 0x01	; 1
     7ba:	41 f0       	breq	.+16     	; 0x7cc <adjC+0x18>
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	41 f0       	breq	.+16     	; 0x7d0 <adjC+0x1c>
     7c0:	83 30       	cpi	r24, 0x03	; 3
     7c2:	41 f0       	breq	.+16     	; 0x7d4 <adjC+0x20>
     7c4:	84 30       	cpi	r24, 0x04	; 4
     7c6:	41 f4       	brne	.+16     	; 0x7d8 <adjC+0x24>
     7c8:	82 e0       	ldi	r24, 0x02	; 2
     7ca:	08 95       	ret
     7cc:	83 e0       	ldi	r24, 0x03	; 3
     7ce:	08 95       	ret
     7d0:	84 e0       	ldi	r24, 0x04	; 4
     7d2:	08 95       	ret
     7d4:	81 e0       	ldi	r24, 0x01	; 1
     7d6:	08 95       	ret
     7d8:	80 e0       	ldi	r24, 0x00	; 0
     7da:	08 95       	ret

000007dc <elevate>:
     7dc:	61 11       	cpse	r22, r1
     7de:	02 c0       	rjmp	.+4      	; 0x7e4 <elevate+0x8>
     7e0:	8a ce       	rjmp	.-748    	; 0x4f6 <servo_1>
     7e2:	08 95       	ret
     7e4:	61 30       	cpi	r22, 0x01	; 1
     7e6:	31 f4       	brne	.+12     	; 0x7f4 <elevate+0x18>
     7e8:	8d 32       	cpi	r24, 0x2D	; 45
     7ea:	11 f4       	brne	.+4      	; 0x7f0 <elevate+0x14>
     7ec:	80 e0       	ldi	r24, 0x00	; 0
     7ee:	01 c0       	rjmp	.+2      	; 0x7f2 <elevate+0x16>
     7f0:	8d e2       	ldi	r24, 0x2D	; 45
     7f2:	81 ce       	rjmp	.-766    	; 0x4f6 <servo_1>
     7f4:	08 95       	ret

000007f6 <open>:
     7f6:	81 11       	cpse	r24, r1
     7f8:	06 c0       	rjmp	.+12     	; 0x806 <open+0x10>
     7fa:	10 92 8b 00 	sts	0x008B, r1
     7fe:	83 e8       	ldi	r24, 0x83	; 131
     800:	80 93 8a 00 	sts	0x008A, r24
     804:	08 95       	ret
     806:	81 30       	cpi	r24, 0x01	; 1
     808:	29 f4       	brne	.+10     	; 0x814 <open+0x1e>
     80a:	10 92 8d 00 	sts	0x008D, r1
     80e:	83 e8       	ldi	r24, 0x83	; 131
     810:	80 93 8c 00 	sts	0x008C, r24
     814:	08 95       	ret

00000816 <close>:
     816:	81 11       	cpse	r24, r1
     818:	06 c0       	rjmp	.+12     	; 0x826 <close+0x10>
     81a:	10 92 8b 00 	sts	0x008B, r1
     81e:	83 e2       	ldi	r24, 0x23	; 35
     820:	80 93 8a 00 	sts	0x008A, r24
     824:	08 95       	ret
     826:	81 30       	cpi	r24, 0x01	; 1
     828:	29 f4       	brne	.+10     	; 0x834 <close+0x1e>
     82a:	10 92 8d 00 	sts	0x008D, r1
     82e:	83 e2       	ldi	r24, 0x23	; 35
     830:	80 93 8c 00 	sts	0x008C, r24
     834:	08 95       	ret

00000836 <pickupSeQ>:
     836:	cf 93       	push	r28
     838:	c8 2f       	mov	r28, r24
     83a:	68 2f       	mov	r22, r24
     83c:	80 e0       	ldi	r24, 0x00	; 0
     83e:	ce df       	rcall	.-100    	; 0x7dc <elevate>
     840:	8c 2f       	mov	r24, r28
     842:	d9 df       	rcall	.-78     	; 0x7f6 <open>
     844:	8c 2f       	mov	r24, r28
     846:	e7 df       	rcall	.-50     	; 0x816 <close>
     848:	6c 2f       	mov	r22, r28
     84a:	8d e2       	ldi	r24, 0x2D	; 45
     84c:	c7 df       	rcall	.-114    	; 0x7dc <elevate>
     84e:	cf 91       	pop	r28
     850:	08 95       	ret

00000852 <dropSeQ>:
     852:	cf 93       	push	r28
     854:	c8 2f       	mov	r28, r24
     856:	68 2f       	mov	r22, r24
     858:	80 e0       	ldi	r24, 0x00	; 0
     85a:	c0 df       	rcall	.-128    	; 0x7dc <elevate>
     85c:	8c 2f       	mov	r24, r28
     85e:	cb df       	rcall	.-106    	; 0x7f6 <open>
     860:	6c 2f       	mov	r22, r28
     862:	8d e2       	ldi	r24, 0x2D	; 45
     864:	bb df       	rcall	.-138    	; 0x7dc <elevate>
     866:	8c 2f       	mov	r24, r28
     868:	d6 df       	rcall	.-84     	; 0x816 <close>
     86a:	cf 91       	pop	r28
     86c:	08 95       	ret

0000086e <pickup>:
     86e:	cf 93       	push	r28
     870:	61 11       	cpse	r22, r1
     872:	65 c0       	rjmp	.+202    	; 0x93e <pickup+0xd0>
     874:	28 2f       	mov	r18, r24
     876:	30 e0       	ldi	r19, 0x00	; 0
     878:	f9 01       	movw	r30, r18
     87a:	e4 5c       	subi	r30, 0xC4	; 196
     87c:	fd 4f       	sbci	r31, 0xFD	; 253
     87e:	60 81       	ld	r22, Z
     880:	61 11       	cpse	r22, r1
     882:	27 c0       	rjmp	.+78     	; 0x8d2 <pickup+0x64>
     884:	70 91 00 02 	lds	r23, 0x0200
     888:	47 2f       	mov	r20, r23
     88a:	50 e0       	ldi	r21, 0x00	; 0
     88c:	fa 01       	movw	r30, r20
     88e:	ee 0f       	add	r30, r30
     890:	ff 1f       	adc	r31, r31
     892:	e2 0f       	add	r30, r18
     894:	f3 1f       	adc	r31, r19
     896:	e5 5f       	subi	r30, 0xF5	; 245
     898:	fd 4f       	sbci	r31, 0xFD	; 253
     89a:	90 81       	ld	r25, Z
     89c:	e9 2f       	mov	r30, r25
     89e:	f0 e0       	ldi	r31, 0x00	; 0
     8a0:	ea 5f       	subi	r30, 0xFA	; 250
     8a2:	fd 4f       	sbci	r31, 0xFD	; 253
     8a4:	e0 81       	ld	r30, Z
     8a6:	7e 17       	cp	r23, r30
     8a8:	09 f4       	brne	.+2      	; 0x8ac <pickup+0x3e>
     8aa:	7e c0       	rjmp	.+252    	; 0x9a8 <pickup+0x13a>
     8ac:	99 23       	and	r25, r25
     8ae:	09 f4       	brne	.+2      	; 0x8b2 <pickup+0x44>
     8b0:	84 c0       	rjmp	.+264    	; 0x9ba <pickup+0x14c>
     8b2:	f9 01       	movw	r30, r18
     8b4:	e4 5c       	subi	r30, 0xC4	; 196
     8b6:	fd 4f       	sbci	r31, 0xFD	; 253
     8b8:	90 83       	st	Z, r25
     8ba:	fa 01       	movw	r30, r20
     8bc:	ee 0f       	add	r30, r30
     8be:	ff 1f       	adc	r31, r31
     8c0:	2e 0f       	add	r18, r30
     8c2:	3f 1f       	adc	r19, r31
     8c4:	f9 01       	movw	r30, r18
     8c6:	e5 5f       	subi	r30, 0xF5	; 245
     8c8:	fd 4f       	sbci	r31, 0xFD	; 253
     8ca:	10 82       	st	Z, r1
     8cc:	b4 df       	rcall	.-152    	; 0x836 <pickupSeQ>
     8ce:	91 e0       	ldi	r25, 0x01	; 1
     8d0:	74 c0       	rjmp	.+232    	; 0x9ba <pickup+0x14c>
     8d2:	c1 e0       	ldi	r28, 0x01	; 1
     8d4:	81 11       	cpse	r24, r1
     8d6:	c0 e0       	ldi	r28, 0x00	; 0
     8d8:	4c 2f       	mov	r20, r28
     8da:	50 e0       	ldi	r21, 0x00	; 0
     8dc:	fa 01       	movw	r30, r20
     8de:	e4 5c       	subi	r30, 0xC4	; 196
     8e0:	fd 4f       	sbci	r31, 0xFD	; 253
     8e2:	80 81       	ld	r24, Z
     8e4:	81 11       	cpse	r24, r1
     8e6:	62 c0       	rjmp	.+196    	; 0x9ac <pickup+0x13e>
     8e8:	a0 91 00 02 	lds	r26, 0x0200
     8ec:	6a 2f       	mov	r22, r26
     8ee:	70 e0       	ldi	r23, 0x00	; 0
     8f0:	fb 01       	movw	r30, r22
     8f2:	ee 0f       	add	r30, r30
     8f4:	ff 1f       	adc	r31, r31
     8f6:	e4 0f       	add	r30, r20
     8f8:	f5 1f       	adc	r31, r21
     8fa:	e5 5f       	subi	r30, 0xF5	; 245
     8fc:	fd 4f       	sbci	r31, 0xFD	; 253
     8fe:	90 81       	ld	r25, Z
     900:	e9 2f       	mov	r30, r25
     902:	f0 e0       	ldi	r31, 0x00	; 0
     904:	ea 5f       	subi	r30, 0xFA	; 250
     906:	fd 4f       	sbci	r31, 0xFD	; 253
     908:	e0 81       	ld	r30, Z
     90a:	ae 17       	cp	r26, r30
     90c:	09 f4       	brne	.+2      	; 0x910 <pickup+0xa2>
     90e:	50 c0       	rjmp	.+160    	; 0x9b0 <pickup+0x142>
     910:	99 23       	and	r25, r25
     912:	09 f4       	brne	.+2      	; 0x916 <pickup+0xa8>
     914:	52 c0       	rjmp	.+164    	; 0x9ba <pickup+0x14c>
     916:	da 01       	movw	r26, r20
     918:	a4 5c       	subi	r26, 0xC4	; 196
     91a:	bd 4f       	sbci	r27, 0xFD	; 253
     91c:	fb 01       	movw	r30, r22
     91e:	ee 0f       	add	r30, r30
     920:	ff 1f       	adc	r31, r31
     922:	2e 0f       	add	r18, r30
     924:	3f 1f       	adc	r19, r31
     926:	f9 01       	movw	r30, r18
     928:	e5 5f       	subi	r30, 0xF5	; 245
     92a:	fd 4f       	sbci	r31, 0xFD	; 253
     92c:	80 81       	ld	r24, Z
     92e:	8c 93       	st	X, r24
     930:	10 82       	st	Z, r1
     932:	3a df       	rcall	.-396    	; 0x7a8 <uTurn>
     934:	8c 2f       	mov	r24, r28
     936:	7f df       	rcall	.-258    	; 0x836 <pickupSeQ>
     938:	37 df       	rcall	.-402    	; 0x7a8 <uTurn>
     93a:	91 e0       	ldi	r25, 0x01	; 1
     93c:	3e c0       	rjmp	.+124    	; 0x9ba <pickup+0x14c>
     93e:	61 30       	cpi	r22, 0x01	; 1
     940:	c9 f5       	brne	.+114    	; 0x9b4 <pickup+0x146>
     942:	28 2f       	mov	r18, r24
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	f9 01       	movw	r30, r18
     948:	e4 5c       	subi	r30, 0xC4	; 196
     94a:	fd 4f       	sbci	r31, 0xFD	; 253
     94c:	90 81       	ld	r25, Z
     94e:	91 11       	cpse	r25, r1
     950:	10 c0       	rjmp	.+32     	; 0x972 <pickup+0x104>
     952:	90 91 00 02 	lds	r25, 0x0200
     956:	a9 2f       	mov	r26, r25
     958:	a1 70       	andi	r26, 0x01	; 1
     95a:	b0 e0       	ldi	r27, 0x00	; 0
     95c:	f9 01       	movw	r30, r18
     95e:	e4 5c       	subi	r30, 0xC4	; 196
     960:	fd 4f       	sbci	r31, 0xFD	; 253
     962:	ad 5b       	subi	r26, 0xBD	; 189
     964:	bd 4f       	sbci	r27, 0xFD	; 253
     966:	9c 91       	ld	r25, X
     968:	90 83       	st	Z, r25
     96a:	1c 92       	st	X, r1
     96c:	64 df       	rcall	.-312    	; 0x836 <pickupSeQ>
     96e:	91 e0       	ldi	r25, 0x01	; 1
     970:	24 c0       	rjmp	.+72     	; 0x9ba <pickup+0x14c>
     972:	91 e0       	ldi	r25, 0x01	; 1
     974:	81 11       	cpse	r24, r1
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	29 2f       	mov	r18, r25
     97a:	30 e0       	ldi	r19, 0x00	; 0
     97c:	f9 01       	movw	r30, r18
     97e:	e4 5c       	subi	r30, 0xC4	; 196
     980:	fd 4f       	sbci	r31, 0xFD	; 253
     982:	80 81       	ld	r24, Z
     984:	81 11       	cpse	r24, r1
     986:	18 c0       	rjmp	.+48     	; 0x9b8 <pickup+0x14a>
     988:	80 91 00 02 	lds	r24, 0x0200
     98c:	48 2f       	mov	r20, r24
     98e:	41 70       	andi	r20, 0x01	; 1
     990:	50 e0       	ldi	r21, 0x00	; 0
     992:	df 01       	movw	r26, r30
     994:	fa 01       	movw	r30, r20
     996:	ed 5b       	subi	r30, 0xBD	; 189
     998:	fd 4f       	sbci	r31, 0xFD	; 253
     99a:	80 81       	ld	r24, Z
     99c:	8c 93       	st	X, r24
     99e:	10 82       	st	Z, r1
     9a0:	89 2f       	mov	r24, r25
     9a2:	49 df       	rcall	.-366    	; 0x836 <pickupSeQ>
     9a4:	91 e0       	ldi	r25, 0x01	; 1
     9a6:	09 c0       	rjmp	.+18     	; 0x9ba <pickup+0x14c>
     9a8:	96 2f       	mov	r25, r22
     9aa:	07 c0       	rjmp	.+14     	; 0x9ba <pickup+0x14c>
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	05 c0       	rjmp	.+10     	; 0x9ba <pickup+0x14c>
     9b0:	98 2f       	mov	r25, r24
     9b2:	03 c0       	rjmp	.+6      	; 0x9ba <pickup+0x14c>
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	01 c0       	rjmp	.+2      	; 0x9ba <pickup+0x14c>
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	89 2f       	mov	r24, r25
     9bc:	cf 91       	pop	r28
     9be:	08 95       	ret

000009c0 <drop>:
     9c0:	cf 93       	push	r28
     9c2:	98 2f       	mov	r25, r24
     9c4:	61 11       	cpse	r22, r1
     9c6:	5c c0       	rjmp	.+184    	; 0xa80 <drop+0xc0>
     9c8:	28 2f       	mov	r18, r24
     9ca:	30 e0       	ldi	r19, 0x00	; 0
     9cc:	f9 01       	movw	r30, r18
     9ce:	e4 5c       	subi	r30, 0xC4	; 196
     9d0:	fd 4f       	sbci	r31, 0xFD	; 253
     9d2:	a0 81       	ld	r26, Z
     9d4:	aa 23       	and	r26, r26
     9d6:	19 f1       	breq	.+70     	; 0xa1e <drop+0x5e>
     9d8:	40 91 00 02 	lds	r20, 0x0200
     9dc:	50 e0       	ldi	r21, 0x00	; 0
     9de:	fa 01       	movw	r30, r20
     9e0:	ee 0f       	add	r30, r30
     9e2:	ff 1f       	adc	r31, r31
     9e4:	e2 0f       	add	r30, r18
     9e6:	f3 1f       	adc	r31, r19
     9e8:	e5 5f       	subi	r30, 0xF5	; 245
     9ea:	fd 4f       	sbci	r31, 0xFD	; 253
     9ec:	80 81       	ld	r24, Z
     9ee:	81 11       	cpse	r24, r1
     9f0:	80 c0       	rjmp	.+256    	; 0xaf2 <drop+0x132>
     9f2:	fa 01       	movw	r30, r20
     9f4:	ea 5f       	subi	r30, 0xFA	; 250
     9f6:	fd 4f       	sbci	r31, 0xFD	; 253
     9f8:	60 81       	ld	r22, Z
     9fa:	a6 13       	cpse	r26, r22
     9fc:	83 c0       	rjmp	.+262    	; 0xb04 <drop+0x144>
     9fe:	fa 01       	movw	r30, r20
     a00:	ee 0f       	add	r30, r30
     a02:	ff 1f       	adc	r31, r31
     a04:	e2 0f       	add	r30, r18
     a06:	f3 1f       	adc	r31, r19
     a08:	e5 5f       	subi	r30, 0xF5	; 245
     a0a:	fd 4f       	sbci	r31, 0xFD	; 253
     a0c:	a0 83       	st	Z, r26
     a0e:	f9 01       	movw	r30, r18
     a10:	e4 5c       	subi	r30, 0xC4	; 196
     a12:	fd 4f       	sbci	r31, 0xFD	; 253
     a14:	10 82       	st	Z, r1
     a16:	89 2f       	mov	r24, r25
     a18:	1c df       	rcall	.-456    	; 0x852 <dropSeQ>
     a1a:	81 e0       	ldi	r24, 0x01	; 1
     a1c:	73 c0       	rjmp	.+230    	; 0xb04 <drop+0x144>
     a1e:	c1 e0       	ldi	r28, 0x01	; 1
     a20:	81 11       	cpse	r24, r1
     a22:	c0 e0       	ldi	r28, 0x00	; 0
     a24:	4c 2f       	mov	r20, r28
     a26:	50 e0       	ldi	r21, 0x00	; 0
     a28:	fa 01       	movw	r30, r20
     a2a:	e4 5c       	subi	r30, 0xC4	; 196
     a2c:	fd 4f       	sbci	r31, 0xFD	; 253
     a2e:	80 81       	ld	r24, Z
     a30:	88 23       	and	r24, r24
     a32:	09 f4       	brne	.+2      	; 0xa36 <drop+0x76>
     a34:	67 c0       	rjmp	.+206    	; 0xb04 <drop+0x144>
     a36:	60 91 00 02 	lds	r22, 0x0200
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	fb 01       	movw	r30, r22
     a3e:	ee 0f       	add	r30, r30
     a40:	ff 1f       	adc	r31, r31
     a42:	e4 0f       	add	r30, r20
     a44:	f5 1f       	adc	r31, r21
     a46:	e5 5f       	subi	r30, 0xF5	; 245
     a48:	fd 4f       	sbci	r31, 0xFD	; 253
     a4a:	90 81       	ld	r25, Z
     a4c:	91 11       	cpse	r25, r1
     a4e:	53 c0       	rjmp	.+166    	; 0xaf6 <drop+0x136>
     a50:	fb 01       	movw	r30, r22
     a52:	ea 5f       	subi	r30, 0xFA	; 250
     a54:	fd 4f       	sbci	r31, 0xFD	; 253
     a56:	e0 81       	ld	r30, Z
     a58:	8e 13       	cpse	r24, r30
     a5a:	4f c0       	rjmp	.+158    	; 0xafa <drop+0x13a>
     a5c:	66 0f       	add	r22, r22
     a5e:	77 1f       	adc	r23, r23
     a60:	26 0f       	add	r18, r22
     a62:	37 1f       	adc	r19, r23
     a64:	f9 01       	movw	r30, r18
     a66:	e5 5f       	subi	r30, 0xF5	; 245
     a68:	fd 4f       	sbci	r31, 0xFD	; 253
     a6a:	10 82       	st	Z, r1
     a6c:	fa 01       	movw	r30, r20
     a6e:	e4 5c       	subi	r30, 0xC4	; 196
     a70:	fd 4f       	sbci	r31, 0xFD	; 253
     a72:	10 82       	st	Z, r1
     a74:	99 de       	rcall	.-718    	; 0x7a8 <uTurn>
     a76:	8c 2f       	mov	r24, r28
     a78:	ec de       	rcall	.-552    	; 0x852 <dropSeQ>
     a7a:	96 de       	rcall	.-724    	; 0x7a8 <uTurn>
     a7c:	81 e0       	ldi	r24, 0x01	; 1
     a7e:	42 c0       	rjmp	.+132    	; 0xb04 <drop+0x144>
     a80:	61 30       	cpi	r22, 0x01	; 1
     a82:	09 f0       	breq	.+2      	; 0xa86 <drop+0xc6>
     a84:	3c c0       	rjmp	.+120    	; 0xafe <drop+0x13e>
     a86:	80 91 00 02 	lds	r24, 0x0200
     a8a:	28 2f       	mov	r18, r24
     a8c:	21 70       	andi	r18, 0x01	; 1
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	f9 01       	movw	r30, r18
     a92:	ed 5b       	subi	r30, 0xBD	; 189
     a94:	fd 4f       	sbci	r31, 0xFD	; 253
     a96:	80 81       	ld	r24, Z
     a98:	81 11       	cpse	r24, r1
     a9a:	33 c0       	rjmp	.+102    	; 0xb02 <drop+0x142>
     a9c:	49 2f       	mov	r20, r25
     a9e:	50 e0       	ldi	r21, 0x00	; 0
     aa0:	fa 01       	movw	r30, r20
     aa2:	e4 5c       	subi	r30, 0xC4	; 196
     aa4:	fd 4f       	sbci	r31, 0xFD	; 253
     aa6:	80 81       	ld	r24, Z
     aa8:	88 23       	and	r24, r24
     aaa:	61 f0       	breq	.+24     	; 0xac4 <drop+0x104>
     aac:	f9 01       	movw	r30, r18
     aae:	ed 5b       	subi	r30, 0xBD	; 189
     ab0:	fd 4f       	sbci	r31, 0xFD	; 253
     ab2:	80 83       	st	Z, r24
     ab4:	fa 01       	movw	r30, r20
     ab6:	e4 5c       	subi	r30, 0xC4	; 196
     ab8:	fd 4f       	sbci	r31, 0xFD	; 253
     aba:	10 82       	st	Z, r1
     abc:	89 2f       	mov	r24, r25
     abe:	bb de       	rcall	.-650    	; 0x836 <pickupSeQ>
     ac0:	81 e0       	ldi	r24, 0x01	; 1
     ac2:	20 c0       	rjmp	.+64     	; 0xb04 <drop+0x144>
     ac4:	61 e0       	ldi	r22, 0x01	; 1
     ac6:	91 11       	cpse	r25, r1
     ac8:	60 e0       	ldi	r22, 0x00	; 0
     aca:	46 2f       	mov	r20, r22
     acc:	50 e0       	ldi	r21, 0x00	; 0
     ace:	fa 01       	movw	r30, r20
     ad0:	e4 5c       	subi	r30, 0xC4	; 196
     ad2:	fd 4f       	sbci	r31, 0xFD	; 253
     ad4:	80 81       	ld	r24, Z
     ad6:	88 23       	and	r24, r24
     ad8:	a9 f0       	breq	.+42     	; 0xb04 <drop+0x144>
     ada:	f9 01       	movw	r30, r18
     adc:	ed 5b       	subi	r30, 0xBD	; 189
     ade:	fd 4f       	sbci	r31, 0xFD	; 253
     ae0:	80 83       	st	Z, r24
     ae2:	fa 01       	movw	r30, r20
     ae4:	e4 5c       	subi	r30, 0xC4	; 196
     ae6:	fd 4f       	sbci	r31, 0xFD	; 253
     ae8:	10 82       	st	Z, r1
     aea:	86 2f       	mov	r24, r22
     aec:	a4 de       	rcall	.-696    	; 0x836 <pickupSeQ>
     aee:	81 e0       	ldi	r24, 0x01	; 1
     af0:	09 c0       	rjmp	.+18     	; 0xb04 <drop+0x144>
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	07 c0       	rjmp	.+14     	; 0xb04 <drop+0x144>
     af6:	8a 2f       	mov	r24, r26
     af8:	05 c0       	rjmp	.+10     	; 0xb04 <drop+0x144>
     afa:	89 2f       	mov	r24, r25
     afc:	03 c0       	rjmp	.+6      	; 0xb04 <drop+0x144>
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	01 c0       	rjmp	.+2      	; 0xb04 <drop+0x144>
     b02:	80 e0       	ldi	r24, 0x00	; 0
     b04:	cf 91       	pop	r28
     b06:	08 95       	ret

00000b08 <swapMan>:
     b08:	cf 93       	push	r28
     b0a:	df 93       	push	r29
     b0c:	d8 2f       	mov	r29, r24
     b0e:	c6 2f       	mov	r28, r22
     b10:	80 91 00 02 	lds	r24, 0x0200
     b14:	ed 2f       	mov	r30, r29
     b16:	f0 e0       	ldi	r31, 0x00	; 0
     b18:	ed 5b       	subi	r30, 0xBD	; 189
     b1a:	fd 4f       	sbci	r31, 0xFD	; 253
     b1c:	e0 81       	ld	r30, Z
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	ea 5f       	subi	r30, 0xFA	; 250
     b22:	fd 4f       	sbci	r31, 0xFD	; 253
     b24:	20 81       	ld	r18, Z
     b26:	26 13       	cpse	r18, r22
     b28:	28 c0       	rjmp	.+80     	; 0xb7a <swapMan+0x72>
     b2a:	90 91 3d 02 	lds	r25, 0x023D
     b2e:	91 11       	cpse	r25, r1
     b30:	05 c0       	rjmp	.+10     	; 0xb3c <swapMan+0x34>
     b32:	90 91 3c 02 	lds	r25, 0x023C
     b36:	99 23       	and	r25, r25
     b38:	b1 f0       	breq	.+44     	; 0xb66 <swapMan+0x5e>
     b3a:	04 c0       	rjmp	.+8      	; 0xb44 <swapMan+0x3c>
     b3c:	90 91 3c 02 	lds	r25, 0x023C
     b40:	91 11       	cpse	r25, r1
     b42:	1b c0       	rjmp	.+54     	; 0xb7a <swapMan+0x72>
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	f9 01       	movw	r30, r18
     b48:	ee 0f       	add	r30, r30
     b4a:	ff 1f       	adc	r31, r31
     b4c:	e5 5f       	subi	r30, 0xF5	; 245
     b4e:	fd 4f       	sbci	r31, 0xFD	; 253
     b50:	90 81       	ld	r25, Z
     b52:	99 23       	and	r25, r25
     b54:	41 f0       	breq	.+16     	; 0xb66 <swapMan+0x5e>
     b56:	f9 01       	movw	r30, r18
     b58:	ee 0f       	add	r30, r30
     b5a:	ff 1f       	adc	r31, r31
     b5c:	e5 5f       	subi	r30, 0xF5	; 245
     b5e:	fd 4f       	sbci	r31, 0xFD	; 253
     b60:	91 81       	ldd	r25, Z+1	; 0x01
     b62:	91 30       	cpi	r25, 0x01	; 1
     b64:	51 f4       	brne	.+20     	; 0xb7a <swapMan+0x72>
     b66:	9e ef       	ldi	r25, 0xFE	; 254
     b68:	98 0f       	add	r25, r24
     b6a:	81 e0       	ldi	r24, 0x01	; 1
     b6c:	92 30       	cpi	r25, 0x02	; 2
     b6e:	08 f0       	brcs	.+2      	; 0xb72 <swapMan+0x6a>
     b70:	80 e0       	ldi	r24, 0x00	; 0
     b72:	61 e0       	ldi	r22, 0x01	; 1
     b74:	7c de       	rcall	.-776    	; 0x86e <pickup>
     b76:	80 93 68 02 	sts	0x0268, r24
     b7a:	80 91 00 02 	lds	r24, 0x0200
     b7e:	8c 27       	eor	r24, r28
     b80:	80 ff       	sbrs	r24, 0
     b82:	15 c0       	rjmp	.+42     	; 0xbae <swapMan+0xa6>
     b84:	8c 2f       	mov	r24, r28
     b86:	81 70       	andi	r24, 0x01	; 1
     b88:	8d 13       	cpse	r24, r29
     b8a:	11 c0       	rjmp	.+34     	; 0xbae <swapMan+0xa6>
     b8c:	90 91 3c 02 	lds	r25, 0x023C
     b90:	99 23       	and	r25, r25
     b92:	69 f0       	breq	.+26     	; 0xbae <swapMan+0xa6>
     b94:	80 91 3d 02 	lds	r24, 0x023D
     b98:	88 23       	and	r24, r24
     b9a:	49 f0       	breq	.+18     	; 0xbae <swapMan+0xa6>
     b9c:	d0 e0       	ldi	r29, 0x00	; 0
     b9e:	ca 5f       	subi	r28, 0xFA	; 250
     ba0:	dd 4f       	sbci	r29, 0xFD	; 253
     ba2:	81 e0       	ldi	r24, 0x01	; 1
     ba4:	28 81       	ld	r18, Y
     ba6:	92 13       	cpse	r25, r18
     ba8:	80 e0       	ldi	r24, 0x00	; 0
     baa:	61 e0       	ldi	r22, 0x01	; 1
     bac:	09 df       	rcall	.-494    	; 0x9c0 <drop>
     bae:	df 91       	pop	r29
     bb0:	cf 91       	pop	r28
     bb2:	08 95       	ret

00000bb4 <travel>:
     bb4:	cf 93       	push	r28
     bb6:	df 93       	push	r29
     bb8:	c8 2f       	mov	r28, r24
     bba:	d6 2f       	mov	r29, r22
     bbc:	ba dd       	rcall	.-1164   	; 0x732 <forwardJaa>
     bbe:	6d 2f       	mov	r22, r29
     bc0:	8c 2f       	mov	r24, r28
     bc2:	81 70       	andi	r24, 0x01	; 1
     bc4:	a1 df       	rcall	.-190    	; 0xb08 <swapMan>
     bc6:	c1 30       	cpi	r28, 0x01	; 1
     bc8:	29 f4       	brne	.+10     	; 0xbd4 <travel+0x20>
     bca:	8d ef       	ldi	r24, 0xFD	; 253
     bcc:	8d 0f       	add	r24, r29
     bce:	82 30       	cpi	r24, 0x02	; 2
     bd0:	e8 f4       	brcc	.+58     	; 0xc0c <travel+0x58>
     bd2:	06 c0       	rjmp	.+12     	; 0xbe0 <travel+0x2c>
     bd4:	c4 30       	cpi	r28, 0x04	; 4
     bd6:	99 f4       	brne	.+38     	; 0xbfe <travel+0x4a>
     bd8:	8f ef       	ldi	r24, 0xFF	; 255
     bda:	8d 0f       	add	r24, r29
     bdc:	82 30       	cpi	r24, 0x02	; 2
     bde:	48 f5       	brcc	.+82     	; 0xc32 <travel+0x7e>
     be0:	da dd       	rcall	.-1100   	; 0x796 <nodeLeft>
     be2:	a7 dd       	rcall	.-1202   	; 0x732 <forwardJaa>
     be4:	a6 dd       	rcall	.-1204   	; 0x732 <forwardJaa>
     be6:	6d 2f       	mov	r22, r29
     be8:	8d 2f       	mov	r24, r29
     bea:	81 70       	andi	r24, 0x01	; 1
     bec:	8d df       	rcall	.-230    	; 0xb08 <swapMan>
     bee:	d1 30       	cpi	r29, 0x01	; 1
     bf0:	11 f0       	breq	.+4      	; 0xbf6 <travel+0x42>
     bf2:	d4 30       	cpi	r29, 0x04	; 4
     bf4:	11 f4       	brne	.+4      	; 0xbfa <travel+0x46>
     bf6:	c9 dd       	rcall	.-1134   	; 0x78a <nodeRight>
     bf8:	1c c0       	rjmp	.+56     	; 0xc32 <travel+0x7e>
     bfa:	cd dd       	rcall	.-1126   	; 0x796 <nodeLeft>
     bfc:	1a c0       	rjmp	.+52     	; 0xc32 <travel+0x7e>
     bfe:	c2 30       	cpi	r28, 0x02	; 2
     c00:	29 f4       	brne	.+10     	; 0xc0c <travel+0x58>
     c02:	8d ef       	ldi	r24, 0xFD	; 253
     c04:	8d 0f       	add	r24, r29
     c06:	82 30       	cpi	r24, 0x02	; 2
     c08:	a0 f4       	brcc	.+40     	; 0xc32 <travel+0x7e>
     c0a:	06 c0       	rjmp	.+12     	; 0xc18 <travel+0x64>
     c0c:	c3 30       	cpi	r28, 0x03	; 3
     c0e:	89 f4       	brne	.+34     	; 0xc32 <travel+0x7e>
     c10:	8f ef       	ldi	r24, 0xFF	; 255
     c12:	8d 0f       	add	r24, r29
     c14:	82 30       	cpi	r24, 0x02	; 2
     c16:	68 f4       	brcc	.+26     	; 0xc32 <travel+0x7e>
     c18:	b8 dd       	rcall	.-1168   	; 0x78a <nodeRight>
     c1a:	8b dd       	rcall	.-1258   	; 0x732 <forwardJaa>
     c1c:	8a dd       	rcall	.-1260   	; 0x732 <forwardJaa>
     c1e:	6d 2f       	mov	r22, r29
     c20:	8d 2f       	mov	r24, r29
     c22:	81 70       	andi	r24, 0x01	; 1
     c24:	71 df       	rcall	.-286    	; 0xb08 <swapMan>
     c26:	d2 50       	subi	r29, 0x02	; 2
     c28:	d2 30       	cpi	r29, 0x02	; 2
     c2a:	10 f4       	brcc	.+4      	; 0xc30 <travel+0x7c>
     c2c:	b4 dd       	rcall	.-1176   	; 0x796 <nodeLeft>
     c2e:	01 c0       	rjmp	.+2      	; 0xc32 <travel+0x7e>
     c30:	ac dd       	rcall	.-1192   	; 0x78a <nodeRight>
     c32:	7f dd       	rcall	.-1282   	; 0x732 <forwardJaa>
     c34:	f5 db       	rcall	.-2070   	; 0x420 <stop>
     c36:	f4 db       	rcall	.-2072   	; 0x420 <stop>
     c38:	b4 dd       	rcall	.-1176   	; 0x7a2 <buzzer>
     c3a:	df 91       	pop	r29
     c3c:	cf 91       	pop	r28
     c3e:	08 95       	ret

00000c40 <counter>:
     c40:	b9 dd       	rcall	.-1166   	; 0x7b4 <adjC>
     c42:	10 92 3b 02 	sts	0x023B, r1
     c46:	10 92 3a 02 	sts	0x023A, r1
     c4a:	90 91 00 02 	lds	r25, 0x0200
     c4e:	29 2f       	mov	r18, r25
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	f9 01       	movw	r30, r18
     c54:	ee 0f       	add	r30, r30
     c56:	ff 1f       	adc	r31, r31
     c58:	e5 5f       	subi	r30, 0xF5	; 245
     c5a:	fd 4f       	sbci	r31, 0xFD	; 253
     c5c:	40 81       	ld	r20, Z
     c5e:	e4 2f       	mov	r30, r20
     c60:	f0 e0       	ldi	r31, 0x00	; 0
     c62:	ea 5f       	subi	r30, 0xFA	; 250
     c64:	fd 4f       	sbci	r31, 0xFD	; 253
     c66:	50 81       	ld	r21, Z
     c68:	58 13       	cpse	r21, r24
     c6a:	04 c0       	rjmp	.+8      	; 0xc74 <counter+0x34>
     c6c:	41 e0       	ldi	r20, 0x01	; 1
     c6e:	40 93 3b 02 	sts	0x023B, r20
     c72:	07 c0       	rjmp	.+14     	; 0xc82 <counter+0x42>
     c74:	44 23       	and	r20, r20
     c76:	29 f0       	breq	.+10     	; 0xc82 <counter+0x42>
     c78:	95 17       	cp	r25, r21
     c7a:	19 f0       	breq	.+6      	; 0xc82 <counter+0x42>
     c7c:	41 e0       	ldi	r20, 0x01	; 1
     c7e:	40 93 3a 02 	sts	0x023A, r20
     c82:	f9 01       	movw	r30, r18
     c84:	ee 0f       	add	r30, r30
     c86:	ff 1f       	adc	r31, r31
     c88:	e5 5f       	subi	r30, 0xF5	; 245
     c8a:	fd 4f       	sbci	r31, 0xFD	; 253
     c8c:	21 81       	ldd	r18, Z+1	; 0x01
     c8e:	e2 2f       	mov	r30, r18
     c90:	f0 e0       	ldi	r31, 0x00	; 0
     c92:	ea 5f       	subi	r30, 0xFA	; 250
     c94:	fd 4f       	sbci	r31, 0xFD	; 253
     c96:	30 81       	ld	r19, Z
     c98:	38 13       	cpse	r19, r24
     c9a:	06 c0       	rjmp	.+12     	; 0xca8 <counter+0x68>
     c9c:	80 91 3b 02 	lds	r24, 0x023B
     ca0:	8f 5f       	subi	r24, 0xFF	; 255
     ca2:	80 93 3b 02 	sts	0x023B, r24
     ca6:	08 95       	ret
     ca8:	22 23       	and	r18, r18
     caa:	39 f0       	breq	.+14     	; 0xcba <counter+0x7a>
     cac:	93 17       	cp	r25, r19
     cae:	29 f0       	breq	.+10     	; 0xcba <counter+0x7a>
     cb0:	80 91 3a 02 	lds	r24, 0x023A
     cb4:	8f 5f       	subi	r24, 0xFF	; 255
     cb6:	80 93 3a 02 	sts	0x023A, r24
     cba:	08 95       	ret

00000cbc <unvisited>:
     cbc:	81 e0       	ldi	r24, 0x01	; 1
     cbe:	80 93 68 02 	sts	0x0268, r24
     cc2:	80 91 3f 02 	lds	r24, 0x023F
     cc6:	81 11       	cpse	r24, r1
     cc8:	10 c0       	rjmp	.+32     	; 0xcea <unvisited+0x2e>
     cca:	0d c0       	rjmp	.+26     	; 0xce6 <unvisited+0x2a>
     ccc:	82 e0       	ldi	r24, 0x02	; 2
     cce:	03 c0       	rjmp	.+6      	; 0xcd6 <unvisited+0x1a>
     cd0:	83 e0       	ldi	r24, 0x03	; 3
     cd2:	01 c0       	rjmp	.+2      	; 0xcd6 <unvisited+0x1a>
     cd4:	84 e0       	ldi	r24, 0x04	; 4
     cd6:	80 93 68 02 	sts	0x0268, r24
     cda:	08 95       	ret
     cdc:	85 e0       	ldi	r24, 0x05	; 5
     cde:	80 93 68 02 	sts	0x0268, r24
     ce2:	80 e0       	ldi	r24, 0x00	; 0
     ce4:	08 95       	ret
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	08 95       	ret
     cea:	80 91 40 02 	lds	r24, 0x0240
     cee:	88 23       	and	r24, r24
     cf0:	69 f3       	breq	.-38     	; 0xccc <unvisited+0x10>
     cf2:	80 91 41 02 	lds	r24, 0x0241
     cf6:	88 23       	and	r24, r24
     cf8:	59 f3       	breq	.-42     	; 0xcd0 <unvisited+0x14>
     cfa:	80 91 42 02 	lds	r24, 0x0242
     cfe:	81 11       	cpse	r24, r1
     d00:	ed cf       	rjmp	.-38     	; 0xcdc <unvisited+0x20>
     d02:	e8 cf       	rjmp	.-48     	; 0xcd4 <unvisited+0x18>

00000d04 <goBack>:
}

void goBack()
{
	if(Center_white_line>40)
     d04:	80 91 6f 02 	lds	r24, 0x026F
     d08:	89 32       	cpi	r24, 0x29	; 41
     d0a:	18 f0       	brcs	.+6      	; 0xd12 <goBack+0xe>
	{	
		back();
     d0c:	80 db       	rcall	.-2304   	; 0x40e <back>
		set_color();
     d0e:	d4 cc       	rjmp	.-1624   	; 0x6b8 <set_color>
     d10:	08 95       	ret
		while(Center_white_line>40 && (Left_white_line>40 || Right_white_line>40))
		{	return;}
	}
	else
	{
		noNatak();
     d12:	0c dd       	rcall	.-1512   	; 0x72c <noNatak>
		goBack();
     d14:	f7 cf       	rjmp	.-18     	; 0xd04 <goBack>
     d16:	08 95       	ret

00000d18 <checkForCompletion>:
	}
}


unsigned char checkForCompletion()
{
     d18:	cf 93       	push	r28
     d1a:	df 93       	push	r29
	for(i=1;i<5;i++)
     d1c:	81 e0       	ldi	r24, 0x01	; 1
     d1e:	80 93 68 02 	sts	0x0268, r24
		if(term[i][0]==indi[i] && term[i][1]==indi[i]);
     d22:	80 91 0d 02 	lds	r24, 0x020D
     d26:	90 91 07 02 	lds	r25, 0x0207
     d2a:	89 13       	cpse	r24, r25
     d2c:	22 c0       	rjmp	.+68     	; 0xd72 <checkForCompletion+0x5a>
     d2e:	90 91 0e 02 	lds	r25, 0x020E
     d32:	89 17       	cp	r24, r25
     d34:	01 f1       	breq	.+64     	; 0xd76 <checkForCompletion+0x5e>
		else
			return 0;
     d36:	80 e0       	ldi	r24, 0x00	; 0
     d38:	25 c0       	rjmp	.+74     	; 0xd84 <checkForCompletion+0x6c>
}


unsigned char checkForCompletion()
{
	for(i=1;i<5;i++)
     d3a:	39 2f       	mov	r19, r25
     d3c:	98 2f       	mov	r25, r24
     d3e:	ef 01       	movw	r28, r30
     d40:	21 97       	sbiw	r28, 0x01	; 1
		if(term[i][0]==indi[i] && term[i][1]==indi[i]);
     d42:	88 81       	ld	r24, Y
     d44:	2d 91       	ld	r18, X+
     d46:	82 17       	cp	r24, r18
     d48:	21 f0       	breq	.+8      	; 0xd52 <checkForCompletion+0x3a>
     d4a:	30 93 68 02 	sts	0x0268, r19
		else
			return 0;
     d4e:	80 e0       	ldi	r24, 0x00	; 0
     d50:	19 c0       	rjmp	.+50     	; 0xd84 <checkForCompletion+0x6c>


unsigned char checkForCompletion()
{
	for(i=1;i<5;i++)
		if(term[i][0]==indi[i] && term[i][1]==indi[i]);
     d52:	20 81       	ld	r18, Z
     d54:	82 17       	cp	r24, r18
     d56:	21 f0       	breq	.+8      	; 0xd60 <checkForCompletion+0x48>
     d58:	30 93 68 02 	sts	0x0268, r19
		else
			return 0;
     d5c:	80 e0       	ldi	r24, 0x00	; 0
     d5e:	12 c0       	rjmp	.+36     	; 0xd84 <checkForCompletion+0x6c>
     d60:	81 e0       	ldi	r24, 0x01	; 1
     d62:	89 0f       	add	r24, r25
     d64:	32 96       	adiw	r30, 0x02	; 2
}


unsigned char checkForCompletion()
{
	for(i=1;i<5;i++)
     d66:	86 30       	cpi	r24, 0x06	; 6
     d68:	41 f7       	brne	.-48     	; 0xd3a <checkForCompletion+0x22>
     d6a:	90 93 68 02 	sts	0x0268, r25
		if(term[i][0]==indi[i] && term[i][1]==indi[i]);
		else
			return 0;
	return 1;
     d6e:	81 e0       	ldi	r24, 0x01	; 1
     d70:	09 c0       	rjmp	.+18     	; 0xd84 <checkForCompletion+0x6c>
unsigned char checkForCompletion()
{
	for(i=1;i<5;i++)
		if(term[i][0]==indi[i] && term[i][1]==indi[i]);
		else
			return 0;
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	07 c0       	rjmp	.+14     	; 0xd84 <checkForCompletion+0x6c>
     d76:	a8 e0       	ldi	r26, 0x08	; 8
     d78:	b2 e0       	ldi	r27, 0x02	; 2
     d7a:	e0 e1       	ldi	r30, 0x10	; 16
     d7c:	f2 e0       	ldi	r31, 0x02	; 2
}


unsigned char checkForCompletion()
{
	for(i=1;i<5;i++)
     d7e:	93 e0       	ldi	r25, 0x03	; 3
     d80:	32 e0       	ldi	r19, 0x02	; 2
     d82:	dd cf       	rjmp	.-70     	; 0xd3e <checkForCompletion+0x26>
		if(term[i][0]==indi[i] && term[i][1]==indi[i]);
		else
			return 0;
	return 1;
}
     d84:	df 91       	pop	r29
     d86:	cf 91       	pop	r28
     d88:	08 95       	ret

00000d8a <colorCalc>:
//SORTMAN
//MAIN SORTING FUNCTION
//R-0 L-1
int colorCalc()
{
	red_read();
     d8a:	d3 db       	rcall	.-2138   	; 0x532 <red_read>
	blue_read();
     d8c:	54 dc       	rcall	.-1880   	; 0x636 <blue_read>
	green_read();
     d8e:	12 dc       	rcall	.-2012   	; 0x5b4 <green_read>
	if(!(red>threshold && green>threshold && blue>threshold))
     d90:	80 91 05 02 	lds	r24, 0x0205
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	a0 e0       	ldi	r26, 0x00	; 0
     d98:	b0 e0       	ldi	r27, 0x00	; 0
     d9a:	40 91 62 02 	lds	r20, 0x0262
     d9e:	50 91 63 02 	lds	r21, 0x0263
     da2:	60 91 64 02 	lds	r22, 0x0264
     da6:	70 91 65 02 	lds	r23, 0x0265
     daa:	84 17       	cp	r24, r20
     dac:	95 07       	cpc	r25, r21
     dae:	a6 07       	cpc	r26, r22
     db0:	b7 07       	cpc	r27, r23
     db2:	d0 f4       	brcc	.+52     	; 0xde8 <colorCalc+0x5e>
     db4:	40 91 5e 02 	lds	r20, 0x025E
     db8:	50 91 5f 02 	lds	r21, 0x025F
     dbc:	60 91 60 02 	lds	r22, 0x0260
     dc0:	70 91 61 02 	lds	r23, 0x0261
     dc4:	84 17       	cp	r24, r20
     dc6:	95 07       	cpc	r25, r21
     dc8:	a6 07       	cpc	r26, r22
     dca:	b7 07       	cpc	r27, r23
     dcc:	68 f4       	brcc	.+26     	; 0xde8 <colorCalc+0x5e>
     dce:	40 91 51 02 	lds	r20, 0x0251
     dd2:	50 91 52 02 	lds	r21, 0x0252
     dd6:	60 91 53 02 	lds	r22, 0x0253
     dda:	70 91 54 02 	lds	r23, 0x0254
     dde:	84 17       	cp	r24, r20
     de0:	95 07       	cpc	r25, r21
     de2:	a6 07       	cpc	r26, r22
     de4:	b7 07       	cpc	r27, r23
     de6:	20 f0       	brcs	.+8      	; 0xdf0 <colorCalc+0x66>
	return BLACK;
     de8:	80 91 01 02 	lds	r24, 0x0201
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	08 95       	ret
	else
	{
		if(red>blue)
     df0:	40 91 62 02 	lds	r20, 0x0262
     df4:	50 91 63 02 	lds	r21, 0x0263
     df8:	60 91 64 02 	lds	r22, 0x0264
     dfc:	70 91 65 02 	lds	r23, 0x0265
     e00:	80 91 51 02 	lds	r24, 0x0251
     e04:	90 91 52 02 	lds	r25, 0x0252
     e08:	a0 91 53 02 	lds	r26, 0x0253
     e0c:	b0 91 54 02 	lds	r27, 0x0254
     e10:	84 17       	cp	r24, r20
     e12:	95 07       	cpc	r25, r21
     e14:	a6 07       	cpc	r26, r22
     e16:	b7 07       	cpc	r27, r23
     e18:	e8 f4       	brcc	.+58     	; 0xe54 <colorCalc+0xca>
		{
			if(red>green)
     e1a:	40 91 62 02 	lds	r20, 0x0262
     e1e:	50 91 63 02 	lds	r21, 0x0263
     e22:	60 91 64 02 	lds	r22, 0x0264
     e26:	70 91 65 02 	lds	r23, 0x0265
     e2a:	80 91 5e 02 	lds	r24, 0x025E
     e2e:	90 91 5f 02 	lds	r25, 0x025F
     e32:	a0 91 60 02 	lds	r26, 0x0260
     e36:	b0 91 61 02 	lds	r27, 0x0261
     e3a:	84 17       	cp	r24, r20
     e3c:	95 07       	cpc	r25, r21
     e3e:	a6 07       	cpc	r26, r22
     e40:	b7 07       	cpc	r27, r23
     e42:	20 f4       	brcc	.+8      	; 0xe4c <colorCalc+0xc2>
			return RED;
     e44:	80 91 04 02 	lds	r24, 0x0204
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	08 95       	ret
			else
			return GREEN;
     e4c:	80 91 03 02 	lds	r24, 0x0203
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	08 95       	ret
		}
		else if(blue>green)
     e54:	40 91 51 02 	lds	r20, 0x0251
     e58:	50 91 52 02 	lds	r21, 0x0252
     e5c:	60 91 53 02 	lds	r22, 0x0253
     e60:	70 91 54 02 	lds	r23, 0x0254
     e64:	80 91 5e 02 	lds	r24, 0x025E
     e68:	90 91 5f 02 	lds	r25, 0x025F
     e6c:	a0 91 60 02 	lds	r26, 0x0260
     e70:	b0 91 61 02 	lds	r27, 0x0261
     e74:	84 17       	cp	r24, r20
     e76:	95 07       	cpc	r25, r21
     e78:	a6 07       	cpc	r26, r22
     e7a:	b7 07       	cpc	r27, r23
     e7c:	20 f4       	brcc	.+8      	; 0xe86 <colorCalc+0xfc>
		return BLUE;
     e7e:	80 91 02 02 	lds	r24, 0x0202
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	08 95       	ret
		else return GREEN;
     e86:	80 91 03 02 	lds	r24, 0x0203
     e8a:	90 e0       	ldi	r25, 0x00	; 0
	}
}
     e8c:	08 95       	ret

00000e8e <pick_color>:

int pick_color(unsigned char node)	//0 or 1
{
     e8e:	cf 93       	push	r28
     e90:	df 93       	push	r29
	//read_color();
	unsigned char color;
	if(node=0)
		nodeRight();
	else
		nodeLeft();
     e92:	81 dc       	rcall	.-1790   	; 0x796 <nodeLeft>
	color=colorCalc();
     e94:	7a df       	rcall	.-268    	; 0xd8a <colorCalc>
     e96:	ec 01       	movw	r28, r24
	if(node=1)
		nodeRight();
     e98:	78 dc       	rcall	.-1808   	; 0x78a <nodeRight>
	else
		nodeLeft();
	return color;
}
     e9a:	ce 01       	movw	r24, r28
     e9c:	99 27       	eor	r25, r25
     e9e:	df 91       	pop	r29
     ea0:	cf 91       	pop	r28
     ea2:	08 95       	ret

00000ea4 <termPick>:
void termPick()
{
	pick_color(0);
     ea4:	80 e0       	ldi	r24, 0x00	; 0
     ea6:	f3 df       	rcall	.-26     	; 0xe8e <pick_color>
	lcd_print(2,1,term[CT][0],1);
     ea8:	e0 91 00 02 	lds	r30, 0x0200
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	ee 0f       	add	r30, r30
     eb0:	ff 1f       	adc	r31, r31
     eb2:	e5 5f       	subi	r30, 0xF5	; 245
     eb4:	fd 4f       	sbci	r31, 0xFD	; 253
     eb6:	40 81       	ld	r20, Z
     eb8:	50 e0       	ldi	r21, 0x00	; 0
     eba:	21 e0       	ldi	r18, 0x01	; 1
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	61 e0       	ldi	r22, 0x01	; 1
     ec0:	82 e0       	ldi	r24, 0x02	; 2
     ec2:	a8 d9       	rcall	.-3248   	; 0x214 <lcd_print>
	pick_color(1);
     ec4:	81 e0       	ldi	r24, 0x01	; 1
     ec6:	e3 df       	rcall	.-58     	; 0xe8e <pick_color>
	visited[CT]=1;
     ec8:	e0 91 00 02 	lds	r30, 0x0200
     ecc:	f0 e0       	ldi	r31, 0x00	; 0
     ece:	e2 5c       	subi	r30, 0xC2	; 194
     ed0:	fd 4f       	sbci	r31, 0xFD	; 253
     ed2:	81 e0       	ldi	r24, 0x01	; 1
     ed4:	80 83       	st	Z, r24
     ed6:	08 95       	ret

00000ed8 <sortFree>:
			}
		}
	}
}
void sortFree()
{
     ed8:	ff 92       	push	r15
     eda:	0f 93       	push	r16
     edc:	1f 93       	push	r17
     ede:	cf 93       	push	r28
     ee0:	df 93       	push	r29
	unsigned char adj=adjC();
     ee2:	68 dc       	rcall	.-1840   	; 0x7b4 <adjC>
     ee4:	18 2f       	mov	r17, r24
	unsigned char pFar=(term[CT][0]==indi[adj]);		//wont work for empty node
     ee6:	20 91 00 02 	lds	r18, 0x0200
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	f9 01       	movw	r30, r18
     eee:	ee 0f       	add	r30, r30
     ef0:	ff 1f       	adc	r31, r31
     ef2:	e5 5f       	subi	r30, 0xF5	; 245
     ef4:	fd 4f       	sbci	r31, 0xFD	; 253
     ef6:	f0 80       	ld	r15, Z
     ef8:	c8 2f       	mov	r28, r24
     efa:	d0 e0       	ldi	r29, 0x00	; 0
     efc:	fe 01       	movw	r30, r28
     efe:	ea 5f       	subi	r30, 0xFA	; 250
     f00:	fd 4f       	sbci	r31, 0xFD	; 253
     f02:	00 81       	ld	r16, Z
	unsigned char nxTerm=0;
	if(visited[CT]==0)
     f04:	f9 01       	movw	r30, r18
     f06:	e2 5c       	subi	r30, 0xC2	; 194
     f08:	fd 4f       	sbci	r31, 0xFD	; 253
     f0a:	80 81       	ld	r24, Z
     f0c:	81 11       	cpse	r24, r1
     f0e:	01 c0       	rjmp	.+2      	; 0xf12 <sortFree+0x3a>
		//termPick();
	counter();
     f10:	97 de       	rcall	.-722    	; 0xc40 <counter>
	if(farCount==2)
     f12:	80 91 3a 02 	lds	r24, 0x023A
     f16:	82 30       	cpi	r24, 0x02	; 2
     f18:	39 f4       	brne	.+14     	; 0xf28 <sortFree+0x50>
	{
		nxTerm=indi[arm[0]];
     f1a:	e0 91 3c 02 	lds	r30, 0x023C
     f1e:	f0 e0       	ldi	r31, 0x00	; 0
     f20:	ea 5f       	subi	r30, 0xFA	; 250
     f22:	fd 4f       	sbci	r31, 0xFD	; 253
     f24:	10 81       	ld	r17, Z
     f26:	23 c0       	rjmp	.+70     	; 0xf6e <sortFree+0x96>
		//SchDropAtSort(nxTerm);
	}
	else if(adjCount==1)
     f28:	90 91 3b 02 	lds	r25, 0x023B
     f2c:	91 30       	cpi	r25, 0x01	; 1
     f2e:	f9 f0       	breq	.+62     	; 0xf6e <sortFree+0x96>
		else	//1 empty block
		{
			nxTerm=adj;
		}
	}
	else if(farCount==1)
     f30:	81 30       	cpi	r24, 0x01	; 1
     f32:	a1 f4       	brne	.+40     	; 0xf5c <sortFree+0x84>
			nxTerm=adj;
			//SchDropAtSort(nxTerm);
		}
		else	//1 empty block
		{
			if(visited[adj]==0)
     f34:	c2 5c       	subi	r28, 0xC2	; 194
     f36:	dd 4f       	sbci	r29, 0xFD	; 253
     f38:	88 81       	ld	r24, Y
     f3a:	88 23       	and	r24, r24
     f3c:	c1 f0       	breq	.+48     	; 0xf6e <sortFree+0x96>
	}
}
void sortFree()
{
	unsigned char adj=adjC();
	unsigned char pFar=(term[CT][0]==indi[adj]);		//wont work for empty node
     f3e:	81 e0       	ldi	r24, 0x01	; 1
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	f0 16       	cp	r15, r16
     f44:	11 f0       	breq	.+4      	; 0xf4a <sortFree+0x72>
     f46:	80 e0       	ldi	r24, 0x00	; 0
     f48:	90 e0       	ldi	r25, 0x00	; 0
			{
				nxTerm=adj;
				//SchDropAtSort(nxTerm);
			}
			else
				nxTerm=indi[arm[pFar]];
     f4a:	fc 01       	movw	r30, r24
     f4c:	e4 5c       	subi	r30, 0xC4	; 196
     f4e:	fd 4f       	sbci	r31, 0xFD	; 253
     f50:	e0 81       	ld	r30, Z
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	ea 5f       	subi	r30, 0xFA	; 250
     f56:	fd 4f       	sbci	r31, 0xFD	; 253
     f58:	10 81       	ld	r17, Z
     f5a:	09 c0       	rjmp	.+18     	; 0xf6e <sortFree+0x96>
				
		}
	}
	else if(adjCount==2)
     f5c:	92 30       	cpi	r25, 0x02	; 2
     f5e:	39 f0       	breq	.+14     	; 0xf6e <sortFree+0x96>
		nxTerm=adj;
		//SchDropAtSort(nxTerm);
	}
	else	//empty term
	{
		if(visited[adj]==0)
     f60:	c2 5c       	subi	r28, 0xC2	; 194
     f62:	dd 4f       	sbci	r29, 0xFD	; 253
     f64:	88 81       	ld	r24, Y
     f66:	88 23       	and	r24, r24
     f68:	11 f0       	breq	.+4      	; 0xf6e <sortFree+0x96>
			nxTerm=adj;
		else
			nxTerm=unvisited();
     f6a:	a8 de       	rcall	.-688    	; 0xcbc <unvisited>
     f6c:	18 2f       	mov	r17, r24
	}
	if(arm[0]==0 && arm[1]==0)
     f6e:	80 91 3c 02 	lds	r24, 0x023C
     f72:	81 11       	cpse	r24, r1
     f74:	10 c0       	rjmp	.+32     	; 0xf96 <sortFree+0xbe>
     f76:	80 91 3d 02 	lds	r24, 0x023D
     f7a:	81 11       	cpse	r24, r1
     f7c:	0c c0       	rjmp	.+24     	; 0xf96 <sortFree+0xbe>
	{
		travel(CT,nxTerm);
     f7e:	61 2f       	mov	r22, r17
     f80:	80 91 00 02 	lds	r24, 0x0200
     f84:	17 de       	rcall	.-978    	; 0xbb4 <travel>
		pickup(0,0);
     f86:	60 e0       	ldi	r22, 0x00	; 0
     f88:	80 e0       	ldi	r24, 0x00	; 0
     f8a:	71 dc       	rcall	.-1822   	; 0x86e <pickup>
		pickup(1,0);
     f8c:	60 e0       	ldi	r22, 0x00	; 0
     f8e:	81 e0       	ldi	r24, 0x01	; 1
     f90:	6e dc       	rcall	.-1828   	; 0x86e <pickup>
		sortFree();
     f92:	a2 df       	rcall	.-188    	; 0xed8 <sortFree>
     f94:	05 c0       	rjmp	.+10     	; 0xfa0 <sortFree+0xc8>
	}
	else
	{
		travel(CT,nxTerm);
     f96:	61 2f       	mov	r22, r17
     f98:	80 91 00 02 	lds	r24, 0x0200
     f9c:	0b de       	rcall	.-1002   	; 0xbb4 <travel>
		sortMan();
     f9e:	06 d0       	rcall	.+12     	; 0xfac <sortMan>
	}
}
     fa0:	df 91       	pop	r29
     fa2:	cf 91       	pop	r28
     fa4:	1f 91       	pop	r17
     fa6:	0f 91       	pop	r16
     fa8:	ff 90       	pop	r15
     faa:	08 95       	ret

00000fac <sortMan>:
	lcd_print(2,1,term[CT][0],1);
	pick_color(1);
	visited[CT]=1;
}
void sortMan()
{
     fac:	0f 93       	push	r16
     fae:	1f 93       	push	r17
     fb0:	cf 93       	push	r28
     fb2:	df 93       	push	r29
	unsigned char nxTerm=0;
	unsigned char adj=adjC();
     fb4:	ff db       	rcall	.-2050   	; 0x7b4 <adjC>
     fb6:	18 2f       	mov	r17, r24
	if(visited[CT]==0)
     fb8:	e0 91 00 02 	lds	r30, 0x0200
     fbc:	f0 e0       	ldi	r31, 0x00	; 0
     fbe:	e2 5c       	subi	r30, 0xC2	; 194
     fc0:	fd 4f       	sbci	r31, 0xFD	; 253
     fc2:	80 81       	ld	r24, Z
     fc4:	81 11       	cpse	r24, r1
     fc6:	01 c0       	rjmp	.+2      	; 0xfca <sortMan+0x1e>
		termPick();
     fc8:	6d df       	rcall	.-294    	; 0xea4 <termPick>
	counter();
     fca:	3a de       	rcall	.-908    	; 0xc40 <counter>
	unsigned char pSwap=((CT==2||CT==3)?1:0);
     fcc:	80 91 00 02 	lds	r24, 0x0200
	unsigned char pFar=(term[CT][0]==indi[adj]);		//wont work for empty node
     fd0:	28 2f       	mov	r18, r24
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	f9 01       	movw	r30, r18
     fd6:	ee 0f       	add	r30, r30
     fd8:	ff 1f       	adc	r31, r31
     fda:	e5 5f       	subi	r30, 0xF5	; 245
     fdc:	fd 4f       	sbci	r31, 0xFD	; 253
     fde:	60 81       	ld	r22, Z
     fe0:	41 2f       	mov	r20, r17
     fe2:	50 e0       	ldi	r21, 0x00	; 0
     fe4:	fa 01       	movw	r30, r20
     fe6:	ea 5f       	subi	r30, 0xFA	; 250
     fe8:	fd 4f       	sbci	r31, 0xFD	; 253
     fea:	a0 81       	ld	r26, Z
     fec:	91 e0       	ldi	r25, 0x01	; 1
     fee:	6a 13       	cpse	r22, r26
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	09 2f       	mov	r16, r25
	if(swap[CT%2]==indi[CT])
     ff4:	78 2f       	mov	r23, r24
     ff6:	71 70       	andi	r23, 0x01	; 1
     ff8:	c7 2f       	mov	r28, r23
     ffa:	70 e0       	ldi	r23, 0x00	; 0
     ffc:	d7 2f       	mov	r29, r23
     ffe:	cd 5b       	subi	r28, 0xBD	; 189
    1000:	dd 4f       	sbci	r29, 0xFD	; 253
    1002:	78 81       	ld	r23, Y
    1004:	f9 01       	movw	r30, r18
    1006:	ea 5f       	subi	r30, 0xFA	; 250
    1008:	fd 4f       	sbci	r31, 0xFD	; 253
    100a:	e0 81       	ld	r30, Z
    100c:	7e 13       	cpse	r23, r30
    100e:	c6 c0       	rjmp	.+396    	; 0x119c <sortMan+0x1f0>
	unsigned char nxTerm=0;
	unsigned char adj=adjC();
	if(visited[CT]==0)
		termPick();
	counter();
	unsigned char pSwap=((CT==2||CT==3)?1:0);
    1010:	82 50       	subi	r24, 0x02	; 2
    1012:	c1 e0       	ldi	r28, 0x01	; 1
    1014:	82 30       	cpi	r24, 0x02	; 2
    1016:	08 f0       	brcs	.+2      	; 0x101a <sortMan+0x6e>
    1018:	c0 e0       	ldi	r28, 0x00	; 0
	unsigned char pFar=(term[CT][0]==indi[adj]);		//wont work for empty node
	if(swap[CT%2]==indi[CT])
	{
		if(farCount==2)
    101a:	80 91 3a 02 	lds	r24, 0x023A
    101e:	82 30       	cpi	r24, 0x02	; 2
    1020:	41 f5       	brne	.+80     	; 0x1072 <sortMan+0xc6>
		{
			if(term[CT][0]==term[CT][1])
    1022:	f9 01       	movw	r30, r18
    1024:	ee 0f       	add	r30, r30
    1026:	ff 1f       	adc	r31, r31
    1028:	e5 5f       	subi	r30, 0xF5	; 245
    102a:	fd 4f       	sbci	r31, 0xFD	; 253
    102c:	81 81       	ldd	r24, Z+1	; 0x01
    102e:	68 13       	cpse	r22, r24
    1030:	06 c0       	rjmp	.+12     	; 0x103e <sortMan+0x92>
				nxTerm=indi[term[CT][0]]; //the common terminal
    1032:	e6 2f       	mov	r30, r22
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	ea 5f       	subi	r30, 0xFA	; 250
    1038:	fd 4f       	sbci	r31, 0xFD	; 253
    103a:	10 81       	ld	r17, Z
    103c:	9b c0       	rjmp	.+310    	; 0x1174 <sortMan+0x1c8>
			else	//both diff of far
			{
				nxTerm=indi[term[CT][0]];
    103e:	e6 2f       	mov	r30, r22
    1040:	f0 e0       	ldi	r31, 0x00	; 0
    1042:	ea 5f       	subi	r30, 0xFA	; 250
    1044:	fd 4f       	sbci	r31, 0xFD	; 253
    1046:	10 81       	ld	r17, Z
				pickup(0,0);
    1048:	60 e0       	ldi	r22, 0x00	; 0
    104a:	80 e0       	ldi	r24, 0x00	; 0
    104c:	10 dc       	rcall	.-2016   	; 0x86e <pickup>
				drop(0,0);
    104e:	60 e0       	ldi	r22, 0x00	; 0
    1050:	80 e0       	ldi	r24, 0x00	; 0
    1052:	b6 dc       	rcall	.-1684   	; 0x9c0 <drop>
}


void gotoSort()
{
	forwardJaa();
    1054:	6e db       	rcall	.-2340   	; 0x732 <forwardJaa>
			{
				nxTerm=indi[term[CT][0]];
				pickup(0,0);
				drop(0,0);
				gotoSort();
				pickup(pSwap,1);
    1056:	61 e0       	ldi	r22, 0x01	; 1
    1058:	8c 2f       	mov	r24, r28
    105a:	09 dc       	rcall	.-2030   	; 0x86e <pickup>
				drop(pSwap,1);
    105c:	61 e0       	ldi	r22, 0x01	; 1
    105e:	8c 2f       	mov	r24, r28
    1060:	af dc       	rcall	.-1698   	; 0x9c0 <drop>
				goBack();
    1062:	50 de       	rcall	.-864    	; 0xd04 <goBack>
				pickup(1,0);
    1064:	60 e0       	ldi	r22, 0x00	; 0
    1066:	81 e0       	ldi	r24, 0x01	; 1
    1068:	02 dc       	rcall	.-2044   	; 0x86e <pickup>
				drop(1,0);
    106a:	60 e0       	ldi	r22, 0x00	; 0
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	a8 dc       	rcall	.-1712   	; 0x9c0 <drop>
    1070:	81 c0       	rjmp	.+258    	; 0x1174 <sortMan+0x1c8>
				//SchPickupAtSort	//CT
				//SchDropAtSort		//far
			}
		}
		else if(farCount==1)
    1072:	81 30       	cpi	r24, 0x01	; 1
    1074:	09 f0       	breq	.+2      	; 0x1078 <sortMan+0xcc>
    1076:	50 c0       	rjmp	.+160    	; 0x1118 <sortMan+0x16c>
		{
			if(adjCount==1)
    1078:	80 91 3b 02 	lds	r24, 0x023B
    107c:	81 30       	cpi	r24, 0x01	; 1
    107e:	c1 f4       	brne	.+48     	; 0x10b0 <sortMan+0x104>
			{
				nxTerm=adj;
				pickup(pFar,0);
    1080:	60 e0       	ldi	r22, 0x00	; 0
    1082:	80 2f       	mov	r24, r16
    1084:	f4 db       	rcall	.-2072   	; 0x86e <pickup>
				drop(pFar,0);
    1086:	60 e0       	ldi	r22, 0x00	; 0
    1088:	80 2f       	mov	r24, r16
    108a:	9a dc       	rcall	.-1740   	; 0x9c0 <drop>
}


void gotoSort()
{
	forwardJaa();
    108c:	52 db       	rcall	.-2396   	; 0x732 <forwardJaa>
			{
				nxTerm=adj;
				pickup(pFar,0);
				drop(pFar,0);
				gotoSort();
				pickup(pSwap,1);
    108e:	61 e0       	ldi	r22, 0x01	; 1
    1090:	8c 2f       	mov	r24, r28
    1092:	ed db       	rcall	.-2086   	; 0x86e <pickup>
				drop(pSwap,1);
    1094:	61 e0       	ldi	r22, 0x01	; 1
    1096:	8c 2f       	mov	r24, r28
    1098:	93 dc       	rcall	.-1754   	; 0x9c0 <drop>
				goBack();
    109a:	34 de       	rcall	.-920    	; 0xd04 <goBack>
				pickup(!pFar,0);
    109c:	c1 e0       	ldi	r28, 0x01	; 1
    109e:	01 11       	cpse	r16, r1
    10a0:	c0 e0       	ldi	r28, 0x00	; 0
    10a2:	60 e0       	ldi	r22, 0x00	; 0
    10a4:	8c 2f       	mov	r24, r28
    10a6:	e3 db       	rcall	.-2106   	; 0x86e <pickup>
				drop(!pFar,0);
    10a8:	60 e0       	ldi	r22, 0x00	; 0
    10aa:	8c 2f       	mov	r24, r28
    10ac:	89 dc       	rcall	.-1774   	; 0x9c0 <drop>
    10ae:	62 c0       	rjmp	.+196    	; 0x1174 <sortMan+0x1c8>
				//nothing to schedule
			}
			else
			{	//empty node
				//:O :O
				if(visited[adj]==0 || term[adj][0]!=indi[adj] || term[adj][1]!=indi[adj])
    10b0:	fa 01       	movw	r30, r20
    10b2:	e2 5c       	subi	r30, 0xC2	; 194
    10b4:	fd 4f       	sbci	r31, 0xFD	; 253
    10b6:	80 81       	ld	r24, Z
    10b8:	88 23       	and	r24, r24
    10ba:	09 f4       	brne	.+2      	; 0x10be <sortMan+0x112>
    10bc:	5b c0       	rjmp	.+182    	; 0x1174 <sortMan+0x1c8>
    10be:	fa 01       	movw	r30, r20
    10c0:	ee 0f       	add	r30, r30
    10c2:	ff 1f       	adc	r31, r31
    10c4:	e5 5f       	subi	r30, 0xF5	; 245
    10c6:	fd 4f       	sbci	r31, 0xFD	; 253
    10c8:	80 81       	ld	r24, Z
    10ca:	a8 13       	cpse	r26, r24
    10cc:	53 c0       	rjmp	.+166    	; 0x1174 <sortMan+0x1c8>
    10ce:	fa 01       	movw	r30, r20
    10d0:	ee 0f       	add	r30, r30
    10d2:	ff 1f       	adc	r31, r31
    10d4:	e5 5f       	subi	r30, 0xF5	; 245
    10d6:	fd 4f       	sbci	r31, 0xFD	; 253
    10d8:	81 81       	ldd	r24, Z+1	; 0x01
    10da:	a8 13       	cpse	r26, r24
    10dc:	4b c0       	rjmp	.+150    	; 0x1174 <sortMan+0x1c8>
					nxTerm=adj;
				
				else	//seq also usable for both empty
				{
					nxTerm=indi[term[CT][pFar]];
    10de:	22 0f       	add	r18, r18
    10e0:	33 1f       	adc	r19, r19
    10e2:	f9 01       	movw	r30, r18
    10e4:	e9 0f       	add	r30, r25
    10e6:	f1 1d       	adc	r31, r1
    10e8:	e5 5f       	subi	r30, 0xF5	; 245
    10ea:	fd 4f       	sbci	r31, 0xFD	; 253
    10ec:	e0 81       	ld	r30, Z
    10ee:	f0 e0       	ldi	r31, 0x00	; 0
    10f0:	ea 5f       	subi	r30, 0xFA	; 250
    10f2:	fd 4f       	sbci	r31, 0xFD	; 253
    10f4:	10 81       	ld	r17, Z
					pickup(pFar,0);
    10f6:	60 e0       	ldi	r22, 0x00	; 0
    10f8:	80 2f       	mov	r24, r16
    10fa:	b9 db       	rcall	.-2190   	; 0x86e <pickup>
					drop(pFar,0);
    10fc:	60 e0       	ldi	r22, 0x00	; 0
    10fe:	80 2f       	mov	r24, r16
    1100:	5f dc       	rcall	.-1858   	; 0x9c0 <drop>
}


void gotoSort()
{
	forwardJaa();
    1102:	17 db       	rcall	.-2514   	; 0x732 <forwardJaa>
				{
					nxTerm=indi[term[CT][pFar]];
					pickup(pFar,0);
					drop(pFar,0);
					gotoSort();
					pickup(pSwap,1);
    1104:	61 e0       	ldi	r22, 0x01	; 1
    1106:	8c 2f       	mov	r24, r28
    1108:	b2 db       	rcall	.-2204   	; 0x86e <pickup>
					goBack();
    110a:	fc dd       	rcall	.-1032   	; 0xd04 <goBack>
					drop(!pFar,0);
    110c:	81 e0       	ldi	r24, 0x01	; 1
    110e:	01 11       	cpse	r16, r1
    1110:	80 e0       	ldi	r24, 0x00	; 0
    1112:	60 e0       	ldi	r22, 0x00	; 0
    1114:	55 dc       	rcall	.-1878   	; 0x9c0 <drop>
    1116:	2e c0       	rjmp	.+92     	; 0x1174 <sortMan+0x1c8>
				}
			}
		}
		else if(adjCount==1)
    1118:	80 91 3b 02 	lds	r24, 0x023B
    111c:	81 30       	cpi	r24, 0x01	; 1
    111e:	91 f4       	brne	.+36     	; 0x1144 <sortMan+0x198>
				//nothing to schedule
			}
			else
			{
				//empty node
				drop(pFar,0);
    1120:	60 e0       	ldi	r22, 0x00	; 0
    1122:	80 2f       	mov	r24, r16
    1124:	4d dc       	rcall	.-1894   	; 0x9c0 <drop>
}


void gotoSort()
{
	forwardJaa();
    1126:	05 db       	rcall	.-2550   	; 0x732 <forwardJaa>
			else
			{
				//empty node
				drop(pFar,0);
				gotoSort();
				pickup(pSwap,1);
    1128:	61 e0       	ldi	r22, 0x01	; 1
    112a:	8c 2f       	mov	r24, r28
    112c:	a0 db       	rcall	.-2240   	; 0x86e <pickup>
				goBack();
    112e:	ea dd       	rcall	.-1068   	; 0xd04 <goBack>
				pickup(!pFar,0);
    1130:	c1 e0       	ldi	r28, 0x01	; 1
    1132:	01 11       	cpse	r16, r1
    1134:	c0 e0       	ldi	r28, 0x00	; 0
    1136:	60 e0       	ldi	r22, 0x00	; 0
    1138:	8c 2f       	mov	r24, r28
    113a:	99 db       	rcall	.-2254   	; 0x86e <pickup>
				drop(!pFar,0);
    113c:	60 e0       	ldi	r22, 0x00	; 0
    113e:	8c 2f       	mov	r24, r28
    1140:	3f dc       	rcall	.-1922   	; 0x9c0 <drop>
    1142:	18 c0       	rjmp	.+48     	; 0x1174 <sortMan+0x1c8>
				nxTerm=adj;
			}
		}
		else if(adjCount==2)
    1144:	82 30       	cpi	r24, 0x02	; 2
    1146:	a9 f4       	brne	.+42     	; 0x1172 <sortMan+0x1c6>
		{
			nxTerm=adj;
			pickup(0,0);
    1148:	60 e0       	ldi	r22, 0x00	; 0
    114a:	80 e0       	ldi	r24, 0x00	; 0
    114c:	90 db       	rcall	.-2272   	; 0x86e <pickup>
			drop(0,0);
    114e:	60 e0       	ldi	r22, 0x00	; 0
    1150:	80 e0       	ldi	r24, 0x00	; 0
    1152:	36 dc       	rcall	.-1940   	; 0x9c0 <drop>
}


void gotoSort()
{
	forwardJaa();
    1154:	ee da       	rcall	.-2596   	; 0x732 <forwardJaa>
		{
			nxTerm=adj;
			pickup(0,0);
			drop(0,0);
			gotoSort();
			pickup(pSwap,1);
    1156:	61 e0       	ldi	r22, 0x01	; 1
    1158:	8c 2f       	mov	r24, r28
    115a:	89 db       	rcall	.-2286   	; 0x86e <pickup>
			drop(pSwap,1);
    115c:	61 e0       	ldi	r22, 0x01	; 1
    115e:	8c 2f       	mov	r24, r28
    1160:	2f dc       	rcall	.-1954   	; 0x9c0 <drop>
			goBack();
    1162:	d0 dd       	rcall	.-1120   	; 0xd04 <goBack>
			pickup(1,0);
    1164:	60 e0       	ldi	r22, 0x00	; 0
    1166:	81 e0       	ldi	r24, 0x01	; 1
    1168:	82 db       	rcall	.-2300   	; 0x86e <pickup>
			drop(1,0);
    116a:	60 e0       	ldi	r22, 0x00	; 0
    116c:	81 e0       	ldi	r24, 0x01	; 1
    116e:	28 dc       	rcall	.-1968   	; 0x9c0 <drop>
    1170:	01 c0       	rjmp	.+2      	; 0x1174 <sortMan+0x1c8>
	pick_color(1);
	visited[CT]=1;
}
void sortMan()
{
	unsigned char nxTerm=0;
    1172:	10 e0       	ldi	r17, 0x00	; 0
			drop(pSwap,1);
			goBack();
			pickup(1,0);
			drop(1,0);
	}
	if(arm[0]==0 && arm[1]==0)
    1174:	80 91 3c 02 	lds	r24, 0x023C
    1178:	81 11       	cpse	r24, r1
    117a:	0a c0       	rjmp	.+20     	; 0x1190 <sortMan+0x1e4>
    117c:	80 91 3d 02 	lds	r24, 0x023D
    1180:	81 11       	cpse	r24, r1
    1182:	06 c0       	rjmp	.+12     	; 0x1190 <sortMan+0x1e4>
	{
		travel(CT,nxTerm);
    1184:	61 2f       	mov	r22, r17
    1186:	80 91 00 02 	lds	r24, 0x0200
    118a:	14 dd       	rcall	.-1496   	; 0xbb4 <travel>
		sortFree();
    118c:	a5 de       	rcall	.-694    	; 0xed8 <sortFree>
    118e:	84 c0       	rjmp	.+264    	; 0x1298 <sortMan+0x2ec>
	}
	else
	{
		travel(CT,nxTerm);
    1190:	61 2f       	mov	r22, r17
    1192:	80 91 00 02 	lds	r24, 0x0200
    1196:	0e dd       	rcall	.-1508   	; 0xbb4 <travel>
		sortMan();
    1198:	09 df       	rcall	.-494    	; 0xfac <sortMan>
    119a:	7e c0       	rjmp	.+252    	; 0x1298 <sortMan+0x2ec>
}

	
	else if(swap[CT%2]!=indi[CT])	//Sort can be empty
	{
		if(farCount==2)
    119c:	80 91 3a 02 	lds	r24, 0x023A
    11a0:	82 30       	cpi	r24, 0x02	; 2
    11a2:	39 f5       	brne	.+78     	; 0x11f2 <sortMan+0x246>
		{
			if(term[CT][0]==term[CT][1])	//and sort not empty why ?? :/
    11a4:	f9 01       	movw	r30, r18
    11a6:	ee 0f       	add	r30, r30
    11a8:	ff 1f       	adc	r31, r31
    11aa:	e5 5f       	subi	r30, 0xF5	; 245
    11ac:	fd 4f       	sbci	r31, 0xFD	; 253
    11ae:	81 81       	ldd	r24, Z+1	; 0x01
    11b0:	68 13       	cpse	r22, r24
    11b2:	0d c0       	rjmp	.+26     	; 0x11ce <sortMan+0x222>
			{
				nxTerm=indi[term[CT][0]]; //the common terminal
				//SchPickupAtSort
				//SchDropAtSort
				pickup(0,0);
    11b4:	60 e0       	ldi	r22, 0x00	; 0
    11b6:	80 e0       	ldi	r24, 0x00	; 0
    11b8:	5a db       	rcall	.-2380   	; 0x86e <pickup>
				drop(0,0);
    11ba:	60 e0       	ldi	r22, 0x00	; 0
    11bc:	80 e0       	ldi	r24, 0x00	; 0
    11be:	00 dc       	rcall	.-2048   	; 0x9c0 <drop>
				pickup(1,0);
    11c0:	60 e0       	ldi	r22, 0x00	; 0
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	54 db       	rcall	.-2392   	; 0x86e <pickup>
				drop(1,0);
    11c6:	60 e0       	ldi	r22, 0x00	; 0
    11c8:	81 e0       	ldi	r24, 0x01	; 1
    11ca:	fa db       	rcall	.-2060   	; 0x9c0 <drop>
    11cc:	65 c0       	rjmp	.+202    	; 0x1298 <sortMan+0x2ec>
			}
			else if(swap[CT%2]==term[CT][0])
    11ce:	67 13       	cpse	r22, r23
    11d0:	07 c0       	rjmp	.+14     	; 0x11e0 <sortMan+0x234>
			{
				pickup(0,0);
    11d2:	60 e0       	ldi	r22, 0x00	; 0
    11d4:	80 e0       	ldi	r24, 0x00	; 0
    11d6:	4b db       	rcall	.-2410   	; 0x86e <pickup>
				drop(0,0);
    11d8:	60 e0       	ldi	r22, 0x00	; 0
    11da:	80 e0       	ldi	r24, 0x00	; 0
    11dc:	f1 db       	rcall	.-2078   	; 0x9c0 <drop>
    11de:	5c c0       	rjmp	.+184    	; 0x1298 <sortMan+0x2ec>
				nxTerm=indi[arm[0]];
			}
			else if(swap[CT%2]==term[CT][1])
    11e0:	78 13       	cpse	r23, r24
    11e2:	5a c0       	rjmp	.+180    	; 0x1298 <sortMan+0x2ec>
			{
				pickup(1,0);
    11e4:	60 e0       	ldi	r22, 0x00	; 0
    11e6:	81 e0       	ldi	r24, 0x01	; 1
    11e8:	42 db       	rcall	.-2428   	; 0x86e <pickup>
				drop(1,0);
    11ea:	60 e0       	ldi	r22, 0x00	; 0
    11ec:	81 e0       	ldi	r24, 0x01	; 1
    11ee:	e8 db       	rcall	.-2096   	; 0x9c0 <drop>
    11f0:	53 c0       	rjmp	.+166    	; 0x1298 <sortMan+0x2ec>
				nxTerm=indi[arm[1]];
			}
		}
		else if(farCount==1)
    11f2:	81 30       	cpi	r24, 0x01	; 1
    11f4:	21 f5       	brne	.+72     	; 0x123e <sortMan+0x292>
		{
			if(adjCount==1)
    11f6:	80 91 3b 02 	lds	r24, 0x023B
    11fa:	81 30       	cpi	r24, 0x01	; 1
    11fc:	c9 f4       	brne	.+50     	; 0x1230 <sortMan+0x284>
			{
				if(swap[CT%2]==0)
    11fe:	71 11       	cpse	r23, r1
    1200:	0d c0       	rjmp	.+26     	; 0x121c <sortMan+0x270>
				{
					pickup(!pFar,0); //adjwala
    1202:	c1 e0       	ldi	r28, 0x01	; 1
    1204:	91 11       	cpse	r25, r1
    1206:	c0 e0       	ldi	r28, 0x00	; 0
    1208:	60 e0       	ldi	r22, 0x00	; 0
    120a:	8c 2f       	mov	r24, r28
    120c:	30 db       	rcall	.-2464   	; 0x86e <pickup>
					drop(!pFar,0);
    120e:	60 e0       	ldi	r22, 0x00	; 0
    1210:	8c 2f       	mov	r24, r28
    1212:	d6 db       	rcall	.-2132   	; 0x9c0 <drop>
					pickup(pFar,0);
    1214:	60 e0       	ldi	r22, 0x00	; 0
    1216:	80 2f       	mov	r24, r16
    1218:	2a db       	rcall	.-2476   	; 0x86e <pickup>
    121a:	3e c0       	rjmp	.+124    	; 0x1298 <sortMan+0x2ec>
					//SchDropAtSort
				}
				else
				{
					//Sort of far and CT has 1 far a adj
					pickup(!pFar,0);
    121c:	c1 e0       	ldi	r28, 0x01	; 1
    121e:	91 11       	cpse	r25, r1
    1220:	c0 e0       	ldi	r28, 0x00	; 0
    1222:	60 e0       	ldi	r22, 0x00	; 0
    1224:	8c 2f       	mov	r24, r28
    1226:	23 db       	rcall	.-2490   	; 0x86e <pickup>
					drop(!pFar,0);
    1228:	60 e0       	ldi	r22, 0x00	; 0
    122a:	8c 2f       	mov	r24, r28
    122c:	c9 db       	rcall	.-2158   	; 0x9c0 <drop>
    122e:	34 c0       	rjmp	.+104    	; 0x1298 <sortMan+0x2ec>
				}
			}
			else  //====
			{	//one node is empty
				nxTerm=indi[term[CT][pFar]];
				pickup(pFar,0);
    1230:	60 e0       	ldi	r22, 0x00	; 0
    1232:	89 2f       	mov	r24, r25
    1234:	1c db       	rcall	.-2504   	; 0x86e <pickup>
				drop(pFar,0);
    1236:	60 e0       	ldi	r22, 0x00	; 0
    1238:	80 2f       	mov	r24, r16
    123a:	c2 db       	rcall	.-2172   	; 0x9c0 <drop>
    123c:	2d c0       	rjmp	.+90     	; 0x1298 <sortMan+0x2ec>
				//SchDropAtSort
			}
		}
		
		else if(adjCount==1)
    123e:	80 91 3b 02 	lds	r24, 0x023B
    1242:	81 30       	cpi	r24, 0x01	; 1
    1244:	51 f4       	brne	.+20     	; 0x125a <sortMan+0x2ae>
					nxTerm=adj;
				}
			}
			else	//1 empty 1 adj
			{
				pickup(!pFar,0);
    1246:	c1 e0       	ldi	r28, 0x01	; 1
    1248:	91 11       	cpse	r25, r1
    124a:	c0 e0       	ldi	r28, 0x00	; 0
    124c:	60 e0       	ldi	r22, 0x00	; 0
    124e:	8c 2f       	mov	r24, r28
    1250:	0e db       	rcall	.-2532   	; 0x86e <pickup>
				drop(!pFar,0);
    1252:	60 e0       	ldi	r22, 0x00	; 0
    1254:	8c 2f       	mov	r24, r28
    1256:	b4 db       	rcall	.-2200   	; 0x9c0 <drop>
    1258:	1f c0       	rjmp	.+62     	; 0x1298 <sortMan+0x2ec>
				nxTerm=adj;
			}
		}
		else if(adjCount==2)
    125a:	82 30       	cpi	r24, 0x02	; 2
    125c:	99 f4       	brne	.+38     	; 0x1284 <sortMan+0x2d8>
		{
			if(swap[CT%2]>0) //smthin is at Sort
    125e:	77 23       	and	r23, r23
    1260:	39 f0       	breq	.+14     	; 0x1270 <sortMan+0x2c4>
			{
				pickup(0,0);
    1262:	60 e0       	ldi	r22, 0x00	; 0
    1264:	80 e0       	ldi	r24, 0x00	; 0
    1266:	03 db       	rcall	.-2554   	; 0x86e <pickup>
				drop(0,0);
    1268:	60 e0       	ldi	r22, 0x00	; 0
    126a:	80 e0       	ldi	r24, 0x00	; 0
    126c:	a9 db       	rcall	.-2222   	; 0x9c0 <drop>
    126e:	14 c0       	rjmp	.+40     	; 0x1298 <sortMan+0x2ec>
			}
			else
			{
				pickup(0,0);
    1270:	60 e0       	ldi	r22, 0x00	; 0
    1272:	80 e0       	ldi	r24, 0x00	; 0
    1274:	fc da       	rcall	.-2568   	; 0x86e <pickup>
				drop(0,0);
    1276:	60 e0       	ldi	r22, 0x00	; 0
    1278:	80 e0       	ldi	r24, 0x00	; 0
    127a:	a2 db       	rcall	.-2236   	; 0x9c0 <drop>
				pickup(1,0);
    127c:	60 e0       	ldi	r22, 0x00	; 0
    127e:	81 e0       	ldi	r24, 0x01	; 1
    1280:	f6 da       	rcall	.-2580   	; 0x86e <pickup>
    1282:	0a c0       	rjmp	.+20     	; 0x1298 <sortMan+0x2ec>
			}
			nxTerm=adj;
		}
		else		//empty
		{
			drop(0,0);
    1284:	60 e0       	ldi	r22, 0x00	; 0
    1286:	80 e0       	ldi	r24, 0x00	; 0
    1288:	9b db       	rcall	.-2250   	; 0x9c0 <drop>
			drop(1,0);
    128a:	60 e0       	ldi	r22, 0x00	; 0
    128c:	81 e0       	ldi	r24, 0x01	; 1
    128e:	98 db       	rcall	.-2256   	; 0x9c0 <drop>
			nxTerm=unvisited();
    1290:	15 dd       	rcall	.-1494   	; 0xcbc <unvisited>
			if(nxTerm==0)
    1292:	81 11       	cpse	r24, r1
    1294:	01 c0       	rjmp	.+2      	; 0x1298 <sortMan+0x2ec>
			{
				if(checkForCompletion())
    1296:	40 dd       	rcall	.-1408   	; 0xd18 <checkForCompletion>
					//Exit Sequence
				}
			}
		}
	}
}
    1298:	df 91       	pop	r29
    129a:	cf 91       	pop	r28
    129c:	1f 91       	pop	r17
    129e:	0f 91       	pop	r16
    12a0:	08 95       	ret

000012a2 <init_sort>:
	}
}

void init_sort()
	{
		pickup(0,0);
    12a2:	60 e0       	ldi	r22, 0x00	; 0
    12a4:	80 e0       	ldi	r24, 0x00	; 0
    12a6:	e3 da       	rcall	.-2618   	; 0x86e <pickup>
		pickup(1,0);
    12a8:	60 e0       	ldi	r22, 0x00	; 0
    12aa:	81 e0       	ldi	r24, 0x01	; 1
    12ac:	e0 da       	rcall	.-2624   	; 0x86e <pickup>
		sortFree();
    12ae:	14 ce       	rjmp	.-984    	; 0xed8 <sortFree>
    12b0:	08 95       	ret

000012b2 <main>:
	servo_3(100);
	_delay_ms(7000);
	lcd_wr_command(0x01);
	buzzer();
	*/
	init_sort();
    12b2:	f7 df       	rcall	.-18     	; 0x12a2 <init_sort>
    12b4:	ff cf       	rjmp	.-2      	; 0x12b4 <main+0x2>

000012b6 <__subsf3>:
    12b6:	50 58       	subi	r21, 0x80	; 128

000012b8 <__addsf3>:
    12b8:	bb 27       	eor	r27, r27
    12ba:	aa 27       	eor	r26, r26
    12bc:	0e d0       	rcall	.+28     	; 0x12da <__addsf3x>
    12be:	48 c1       	rjmp	.+656    	; 0x1550 <__fp_round>
    12c0:	39 d1       	rcall	.+626    	; 0x1534 <__fp_pscA>
    12c2:	30 f0       	brcs	.+12     	; 0x12d0 <__addsf3+0x18>
    12c4:	3e d1       	rcall	.+636    	; 0x1542 <__fp_pscB>
    12c6:	20 f0       	brcs	.+8      	; 0x12d0 <__addsf3+0x18>
    12c8:	31 f4       	brne	.+12     	; 0x12d6 <__addsf3+0x1e>
    12ca:	9f 3f       	cpi	r25, 0xFF	; 255
    12cc:	11 f4       	brne	.+4      	; 0x12d2 <__addsf3+0x1a>
    12ce:	1e f4       	brtc	.+6      	; 0x12d6 <__addsf3+0x1e>
    12d0:	2e c1       	rjmp	.+604    	; 0x152e <__fp_nan>
    12d2:	0e f4       	brtc	.+2      	; 0x12d6 <__addsf3+0x1e>
    12d4:	e0 95       	com	r30
    12d6:	e7 fb       	bst	r30, 7
    12d8:	24 c1       	rjmp	.+584    	; 0x1522 <__fp_inf>

000012da <__addsf3x>:
    12da:	e9 2f       	mov	r30, r25
    12dc:	4a d1       	rcall	.+660    	; 0x1572 <__fp_split3>
    12de:	80 f3       	brcs	.-32     	; 0x12c0 <__addsf3+0x8>
    12e0:	ba 17       	cp	r27, r26
    12e2:	62 07       	cpc	r22, r18
    12e4:	73 07       	cpc	r23, r19
    12e6:	84 07       	cpc	r24, r20
    12e8:	95 07       	cpc	r25, r21
    12ea:	18 f0       	brcs	.+6      	; 0x12f2 <__addsf3x+0x18>
    12ec:	71 f4       	brne	.+28     	; 0x130a <__addsf3x+0x30>
    12ee:	9e f5       	brtc	.+102    	; 0x1356 <__addsf3x+0x7c>
    12f0:	62 c1       	rjmp	.+708    	; 0x15b6 <__fp_zero>
    12f2:	0e f4       	brtc	.+2      	; 0x12f6 <__addsf3x+0x1c>
    12f4:	e0 95       	com	r30
    12f6:	0b 2e       	mov	r0, r27
    12f8:	ba 2f       	mov	r27, r26
    12fa:	a0 2d       	mov	r26, r0
    12fc:	0b 01       	movw	r0, r22
    12fe:	b9 01       	movw	r22, r18
    1300:	90 01       	movw	r18, r0
    1302:	0c 01       	movw	r0, r24
    1304:	ca 01       	movw	r24, r20
    1306:	a0 01       	movw	r20, r0
    1308:	11 24       	eor	r1, r1
    130a:	ff 27       	eor	r31, r31
    130c:	59 1b       	sub	r21, r25
    130e:	99 f0       	breq	.+38     	; 0x1336 <__addsf3x+0x5c>
    1310:	59 3f       	cpi	r21, 0xF9	; 249
    1312:	50 f4       	brcc	.+20     	; 0x1328 <__addsf3x+0x4e>
    1314:	50 3e       	cpi	r21, 0xE0	; 224
    1316:	68 f1       	brcs	.+90     	; 0x1372 <__addsf3x+0x98>
    1318:	1a 16       	cp	r1, r26
    131a:	f0 40       	sbci	r31, 0x00	; 0
    131c:	a2 2f       	mov	r26, r18
    131e:	23 2f       	mov	r18, r19
    1320:	34 2f       	mov	r19, r20
    1322:	44 27       	eor	r20, r20
    1324:	58 5f       	subi	r21, 0xF8	; 248
    1326:	f3 cf       	rjmp	.-26     	; 0x130e <__addsf3x+0x34>
    1328:	46 95       	lsr	r20
    132a:	37 95       	ror	r19
    132c:	27 95       	ror	r18
    132e:	a7 95       	ror	r26
    1330:	f0 40       	sbci	r31, 0x00	; 0
    1332:	53 95       	inc	r21
    1334:	c9 f7       	brne	.-14     	; 0x1328 <__addsf3x+0x4e>
    1336:	7e f4       	brtc	.+30     	; 0x1356 <__addsf3x+0x7c>
    1338:	1f 16       	cp	r1, r31
    133a:	ba 0b       	sbc	r27, r26
    133c:	62 0b       	sbc	r22, r18
    133e:	73 0b       	sbc	r23, r19
    1340:	84 0b       	sbc	r24, r20
    1342:	ba f0       	brmi	.+46     	; 0x1372 <__addsf3x+0x98>
    1344:	91 50       	subi	r25, 0x01	; 1
    1346:	a1 f0       	breq	.+40     	; 0x1370 <__addsf3x+0x96>
    1348:	ff 0f       	add	r31, r31
    134a:	bb 1f       	adc	r27, r27
    134c:	66 1f       	adc	r22, r22
    134e:	77 1f       	adc	r23, r23
    1350:	88 1f       	adc	r24, r24
    1352:	c2 f7       	brpl	.-16     	; 0x1344 <__addsf3x+0x6a>
    1354:	0e c0       	rjmp	.+28     	; 0x1372 <__addsf3x+0x98>
    1356:	ba 0f       	add	r27, r26
    1358:	62 1f       	adc	r22, r18
    135a:	73 1f       	adc	r23, r19
    135c:	84 1f       	adc	r24, r20
    135e:	48 f4       	brcc	.+18     	; 0x1372 <__addsf3x+0x98>
    1360:	87 95       	ror	r24
    1362:	77 95       	ror	r23
    1364:	67 95       	ror	r22
    1366:	b7 95       	ror	r27
    1368:	f7 95       	ror	r31
    136a:	9e 3f       	cpi	r25, 0xFE	; 254
    136c:	08 f0       	brcs	.+2      	; 0x1370 <__addsf3x+0x96>
    136e:	b3 cf       	rjmp	.-154    	; 0x12d6 <__addsf3+0x1e>
    1370:	93 95       	inc	r25
    1372:	88 0f       	add	r24, r24
    1374:	08 f0       	brcs	.+2      	; 0x1378 <__addsf3x+0x9e>
    1376:	99 27       	eor	r25, r25
    1378:	ee 0f       	add	r30, r30
    137a:	97 95       	ror	r25
    137c:	87 95       	ror	r24
    137e:	08 95       	ret

00001380 <__divsf3>:
    1380:	0c d0       	rcall	.+24     	; 0x139a <__divsf3x>
    1382:	e6 c0       	rjmp	.+460    	; 0x1550 <__fp_round>
    1384:	de d0       	rcall	.+444    	; 0x1542 <__fp_pscB>
    1386:	40 f0       	brcs	.+16     	; 0x1398 <__divsf3+0x18>
    1388:	d5 d0       	rcall	.+426    	; 0x1534 <__fp_pscA>
    138a:	30 f0       	brcs	.+12     	; 0x1398 <__divsf3+0x18>
    138c:	21 f4       	brne	.+8      	; 0x1396 <__divsf3+0x16>
    138e:	5f 3f       	cpi	r21, 0xFF	; 255
    1390:	19 f0       	breq	.+6      	; 0x1398 <__divsf3+0x18>
    1392:	c7 c0       	rjmp	.+398    	; 0x1522 <__fp_inf>
    1394:	51 11       	cpse	r21, r1
    1396:	10 c1       	rjmp	.+544    	; 0x15b8 <__fp_szero>
    1398:	ca c0       	rjmp	.+404    	; 0x152e <__fp_nan>

0000139a <__divsf3x>:
    139a:	eb d0       	rcall	.+470    	; 0x1572 <__fp_split3>
    139c:	98 f3       	brcs	.-26     	; 0x1384 <__divsf3+0x4>

0000139e <__divsf3_pse>:
    139e:	99 23       	and	r25, r25
    13a0:	c9 f3       	breq	.-14     	; 0x1394 <__divsf3+0x14>
    13a2:	55 23       	and	r21, r21
    13a4:	b1 f3       	breq	.-20     	; 0x1392 <__divsf3+0x12>
    13a6:	95 1b       	sub	r25, r21
    13a8:	55 0b       	sbc	r21, r21
    13aa:	bb 27       	eor	r27, r27
    13ac:	aa 27       	eor	r26, r26
    13ae:	62 17       	cp	r22, r18
    13b0:	73 07       	cpc	r23, r19
    13b2:	84 07       	cpc	r24, r20
    13b4:	38 f0       	brcs	.+14     	; 0x13c4 <__divsf3_pse+0x26>
    13b6:	9f 5f       	subi	r25, 0xFF	; 255
    13b8:	5f 4f       	sbci	r21, 0xFF	; 255
    13ba:	22 0f       	add	r18, r18
    13bc:	33 1f       	adc	r19, r19
    13be:	44 1f       	adc	r20, r20
    13c0:	aa 1f       	adc	r26, r26
    13c2:	a9 f3       	breq	.-22     	; 0x13ae <__divsf3_pse+0x10>
    13c4:	33 d0       	rcall	.+102    	; 0x142c <__divsf3_pse+0x8e>
    13c6:	0e 2e       	mov	r0, r30
    13c8:	3a f0       	brmi	.+14     	; 0x13d8 <__divsf3_pse+0x3a>
    13ca:	e0 e8       	ldi	r30, 0x80	; 128
    13cc:	30 d0       	rcall	.+96     	; 0x142e <__divsf3_pse+0x90>
    13ce:	91 50       	subi	r25, 0x01	; 1
    13d0:	50 40       	sbci	r21, 0x00	; 0
    13d2:	e6 95       	lsr	r30
    13d4:	00 1c       	adc	r0, r0
    13d6:	ca f7       	brpl	.-14     	; 0x13ca <__divsf3_pse+0x2c>
    13d8:	29 d0       	rcall	.+82     	; 0x142c <__divsf3_pse+0x8e>
    13da:	fe 2f       	mov	r31, r30
    13dc:	27 d0       	rcall	.+78     	; 0x142c <__divsf3_pse+0x8e>
    13de:	66 0f       	add	r22, r22
    13e0:	77 1f       	adc	r23, r23
    13e2:	88 1f       	adc	r24, r24
    13e4:	bb 1f       	adc	r27, r27
    13e6:	26 17       	cp	r18, r22
    13e8:	37 07       	cpc	r19, r23
    13ea:	48 07       	cpc	r20, r24
    13ec:	ab 07       	cpc	r26, r27
    13ee:	b0 e8       	ldi	r27, 0x80	; 128
    13f0:	09 f0       	breq	.+2      	; 0x13f4 <__divsf3_pse+0x56>
    13f2:	bb 0b       	sbc	r27, r27
    13f4:	80 2d       	mov	r24, r0
    13f6:	bf 01       	movw	r22, r30
    13f8:	ff 27       	eor	r31, r31
    13fa:	93 58       	subi	r25, 0x83	; 131
    13fc:	5f 4f       	sbci	r21, 0xFF	; 255
    13fe:	2a f0       	brmi	.+10     	; 0x140a <__divsf3_pse+0x6c>
    1400:	9e 3f       	cpi	r25, 0xFE	; 254
    1402:	51 05       	cpc	r21, r1
    1404:	68 f0       	brcs	.+26     	; 0x1420 <__divsf3_pse+0x82>
    1406:	8d c0       	rjmp	.+282    	; 0x1522 <__fp_inf>
    1408:	d7 c0       	rjmp	.+430    	; 0x15b8 <__fp_szero>
    140a:	5f 3f       	cpi	r21, 0xFF	; 255
    140c:	ec f3       	brlt	.-6      	; 0x1408 <__divsf3_pse+0x6a>
    140e:	98 3e       	cpi	r25, 0xE8	; 232
    1410:	dc f3       	brlt	.-10     	; 0x1408 <__divsf3_pse+0x6a>
    1412:	86 95       	lsr	r24
    1414:	77 95       	ror	r23
    1416:	67 95       	ror	r22
    1418:	b7 95       	ror	r27
    141a:	f7 95       	ror	r31
    141c:	9f 5f       	subi	r25, 0xFF	; 255
    141e:	c9 f7       	brne	.-14     	; 0x1412 <__divsf3_pse+0x74>
    1420:	88 0f       	add	r24, r24
    1422:	91 1d       	adc	r25, r1
    1424:	96 95       	lsr	r25
    1426:	87 95       	ror	r24
    1428:	97 f9       	bld	r25, 7
    142a:	08 95       	ret
    142c:	e1 e0       	ldi	r30, 0x01	; 1
    142e:	66 0f       	add	r22, r22
    1430:	77 1f       	adc	r23, r23
    1432:	88 1f       	adc	r24, r24
    1434:	bb 1f       	adc	r27, r27
    1436:	62 17       	cp	r22, r18
    1438:	73 07       	cpc	r23, r19
    143a:	84 07       	cpc	r24, r20
    143c:	ba 07       	cpc	r27, r26
    143e:	20 f0       	brcs	.+8      	; 0x1448 <__divsf3_pse+0xaa>
    1440:	62 1b       	sub	r22, r18
    1442:	73 0b       	sbc	r23, r19
    1444:	84 0b       	sbc	r24, r20
    1446:	ba 0b       	sbc	r27, r26
    1448:	ee 1f       	adc	r30, r30
    144a:	88 f7       	brcc	.-30     	; 0x142e <__divsf3_pse+0x90>
    144c:	e0 95       	com	r30
    144e:	08 95       	ret

00001450 <__fixunssfsi>:
    1450:	98 d0       	rcall	.+304    	; 0x1582 <__fp_splitA>
    1452:	88 f0       	brcs	.+34     	; 0x1476 <__fixunssfsi+0x26>
    1454:	9f 57       	subi	r25, 0x7F	; 127
    1456:	90 f0       	brcs	.+36     	; 0x147c <__fixunssfsi+0x2c>
    1458:	b9 2f       	mov	r27, r25
    145a:	99 27       	eor	r25, r25
    145c:	b7 51       	subi	r27, 0x17	; 23
    145e:	a0 f0       	brcs	.+40     	; 0x1488 <__fixunssfsi+0x38>
    1460:	d1 f0       	breq	.+52     	; 0x1496 <__fixunssfsi+0x46>
    1462:	66 0f       	add	r22, r22
    1464:	77 1f       	adc	r23, r23
    1466:	88 1f       	adc	r24, r24
    1468:	99 1f       	adc	r25, r25
    146a:	1a f0       	brmi	.+6      	; 0x1472 <__fixunssfsi+0x22>
    146c:	ba 95       	dec	r27
    146e:	c9 f7       	brne	.-14     	; 0x1462 <__fixunssfsi+0x12>
    1470:	12 c0       	rjmp	.+36     	; 0x1496 <__fixunssfsi+0x46>
    1472:	b1 30       	cpi	r27, 0x01	; 1
    1474:	81 f0       	breq	.+32     	; 0x1496 <__fixunssfsi+0x46>
    1476:	9f d0       	rcall	.+318    	; 0x15b6 <__fp_zero>
    1478:	b1 e0       	ldi	r27, 0x01	; 1
    147a:	08 95       	ret
    147c:	9c c0       	rjmp	.+312    	; 0x15b6 <__fp_zero>
    147e:	67 2f       	mov	r22, r23
    1480:	78 2f       	mov	r23, r24
    1482:	88 27       	eor	r24, r24
    1484:	b8 5f       	subi	r27, 0xF8	; 248
    1486:	39 f0       	breq	.+14     	; 0x1496 <__fixunssfsi+0x46>
    1488:	b9 3f       	cpi	r27, 0xF9	; 249
    148a:	cc f3       	brlt	.-14     	; 0x147e <__fixunssfsi+0x2e>
    148c:	86 95       	lsr	r24
    148e:	77 95       	ror	r23
    1490:	67 95       	ror	r22
    1492:	b3 95       	inc	r27
    1494:	d9 f7       	brne	.-10     	; 0x148c <__fixunssfsi+0x3c>
    1496:	3e f4       	brtc	.+14     	; 0x14a6 <__fixunssfsi+0x56>
    1498:	90 95       	com	r25
    149a:	80 95       	com	r24
    149c:	70 95       	com	r23
    149e:	61 95       	neg	r22
    14a0:	7f 4f       	sbci	r23, 0xFF	; 255
    14a2:	8f 4f       	sbci	r24, 0xFF	; 255
    14a4:	9f 4f       	sbci	r25, 0xFF	; 255
    14a6:	08 95       	ret

000014a8 <__floatunsisf>:
    14a8:	e8 94       	clt
    14aa:	09 c0       	rjmp	.+18     	; 0x14be <__floatsisf+0x12>

000014ac <__floatsisf>:
    14ac:	97 fb       	bst	r25, 7
    14ae:	3e f4       	brtc	.+14     	; 0x14be <__floatsisf+0x12>
    14b0:	90 95       	com	r25
    14b2:	80 95       	com	r24
    14b4:	70 95       	com	r23
    14b6:	61 95       	neg	r22
    14b8:	7f 4f       	sbci	r23, 0xFF	; 255
    14ba:	8f 4f       	sbci	r24, 0xFF	; 255
    14bc:	9f 4f       	sbci	r25, 0xFF	; 255
    14be:	99 23       	and	r25, r25
    14c0:	a9 f0       	breq	.+42     	; 0x14ec <__floatsisf+0x40>
    14c2:	f9 2f       	mov	r31, r25
    14c4:	96 e9       	ldi	r25, 0x96	; 150
    14c6:	bb 27       	eor	r27, r27
    14c8:	93 95       	inc	r25
    14ca:	f6 95       	lsr	r31
    14cc:	87 95       	ror	r24
    14ce:	77 95       	ror	r23
    14d0:	67 95       	ror	r22
    14d2:	b7 95       	ror	r27
    14d4:	f1 11       	cpse	r31, r1
    14d6:	f8 cf       	rjmp	.-16     	; 0x14c8 <__floatsisf+0x1c>
    14d8:	fa f4       	brpl	.+62     	; 0x1518 <__floatsisf+0x6c>
    14da:	bb 0f       	add	r27, r27
    14dc:	11 f4       	brne	.+4      	; 0x14e2 <__floatsisf+0x36>
    14de:	60 ff       	sbrs	r22, 0
    14e0:	1b c0       	rjmp	.+54     	; 0x1518 <__floatsisf+0x6c>
    14e2:	6f 5f       	subi	r22, 0xFF	; 255
    14e4:	7f 4f       	sbci	r23, 0xFF	; 255
    14e6:	8f 4f       	sbci	r24, 0xFF	; 255
    14e8:	9f 4f       	sbci	r25, 0xFF	; 255
    14ea:	16 c0       	rjmp	.+44     	; 0x1518 <__floatsisf+0x6c>
    14ec:	88 23       	and	r24, r24
    14ee:	11 f0       	breq	.+4      	; 0x14f4 <__floatsisf+0x48>
    14f0:	96 e9       	ldi	r25, 0x96	; 150
    14f2:	11 c0       	rjmp	.+34     	; 0x1516 <__floatsisf+0x6a>
    14f4:	77 23       	and	r23, r23
    14f6:	21 f0       	breq	.+8      	; 0x1500 <__floatsisf+0x54>
    14f8:	9e e8       	ldi	r25, 0x8E	; 142
    14fa:	87 2f       	mov	r24, r23
    14fc:	76 2f       	mov	r23, r22
    14fe:	05 c0       	rjmp	.+10     	; 0x150a <__floatsisf+0x5e>
    1500:	66 23       	and	r22, r22
    1502:	71 f0       	breq	.+28     	; 0x1520 <__floatsisf+0x74>
    1504:	96 e8       	ldi	r25, 0x86	; 134
    1506:	86 2f       	mov	r24, r22
    1508:	70 e0       	ldi	r23, 0x00	; 0
    150a:	60 e0       	ldi	r22, 0x00	; 0
    150c:	2a f0       	brmi	.+10     	; 0x1518 <__floatsisf+0x6c>
    150e:	9a 95       	dec	r25
    1510:	66 0f       	add	r22, r22
    1512:	77 1f       	adc	r23, r23
    1514:	88 1f       	adc	r24, r24
    1516:	da f7       	brpl	.-10     	; 0x150e <__floatsisf+0x62>
    1518:	88 0f       	add	r24, r24
    151a:	96 95       	lsr	r25
    151c:	87 95       	ror	r24
    151e:	97 f9       	bld	r25, 7
    1520:	08 95       	ret

00001522 <__fp_inf>:
    1522:	97 f9       	bld	r25, 7
    1524:	9f 67       	ori	r25, 0x7F	; 127
    1526:	80 e8       	ldi	r24, 0x80	; 128
    1528:	70 e0       	ldi	r23, 0x00	; 0
    152a:	60 e0       	ldi	r22, 0x00	; 0
    152c:	08 95       	ret

0000152e <__fp_nan>:
    152e:	9f ef       	ldi	r25, 0xFF	; 255
    1530:	80 ec       	ldi	r24, 0xC0	; 192
    1532:	08 95       	ret

00001534 <__fp_pscA>:
    1534:	00 24       	eor	r0, r0
    1536:	0a 94       	dec	r0
    1538:	16 16       	cp	r1, r22
    153a:	17 06       	cpc	r1, r23
    153c:	18 06       	cpc	r1, r24
    153e:	09 06       	cpc	r0, r25
    1540:	08 95       	ret

00001542 <__fp_pscB>:
    1542:	00 24       	eor	r0, r0
    1544:	0a 94       	dec	r0
    1546:	12 16       	cp	r1, r18
    1548:	13 06       	cpc	r1, r19
    154a:	14 06       	cpc	r1, r20
    154c:	05 06       	cpc	r0, r21
    154e:	08 95       	ret

00001550 <__fp_round>:
    1550:	09 2e       	mov	r0, r25
    1552:	03 94       	inc	r0
    1554:	00 0c       	add	r0, r0
    1556:	11 f4       	brne	.+4      	; 0x155c <__fp_round+0xc>
    1558:	88 23       	and	r24, r24
    155a:	52 f0       	brmi	.+20     	; 0x1570 <__fp_round+0x20>
    155c:	bb 0f       	add	r27, r27
    155e:	40 f4       	brcc	.+16     	; 0x1570 <__fp_round+0x20>
    1560:	bf 2b       	or	r27, r31
    1562:	11 f4       	brne	.+4      	; 0x1568 <__fp_round+0x18>
    1564:	60 ff       	sbrs	r22, 0
    1566:	04 c0       	rjmp	.+8      	; 0x1570 <__fp_round+0x20>
    1568:	6f 5f       	subi	r22, 0xFF	; 255
    156a:	7f 4f       	sbci	r23, 0xFF	; 255
    156c:	8f 4f       	sbci	r24, 0xFF	; 255
    156e:	9f 4f       	sbci	r25, 0xFF	; 255
    1570:	08 95       	ret

00001572 <__fp_split3>:
    1572:	57 fd       	sbrc	r21, 7
    1574:	90 58       	subi	r25, 0x80	; 128
    1576:	44 0f       	add	r20, r20
    1578:	55 1f       	adc	r21, r21
    157a:	59 f0       	breq	.+22     	; 0x1592 <__fp_splitA+0x10>
    157c:	5f 3f       	cpi	r21, 0xFF	; 255
    157e:	71 f0       	breq	.+28     	; 0x159c <__fp_splitA+0x1a>
    1580:	47 95       	ror	r20

00001582 <__fp_splitA>:
    1582:	88 0f       	add	r24, r24
    1584:	97 fb       	bst	r25, 7
    1586:	99 1f       	adc	r25, r25
    1588:	61 f0       	breq	.+24     	; 0x15a2 <__fp_splitA+0x20>
    158a:	9f 3f       	cpi	r25, 0xFF	; 255
    158c:	79 f0       	breq	.+30     	; 0x15ac <__fp_splitA+0x2a>
    158e:	87 95       	ror	r24
    1590:	08 95       	ret
    1592:	12 16       	cp	r1, r18
    1594:	13 06       	cpc	r1, r19
    1596:	14 06       	cpc	r1, r20
    1598:	55 1f       	adc	r21, r21
    159a:	f2 cf       	rjmp	.-28     	; 0x1580 <__fp_split3+0xe>
    159c:	46 95       	lsr	r20
    159e:	f1 df       	rcall	.-30     	; 0x1582 <__fp_splitA>
    15a0:	08 c0       	rjmp	.+16     	; 0x15b2 <__fp_splitA+0x30>
    15a2:	16 16       	cp	r1, r22
    15a4:	17 06       	cpc	r1, r23
    15a6:	18 06       	cpc	r1, r24
    15a8:	99 1f       	adc	r25, r25
    15aa:	f1 cf       	rjmp	.-30     	; 0x158e <__fp_splitA+0xc>
    15ac:	86 95       	lsr	r24
    15ae:	71 05       	cpc	r23, r1
    15b0:	61 05       	cpc	r22, r1
    15b2:	08 94       	sec
    15b4:	08 95       	ret

000015b6 <__fp_zero>:
    15b6:	e8 94       	clt

000015b8 <__fp_szero>:
    15b8:	bb 27       	eor	r27, r27
    15ba:	66 27       	eor	r22, r22
    15bc:	77 27       	eor	r23, r23
    15be:	cb 01       	movw	r24, r22
    15c0:	97 f9       	bld	r25, 7
    15c2:	08 95       	ret

000015c4 <__umulhisi3>:
    15c4:	a2 9f       	mul	r26, r18
    15c6:	b0 01       	movw	r22, r0
    15c8:	b3 9f       	mul	r27, r19
    15ca:	c0 01       	movw	r24, r0
    15cc:	a3 9f       	mul	r26, r19
    15ce:	70 0d       	add	r23, r0
    15d0:	81 1d       	adc	r24, r1
    15d2:	11 24       	eor	r1, r1
    15d4:	91 1d       	adc	r25, r1
    15d6:	b2 9f       	mul	r27, r18
    15d8:	70 0d       	add	r23, r0
    15da:	81 1d       	adc	r24, r1
    15dc:	11 24       	eor	r1, r1
    15de:	91 1d       	adc	r25, r1
    15e0:	08 95       	ret

000015e2 <_exit>:
    15e2:	f8 94       	cli

000015e4 <__stop_program>:
    15e4:	ff cf       	rjmp	.-2      	; 0x15e4 <__stop_program>
