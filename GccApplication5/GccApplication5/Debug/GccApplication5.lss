
GccApplication5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  00000c96  00000d2a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c96  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800206  00800206  00000d30  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d30  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000200  00000000  00000000  00000d60  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001a40  00000000  00000000  00000f60  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003ae  00000000  00000000  000029a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000f7e  00000000  00000000  00002d4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004bc  00000000  00000000  00003ccc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000594  00000000  00000000  00004188  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ee5  00000000  00000000  0000471c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000228  00000000  00000000  00005601  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	e3 c2       	rjmp	.+1478   	; 0x5dc <__vector_5>
  16:	00 00       	nop
  18:	bc c2       	rjmp	.+1400   	; 0x592 <__vector_6>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 e9       	ldi	r30, 0x96	; 150
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 30       	cpi	r26, 0x06	; 6
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e0       	ldi	r26, 0x06	; 6
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 32       	cpi	r26, 0x22	; 34
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	62 d4       	rcall	.+2244   	; 0x9e4 <main>
 120:	b8 c5       	rjmp	.+2928   	; 0xc92 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <lcd_set_4bit>:
	if(CT==3)
	return 4;
	if(CT==4)
	return 3;
	else return 0;
}
 124:	86 e6       	ldi	r24, 0x66	; 102
 126:	9e e0       	ldi	r25, 0x0E	; 14
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <lcd_set_4bit+0x4>
 12c:	00 00       	nop
 12e:	40 98       	cbi	0x08, 0	; 8
 130:	41 98       	cbi	0x08, 1	; 8
 132:	80 e3       	ldi	r24, 0x30	; 48
 134:	88 b9       	out	0x08, r24	; 8
 136:	42 9a       	sbi	0x08, 2	; 8
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	97 e4       	ldi	r25, 0x47	; 71
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <lcd_set_4bit+0x18>
 140:	00 c0       	rjmp	.+0      	; 0x142 <lcd_set_4bit+0x1e>
 142:	00 00       	nop
 144:	42 98       	cbi	0x08, 2	; 8
 146:	86 e6       	ldi	r24, 0x66	; 102
 148:	9e e0       	ldi	r25, 0x0E	; 14
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <lcd_set_4bit+0x26>
 14e:	00 00       	nop
 150:	40 98       	cbi	0x08, 0	; 8
 152:	41 98       	cbi	0x08, 1	; 8
 154:	80 e3       	ldi	r24, 0x30	; 48
 156:	88 b9       	out	0x08, r24	; 8
 158:	42 9a       	sbi	0x08, 2	; 8
 15a:	8f ef       	ldi	r24, 0xFF	; 255
 15c:	97 e4       	ldi	r25, 0x47	; 71
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <lcd_set_4bit+0x3a>
 162:	00 c0       	rjmp	.+0      	; 0x164 <lcd_set_4bit+0x40>
 164:	00 00       	nop
 166:	42 98       	cbi	0x08, 2	; 8
 168:	86 e6       	ldi	r24, 0x66	; 102
 16a:	9e e0       	ldi	r25, 0x0E	; 14
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <lcd_set_4bit+0x48>
 170:	00 00       	nop
 172:	40 98       	cbi	0x08, 0	; 8
 174:	41 98       	cbi	0x08, 1	; 8
 176:	80 e3       	ldi	r24, 0x30	; 48
 178:	88 b9       	out	0x08, r24	; 8
 17a:	42 9a       	sbi	0x08, 2	; 8
 17c:	8f ef       	ldi	r24, 0xFF	; 255
 17e:	97 e4       	ldi	r25, 0x47	; 71
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <lcd_set_4bit+0x5c>
 184:	00 c0       	rjmp	.+0      	; 0x186 <lcd_set_4bit+0x62>
 186:	00 00       	nop
 188:	42 98       	cbi	0x08, 2	; 8
 18a:	86 e6       	ldi	r24, 0x66	; 102
 18c:	9e e0       	ldi	r25, 0x0E	; 14
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <lcd_set_4bit+0x6a>
 192:	00 00       	nop
 194:	40 98       	cbi	0x08, 0	; 8
 196:	41 98       	cbi	0x08, 1	; 8
 198:	80 e2       	ldi	r24, 0x20	; 32
 19a:	88 b9       	out	0x08, r24	; 8
 19c:	42 9a       	sbi	0x08, 2	; 8
 19e:	8f ef       	ldi	r24, 0xFF	; 255
 1a0:	97 e4       	ldi	r25, 0x47	; 71
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <lcd_set_4bit+0x7e>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <lcd_set_4bit+0x84>
 1a8:	00 00       	nop
 1aa:	42 98       	cbi	0x08, 2	; 8
 1ac:	08 95       	ret

000001ae <lcd_wr_command>:
 1ae:	98 b1       	in	r25, 0x08	; 8
 1b0:	9f 70       	andi	r25, 0x0F	; 15
 1b2:	98 b9       	out	0x08, r25	; 8
 1b4:	98 b1       	in	r25, 0x08	; 8
 1b6:	28 2f       	mov	r18, r24
 1b8:	20 7f       	andi	r18, 0xF0	; 240
 1ba:	92 2b       	or	r25, r18
 1bc:	98 b9       	out	0x08, r25	; 8
 1be:	40 98       	cbi	0x08, 0	; 8
 1c0:	41 98       	cbi	0x08, 1	; 8
 1c2:	42 9a       	sbi	0x08, 2	; 8
 1c4:	ef ef       	ldi	r30, 0xFF	; 255
 1c6:	f7 e4       	ldi	r31, 0x47	; 71
 1c8:	31 97       	sbiw	r30, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <lcd_wr_command+0x1a>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <lcd_wr_command+0x20>
 1ce:	00 00       	nop
 1d0:	42 98       	cbi	0x08, 2	; 8
 1d2:	98 b1       	in	r25, 0x08	; 8
 1d4:	9f 70       	andi	r25, 0x0F	; 15
 1d6:	98 b9       	out	0x08, r25	; 8
 1d8:	98 b1       	in	r25, 0x08	; 8
 1da:	82 95       	swap	r24
 1dc:	80 7f       	andi	r24, 0xF0	; 240
 1de:	89 2b       	or	r24, r25
 1e0:	88 b9       	out	0x08, r24	; 8
 1e2:	40 98       	cbi	0x08, 0	; 8
 1e4:	41 98       	cbi	0x08, 1	; 8
 1e6:	42 9a       	sbi	0x08, 2	; 8
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	97 e4       	ldi	r25, 0x47	; 71
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <lcd_wr_command+0x3e>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <lcd_wr_command+0x44>
 1f2:	00 00       	nop
 1f4:	42 98       	cbi	0x08, 2	; 8
 1f6:	08 95       	ret

000001f8 <lcd_init>:
 1f8:	86 e6       	ldi	r24, 0x66	; 102
 1fa:	9e e0       	ldi	r25, 0x0E	; 14
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <lcd_init+0x4>
 200:	00 00       	nop
 202:	88 e2       	ldi	r24, 0x28	; 40
 204:	d4 df       	rcall	.-88     	; 0x1ae <lcd_wr_command>
 206:	84 e1       	ldi	r24, 0x14	; 20
 208:	d2 df       	rcall	.-92     	; 0x1ae <lcd_wr_command>
 20a:	8c e0       	ldi	r24, 0x0C	; 12
 20c:	d0 df       	rcall	.-96     	; 0x1ae <lcd_wr_command>
 20e:	86 e0       	ldi	r24, 0x06	; 6
 210:	ce df       	rcall	.-100    	; 0x1ae <lcd_wr_command>
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	cc cf       	rjmp	.-104    	; 0x1ae <lcd_wr_command>
 216:	08 95       	ret

00000218 <lcd_wr_char>:
 218:	98 b1       	in	r25, 0x08	; 8
 21a:	9f 70       	andi	r25, 0x0F	; 15
 21c:	98 b9       	out	0x08, r25	; 8
 21e:	98 b1       	in	r25, 0x08	; 8
 220:	28 2f       	mov	r18, r24
 222:	20 7f       	andi	r18, 0xF0	; 240
 224:	92 2b       	or	r25, r18
 226:	98 b9       	out	0x08, r25	; 8
 228:	40 9a       	sbi	0x08, 0	; 8
 22a:	41 98       	cbi	0x08, 1	; 8
 22c:	42 9a       	sbi	0x08, 2	; 8
 22e:	ef ef       	ldi	r30, 0xFF	; 255
 230:	f7 e4       	ldi	r31, 0x47	; 71
 232:	31 97       	sbiw	r30, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <lcd_wr_char+0x1a>
 236:	00 c0       	rjmp	.+0      	; 0x238 <lcd_wr_char+0x20>
 238:	00 00       	nop
 23a:	42 98       	cbi	0x08, 2	; 8
 23c:	98 b1       	in	r25, 0x08	; 8
 23e:	9f 70       	andi	r25, 0x0F	; 15
 240:	98 b9       	out	0x08, r25	; 8
 242:	98 b1       	in	r25, 0x08	; 8
 244:	82 95       	swap	r24
 246:	80 7f       	andi	r24, 0xF0	; 240
 248:	89 2b       	or	r24, r25
 24a:	88 b9       	out	0x08, r24	; 8
 24c:	40 9a       	sbi	0x08, 0	; 8
 24e:	41 98       	cbi	0x08, 1	; 8
 250:	42 9a       	sbi	0x08, 2	; 8
 252:	8f ef       	ldi	r24, 0xFF	; 255
 254:	97 e4       	ldi	r25, 0x47	; 71
 256:	01 97       	sbiw	r24, 0x01	; 1
 258:	f1 f7       	brne	.-4      	; 0x256 <lcd_wr_char+0x3e>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <lcd_wr_char+0x44>
 25c:	00 00       	nop
 25e:	42 98       	cbi	0x08, 2	; 8
 260:	08 95       	ret

00000262 <lcd_home>:
 262:	80 e8       	ldi	r24, 0x80	; 128
 264:	a4 cf       	rjmp	.-184    	; 0x1ae <lcd_wr_command>
 266:	08 95       	ret

00000268 <lcd_string>:
 268:	cf 93       	push	r28
 26a:	df 93       	push	r29
 26c:	ec 01       	movw	r28, r24
 26e:	88 81       	ld	r24, Y
 270:	88 23       	and	r24, r24
 272:	29 f0       	breq	.+10     	; 0x27e <lcd_string+0x16>
 274:	21 96       	adiw	r28, 0x01	; 1
 276:	d0 df       	rcall	.-96     	; 0x218 <lcd_wr_char>
 278:	89 91       	ld	r24, Y+
 27a:	81 11       	cpse	r24, r1
 27c:	fc cf       	rjmp	.-8      	; 0x276 <lcd_string+0xe>
 27e:	df 91       	pop	r29
 280:	cf 91       	pop	r28
 282:	08 95       	ret

00000284 <lcd_cursor>:
 284:	82 30       	cpi	r24, 0x02	; 2
 286:	69 f0       	breq	.+26     	; 0x2a2 <lcd_cursor+0x1e>
 288:	18 f4       	brcc	.+6      	; 0x290 <lcd_cursor+0xc>
 28a:	81 30       	cpi	r24, 0x01	; 1
 28c:	31 f0       	breq	.+12     	; 0x29a <lcd_cursor+0x16>
 28e:	08 95       	ret
 290:	83 30       	cpi	r24, 0x03	; 3
 292:	59 f0       	breq	.+22     	; 0x2aa <lcd_cursor+0x26>
 294:	84 30       	cpi	r24, 0x04	; 4
 296:	69 f0       	breq	.+26     	; 0x2b2 <lcd_cursor+0x2e>
 298:	08 95       	ret
 29a:	8f e7       	ldi	r24, 0x7F	; 127
 29c:	86 0f       	add	r24, r22
 29e:	87 cf       	rjmp	.-242    	; 0x1ae <lcd_wr_command>
 2a0:	08 95       	ret
 2a2:	8f eb       	ldi	r24, 0xBF	; 191
 2a4:	86 0f       	add	r24, r22
 2a6:	83 cf       	rjmp	.-250    	; 0x1ae <lcd_wr_command>
 2a8:	08 95       	ret
 2aa:	83 e9       	ldi	r24, 0x93	; 147
 2ac:	86 0f       	add	r24, r22
 2ae:	7f cf       	rjmp	.-258    	; 0x1ae <lcd_wr_command>
 2b0:	08 95       	ret
 2b2:	83 ed       	ldi	r24, 0xD3	; 211
 2b4:	86 0f       	add	r24, r22
 2b6:	7b cf       	rjmp	.-266    	; 0x1ae <lcd_wr_command>
 2b8:	08 95       	ret

000002ba <lcd_print>:
 2ba:	0f 93       	push	r16
 2bc:	1f 93       	push	r17
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	8a 01       	movw	r16, r20
 2c4:	e9 01       	movw	r28, r18
 2c6:	88 23       	and	r24, r24
 2c8:	11 f0       	breq	.+4      	; 0x2ce <lcd_print+0x14>
 2ca:	61 11       	cpse	r22, r1
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <lcd_print+0x18>
 2ce:	c9 df       	rcall	.-110    	; 0x262 <lcd_home>
 2d0:	01 c0       	rjmp	.+2      	; 0x2d4 <lcd_print+0x1a>
 2d2:	d8 df       	rcall	.-80     	; 0x284 <lcd_cursor>
 2d4:	c5 30       	cpi	r28, 0x05	; 5
 2d6:	d1 05       	cpc	r29, r1
 2d8:	09 f0       	breq	.+2      	; 0x2dc <lcd_print+0x22>
 2da:	cd c0       	rjmp	.+410    	; 0x476 <lcd_print+0x1bc>
 2dc:	98 01       	movw	r18, r16
 2de:	32 95       	swap	r19
 2e0:	22 95       	swap	r18
 2e2:	2f 70       	andi	r18, 0x0F	; 15
 2e4:	23 27       	eor	r18, r19
 2e6:	3f 70       	andi	r19, 0x0F	; 15
 2e8:	23 27       	eor	r18, r19
 2ea:	a7 e4       	ldi	r26, 0x47	; 71
 2ec:	b3 e0       	ldi	r27, 0x03	; 3
 2ee:	c2 d4       	rcall	.+2436   	; 0xc74 <__umulhisi3>
 2f0:	96 95       	lsr	r25
 2f2:	87 95       	ror	r24
 2f4:	96 95       	lsr	r25
 2f6:	87 95       	ror	r24
 2f8:	96 95       	lsr	r25
 2fa:	87 95       	ror	r24
 2fc:	c0 96       	adiw	r24, 0x30	; 48
 2fe:	90 93 14 02 	sts	0x0214, r25
 302:	80 93 13 02 	sts	0x0213, r24
 306:	88 df       	rcall	.-240    	; 0x218 <lcd_wr_char>
 308:	98 01       	movw	r18, r16
 30a:	36 95       	lsr	r19
 30c:	27 95       	ror	r18
 30e:	36 95       	lsr	r19
 310:	27 95       	ror	r18
 312:	36 95       	lsr	r19
 314:	27 95       	ror	r18
 316:	a5 ec       	ldi	r26, 0xC5	; 197
 318:	b0 e2       	ldi	r27, 0x20	; 32
 31a:	ac d4       	rcall	.+2392   	; 0xc74 <__umulhisi3>
 31c:	ac 01       	movw	r20, r24
 31e:	52 95       	swap	r21
 320:	42 95       	swap	r20
 322:	4f 70       	andi	r20, 0x0F	; 15
 324:	45 27       	eor	r20, r21
 326:	5f 70       	andi	r21, 0x0F	; 15
 328:	45 27       	eor	r20, r21
 32a:	50 93 16 02 	sts	0x0216, r21
 32e:	40 93 15 02 	sts	0x0215, r20
 332:	9a 01       	movw	r18, r20
 334:	ad ec       	ldi	r26, 0xCD	; 205
 336:	bc ec       	ldi	r27, 0xCC	; 204
 338:	9d d4       	rcall	.+2362   	; 0xc74 <__umulhisi3>
 33a:	96 95       	lsr	r25
 33c:	87 95       	ror	r24
 33e:	96 95       	lsr	r25
 340:	87 95       	ror	r24
 342:	96 95       	lsr	r25
 344:	87 95       	ror	r24
 346:	9c 01       	movw	r18, r24
 348:	22 0f       	add	r18, r18
 34a:	33 1f       	adc	r19, r19
 34c:	88 0f       	add	r24, r24
 34e:	99 1f       	adc	r25, r25
 350:	88 0f       	add	r24, r24
 352:	99 1f       	adc	r25, r25
 354:	88 0f       	add	r24, r24
 356:	99 1f       	adc	r25, r25
 358:	82 0f       	add	r24, r18
 35a:	93 1f       	adc	r25, r19
 35c:	48 1b       	sub	r20, r24
 35e:	59 0b       	sbc	r21, r25
 360:	ca 01       	movw	r24, r20
 362:	c0 96       	adiw	r24, 0x30	; 48
 364:	90 93 21 02 	sts	0x0221, r25
 368:	80 93 20 02 	sts	0x0220, r24
 36c:	55 df       	rcall	.-342    	; 0x218 <lcd_wr_char>
 36e:	04 c0       	rjmp	.+8      	; 0x378 <lcd_print+0xbe>
 370:	c3 30       	cpi	r28, 0x03	; 3
 372:	d1 05       	cpc	r29, r1
 374:	09 f0       	breq	.+2      	; 0x378 <lcd_print+0xbe>
 376:	84 c0       	rjmp	.+264    	; 0x480 <lcd_print+0x1c6>
 378:	98 01       	movw	r18, r16
 37a:	36 95       	lsr	r19
 37c:	27 95       	ror	r18
 37e:	36 95       	lsr	r19
 380:	27 95       	ror	r18
 382:	ab e7       	ldi	r26, 0x7B	; 123
 384:	b4 e1       	ldi	r27, 0x14	; 20
 386:	76 d4       	rcall	.+2284   	; 0xc74 <__umulhisi3>
 388:	ac 01       	movw	r20, r24
 38a:	56 95       	lsr	r21
 38c:	47 95       	ror	r20
 38e:	50 93 16 02 	sts	0x0216, r21
 392:	40 93 15 02 	sts	0x0215, r20
 396:	9a 01       	movw	r18, r20
 398:	ad ec       	ldi	r26, 0xCD	; 205
 39a:	bc ec       	ldi	r27, 0xCC	; 204
 39c:	6b d4       	rcall	.+2262   	; 0xc74 <__umulhisi3>
 39e:	96 95       	lsr	r25
 3a0:	87 95       	ror	r24
 3a2:	96 95       	lsr	r25
 3a4:	87 95       	ror	r24
 3a6:	96 95       	lsr	r25
 3a8:	87 95       	ror	r24
 3aa:	9c 01       	movw	r18, r24
 3ac:	22 0f       	add	r18, r18
 3ae:	33 1f       	adc	r19, r19
 3b0:	88 0f       	add	r24, r24
 3b2:	99 1f       	adc	r25, r25
 3b4:	88 0f       	add	r24, r24
 3b6:	99 1f       	adc	r25, r25
 3b8:	88 0f       	add	r24, r24
 3ba:	99 1f       	adc	r25, r25
 3bc:	82 0f       	add	r24, r18
 3be:	93 1f       	adc	r25, r19
 3c0:	48 1b       	sub	r20, r24
 3c2:	59 0b       	sbc	r21, r25
 3c4:	ca 01       	movw	r24, r20
 3c6:	c0 96       	adiw	r24, 0x30	; 48
 3c8:	90 93 1d 02 	sts	0x021D, r25
 3cc:	80 93 1c 02 	sts	0x021C, r24
 3d0:	23 df       	rcall	.-442    	; 0x218 <lcd_wr_char>
 3d2:	98 01       	movw	r18, r16
 3d4:	ad ec       	ldi	r26, 0xCD	; 205
 3d6:	bc ec       	ldi	r27, 0xCC	; 204
 3d8:	4d d4       	rcall	.+2202   	; 0xc74 <__umulhisi3>
 3da:	ac 01       	movw	r20, r24
 3dc:	56 95       	lsr	r21
 3de:	47 95       	ror	r20
 3e0:	56 95       	lsr	r21
 3e2:	47 95       	ror	r20
 3e4:	56 95       	lsr	r21
 3e6:	47 95       	ror	r20
 3e8:	50 93 16 02 	sts	0x0216, r21
 3ec:	40 93 15 02 	sts	0x0215, r20
 3f0:	9a 01       	movw	r18, r20
 3f2:	40 d4       	rcall	.+2176   	; 0xc74 <__umulhisi3>
 3f4:	96 95       	lsr	r25
 3f6:	87 95       	ror	r24
 3f8:	96 95       	lsr	r25
 3fa:	87 95       	ror	r24
 3fc:	96 95       	lsr	r25
 3fe:	87 95       	ror	r24
 400:	9c 01       	movw	r18, r24
 402:	22 0f       	add	r18, r18
 404:	33 1f       	adc	r19, r19
 406:	88 0f       	add	r24, r24
 408:	99 1f       	adc	r25, r25
 40a:	88 0f       	add	r24, r24
 40c:	99 1f       	adc	r25, r25
 40e:	88 0f       	add	r24, r24
 410:	99 1f       	adc	r25, r25
 412:	82 0f       	add	r24, r18
 414:	93 1f       	adc	r25, r19
 416:	48 1b       	sub	r20, r24
 418:	59 0b       	sbc	r21, r25
 41a:	ca 01       	movw	r24, r20
 41c:	c0 96       	adiw	r24, 0x30	; 48
 41e:	90 93 1b 02 	sts	0x021B, r25
 422:	80 93 1a 02 	sts	0x021A, r24
 426:	f8 de       	rcall	.-528    	; 0x218 <lcd_wr_char>
 428:	03 c0       	rjmp	.+6      	; 0x430 <lcd_print+0x176>
 42a:	c1 30       	cpi	r28, 0x01	; 1
 42c:	d1 05       	cpc	r29, r1
 42e:	f1 f4       	brne	.+60     	; 0x46c <lcd_print+0x1b2>
 430:	98 01       	movw	r18, r16
 432:	ad ec       	ldi	r26, 0xCD	; 205
 434:	bc ec       	ldi	r27, 0xCC	; 204
 436:	1e d4       	rcall	.+2108   	; 0xc74 <__umulhisi3>
 438:	96 95       	lsr	r25
 43a:	87 95       	ror	r24
 43c:	96 95       	lsr	r25
 43e:	87 95       	ror	r24
 440:	96 95       	lsr	r25
 442:	87 95       	ror	r24
 444:	9c 01       	movw	r18, r24
 446:	22 0f       	add	r18, r18
 448:	33 1f       	adc	r19, r19
 44a:	88 0f       	add	r24, r24
 44c:	99 1f       	adc	r25, r25
 44e:	88 0f       	add	r24, r24
 450:	99 1f       	adc	r25, r25
 452:	88 0f       	add	r24, r24
 454:	99 1f       	adc	r25, r25
 456:	82 0f       	add	r24, r18
 458:	93 1f       	adc	r25, r19
 45a:	08 1b       	sub	r16, r24
 45c:	19 0b       	sbc	r17, r25
 45e:	c8 01       	movw	r24, r16
 460:	c0 96       	adiw	r24, 0x30	; 48
 462:	90 93 1f 02 	sts	0x021F, r25
 466:	80 93 1e 02 	sts	0x021E, r24
 46a:	d6 de       	rcall	.-596    	; 0x218 <lcd_wr_char>
 46c:	26 97       	sbiw	r28, 0x06	; 6
 46e:	64 f0       	brlt	.+24     	; 0x488 <lcd_print+0x1ce>
 470:	85 e4       	ldi	r24, 0x45	; 69
 472:	d2 de       	rcall	.-604    	; 0x218 <lcd_wr_char>
 474:	09 c0       	rjmp	.+18     	; 0x488 <lcd_print+0x1ce>
 476:	c4 30       	cpi	r28, 0x04	; 4
 478:	d1 05       	cpc	r29, r1
 47a:	09 f0       	breq	.+2      	; 0x47e <lcd_print+0x1c4>
 47c:	79 cf       	rjmp	.-270    	; 0x370 <lcd_print+0xb6>
 47e:	44 cf       	rjmp	.-376    	; 0x308 <lcd_print+0x4e>
 480:	c2 30       	cpi	r28, 0x02	; 2
 482:	d1 05       	cpc	r29, r1
 484:	91 f6       	brne	.-92     	; 0x42a <lcd_print+0x170>
 486:	a5 cf       	rjmp	.-182    	; 0x3d2 <lcd_print+0x118>
 488:	df 91       	pop	r29
 48a:	cf 91       	pop	r28
 48c:	1f 91       	pop	r17
 48e:	0f 91       	pop	r16
 490:	08 95       	ret

00000492 <lcd_port_config>:
 492:	87 b1       	in	r24, 0x07	; 7
 494:	87 6f       	ori	r24, 0xF7	; 247
 496:	87 b9       	out	0x07, r24	; 7
 498:	88 b1       	in	r24, 0x08	; 8
 49a:	80 78       	andi	r24, 0x80	; 128
 49c:	88 b9       	out	0x08, r24	; 8
 49e:	08 95       	ret

000004a0 <adc_pin_config>:
 4a0:	10 ba       	out	0x10, r1	; 16
 4a2:	11 ba       	out	0x11, r1	; 17
 4a4:	10 92 07 01 	sts	0x0107, r1
 4a8:	10 92 08 01 	sts	0x0108, r1
 4ac:	08 95       	ret

000004ae <motion_pin_config>:
 4ae:	81 b1       	in	r24, 0x01	; 1
 4b0:	8f 60       	ori	r24, 0x0F	; 15
 4b2:	81 b9       	out	0x01, r24	; 1
 4b4:	82 b1       	in	r24, 0x02	; 2
 4b6:	80 7f       	andi	r24, 0xF0	; 240
 4b8:	82 b9       	out	0x02, r24	; 2
 4ba:	ea e0       	ldi	r30, 0x0A	; 10
 4bc:	f1 e0       	ldi	r31, 0x01	; 1
 4be:	80 81       	ld	r24, Z
 4c0:	88 61       	ori	r24, 0x18	; 24
 4c2:	80 83       	st	Z, r24
 4c4:	eb e0       	ldi	r30, 0x0B	; 11
 4c6:	f1 e0       	ldi	r31, 0x01	; 1
 4c8:	80 81       	ld	r24, Z
 4ca:	88 61       	ori	r24, 0x18	; 24
 4cc:	80 83       	st	Z, r24
 4ce:	08 95       	ret

000004d0 <left_encoder_pin_config>:
 4d0:	6c 98       	cbi	0x0d, 4	; 13
 4d2:	74 9a       	sbi	0x0e, 4	; 14
 4d4:	08 95       	ret

000004d6 <right_encoder_pin_config>:
 4d6:	6d 98       	cbi	0x0d, 5	; 13
 4d8:	75 9a       	sbi	0x0e, 5	; 14
 4da:	08 95       	ret

000004dc <port_init>:
 4dc:	da df       	rcall	.-76     	; 0x492 <lcd_port_config>
 4de:	e0 df       	rcall	.-64     	; 0x4a0 <adc_pin_config>
 4e0:	e6 df       	rcall	.-52     	; 0x4ae <motion_pin_config>
 4e2:	f6 df       	rcall	.-20     	; 0x4d0 <left_encoder_pin_config>
 4e4:	f8 cf       	rjmp	.-16     	; 0x4d6 <right_encoder_pin_config>
 4e6:	08 95       	ret

000004e8 <timer5_init>:
 4e8:	e1 e2       	ldi	r30, 0x21	; 33
 4ea:	f1 e0       	ldi	r31, 0x01	; 1
 4ec:	10 82       	st	Z, r1
 4ee:	8f ef       	ldi	r24, 0xFF	; 255
 4f0:	80 93 25 01 	sts	0x0125, r24
 4f4:	91 e0       	ldi	r25, 0x01	; 1
 4f6:	90 93 24 01 	sts	0x0124, r25
 4fa:	10 92 29 01 	sts	0x0129, r1
 4fe:	80 93 28 01 	sts	0x0128, r24
 502:	10 92 2b 01 	sts	0x012B, r1
 506:	80 93 2a 01 	sts	0x012A, r24
 50a:	10 92 2d 01 	sts	0x012D, r1
 50e:	80 93 2c 01 	sts	0x012C, r24
 512:	89 ea       	ldi	r24, 0xA9	; 169
 514:	80 93 20 01 	sts	0x0120, r24
 518:	8b e0       	ldi	r24, 0x0B	; 11
 51a:	80 83       	st	Z, r24
 51c:	08 95       	ret

0000051e <adc_init>:
 51e:	ea e7       	ldi	r30, 0x7A	; 122
 520:	f0 e0       	ldi	r31, 0x00	; 0
 522:	10 82       	st	Z, r1
 524:	10 92 7b 00 	sts	0x007B, r1
 528:	80 e2       	ldi	r24, 0x20	; 32
 52a:	80 93 7c 00 	sts	0x007C, r24
 52e:	80 e8       	ldi	r24, 0x80	; 128
 530:	80 bf       	out	0x30, r24	; 48
 532:	86 e8       	ldi	r24, 0x86	; 134
 534:	80 83       	st	Z, r24
 536:	08 95       	ret

00000538 <ADC_Conversion>:
 538:	88 30       	cpi	r24, 0x08	; 8
 53a:	18 f0       	brcs	.+6      	; 0x542 <ADC_Conversion+0xa>
 53c:	98 e0       	ldi	r25, 0x08	; 8
 53e:	90 93 7b 00 	sts	0x007B, r25
 542:	87 70       	andi	r24, 0x07	; 7
 544:	80 62       	ori	r24, 0x20	; 32
 546:	80 93 7c 00 	sts	0x007C, r24
 54a:	ea e7       	ldi	r30, 0x7A	; 122
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	80 81       	ld	r24, Z
 550:	80 64       	ori	r24, 0x40	; 64
 552:	80 83       	st	Z, r24
 554:	80 81       	ld	r24, Z
 556:	84 ff       	sbrs	r24, 4
 558:	fd cf       	rjmp	.-6      	; 0x554 <ADC_Conversion+0x1c>
 55a:	80 91 79 00 	lds	r24, 0x0079
 55e:	ea e7       	ldi	r30, 0x7A	; 122
 560:	f0 e0       	ldi	r31, 0x00	; 0
 562:	90 81       	ld	r25, Z
 564:	90 61       	ori	r25, 0x10	; 16
 566:	90 83       	st	Z, r25
 568:	10 92 7b 00 	sts	0x007B, r1
 56c:	08 95       	ret

0000056e <left_position_encoder_interrupt_init>:
 56e:	f8 94       	cli
 570:	ea e6       	ldi	r30, 0x6A	; 106
 572:	f0 e0       	ldi	r31, 0x00	; 0
 574:	80 81       	ld	r24, Z
 576:	82 60       	ori	r24, 0x02	; 2
 578:	80 83       	st	Z, r24
 57a:	ec 9a       	sbi	0x1d, 4	; 29
 57c:	78 94       	sei
 57e:	08 95       	ret

00000580 <right_position_encoder_interrupt_init>:
 580:	f8 94       	cli
 582:	ea e6       	ldi	r30, 0x6A	; 106
 584:	f0 e0       	ldi	r31, 0x00	; 0
 586:	80 81       	ld	r24, Z
 588:	88 60       	ori	r24, 0x08	; 8
 58a:	80 83       	st	Z, r24
 58c:	ed 9a       	sbi	0x1d, 5	; 29
 58e:	78 94       	sei
 590:	08 95       	ret

00000592 <__vector_6>:
 592:	1f 92       	push	r1
 594:	0f 92       	push	r0
 596:	0f b6       	in	r0, 0x3f	; 63
 598:	0f 92       	push	r0
 59a:	11 24       	eor	r1, r1
 59c:	8f 93       	push	r24
 59e:	9f 93       	push	r25
 5a0:	af 93       	push	r26
 5a2:	bf 93       	push	r27
 5a4:	80 91 06 02 	lds	r24, 0x0206
 5a8:	90 91 07 02 	lds	r25, 0x0207
 5ac:	a0 91 08 02 	lds	r26, 0x0208
 5b0:	b0 91 09 02 	lds	r27, 0x0209
 5b4:	01 96       	adiw	r24, 0x01	; 1
 5b6:	a1 1d       	adc	r26, r1
 5b8:	b1 1d       	adc	r27, r1
 5ba:	80 93 06 02 	sts	0x0206, r24
 5be:	90 93 07 02 	sts	0x0207, r25
 5c2:	a0 93 08 02 	sts	0x0208, r26
 5c6:	b0 93 09 02 	sts	0x0209, r27
 5ca:	bf 91       	pop	r27
 5cc:	af 91       	pop	r26
 5ce:	9f 91       	pop	r25
 5d0:	8f 91       	pop	r24
 5d2:	0f 90       	pop	r0
 5d4:	0f be       	out	0x3f, r0	; 63
 5d6:	0f 90       	pop	r0
 5d8:	1f 90       	pop	r1
 5da:	18 95       	reti

000005dc <__vector_5>:
 5dc:	1f 92       	push	r1
 5de:	0f 92       	push	r0
 5e0:	0f b6       	in	r0, 0x3f	; 63
 5e2:	0f 92       	push	r0
 5e4:	11 24       	eor	r1, r1
 5e6:	8f 93       	push	r24
 5e8:	9f 93       	push	r25
 5ea:	af 93       	push	r26
 5ec:	bf 93       	push	r27
 5ee:	80 91 0a 02 	lds	r24, 0x020A
 5f2:	90 91 0b 02 	lds	r25, 0x020B
 5f6:	a0 91 0c 02 	lds	r26, 0x020C
 5fa:	b0 91 0d 02 	lds	r27, 0x020D
 5fe:	01 96       	adiw	r24, 0x01	; 1
 600:	a1 1d       	adc	r26, r1
 602:	b1 1d       	adc	r27, r1
 604:	80 93 0a 02 	sts	0x020A, r24
 608:	90 93 0b 02 	sts	0x020B, r25
 60c:	a0 93 0c 02 	sts	0x020C, r26
 610:	b0 93 0d 02 	sts	0x020D, r27
 614:	bf 91       	pop	r27
 616:	af 91       	pop	r26
 618:	9f 91       	pop	r25
 61a:	8f 91       	pop	r24
 61c:	0f 90       	pop	r0
 61e:	0f be       	out	0x3f, r0	; 63
 620:	0f 90       	pop	r0
 622:	1f 90       	pop	r1
 624:	18 95       	reti

00000626 <motion_set>:
 626:	92 b1       	in	r25, 0x02	; 2
 628:	90 7f       	andi	r25, 0xF0	; 240
 62a:	8f 70       	andi	r24, 0x0F	; 15
 62c:	98 2b       	or	r25, r24
 62e:	92 b9       	out	0x02, r25	; 2
 630:	08 95       	ret

00000632 <forward>:
 632:	86 e0       	ldi	r24, 0x06	; 6
 634:	f8 cf       	rjmp	.-16     	; 0x626 <motion_set>
 636:	08 95       	ret

00000638 <stop>:
 638:	80 e0       	ldi	r24, 0x00	; 0
 63a:	f5 cf       	rjmp	.-22     	; 0x626 <motion_set>
 63c:	08 95       	ret

0000063e <left>:
 63e:	85 e0       	ldi	r24, 0x05	; 5
 640:	f2 cf       	rjmp	.-28     	; 0x626 <motion_set>
 642:	08 95       	ret

00000644 <right>:
 644:	8a e0       	ldi	r24, 0x0A	; 10
 646:	ef cf       	rjmp	.-34     	; 0x626 <motion_set>
 648:	08 95       	ret

0000064a <angle_rotate>:
 64a:	10 92 06 02 	sts	0x0206, r1
 64e:	10 92 07 02 	sts	0x0207, r1
 652:	10 92 08 02 	sts	0x0208, r1
 656:	10 92 09 02 	sts	0x0209, r1
 65a:	10 92 0a 02 	sts	0x020A, r1
 65e:	10 92 0b 02 	sts	0x020B, r1
 662:	10 92 0c 02 	sts	0x020C, r1
 666:	10 92 0d 02 	sts	0x020D, r1
 66a:	bc 01       	movw	r22, r24
 66c:	80 e0       	ldi	r24, 0x00	; 0
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	73 d2       	rcall	.+1254   	; 0xb58 <__floatunsisf>
 672:	28 e4       	ldi	r18, 0x48	; 72
 674:	31 ee       	ldi	r19, 0xE1	; 225
 676:	42 e8       	ldi	r20, 0x82	; 130
 678:	50 e4       	ldi	r21, 0x40	; 64
 67a:	da d1       	rcall	.+948    	; 0xa30 <__divsf3>
 67c:	41 d2       	rcall	.+1154   	; 0xb00 <__fixunssfsi>
 67e:	67 2b       	or	r22, r23
 680:	11 f4       	brne	.+4      	; 0x686 <angle_rotate+0x3c>
 682:	da cf       	rjmp	.-76     	; 0x638 <stop>
 684:	08 95       	ret
 686:	ff cf       	rjmp	.-2      	; 0x686 <angle_rotate+0x3c>

00000688 <left_degrees>:
 688:	cf 93       	push	r28
 68a:	df 93       	push	r29
 68c:	ec 01       	movw	r28, r24
 68e:	d7 df       	rcall	.-82     	; 0x63e <left>
 690:	ce 01       	movw	r24, r28
 692:	db df       	rcall	.-74     	; 0x64a <angle_rotate>
 694:	df 91       	pop	r29
 696:	cf 91       	pop	r28
 698:	08 95       	ret

0000069a <right_degrees>:
 69a:	cf 93       	push	r28
 69c:	df 93       	push	r29
 69e:	ec 01       	movw	r28, r24
 6a0:	d1 df       	rcall	.-94     	; 0x644 <right>
 6a2:	ce 01       	movw	r24, r28
 6a4:	d2 df       	rcall	.-92     	; 0x64a <angle_rotate>
 6a6:	df 91       	pop	r29
 6a8:	cf 91       	pop	r28
 6aa:	08 95       	ret

000006ac <buzzer_on>:
 6ac:	86 b1       	in	r24, 0x06	; 6
 6ae:	88 60       	ori	r24, 0x08	; 8
 6b0:	88 b9       	out	0x08, r24	; 8
 6b2:	08 95       	ret

000006b4 <buzzer_off>:
 6b4:	86 b1       	in	r24, 0x06	; 6
 6b6:	87 7f       	andi	r24, 0xF7	; 247
 6b8:	88 b9       	out	0x08, r24	; 8
 6ba:	08 95       	ret

000006bc <init_devices>:
 6bc:	f8 94       	cli
 6be:	0e df       	rcall	.-484    	; 0x4dc <port_init>
 6c0:	2e df       	rcall	.-420    	; 0x51e <adc_init>
 6c2:	55 df       	rcall	.-342    	; 0x56e <left_position_encoder_interrupt_init>
 6c4:	5d df       	rcall	.-326    	; 0x580 <right_position_encoder_interrupt_init>
 6c6:	3b 9a       	sbi	0x07, 3	; 7
 6c8:	43 98       	cbi	0x08, 3	; 8
 6ca:	0e df       	rcall	.-484    	; 0x4e8 <timer5_init>
 6cc:	78 94       	sei
 6ce:	08 95       	ret

000006d0 <set_color>:
 6d0:	83 e0       	ldi	r24, 0x03	; 3
 6d2:	32 df       	rcall	.-412    	; 0x538 <ADC_Conversion>
 6d4:	80 93 10 02 	sts	0x0210, r24
 6d8:	82 e0       	ldi	r24, 0x02	; 2
 6da:	2e df       	rcall	.-420    	; 0x538 <ADC_Conversion>
 6dc:	80 93 0f 02 	sts	0x020F, r24
 6e0:	81 e0       	ldi	r24, 0x01	; 1
 6e2:	2a df       	rcall	.-428    	; 0x538 <ADC_Conversion>
 6e4:	80 93 0e 02 	sts	0x020E, r24
 6e8:	08 95       	ret

000006ea <correct>:
 6ea:	21 e0       	ldi	r18, 0x01	; 1
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	44 e0       	ldi	r20, 0x04	; 4
 6f0:	50 e0       	ldi	r21, 0x00	; 0
 6f2:	6f e0       	ldi	r22, 0x0F	; 15
 6f4:	82 e0       	ldi	r24, 0x02	; 2
 6f6:	e1 dd       	rcall	.-1086   	; 0x2ba <lcd_print>
 6f8:	a2 df       	rcall	.-188    	; 0x63e <left>
 6fa:	2f ef       	ldi	r18, 0xFF	; 255
 6fc:	8f e7       	ldi	r24, 0x7F	; 127
 6fe:	94 e0       	ldi	r25, 0x04	; 4
 700:	21 50       	subi	r18, 0x01	; 1
 702:	80 40       	sbci	r24, 0x00	; 0
 704:	90 40       	sbci	r25, 0x00	; 0
 706:	e1 f7       	brne	.-8      	; 0x700 <correct+0x16>
 708:	00 c0       	rjmp	.+0      	; 0x70a <correct+0x20>
 70a:	00 00       	nop
 70c:	e1 df       	rcall	.-62     	; 0x6d0 <set_color>
 70e:	80 91 0f 02 	lds	r24, 0x020F
 712:	89 32       	cpi	r24, 0x29	; 41
 714:	f0 f4       	brcc	.+60     	; 0x752 <correct+0x68>
 716:	80 91 0e 02 	lds	r24, 0x020E
 71a:	89 32       	cpi	r24, 0x29	; 41
 71c:	d0 f4       	brcc	.+52     	; 0x752 <correct+0x68>
 71e:	8c df       	rcall	.-232    	; 0x638 <stop>
 720:	91 df       	rcall	.-222    	; 0x644 <right>
 722:	2f ef       	ldi	r18, 0xFF	; 255
 724:	8f ef       	ldi	r24, 0xFF	; 255
 726:	98 e0       	ldi	r25, 0x08	; 8
 728:	21 50       	subi	r18, 0x01	; 1
 72a:	80 40       	sbci	r24, 0x00	; 0
 72c:	90 40       	sbci	r25, 0x00	; 0
 72e:	e1 f7       	brne	.-8      	; 0x728 <correct+0x3e>
 730:	00 c0       	rjmp	.+0      	; 0x732 <correct+0x48>
 732:	00 00       	nop
 734:	cd df       	rcall	.-102    	; 0x6d0 <set_color>
 736:	80 91 0f 02 	lds	r24, 0x020F
 73a:	89 32       	cpi	r24, 0x29	; 41
 73c:	50 f4       	brcc	.+20     	; 0x752 <correct+0x68>
 73e:	90 91 10 02 	lds	r25, 0x0210
 742:	88 32       	cpi	r24, 0x28	; 40
 744:	30 f4       	brcc	.+12     	; 0x752 <correct+0x68>
 746:	98 32       	cpi	r25, 0x28	; 40
 748:	20 f4       	brcc	.+8      	; 0x752 <correct+0x68>
 74a:	80 91 0e 02 	lds	r24, 0x020E
 74e:	88 32       	cpi	r24, 0x28	; 40
 750:	60 f2       	brcs	.-104    	; 0x6ea <correct>
 752:	08 95       	ret

00000754 <noNatak>:
 754:	86 e9       	ldi	r24, 0x96	; 150
 756:	80 93 28 01 	sts	0x0128, r24
 75a:	80 93 2a 01 	sts	0x012A, r24
 75e:	b8 df       	rcall	.-144    	; 0x6d0 <set_color>
 760:	21 e0       	ldi	r18, 0x01	; 1
 762:	30 e0       	ldi	r19, 0x00	; 0
 764:	41 e0       	ldi	r20, 0x01	; 1
 766:	50 e0       	ldi	r21, 0x00	; 0
 768:	65 e0       	ldi	r22, 0x05	; 5
 76a:	81 e0       	ldi	r24, 0x01	; 1
 76c:	a6 dd       	rcall	.-1204   	; 0x2ba <lcd_print>
 76e:	80 91 10 02 	lds	r24, 0x0210
 772:	89 32       	cpi	r24, 0x29	; 41
 774:	90 f0       	brcs	.+36     	; 0x79a <noNatak+0x46>
 776:	63 df       	rcall	.-314    	; 0x63e <left>
 778:	2f ef       	ldi	r18, 0xFF	; 255
 77a:	8f e7       	ldi	r24, 0x7F	; 127
 77c:	94 e0       	ldi	r25, 0x04	; 4
 77e:	21 50       	subi	r18, 0x01	; 1
 780:	80 40       	sbci	r24, 0x00	; 0
 782:	90 40       	sbci	r25, 0x00	; 0
 784:	e1 f7       	brne	.-8      	; 0x77e <noNatak+0x2a>
 786:	00 c0       	rjmp	.+0      	; 0x788 <noNatak+0x34>
 788:	00 00       	nop
 78a:	a2 df       	rcall	.-188    	; 0x6d0 <set_color>
 78c:	80 91 10 02 	lds	r24, 0x0210
 790:	88 32       	cpi	r24, 0x28	; 40
 792:	d8 f0       	brcs	.+54     	; 0x7ca <noNatak+0x76>
 794:	89 32       	cpi	r24, 0x29	; 41
 796:	78 f7       	brcc	.-34     	; 0x776 <noNatak+0x22>
 798:	17 c0       	rjmp	.+46     	; 0x7c8 <noNatak+0x74>
 79a:	80 91 0e 02 	lds	r24, 0x020E
 79e:	89 32       	cpi	r24, 0x29	; 41
 7a0:	90 f0       	brcs	.+36     	; 0x7c6 <noNatak+0x72>
 7a2:	50 df       	rcall	.-352    	; 0x644 <right>
 7a4:	2f ef       	ldi	r18, 0xFF	; 255
 7a6:	8f e7       	ldi	r24, 0x7F	; 127
 7a8:	94 e0       	ldi	r25, 0x04	; 4
 7aa:	21 50       	subi	r18, 0x01	; 1
 7ac:	80 40       	sbci	r24, 0x00	; 0
 7ae:	90 40       	sbci	r25, 0x00	; 0
 7b0:	e1 f7       	brne	.-8      	; 0x7aa <noNatak+0x56>
 7b2:	00 c0       	rjmp	.+0      	; 0x7b4 <noNatak+0x60>
 7b4:	00 00       	nop
 7b6:	8c df       	rcall	.-232    	; 0x6d0 <set_color>
 7b8:	80 91 0e 02 	lds	r24, 0x020E
 7bc:	88 32       	cpi	r24, 0x28	; 40
 7be:	28 f0       	brcs	.+10     	; 0x7ca <noNatak+0x76>
 7c0:	89 32       	cpi	r24, 0x29	; 41
 7c2:	78 f7       	brcc	.-34     	; 0x7a2 <noNatak+0x4e>
 7c4:	01 c0       	rjmp	.+2      	; 0x7c8 <noNatak+0x74>
 7c6:	91 df       	rcall	.-222    	; 0x6ea <correct>
 7c8:	37 cf       	rjmp	.-402    	; 0x638 <stop>
 7ca:	08 95       	ret

000007cc <turnDelay>:
 7cc:	32 df       	rcall	.-412    	; 0x632 <forward>
 7ce:	2f ef       	ldi	r18, 0xFF	; 255
 7d0:	8f ef       	ldi	r24, 0xFF	; 255
 7d2:	93 eb       	ldi	r25, 0xB3	; 179
 7d4:	21 50       	subi	r18, 0x01	; 1
 7d6:	80 40       	sbci	r24, 0x00	; 0
 7d8:	90 40       	sbci	r25, 0x00	; 0
 7da:	e1 f7       	brne	.-8      	; 0x7d4 <turnDelay+0x8>
 7dc:	00 c0       	rjmp	.+0      	; 0x7de <turnDelay+0x12>
 7de:	00 00       	nop
 7e0:	08 95       	ret

000007e2 <nodeRight>:
 7e2:	f4 df       	rcall	.-24     	; 0x7cc <turnDelay>
 7e4:	84 e6       	ldi	r24, 0x64	; 100
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	58 df       	rcall	.-336    	; 0x69a <right_degrees>
 7ea:	b4 cf       	rjmp	.-152    	; 0x754 <noNatak>
 7ec:	08 95       	ret

000007ee <nodeLeft>:
 7ee:	ee df       	rcall	.-36     	; 0x7cc <turnDelay>
 7f0:	84 e6       	ldi	r24, 0x64	; 100
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	49 df       	rcall	.-366    	; 0x688 <left_degrees>
 7f6:	ae cf       	rjmp	.-164    	; 0x754 <noNatak>
 7f8:	08 95       	ret

000007fa <buzzer>:
 7fa:	58 df       	rcall	.-336    	; 0x6ac <buzzer_on>
 7fc:	2f ef       	ldi	r18, 0xFF	; 255
 7fe:	8f ef       	ldi	r24, 0xFF	; 255
 800:	9c e2       	ldi	r25, 0x2C	; 44
 802:	21 50       	subi	r18, 0x01	; 1
 804:	80 40       	sbci	r24, 0x00	; 0
 806:	90 40       	sbci	r25, 0x00	; 0
 808:	e1 f7       	brne	.-8      	; 0x802 <buzzer+0x8>
 80a:	00 c0       	rjmp	.+0      	; 0x80c <buzzer+0x12>
 80c:	00 00       	nop
 80e:	52 cf       	rjmp	.-348    	; 0x6b4 <buzzer_off>
 810:	08 95       	ret

00000812 <forwardJaa>:
 812:	8f ef       	ldi	r24, 0xFF	; 255
 814:	80 93 28 01 	sts	0x0128, r24
 818:	80 93 2a 01 	sts	0x012A, r24
 81c:	59 df       	rcall	.-334    	; 0x6d0 <set_color>
 81e:	80 91 0f 02 	lds	r24, 0x020F
 822:	89 32       	cpi	r24, 0x29	; 41
 824:	58 f0       	brcs	.+22     	; 0x83c <forwardJaa+0x2a>
 826:	80 91 0e 02 	lds	r24, 0x020E
 82a:	89 32       	cpi	r24, 0x29	; 41
 82c:	20 f4       	brcc	.+8      	; 0x836 <forwardJaa+0x24>
 82e:	80 91 10 02 	lds	r24, 0x0210
 832:	89 32       	cpi	r24, 0x29	; 41
 834:	18 f0       	brcs	.+6      	; 0x83c <forwardJaa+0x2a>
 836:	ca df       	rcall	.-108    	; 0x7cc <turnDelay>
 838:	e0 cf       	rjmp	.-64     	; 0x7fa <buzzer>
 83a:	08 95       	ret
 83c:	fa de       	rcall	.-524    	; 0x632 <forward>
 83e:	80 91 0f 02 	lds	r24, 0x020F
 842:	89 32       	cpi	r24, 0x29	; 41
 844:	40 f0       	brcs	.+16     	; 0x856 <forwardJaa+0x44>
 846:	80 91 0e 02 	lds	r24, 0x020E
 84a:	88 32       	cpi	r24, 0x28	; 40
 84c:	20 f4       	brcc	.+8      	; 0x856 <forwardJaa+0x44>
 84e:	80 91 10 02 	lds	r24, 0x0210
 852:	88 32       	cpi	r24, 0x28	; 40
 854:	18 f3       	brcs	.-58     	; 0x81c <forwardJaa+0xa>
 856:	7e df       	rcall	.-260    	; 0x754 <noNatak>
 858:	dc cf       	rjmp	.-72     	; 0x812 <forwardJaa>
 85a:	08 95       	ret

0000085c <travel>:
void travel(int CT,int nxTerm)
{
 85c:	0f 93       	push	r16
 85e:	1f 93       	push	r17
 860:	cf 93       	push	r28
 862:	df 93       	push	r29
 864:	ec 01       	movw	r28, r24
 866:	8b 01       	movw	r16, r22
	
	forwardJaa();
 868:	d4 df       	rcall	.-88     	; 0x812 <forwardJaa>
	lcd_print(2,15,1,1);
 86a:	21 e0       	ldi	r18, 0x01	; 1
 86c:	30 e0       	ldi	r19, 0x00	; 0
 86e:	41 e0       	ldi	r20, 0x01	; 1
 870:	50 e0       	ldi	r21, 0x00	; 0
 872:	6f e0       	ldi	r22, 0x0F	; 15
 874:	82 e0       	ldi	r24, 0x02	; 2
 876:	21 dd       	rcall	.-1470   	; 0x2ba <lcd_print>
	/*lcd_print(1,11,(CT==1 && (nxTerm == 3 || nxTerm== 4)),1);// ||
	lcd_print(1,12,(CT==4 && (nxTerm == 1 || nxTerm== 2)),1);
	lcd_print(1,13,(CT==2 && (nxTerm == 3 || nxTerm== 4)),1); // ||
	lcd_print(1,14,(CT==3 && (nxTerm == 1 || nxTerm== 2)),1);
	*/
	lcd_print(1,1,1,1);
 878:	21 e0       	ldi	r18, 0x01	; 1
 87a:	30 e0       	ldi	r19, 0x00	; 0
 87c:	41 e0       	ldi	r20, 0x01	; 1
 87e:	50 e0       	ldi	r21, 0x00	; 0
 880:	61 e0       	ldi	r22, 0x01	; 1
 882:	81 e0       	ldi	r24, 0x01	; 1
 884:	1a dd       	rcall	.-1484   	; 0x2ba <lcd_print>
	if((CT==1 && (nxTerm == 2 || nxTerm== 4)) || (CT==4 && (nxTerm == 1 || nxTerm== 3)))
 886:	c1 30       	cpi	r28, 0x01	; 1
 888:	d1 05       	cpc	r29, r1
 88a:	41 f4       	brne	.+16     	; 0x89c <travel+0x40>
 88c:	02 30       	cpi	r16, 0x02	; 2
 88e:	11 05       	cpc	r17, r1
 890:	09 f4       	brne	.+2      	; 0x894 <travel+0x38>
 892:	5a c0       	rjmp	.+180    	; 0x948 <travel+0xec>
 894:	04 30       	cpi	r16, 0x04	; 4
 896:	11 05       	cpc	r17, r1
 898:	c9 f4       	brne	.+50     	; 0x8cc <travel+0x70>
 89a:	49 c0       	rjmp	.+146    	; 0x92e <travel+0xd2>
 89c:	c4 30       	cpi	r28, 0x04	; 4
 89e:	d1 05       	cpc	r29, r1
 8a0:	51 f4       	brne	.+20     	; 0x8b6 <travel+0x5a>
 8a2:	01 30       	cpi	r16, 0x01	; 1
 8a4:	11 05       	cpc	r17, r1
 8a6:	09 f4       	brne	.+2      	; 0x8aa <travel+0x4e>
 8a8:	5d c0       	rjmp	.+186    	; 0x964 <travel+0x108>
 8aa:	03 30       	cpi	r16, 0x03	; 3
 8ac:	11 05       	cpc	r17, r1
 8ae:	c1 f4       	brne	.+48     	; 0x8e0 <travel+0x84>
 8b0:	4b c0       	rjmp	.+150    	; 0x948 <travel+0xec>
		forwardJaa();
		_delay_ms(1000);
	
		forwardJaa();
		if(nxTerm==1 || nxTerm==4)
			nodeRight();
 8b2:	97 df       	rcall	.-210    	; 0x7e2 <nodeRight>
 8b4:	1e c0       	rjmp	.+60     	; 0x8f2 <travel+0x96>
		else
			nodeLeft();
	}
	else if((CT==2 && (nxTerm == 3 || nxTerm== 1)) || (CT==3 && (nxTerm == 4 || nxTerm== 2)))
 8b6:	c2 30       	cpi	r28, 0x02	; 2
 8b8:	d1 05       	cpc	r29, r1
 8ba:	41 f4       	brne	.+16     	; 0x8cc <travel+0x70>
 8bc:	03 30       	cpi	r16, 0x03	; 3
 8be:	11 05       	cpc	r17, r1
 8c0:	09 f4       	brne	.+2      	; 0x8c4 <travel+0x68>
 8c2:	5d c0       	rjmp	.+186    	; 0x97e <travel+0x122>
 8c4:	01 30       	cpi	r16, 0x01	; 1
 8c6:	11 05       	cpc	r17, r1
 8c8:	59 f4       	brne	.+22     	; 0x8e0 <travel+0x84>
 8ca:	70 c0       	rjmp	.+224    	; 0x9ac <travel+0x150>
 8cc:	23 97       	sbiw	r28, 0x03	; 3
 8ce:	41 f4       	brne	.+16     	; 0x8e0 <travel+0x84>
 8d0:	04 30       	cpi	r16, 0x04	; 4
 8d2:	11 05       	cpc	r17, r1
 8d4:	09 f4       	brne	.+2      	; 0x8d8 <travel+0x7c>
 8d6:	6a c0       	rjmp	.+212    	; 0x9ac <travel+0x150>
 8d8:	02 30       	cpi	r16, 0x02	; 2
 8da:	11 05       	cpc	r17, r1
 8dc:	09 f4       	brne	.+2      	; 0x8e0 <travel+0x84>
 8de:	4f c0       	rjmp	.+158    	; 0x97e <travel+0x122>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 8e0:	2f ef       	ldi	r18, 0xFF	; 255
 8e2:	8f ef       	ldi	r24, 0xFF	; 255
 8e4:	9c e2       	ldi	r25, 0x2C	; 44
 8e6:	21 50       	subi	r18, 0x01	; 1
 8e8:	80 40       	sbci	r24, 0x00	; 0
 8ea:	90 40       	sbci	r25, 0x00	; 0
 8ec:	e1 f7       	brne	.-8      	; 0x8e6 <travel+0x8a>
 8ee:	00 c0       	rjmp	.+0      	; 0x8f0 <travel+0x94>
 8f0:	00 00       	nop
	}
	else
	{
		_delay_ms(1000);
	}
	lcd_print(1,3,1,1);
 8f2:	21 e0       	ldi	r18, 0x01	; 1
 8f4:	30 e0       	ldi	r19, 0x00	; 0
 8f6:	41 e0       	ldi	r20, 0x01	; 1
 8f8:	50 e0       	ldi	r21, 0x00	; 0
 8fa:	63 e0       	ldi	r22, 0x03	; 3
 8fc:	81 e0       	ldi	r24, 0x01	; 1
 8fe:	dd dc       	rcall	.-1606   	; 0x2ba <lcd_print>
	forwardJaa();	
 900:	88 df       	rcall	.-240    	; 0x812 <forwardJaa>
	lcd_print(2,15,2,1);
 902:	21 e0       	ldi	r18, 0x01	; 1
 904:	30 e0       	ldi	r19, 0x00	; 0
 906:	42 e0       	ldi	r20, 0x02	; 2
 908:	50 e0       	ldi	r21, 0x00	; 0
 90a:	6f e0       	ldi	r22, 0x0F	; 15
 90c:	82 e0       	ldi	r24, 0x02	; 2
 90e:	d5 dc       	rcall	.-1622   	; 0x2ba <lcd_print>
	stop();
 910:	93 de       	rcall	.-730    	; 0x638 <stop>
	buzzer();
 912:	73 df       	rcall	.-282    	; 0x7fa <buzzer>
	right();
 914:	97 de       	rcall	.-722    	; 0x644 <right>
 916:	2f ef       	ldi	r18, 0xFF	; 255
 918:	8f ef       	ldi	r24, 0xFF	; 255
 91a:	99 e5       	ldi	r25, 0x59	; 89
 91c:	21 50       	subi	r18, 0x01	; 1
 91e:	80 40       	sbci	r24, 0x00	; 0
 920:	90 40       	sbci	r25, 0x00	; 0
 922:	e1 f7       	brne	.-8      	; 0x91c <travel+0xc0>
 924:	00 c0       	rjmp	.+0      	; 0x926 <travel+0xca>
 926:	00 00       	nop
	_delay_ms(2000);
	stop();
 928:	87 de       	rcall	.-754    	; 0x638 <stop>
	buzzer();
 92a:	67 df       	rcall	.-306    	; 0x7fa <buzzer>
 92c:	56 c0       	rjmp	.+172    	; 0x9da <travel+0x17e>
	lcd_print(1,14,(CT==3 && (nxTerm == 1 || nxTerm== 2)),1);
	*/
	lcd_print(1,1,1,1);
	if((CT==1 && (nxTerm == 2 || nxTerm== 4)) || (CT==4 && (nxTerm == 1 || nxTerm== 3)))
	{
		nodeLeft();
 92e:	5f df       	rcall	.-322    	; 0x7ee <nodeLeft>
		forwardJaa();
 930:	70 df       	rcall	.-288    	; 0x812 <forwardJaa>
 932:	2f ef       	ldi	r18, 0xFF	; 255
 934:	8f ef       	ldi	r24, 0xFF	; 255
 936:	9c e2       	ldi	r25, 0x2C	; 44
 938:	21 50       	subi	r18, 0x01	; 1
 93a:	80 40       	sbci	r24, 0x00	; 0
 93c:	90 40       	sbci	r25, 0x00	; 0
 93e:	e1 f7       	brne	.-8      	; 0x938 <travel+0xdc>
 940:	00 c0       	rjmp	.+0      	; 0x942 <travel+0xe6>
 942:	00 00       	nop
		_delay_ms(1000);
	
		forwardJaa();
 944:	66 df       	rcall	.-308    	; 0x812 <forwardJaa>
 946:	b5 cf       	rjmp	.-150    	; 0x8b2 <travel+0x56>
	lcd_print(1,14,(CT==3 && (nxTerm == 1 || nxTerm== 2)),1);
	*/
	lcd_print(1,1,1,1);
	if((CT==1 && (nxTerm == 2 || nxTerm== 4)) || (CT==4 && (nxTerm == 1 || nxTerm== 3)))
	{
		nodeLeft();
 948:	52 df       	rcall	.-348    	; 0x7ee <nodeLeft>
		forwardJaa();
 94a:	63 df       	rcall	.-314    	; 0x812 <forwardJaa>
 94c:	2f ef       	ldi	r18, 0xFF	; 255
 94e:	8f ef       	ldi	r24, 0xFF	; 255
 950:	9c e2       	ldi	r25, 0x2C	; 44
 952:	21 50       	subi	r18, 0x01	; 1
 954:	80 40       	sbci	r24, 0x00	; 0
 956:	90 40       	sbci	r25, 0x00	; 0
 958:	e1 f7       	brne	.-8      	; 0x952 <travel+0xf6>
 95a:	00 c0       	rjmp	.+0      	; 0x95c <travel+0x100>
 95c:	00 00       	nop
		_delay_ms(1000);
	
		forwardJaa();
 95e:	59 df       	rcall	.-334    	; 0x812 <forwardJaa>
		if(nxTerm==1 || nxTerm==4)
			nodeRight();
		else
			nodeLeft();
 960:	46 df       	rcall	.-372    	; 0x7ee <nodeLeft>
 962:	c7 cf       	rjmp	.-114    	; 0x8f2 <travel+0x96>
	lcd_print(1,14,(CT==3 && (nxTerm == 1 || nxTerm== 2)),1);
	*/
	lcd_print(1,1,1,1);
	if((CT==1 && (nxTerm == 2 || nxTerm== 4)) || (CT==4 && (nxTerm == 1 || nxTerm== 3)))
	{
		nodeLeft();
 964:	44 df       	rcall	.-376    	; 0x7ee <nodeLeft>
		forwardJaa();
 966:	55 df       	rcall	.-342    	; 0x812 <forwardJaa>
 968:	2f ef       	ldi	r18, 0xFF	; 255
 96a:	8f ef       	ldi	r24, 0xFF	; 255
 96c:	9c e2       	ldi	r25, 0x2C	; 44
 96e:	21 50       	subi	r18, 0x01	; 1
 970:	80 40       	sbci	r24, 0x00	; 0
 972:	90 40       	sbci	r25, 0x00	; 0
 974:	e1 f7       	brne	.-8      	; 0x96e <travel+0x112>
 976:	00 c0       	rjmp	.+0      	; 0x978 <travel+0x11c>
 978:	00 00       	nop
		_delay_ms(1000);
	
		forwardJaa();
 97a:	4b df       	rcall	.-362    	; 0x812 <forwardJaa>
 97c:	9a cf       	rjmp	.-204    	; 0x8b2 <travel+0x56>
		else
			nodeLeft();
	}
	else if((CT==2 && (nxTerm == 3 || nxTerm== 1)) || (CT==3 && (nxTerm == 4 || nxTerm== 2)))
	{
		nodeRight();
 97e:	31 df       	rcall	.-414    	; 0x7e2 <nodeRight>
		stop();
 980:	5b de       	rcall	.-842    	; 0x638 <stop>
		forwardJaa();
 982:	47 df       	rcall	.-370    	; 0x812 <forwardJaa>
		stop();
 984:	59 de       	rcall	.-846    	; 0x638 <stop>
 986:	2f ef       	ldi	r18, 0xFF	; 255
 988:	8f e7       	ldi	r24, 0x7F	; 127
 98a:	96 e1       	ldi	r25, 0x16	; 22
 98c:	21 50       	subi	r18, 0x01	; 1
 98e:	80 40       	sbci	r24, 0x00	; 0
 990:	90 40       	sbci	r25, 0x00	; 0
 992:	e1 f7       	brne	.-8      	; 0x98c <travel+0x130>
 994:	00 c0       	rjmp	.+0      	; 0x996 <travel+0x13a>
 996:	00 00       	nop
		_delay_ms(500);
		lcd_print(1,2,1,1);
 998:	21 e0       	ldi	r18, 0x01	; 1
 99a:	30 e0       	ldi	r19, 0x00	; 0
 99c:	41 e0       	ldi	r20, 0x01	; 1
 99e:	50 e0       	ldi	r21, 0x00	; 0
 9a0:	62 e0       	ldi	r22, 0x02	; 2
 9a2:	81 e0       	ldi	r24, 0x01	; 1
 9a4:	8a dc       	rcall	.-1772   	; 0x2ba <lcd_print>
		forwardJaa();
 9a6:	35 df       	rcall	.-406    	; 0x812 <forwardJaa>
		//swapEncounterdAction
		if(nxTerm==2 || nxTerm==3)
			nodeLeft();
 9a8:	22 df       	rcall	.-444    	; 0x7ee <nodeLeft>
 9aa:	a3 cf       	rjmp	.-186    	; 0x8f2 <travel+0x96>
		else
			nodeLeft();
	}
	else if((CT==2 && (nxTerm == 3 || nxTerm== 1)) || (CT==3 && (nxTerm == 4 || nxTerm== 2)))
	{
		nodeRight();
 9ac:	1a df       	rcall	.-460    	; 0x7e2 <nodeRight>
		stop();
 9ae:	44 de       	rcall	.-888    	; 0x638 <stop>
		forwardJaa();
 9b0:	30 df       	rcall	.-416    	; 0x812 <forwardJaa>
		stop();
 9b2:	42 de       	rcall	.-892    	; 0x638 <stop>
 9b4:	2f ef       	ldi	r18, 0xFF	; 255
 9b6:	8f e7       	ldi	r24, 0x7F	; 127
 9b8:	96 e1       	ldi	r25, 0x16	; 22
 9ba:	21 50       	subi	r18, 0x01	; 1
 9bc:	80 40       	sbci	r24, 0x00	; 0
 9be:	90 40       	sbci	r25, 0x00	; 0
 9c0:	e1 f7       	brne	.-8      	; 0x9ba <travel+0x15e>
 9c2:	00 c0       	rjmp	.+0      	; 0x9c4 <travel+0x168>
 9c4:	00 00       	nop
		_delay_ms(500);
		lcd_print(1,2,1,1);
 9c6:	21 e0       	ldi	r18, 0x01	; 1
 9c8:	30 e0       	ldi	r19, 0x00	; 0
 9ca:	41 e0       	ldi	r20, 0x01	; 1
 9cc:	50 e0       	ldi	r21, 0x00	; 0
 9ce:	62 e0       	ldi	r22, 0x02	; 2
 9d0:	81 e0       	ldi	r24, 0x01	; 1
 9d2:	73 dc       	rcall	.-1818   	; 0x2ba <lcd_print>
		forwardJaa();
 9d4:	1e df       	rcall	.-452    	; 0x812 <forwardJaa>
		//swapEncounterdAction
		if(nxTerm==2 || nxTerm==3)
			nodeLeft();
		else
			nodeRight();
 9d6:	05 df       	rcall	.-502    	; 0x7e2 <nodeRight>
 9d8:	8c cf       	rjmp	.-232    	; 0x8f2 <travel+0x96>
	buzzer();
	right();
	_delay_ms(2000);
	stop();
	buzzer();
}
 9da:	df 91       	pop	r29
 9dc:	cf 91       	pop	r28
 9de:	1f 91       	pop	r17
 9e0:	0f 91       	pop	r16
 9e2:	08 95       	ret

000009e4 <main>:


//Main Function
int main()
{
 9e4:	cf 93       	push	r28
 9e6:	df 93       	push	r29
 9e8:	00 d0       	rcall	.+0      	; 0x9ea <main+0x6>
 9ea:	1f 92       	push	r1
 9ec:	1f 92       	push	r1
 9ee:	cd b7       	in	r28, 0x3d	; 61
 9f0:	de b7       	in	r29, 0x3e	; 62
	char m[5]="Ahmed";
 9f2:	85 e0       	ldi	r24, 0x05	; 5
 9f4:	e0 e0       	ldi	r30, 0x00	; 0
 9f6:	f2 e0       	ldi	r31, 0x02	; 2
 9f8:	de 01       	movw	r26, r28
 9fa:	11 96       	adiw	r26, 0x01	; 1
 9fc:	01 90       	ld	r0, Z+
 9fe:	0d 92       	st	X+, r0
 a00:	8a 95       	dec	r24
 a02:	e1 f7       	brne	.-8      	; 0x9fc <main+0x18>
	init_devices();
 a04:	5b de       	rcall	.-842    	; 0x6bc <init_devices>
	lcd_set_4bit();
 a06:	8e db       	rcall	.-2276   	; 0x124 <lcd_set_4bit>
	lcd_init();
 a08:	f7 db       	rcall	.-2066   	; 0x1f8 <lcd_init>
	lcd_wr_command(0x01);
 a0a:	81 e0       	ldi	r24, 0x01	; 1
 a0c:	d0 db       	rcall	.-2144   	; 0x1ae <lcd_wr_command>
	lcd_cursor(2,1);
 a0e:	61 e0       	ldi	r22, 0x01	; 1
 a10:	82 e0       	ldi	r24, 0x02	; 2
 a12:	38 dc       	rcall	.-1936   	; 0x284 <lcd_cursor>
	lcd_string(m);
 a14:	ce 01       	movw	r24, r28
 a16:	01 96       	adiw	r24, 0x01	; 1
 a18:	27 dc       	rcall	.-1970   	; 0x268 <lcd_string>

	//lcd_print(1,1,1,1);
	travel(3,1);
 a1a:	61 e0       	ldi	r22, 0x01	; 1
 a1c:	70 e0       	ldi	r23, 0x00	; 0
 a1e:	83 e0       	ldi	r24, 0x03	; 3
 a20:	90 e0       	ldi	r25, 0x00	; 0
 a22:	1c df       	rcall	.-456    	; 0x85c <travel>
	travel(1,3);
 a24:	63 e0       	ldi	r22, 0x03	; 3
 a26:	70 e0       	ldi	r23, 0x00	; 0
 a28:	81 e0       	ldi	r24, 0x01	; 1
 a2a:	90 e0       	ldi	r25, 0x00	; 0
 a2c:	17 df       	rcall	.-466    	; 0x85c <travel>
 a2e:	ff cf       	rjmp	.-2      	; 0xa2e <main+0x4a>

00000a30 <__divsf3>:
 a30:	0c d0       	rcall	.+24     	; 0xa4a <__divsf3x>
 a32:	e6 c0       	rjmp	.+460    	; 0xc00 <__fp_round>
 a34:	de d0       	rcall	.+444    	; 0xbf2 <__fp_pscB>
 a36:	40 f0       	brcs	.+16     	; 0xa48 <__divsf3+0x18>
 a38:	d5 d0       	rcall	.+426    	; 0xbe4 <__fp_pscA>
 a3a:	30 f0       	brcs	.+12     	; 0xa48 <__divsf3+0x18>
 a3c:	21 f4       	brne	.+8      	; 0xa46 <__divsf3+0x16>
 a3e:	5f 3f       	cpi	r21, 0xFF	; 255
 a40:	19 f0       	breq	.+6      	; 0xa48 <__divsf3+0x18>
 a42:	c7 c0       	rjmp	.+398    	; 0xbd2 <__fp_inf>
 a44:	51 11       	cpse	r21, r1
 a46:	10 c1       	rjmp	.+544    	; 0xc68 <__fp_szero>
 a48:	ca c0       	rjmp	.+404    	; 0xbde <__fp_nan>

00000a4a <__divsf3x>:
 a4a:	eb d0       	rcall	.+470    	; 0xc22 <__fp_split3>
 a4c:	98 f3       	brcs	.-26     	; 0xa34 <__divsf3+0x4>

00000a4e <__divsf3_pse>:
 a4e:	99 23       	and	r25, r25
 a50:	c9 f3       	breq	.-14     	; 0xa44 <__divsf3+0x14>
 a52:	55 23       	and	r21, r21
 a54:	b1 f3       	breq	.-20     	; 0xa42 <__divsf3+0x12>
 a56:	95 1b       	sub	r25, r21
 a58:	55 0b       	sbc	r21, r21
 a5a:	bb 27       	eor	r27, r27
 a5c:	aa 27       	eor	r26, r26
 a5e:	62 17       	cp	r22, r18
 a60:	73 07       	cpc	r23, r19
 a62:	84 07       	cpc	r24, r20
 a64:	38 f0       	brcs	.+14     	; 0xa74 <__divsf3_pse+0x26>
 a66:	9f 5f       	subi	r25, 0xFF	; 255
 a68:	5f 4f       	sbci	r21, 0xFF	; 255
 a6a:	22 0f       	add	r18, r18
 a6c:	33 1f       	adc	r19, r19
 a6e:	44 1f       	adc	r20, r20
 a70:	aa 1f       	adc	r26, r26
 a72:	a9 f3       	breq	.-22     	; 0xa5e <__divsf3_pse+0x10>
 a74:	33 d0       	rcall	.+102    	; 0xadc <__divsf3_pse+0x8e>
 a76:	0e 2e       	mov	r0, r30
 a78:	3a f0       	brmi	.+14     	; 0xa88 <__divsf3_pse+0x3a>
 a7a:	e0 e8       	ldi	r30, 0x80	; 128
 a7c:	30 d0       	rcall	.+96     	; 0xade <__divsf3_pse+0x90>
 a7e:	91 50       	subi	r25, 0x01	; 1
 a80:	50 40       	sbci	r21, 0x00	; 0
 a82:	e6 95       	lsr	r30
 a84:	00 1c       	adc	r0, r0
 a86:	ca f7       	brpl	.-14     	; 0xa7a <__divsf3_pse+0x2c>
 a88:	29 d0       	rcall	.+82     	; 0xadc <__divsf3_pse+0x8e>
 a8a:	fe 2f       	mov	r31, r30
 a8c:	27 d0       	rcall	.+78     	; 0xadc <__divsf3_pse+0x8e>
 a8e:	66 0f       	add	r22, r22
 a90:	77 1f       	adc	r23, r23
 a92:	88 1f       	adc	r24, r24
 a94:	bb 1f       	adc	r27, r27
 a96:	26 17       	cp	r18, r22
 a98:	37 07       	cpc	r19, r23
 a9a:	48 07       	cpc	r20, r24
 a9c:	ab 07       	cpc	r26, r27
 a9e:	b0 e8       	ldi	r27, 0x80	; 128
 aa0:	09 f0       	breq	.+2      	; 0xaa4 <__divsf3_pse+0x56>
 aa2:	bb 0b       	sbc	r27, r27
 aa4:	80 2d       	mov	r24, r0
 aa6:	bf 01       	movw	r22, r30
 aa8:	ff 27       	eor	r31, r31
 aaa:	93 58       	subi	r25, 0x83	; 131
 aac:	5f 4f       	sbci	r21, 0xFF	; 255
 aae:	2a f0       	brmi	.+10     	; 0xaba <__divsf3_pse+0x6c>
 ab0:	9e 3f       	cpi	r25, 0xFE	; 254
 ab2:	51 05       	cpc	r21, r1
 ab4:	68 f0       	brcs	.+26     	; 0xad0 <__divsf3_pse+0x82>
 ab6:	8d c0       	rjmp	.+282    	; 0xbd2 <__fp_inf>
 ab8:	d7 c0       	rjmp	.+430    	; 0xc68 <__fp_szero>
 aba:	5f 3f       	cpi	r21, 0xFF	; 255
 abc:	ec f3       	brlt	.-6      	; 0xab8 <__divsf3_pse+0x6a>
 abe:	98 3e       	cpi	r25, 0xE8	; 232
 ac0:	dc f3       	brlt	.-10     	; 0xab8 <__divsf3_pse+0x6a>
 ac2:	86 95       	lsr	r24
 ac4:	77 95       	ror	r23
 ac6:	67 95       	ror	r22
 ac8:	b7 95       	ror	r27
 aca:	f7 95       	ror	r31
 acc:	9f 5f       	subi	r25, 0xFF	; 255
 ace:	c9 f7       	brne	.-14     	; 0xac2 <__divsf3_pse+0x74>
 ad0:	88 0f       	add	r24, r24
 ad2:	91 1d       	adc	r25, r1
 ad4:	96 95       	lsr	r25
 ad6:	87 95       	ror	r24
 ad8:	97 f9       	bld	r25, 7
 ada:	08 95       	ret
 adc:	e1 e0       	ldi	r30, 0x01	; 1
 ade:	66 0f       	add	r22, r22
 ae0:	77 1f       	adc	r23, r23
 ae2:	88 1f       	adc	r24, r24
 ae4:	bb 1f       	adc	r27, r27
 ae6:	62 17       	cp	r22, r18
 ae8:	73 07       	cpc	r23, r19
 aea:	84 07       	cpc	r24, r20
 aec:	ba 07       	cpc	r27, r26
 aee:	20 f0       	brcs	.+8      	; 0xaf8 <__divsf3_pse+0xaa>
 af0:	62 1b       	sub	r22, r18
 af2:	73 0b       	sbc	r23, r19
 af4:	84 0b       	sbc	r24, r20
 af6:	ba 0b       	sbc	r27, r26
 af8:	ee 1f       	adc	r30, r30
 afa:	88 f7       	brcc	.-30     	; 0xade <__divsf3_pse+0x90>
 afc:	e0 95       	com	r30
 afe:	08 95       	ret

00000b00 <__fixunssfsi>:
 b00:	98 d0       	rcall	.+304    	; 0xc32 <__fp_splitA>
 b02:	88 f0       	brcs	.+34     	; 0xb26 <__fixunssfsi+0x26>
 b04:	9f 57       	subi	r25, 0x7F	; 127
 b06:	90 f0       	brcs	.+36     	; 0xb2c <__fixunssfsi+0x2c>
 b08:	b9 2f       	mov	r27, r25
 b0a:	99 27       	eor	r25, r25
 b0c:	b7 51       	subi	r27, 0x17	; 23
 b0e:	a0 f0       	brcs	.+40     	; 0xb38 <__fixunssfsi+0x38>
 b10:	d1 f0       	breq	.+52     	; 0xb46 <__fixunssfsi+0x46>
 b12:	66 0f       	add	r22, r22
 b14:	77 1f       	adc	r23, r23
 b16:	88 1f       	adc	r24, r24
 b18:	99 1f       	adc	r25, r25
 b1a:	1a f0       	brmi	.+6      	; 0xb22 <__fixunssfsi+0x22>
 b1c:	ba 95       	dec	r27
 b1e:	c9 f7       	brne	.-14     	; 0xb12 <__fixunssfsi+0x12>
 b20:	12 c0       	rjmp	.+36     	; 0xb46 <__fixunssfsi+0x46>
 b22:	b1 30       	cpi	r27, 0x01	; 1
 b24:	81 f0       	breq	.+32     	; 0xb46 <__fixunssfsi+0x46>
 b26:	9f d0       	rcall	.+318    	; 0xc66 <__fp_zero>
 b28:	b1 e0       	ldi	r27, 0x01	; 1
 b2a:	08 95       	ret
 b2c:	9c c0       	rjmp	.+312    	; 0xc66 <__fp_zero>
 b2e:	67 2f       	mov	r22, r23
 b30:	78 2f       	mov	r23, r24
 b32:	88 27       	eor	r24, r24
 b34:	b8 5f       	subi	r27, 0xF8	; 248
 b36:	39 f0       	breq	.+14     	; 0xb46 <__fixunssfsi+0x46>
 b38:	b9 3f       	cpi	r27, 0xF9	; 249
 b3a:	cc f3       	brlt	.-14     	; 0xb2e <__fixunssfsi+0x2e>
 b3c:	86 95       	lsr	r24
 b3e:	77 95       	ror	r23
 b40:	67 95       	ror	r22
 b42:	b3 95       	inc	r27
 b44:	d9 f7       	brne	.-10     	; 0xb3c <__fixunssfsi+0x3c>
 b46:	3e f4       	brtc	.+14     	; 0xb56 <__fixunssfsi+0x56>
 b48:	90 95       	com	r25
 b4a:	80 95       	com	r24
 b4c:	70 95       	com	r23
 b4e:	61 95       	neg	r22
 b50:	7f 4f       	sbci	r23, 0xFF	; 255
 b52:	8f 4f       	sbci	r24, 0xFF	; 255
 b54:	9f 4f       	sbci	r25, 0xFF	; 255
 b56:	08 95       	ret

00000b58 <__floatunsisf>:
 b58:	e8 94       	clt
 b5a:	09 c0       	rjmp	.+18     	; 0xb6e <__floatsisf+0x12>

00000b5c <__floatsisf>:
 b5c:	97 fb       	bst	r25, 7
 b5e:	3e f4       	brtc	.+14     	; 0xb6e <__floatsisf+0x12>
 b60:	90 95       	com	r25
 b62:	80 95       	com	r24
 b64:	70 95       	com	r23
 b66:	61 95       	neg	r22
 b68:	7f 4f       	sbci	r23, 0xFF	; 255
 b6a:	8f 4f       	sbci	r24, 0xFF	; 255
 b6c:	9f 4f       	sbci	r25, 0xFF	; 255
 b6e:	99 23       	and	r25, r25
 b70:	a9 f0       	breq	.+42     	; 0xb9c <__floatsisf+0x40>
 b72:	f9 2f       	mov	r31, r25
 b74:	96 e9       	ldi	r25, 0x96	; 150
 b76:	bb 27       	eor	r27, r27
 b78:	93 95       	inc	r25
 b7a:	f6 95       	lsr	r31
 b7c:	87 95       	ror	r24
 b7e:	77 95       	ror	r23
 b80:	67 95       	ror	r22
 b82:	b7 95       	ror	r27
 b84:	f1 11       	cpse	r31, r1
 b86:	f8 cf       	rjmp	.-16     	; 0xb78 <__floatsisf+0x1c>
 b88:	fa f4       	brpl	.+62     	; 0xbc8 <__floatsisf+0x6c>
 b8a:	bb 0f       	add	r27, r27
 b8c:	11 f4       	brne	.+4      	; 0xb92 <__floatsisf+0x36>
 b8e:	60 ff       	sbrs	r22, 0
 b90:	1b c0       	rjmp	.+54     	; 0xbc8 <__floatsisf+0x6c>
 b92:	6f 5f       	subi	r22, 0xFF	; 255
 b94:	7f 4f       	sbci	r23, 0xFF	; 255
 b96:	8f 4f       	sbci	r24, 0xFF	; 255
 b98:	9f 4f       	sbci	r25, 0xFF	; 255
 b9a:	16 c0       	rjmp	.+44     	; 0xbc8 <__floatsisf+0x6c>
 b9c:	88 23       	and	r24, r24
 b9e:	11 f0       	breq	.+4      	; 0xba4 <__floatsisf+0x48>
 ba0:	96 e9       	ldi	r25, 0x96	; 150
 ba2:	11 c0       	rjmp	.+34     	; 0xbc6 <__floatsisf+0x6a>
 ba4:	77 23       	and	r23, r23
 ba6:	21 f0       	breq	.+8      	; 0xbb0 <__floatsisf+0x54>
 ba8:	9e e8       	ldi	r25, 0x8E	; 142
 baa:	87 2f       	mov	r24, r23
 bac:	76 2f       	mov	r23, r22
 bae:	05 c0       	rjmp	.+10     	; 0xbba <__floatsisf+0x5e>
 bb0:	66 23       	and	r22, r22
 bb2:	71 f0       	breq	.+28     	; 0xbd0 <__floatsisf+0x74>
 bb4:	96 e8       	ldi	r25, 0x86	; 134
 bb6:	86 2f       	mov	r24, r22
 bb8:	70 e0       	ldi	r23, 0x00	; 0
 bba:	60 e0       	ldi	r22, 0x00	; 0
 bbc:	2a f0       	brmi	.+10     	; 0xbc8 <__floatsisf+0x6c>
 bbe:	9a 95       	dec	r25
 bc0:	66 0f       	add	r22, r22
 bc2:	77 1f       	adc	r23, r23
 bc4:	88 1f       	adc	r24, r24
 bc6:	da f7       	brpl	.-10     	; 0xbbe <__floatsisf+0x62>
 bc8:	88 0f       	add	r24, r24
 bca:	96 95       	lsr	r25
 bcc:	87 95       	ror	r24
 bce:	97 f9       	bld	r25, 7
 bd0:	08 95       	ret

00000bd2 <__fp_inf>:
 bd2:	97 f9       	bld	r25, 7
 bd4:	9f 67       	ori	r25, 0x7F	; 127
 bd6:	80 e8       	ldi	r24, 0x80	; 128
 bd8:	70 e0       	ldi	r23, 0x00	; 0
 bda:	60 e0       	ldi	r22, 0x00	; 0
 bdc:	08 95       	ret

00000bde <__fp_nan>:
 bde:	9f ef       	ldi	r25, 0xFF	; 255
 be0:	80 ec       	ldi	r24, 0xC0	; 192
 be2:	08 95       	ret

00000be4 <__fp_pscA>:
 be4:	00 24       	eor	r0, r0
 be6:	0a 94       	dec	r0
 be8:	16 16       	cp	r1, r22
 bea:	17 06       	cpc	r1, r23
 bec:	18 06       	cpc	r1, r24
 bee:	09 06       	cpc	r0, r25
 bf0:	08 95       	ret

00000bf2 <__fp_pscB>:
 bf2:	00 24       	eor	r0, r0
 bf4:	0a 94       	dec	r0
 bf6:	12 16       	cp	r1, r18
 bf8:	13 06       	cpc	r1, r19
 bfa:	14 06       	cpc	r1, r20
 bfc:	05 06       	cpc	r0, r21
 bfe:	08 95       	ret

00000c00 <__fp_round>:
 c00:	09 2e       	mov	r0, r25
 c02:	03 94       	inc	r0
 c04:	00 0c       	add	r0, r0
 c06:	11 f4       	brne	.+4      	; 0xc0c <__fp_round+0xc>
 c08:	88 23       	and	r24, r24
 c0a:	52 f0       	brmi	.+20     	; 0xc20 <__fp_round+0x20>
 c0c:	bb 0f       	add	r27, r27
 c0e:	40 f4       	brcc	.+16     	; 0xc20 <__fp_round+0x20>
 c10:	bf 2b       	or	r27, r31
 c12:	11 f4       	brne	.+4      	; 0xc18 <__fp_round+0x18>
 c14:	60 ff       	sbrs	r22, 0
 c16:	04 c0       	rjmp	.+8      	; 0xc20 <__fp_round+0x20>
 c18:	6f 5f       	subi	r22, 0xFF	; 255
 c1a:	7f 4f       	sbci	r23, 0xFF	; 255
 c1c:	8f 4f       	sbci	r24, 0xFF	; 255
 c1e:	9f 4f       	sbci	r25, 0xFF	; 255
 c20:	08 95       	ret

00000c22 <__fp_split3>:
 c22:	57 fd       	sbrc	r21, 7
 c24:	90 58       	subi	r25, 0x80	; 128
 c26:	44 0f       	add	r20, r20
 c28:	55 1f       	adc	r21, r21
 c2a:	59 f0       	breq	.+22     	; 0xc42 <__fp_splitA+0x10>
 c2c:	5f 3f       	cpi	r21, 0xFF	; 255
 c2e:	71 f0       	breq	.+28     	; 0xc4c <__fp_splitA+0x1a>
 c30:	47 95       	ror	r20

00000c32 <__fp_splitA>:
 c32:	88 0f       	add	r24, r24
 c34:	97 fb       	bst	r25, 7
 c36:	99 1f       	adc	r25, r25
 c38:	61 f0       	breq	.+24     	; 0xc52 <__fp_splitA+0x20>
 c3a:	9f 3f       	cpi	r25, 0xFF	; 255
 c3c:	79 f0       	breq	.+30     	; 0xc5c <__fp_splitA+0x2a>
 c3e:	87 95       	ror	r24
 c40:	08 95       	ret
 c42:	12 16       	cp	r1, r18
 c44:	13 06       	cpc	r1, r19
 c46:	14 06       	cpc	r1, r20
 c48:	55 1f       	adc	r21, r21
 c4a:	f2 cf       	rjmp	.-28     	; 0xc30 <__fp_split3+0xe>
 c4c:	46 95       	lsr	r20
 c4e:	f1 df       	rcall	.-30     	; 0xc32 <__fp_splitA>
 c50:	08 c0       	rjmp	.+16     	; 0xc62 <__fp_splitA+0x30>
 c52:	16 16       	cp	r1, r22
 c54:	17 06       	cpc	r1, r23
 c56:	18 06       	cpc	r1, r24
 c58:	99 1f       	adc	r25, r25
 c5a:	f1 cf       	rjmp	.-30     	; 0xc3e <__fp_splitA+0xc>
 c5c:	86 95       	lsr	r24
 c5e:	71 05       	cpc	r23, r1
 c60:	61 05       	cpc	r22, r1
 c62:	08 94       	sec
 c64:	08 95       	ret

00000c66 <__fp_zero>:
 c66:	e8 94       	clt

00000c68 <__fp_szero>:
 c68:	bb 27       	eor	r27, r27
 c6a:	66 27       	eor	r22, r22
 c6c:	77 27       	eor	r23, r23
 c6e:	cb 01       	movw	r24, r22
 c70:	97 f9       	bld	r25, 7
 c72:	08 95       	ret

00000c74 <__umulhisi3>:
 c74:	a2 9f       	mul	r26, r18
 c76:	b0 01       	movw	r22, r0
 c78:	b3 9f       	mul	r27, r19
 c7a:	c0 01       	movw	r24, r0
 c7c:	a3 9f       	mul	r26, r19
 c7e:	70 0d       	add	r23, r0
 c80:	81 1d       	adc	r24, r1
 c82:	11 24       	eor	r1, r1
 c84:	91 1d       	adc	r25, r1
 c86:	b2 9f       	mul	r27, r18
 c88:	70 0d       	add	r23, r0
 c8a:	81 1d       	adc	r24, r1
 c8c:	11 24       	eor	r1, r1
 c8e:	91 1d       	adc	r25, r1
 c90:	08 95       	ret

00000c92 <_exit>:
 c92:	f8 94       	cli

00000c94 <__stop_program>:
 c94:	ff cf       	rjmp	.-2      	; 0xc94 <__stop_program>
