
Blackline.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a90  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000001c  00800200  00800200  00000b04  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  00000b04  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000001b8  00000000  00000000  00000b34  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001247  00000000  00000000  00000cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000036a  00000000  00000000  00001f33  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000bb1  00000000  00000000  0000229d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000044c  00000000  00000000  00002e50  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000519  00000000  00000000  0000329c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000b44  00000000  00000000  000037b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000001c0  00000000  00000000  000042f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	df c2       	rjmp	.+1470   	; 0x5d4 <__vector_5>
  16:	00 00       	nop
  18:	b8 c2       	rjmp	.+1392   	; 0x58a <__vector_6>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
  46:	00 00       	nop
  48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	49 c0       	rjmp	.+146    	; 0x108 <__bad_interrupt>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	ac 31       	cpi	r26, 0x1C	; 28
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	8d d3       	rcall	.+1818   	; 0x820 <main>
 106:	c2 c4       	rjmp	.+2436   	; 0xa8c <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <lcd_set_4bit>:
{
	// 176 pulses for 360 degrees rotation 2.045 degrees per count
	soft_right_2();  //Turn reverse soft right
	Degrees=Degrees*2;
	angle_rotate(Degrees);
}
 10a:	89 ef       	ldi	r24, 0xF9	; 249
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <lcd_set_4bit+0x4>
 112:	00 c0       	rjmp	.+0      	; 0x114 <lcd_set_4bit+0xa>
 114:	00 00       	nop
 116:	40 98       	cbi	0x08, 0	; 8
 118:	41 98       	cbi	0x08, 1	; 8
 11a:	80 e3       	ldi	r24, 0x30	; 48
 11c:	88 b9       	out	0x08, r24	; 8
 11e:	42 9a       	sbi	0x08, 2	; 8
 120:	81 ee       	ldi	r24, 0xE1	; 225
 122:	94 e0       	ldi	r25, 0x04	; 4
 124:	01 97       	sbiw	r24, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <lcd_set_4bit+0x1a>
 128:	00 c0       	rjmp	.+0      	; 0x12a <lcd_set_4bit+0x20>
 12a:	00 00       	nop
 12c:	42 98       	cbi	0x08, 2	; 8
 12e:	89 ef       	ldi	r24, 0xF9	; 249
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <lcd_set_4bit+0x28>
 136:	00 c0       	rjmp	.+0      	; 0x138 <lcd_set_4bit+0x2e>
 138:	00 00       	nop
 13a:	40 98       	cbi	0x08, 0	; 8
 13c:	41 98       	cbi	0x08, 1	; 8
 13e:	80 e3       	ldi	r24, 0x30	; 48
 140:	88 b9       	out	0x08, r24	; 8
 142:	42 9a       	sbi	0x08, 2	; 8
 144:	81 ee       	ldi	r24, 0xE1	; 225
 146:	94 e0       	ldi	r25, 0x04	; 4
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <lcd_set_4bit+0x3e>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <lcd_set_4bit+0x44>
 14e:	00 00       	nop
 150:	42 98       	cbi	0x08, 2	; 8
 152:	89 ef       	ldi	r24, 0xF9	; 249
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	01 97       	sbiw	r24, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <lcd_set_4bit+0x4c>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <lcd_set_4bit+0x52>
 15c:	00 00       	nop
 15e:	40 98       	cbi	0x08, 0	; 8
 160:	41 98       	cbi	0x08, 1	; 8
 162:	80 e3       	ldi	r24, 0x30	; 48
 164:	88 b9       	out	0x08, r24	; 8
 166:	42 9a       	sbi	0x08, 2	; 8
 168:	81 ee       	ldi	r24, 0xE1	; 225
 16a:	94 e0       	ldi	r25, 0x04	; 4
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <lcd_set_4bit+0x62>
 170:	00 c0       	rjmp	.+0      	; 0x172 <lcd_set_4bit+0x68>
 172:	00 00       	nop
 174:	42 98       	cbi	0x08, 2	; 8
 176:	89 ef       	ldi	r24, 0xF9	; 249
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <lcd_set_4bit+0x70>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <lcd_set_4bit+0x76>
 180:	00 00       	nop
 182:	40 98       	cbi	0x08, 0	; 8
 184:	41 98       	cbi	0x08, 1	; 8
 186:	80 e2       	ldi	r24, 0x20	; 32
 188:	88 b9       	out	0x08, r24	; 8
 18a:	42 9a       	sbi	0x08, 2	; 8
 18c:	81 ee       	ldi	r24, 0xE1	; 225
 18e:	94 e0       	ldi	r25, 0x04	; 4
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <lcd_set_4bit+0x86>
 194:	00 c0       	rjmp	.+0      	; 0x196 <lcd_set_4bit+0x8c>
 196:	00 00       	nop
 198:	42 98       	cbi	0x08, 2	; 8
 19a:	08 95       	ret

0000019c <lcd_wr_command>:
 19c:	98 b1       	in	r25, 0x08	; 8
 19e:	9f 70       	andi	r25, 0x0F	; 15
 1a0:	98 b9       	out	0x08, r25	; 8
 1a2:	98 b1       	in	r25, 0x08	; 8
 1a4:	28 2f       	mov	r18, r24
 1a6:	20 7f       	andi	r18, 0xF0	; 240
 1a8:	92 2b       	or	r25, r18
 1aa:	98 b9       	out	0x08, r25	; 8
 1ac:	40 98       	cbi	0x08, 0	; 8
 1ae:	41 98       	cbi	0x08, 1	; 8
 1b0:	42 9a       	sbi	0x08, 2	; 8
 1b2:	e1 ee       	ldi	r30, 0xE1	; 225
 1b4:	f4 e0       	ldi	r31, 0x04	; 4
 1b6:	31 97       	sbiw	r30, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <lcd_wr_command+0x1a>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <lcd_wr_command+0x20>
 1bc:	00 00       	nop
 1be:	42 98       	cbi	0x08, 2	; 8
 1c0:	98 b1       	in	r25, 0x08	; 8
 1c2:	9f 70       	andi	r25, 0x0F	; 15
 1c4:	98 b9       	out	0x08, r25	; 8
 1c6:	98 b1       	in	r25, 0x08	; 8
 1c8:	82 95       	swap	r24
 1ca:	80 7f       	andi	r24, 0xF0	; 240
 1cc:	89 2b       	or	r24, r25
 1ce:	88 b9       	out	0x08, r24	; 8
 1d0:	40 98       	cbi	0x08, 0	; 8
 1d2:	41 98       	cbi	0x08, 1	; 8
 1d4:	42 9a       	sbi	0x08, 2	; 8
 1d6:	81 ee       	ldi	r24, 0xE1	; 225
 1d8:	94 e0       	ldi	r25, 0x04	; 4
 1da:	01 97       	sbiw	r24, 0x01	; 1
 1dc:	f1 f7       	brne	.-4      	; 0x1da <lcd_wr_command+0x3e>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <lcd_wr_command+0x44>
 1e0:	00 00       	nop
 1e2:	42 98       	cbi	0x08, 2	; 8
 1e4:	08 95       	ret

000001e6 <lcd_init>:
 1e6:	89 ef       	ldi	r24, 0xF9	; 249
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <lcd_init+0x4>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <lcd_init+0xa>
 1f0:	00 00       	nop
 1f2:	88 e2       	ldi	r24, 0x28	; 40
 1f4:	d3 df       	rcall	.-90     	; 0x19c <lcd_wr_command>
 1f6:	84 e1       	ldi	r24, 0x14	; 20
 1f8:	d1 df       	rcall	.-94     	; 0x19c <lcd_wr_command>
 1fa:	8c e0       	ldi	r24, 0x0C	; 12
 1fc:	cf df       	rcall	.-98     	; 0x19c <lcd_wr_command>
 1fe:	86 e0       	ldi	r24, 0x06	; 6
 200:	cd df       	rcall	.-102    	; 0x19c <lcd_wr_command>
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	cb cf       	rjmp	.-106    	; 0x19c <lcd_wr_command>
 206:	08 95       	ret

00000208 <lcd_wr_char>:
 208:	98 b1       	in	r25, 0x08	; 8
 20a:	9f 70       	andi	r25, 0x0F	; 15
 20c:	98 b9       	out	0x08, r25	; 8
 20e:	98 b1       	in	r25, 0x08	; 8
 210:	28 2f       	mov	r18, r24
 212:	20 7f       	andi	r18, 0xF0	; 240
 214:	92 2b       	or	r25, r18
 216:	98 b9       	out	0x08, r25	; 8
 218:	40 9a       	sbi	0x08, 0	; 8
 21a:	41 98       	cbi	0x08, 1	; 8
 21c:	42 9a       	sbi	0x08, 2	; 8
 21e:	e1 ee       	ldi	r30, 0xE1	; 225
 220:	f4 e0       	ldi	r31, 0x04	; 4
 222:	31 97       	sbiw	r30, 0x01	; 1
 224:	f1 f7       	brne	.-4      	; 0x222 <lcd_wr_char+0x1a>
 226:	00 c0       	rjmp	.+0      	; 0x228 <lcd_wr_char+0x20>
 228:	00 00       	nop
 22a:	42 98       	cbi	0x08, 2	; 8
 22c:	98 b1       	in	r25, 0x08	; 8
 22e:	9f 70       	andi	r25, 0x0F	; 15
 230:	98 b9       	out	0x08, r25	; 8
 232:	98 b1       	in	r25, 0x08	; 8
 234:	82 95       	swap	r24
 236:	80 7f       	andi	r24, 0xF0	; 240
 238:	89 2b       	or	r24, r25
 23a:	88 b9       	out	0x08, r24	; 8
 23c:	40 9a       	sbi	0x08, 0	; 8
 23e:	41 98       	cbi	0x08, 1	; 8
 240:	42 9a       	sbi	0x08, 2	; 8
 242:	81 ee       	ldi	r24, 0xE1	; 225
 244:	94 e0       	ldi	r25, 0x04	; 4
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <lcd_wr_char+0x3e>
 24a:	00 c0       	rjmp	.+0      	; 0x24c <lcd_wr_char+0x44>
 24c:	00 00       	nop
 24e:	42 98       	cbi	0x08, 2	; 8
 250:	08 95       	ret

00000252 <lcd_home>:
 252:	80 e8       	ldi	r24, 0x80	; 128
 254:	a3 cf       	rjmp	.-186    	; 0x19c <lcd_wr_command>
 256:	08 95       	ret

00000258 <lcd_cursor>:
 258:	82 30       	cpi	r24, 0x02	; 2
 25a:	69 f0       	breq	.+26     	; 0x276 <lcd_cursor+0x1e>
 25c:	18 f4       	brcc	.+6      	; 0x264 <lcd_cursor+0xc>
 25e:	81 30       	cpi	r24, 0x01	; 1
 260:	31 f0       	breq	.+12     	; 0x26e <lcd_cursor+0x16>
 262:	08 95       	ret
 264:	83 30       	cpi	r24, 0x03	; 3
 266:	59 f0       	breq	.+22     	; 0x27e <lcd_cursor+0x26>
 268:	84 30       	cpi	r24, 0x04	; 4
 26a:	69 f0       	breq	.+26     	; 0x286 <lcd_cursor+0x2e>
 26c:	08 95       	ret
 26e:	8f e7       	ldi	r24, 0x7F	; 127
 270:	86 0f       	add	r24, r22
 272:	94 cf       	rjmp	.-216    	; 0x19c <lcd_wr_command>
 274:	08 95       	ret
 276:	8f eb       	ldi	r24, 0xBF	; 191
 278:	86 0f       	add	r24, r22
 27a:	90 cf       	rjmp	.-224    	; 0x19c <lcd_wr_command>
 27c:	08 95       	ret
 27e:	83 e9       	ldi	r24, 0x93	; 147
 280:	86 0f       	add	r24, r22
 282:	8c cf       	rjmp	.-232    	; 0x19c <lcd_wr_command>
 284:	08 95       	ret
 286:	83 ed       	ldi	r24, 0xD3	; 211
 288:	86 0f       	add	r24, r22
 28a:	88 cf       	rjmp	.-240    	; 0x19c <lcd_wr_command>
 28c:	08 95       	ret

0000028e <lcd_print>:
 28e:	0f 93       	push	r16
 290:	1f 93       	push	r17
 292:	cf 93       	push	r28
 294:	df 93       	push	r29
 296:	8a 01       	movw	r16, r20
 298:	e9 01       	movw	r28, r18
 29a:	88 23       	and	r24, r24
 29c:	11 f0       	breq	.+4      	; 0x2a2 <lcd_print+0x14>
 29e:	61 11       	cpse	r22, r1
 2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <lcd_print+0x18>
 2a2:	d7 df       	rcall	.-82     	; 0x252 <lcd_home>
 2a4:	01 c0       	rjmp	.+2      	; 0x2a8 <lcd_print+0x1a>
 2a6:	d8 df       	rcall	.-80     	; 0x258 <lcd_cursor>
 2a8:	c5 30       	cpi	r28, 0x05	; 5
 2aa:	d1 05       	cpc	r29, r1
 2ac:	09 f0       	breq	.+2      	; 0x2b0 <lcd_print+0x22>
 2ae:	cd c0       	rjmp	.+410    	; 0x44a <lcd_print+0x1bc>
 2b0:	98 01       	movw	r18, r16
 2b2:	32 95       	swap	r19
 2b4:	22 95       	swap	r18
 2b6:	2f 70       	andi	r18, 0x0F	; 15
 2b8:	23 27       	eor	r18, r19
 2ba:	3f 70       	andi	r19, 0x0F	; 15
 2bc:	23 27       	eor	r18, r19
 2be:	a7 e4       	ldi	r26, 0x47	; 71
 2c0:	b3 e0       	ldi	r27, 0x03	; 3
 2c2:	d5 d3       	rcall	.+1962   	; 0xa6e <__umulhisi3>
 2c4:	96 95       	lsr	r25
 2c6:	87 95       	ror	r24
 2c8:	96 95       	lsr	r25
 2ca:	87 95       	ror	r24
 2cc:	96 95       	lsr	r25
 2ce:	87 95       	ror	r24
 2d0:	c0 96       	adiw	r24, 0x30	; 48
 2d2:	90 93 0e 02 	sts	0x020E, r25
 2d6:	80 93 0d 02 	sts	0x020D, r24
 2da:	96 df       	rcall	.-212    	; 0x208 <lcd_wr_char>
 2dc:	98 01       	movw	r18, r16
 2de:	36 95       	lsr	r19
 2e0:	27 95       	ror	r18
 2e2:	36 95       	lsr	r19
 2e4:	27 95       	ror	r18
 2e6:	36 95       	lsr	r19
 2e8:	27 95       	ror	r18
 2ea:	a5 ec       	ldi	r26, 0xC5	; 197
 2ec:	b0 e2       	ldi	r27, 0x20	; 32
 2ee:	bf d3       	rcall	.+1918   	; 0xa6e <__umulhisi3>
 2f0:	ac 01       	movw	r20, r24
 2f2:	52 95       	swap	r21
 2f4:	42 95       	swap	r20
 2f6:	4f 70       	andi	r20, 0x0F	; 15
 2f8:	45 27       	eor	r20, r21
 2fa:	5f 70       	andi	r21, 0x0F	; 15
 2fc:	45 27       	eor	r20, r21
 2fe:	50 93 10 02 	sts	0x0210, r21
 302:	40 93 0f 02 	sts	0x020F, r20
 306:	9a 01       	movw	r18, r20
 308:	ad ec       	ldi	r26, 0xCD	; 205
 30a:	bc ec       	ldi	r27, 0xCC	; 204
 30c:	b0 d3       	rcall	.+1888   	; 0xa6e <__umulhisi3>
 30e:	96 95       	lsr	r25
 310:	87 95       	ror	r24
 312:	96 95       	lsr	r25
 314:	87 95       	ror	r24
 316:	96 95       	lsr	r25
 318:	87 95       	ror	r24
 31a:	9c 01       	movw	r18, r24
 31c:	22 0f       	add	r18, r18
 31e:	33 1f       	adc	r19, r19
 320:	88 0f       	add	r24, r24
 322:	99 1f       	adc	r25, r25
 324:	88 0f       	add	r24, r24
 326:	99 1f       	adc	r25, r25
 328:	88 0f       	add	r24, r24
 32a:	99 1f       	adc	r25, r25
 32c:	82 0f       	add	r24, r18
 32e:	93 1f       	adc	r25, r19
 330:	48 1b       	sub	r20, r24
 332:	59 0b       	sbc	r21, r25
 334:	ca 01       	movw	r24, r20
 336:	c0 96       	adiw	r24, 0x30	; 48
 338:	90 93 1b 02 	sts	0x021B, r25
 33c:	80 93 1a 02 	sts	0x021A, r24
 340:	63 df       	rcall	.-314    	; 0x208 <lcd_wr_char>
 342:	04 c0       	rjmp	.+8      	; 0x34c <lcd_print+0xbe>
 344:	c3 30       	cpi	r28, 0x03	; 3
 346:	d1 05       	cpc	r29, r1
 348:	09 f0       	breq	.+2      	; 0x34c <lcd_print+0xbe>
 34a:	84 c0       	rjmp	.+264    	; 0x454 <lcd_print+0x1c6>
 34c:	98 01       	movw	r18, r16
 34e:	36 95       	lsr	r19
 350:	27 95       	ror	r18
 352:	36 95       	lsr	r19
 354:	27 95       	ror	r18
 356:	ab e7       	ldi	r26, 0x7B	; 123
 358:	b4 e1       	ldi	r27, 0x14	; 20
 35a:	89 d3       	rcall	.+1810   	; 0xa6e <__umulhisi3>
 35c:	ac 01       	movw	r20, r24
 35e:	56 95       	lsr	r21
 360:	47 95       	ror	r20
 362:	50 93 10 02 	sts	0x0210, r21
 366:	40 93 0f 02 	sts	0x020F, r20
 36a:	9a 01       	movw	r18, r20
 36c:	ad ec       	ldi	r26, 0xCD	; 205
 36e:	bc ec       	ldi	r27, 0xCC	; 204
 370:	7e d3       	rcall	.+1788   	; 0xa6e <__umulhisi3>
 372:	96 95       	lsr	r25
 374:	87 95       	ror	r24
 376:	96 95       	lsr	r25
 378:	87 95       	ror	r24
 37a:	96 95       	lsr	r25
 37c:	87 95       	ror	r24
 37e:	9c 01       	movw	r18, r24
 380:	22 0f       	add	r18, r18
 382:	33 1f       	adc	r19, r19
 384:	88 0f       	add	r24, r24
 386:	99 1f       	adc	r25, r25
 388:	88 0f       	add	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	88 0f       	add	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	82 0f       	add	r24, r18
 392:	93 1f       	adc	r25, r19
 394:	48 1b       	sub	r20, r24
 396:	59 0b       	sbc	r21, r25
 398:	ca 01       	movw	r24, r20
 39a:	c0 96       	adiw	r24, 0x30	; 48
 39c:	90 93 17 02 	sts	0x0217, r25
 3a0:	80 93 16 02 	sts	0x0216, r24
 3a4:	31 df       	rcall	.-414    	; 0x208 <lcd_wr_char>
 3a6:	98 01       	movw	r18, r16
 3a8:	ad ec       	ldi	r26, 0xCD	; 205
 3aa:	bc ec       	ldi	r27, 0xCC	; 204
 3ac:	60 d3       	rcall	.+1728   	; 0xa6e <__umulhisi3>
 3ae:	ac 01       	movw	r20, r24
 3b0:	56 95       	lsr	r21
 3b2:	47 95       	ror	r20
 3b4:	56 95       	lsr	r21
 3b6:	47 95       	ror	r20
 3b8:	56 95       	lsr	r21
 3ba:	47 95       	ror	r20
 3bc:	50 93 10 02 	sts	0x0210, r21
 3c0:	40 93 0f 02 	sts	0x020F, r20
 3c4:	9a 01       	movw	r18, r20
 3c6:	53 d3       	rcall	.+1702   	; 0xa6e <__umulhisi3>
 3c8:	96 95       	lsr	r25
 3ca:	87 95       	ror	r24
 3cc:	96 95       	lsr	r25
 3ce:	87 95       	ror	r24
 3d0:	96 95       	lsr	r25
 3d2:	87 95       	ror	r24
 3d4:	9c 01       	movw	r18, r24
 3d6:	22 0f       	add	r18, r18
 3d8:	33 1f       	adc	r19, r19
 3da:	88 0f       	add	r24, r24
 3dc:	99 1f       	adc	r25, r25
 3de:	88 0f       	add	r24, r24
 3e0:	99 1f       	adc	r25, r25
 3e2:	88 0f       	add	r24, r24
 3e4:	99 1f       	adc	r25, r25
 3e6:	82 0f       	add	r24, r18
 3e8:	93 1f       	adc	r25, r19
 3ea:	48 1b       	sub	r20, r24
 3ec:	59 0b       	sbc	r21, r25
 3ee:	ca 01       	movw	r24, r20
 3f0:	c0 96       	adiw	r24, 0x30	; 48
 3f2:	90 93 15 02 	sts	0x0215, r25
 3f6:	80 93 14 02 	sts	0x0214, r24
 3fa:	06 df       	rcall	.-500    	; 0x208 <lcd_wr_char>
 3fc:	03 c0       	rjmp	.+6      	; 0x404 <lcd_print+0x176>
 3fe:	c1 30       	cpi	r28, 0x01	; 1
 400:	d1 05       	cpc	r29, r1
 402:	f1 f4       	brne	.+60     	; 0x440 <lcd_print+0x1b2>
 404:	98 01       	movw	r18, r16
 406:	ad ec       	ldi	r26, 0xCD	; 205
 408:	bc ec       	ldi	r27, 0xCC	; 204
 40a:	31 d3       	rcall	.+1634   	; 0xa6e <__umulhisi3>
 40c:	96 95       	lsr	r25
 40e:	87 95       	ror	r24
 410:	96 95       	lsr	r25
 412:	87 95       	ror	r24
 414:	96 95       	lsr	r25
 416:	87 95       	ror	r24
 418:	9c 01       	movw	r18, r24
 41a:	22 0f       	add	r18, r18
 41c:	33 1f       	adc	r19, r19
 41e:	88 0f       	add	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	88 0f       	add	r24, r24
 424:	99 1f       	adc	r25, r25
 426:	88 0f       	add	r24, r24
 428:	99 1f       	adc	r25, r25
 42a:	82 0f       	add	r24, r18
 42c:	93 1f       	adc	r25, r19
 42e:	08 1b       	sub	r16, r24
 430:	19 0b       	sbc	r17, r25
 432:	c8 01       	movw	r24, r16
 434:	c0 96       	adiw	r24, 0x30	; 48
 436:	90 93 19 02 	sts	0x0219, r25
 43a:	80 93 18 02 	sts	0x0218, r24
 43e:	e4 de       	rcall	.-568    	; 0x208 <lcd_wr_char>
 440:	26 97       	sbiw	r28, 0x06	; 6
 442:	64 f0       	brlt	.+24     	; 0x45c <lcd_print+0x1ce>
 444:	85 e4       	ldi	r24, 0x45	; 69
 446:	e0 de       	rcall	.-576    	; 0x208 <lcd_wr_char>
 448:	09 c0       	rjmp	.+18     	; 0x45c <lcd_print+0x1ce>
 44a:	c4 30       	cpi	r28, 0x04	; 4
 44c:	d1 05       	cpc	r29, r1
 44e:	09 f0       	breq	.+2      	; 0x452 <lcd_print+0x1c4>
 450:	79 cf       	rjmp	.-270    	; 0x344 <lcd_print+0xb6>
 452:	44 cf       	rjmp	.-376    	; 0x2dc <lcd_print+0x4e>
 454:	c2 30       	cpi	r28, 0x02	; 2
 456:	d1 05       	cpc	r29, r1
 458:	91 f6       	brne	.-92     	; 0x3fe <lcd_print+0x170>
 45a:	a5 cf       	rjmp	.-182    	; 0x3a6 <lcd_print+0x118>
 45c:	df 91       	pop	r29
 45e:	cf 91       	pop	r28
 460:	1f 91       	pop	r17
 462:	0f 91       	pop	r16
 464:	08 95       	ret

00000466 <lcd_port_config>:
 466:	87 b1       	in	r24, 0x07	; 7
 468:	87 6f       	ori	r24, 0xF7	; 247
 46a:	87 b9       	out	0x07, r24	; 7
 46c:	88 b1       	in	r24, 0x08	; 8
 46e:	80 78       	andi	r24, 0x80	; 128
 470:	88 b9       	out	0x08, r24	; 8
 472:	08 95       	ret

00000474 <adc_pin_config>:
 474:	10 ba       	out	0x10, r1	; 16
 476:	11 ba       	out	0x11, r1	; 17
 478:	10 92 07 01 	sts	0x0107, r1
 47c:	10 92 08 01 	sts	0x0108, r1
 480:	08 95       	ret

00000482 <motion_pin_config>:
 482:	81 b1       	in	r24, 0x01	; 1
 484:	8f 60       	ori	r24, 0x0F	; 15
 486:	81 b9       	out	0x01, r24	; 1
 488:	82 b1       	in	r24, 0x02	; 2
 48a:	80 7f       	andi	r24, 0xF0	; 240
 48c:	82 b9       	out	0x02, r24	; 2
 48e:	ea e0       	ldi	r30, 0x0A	; 10
 490:	f1 e0       	ldi	r31, 0x01	; 1
 492:	80 81       	ld	r24, Z
 494:	88 61       	ori	r24, 0x18	; 24
 496:	80 83       	st	Z, r24
 498:	eb e0       	ldi	r30, 0x0B	; 11
 49a:	f1 e0       	ldi	r31, 0x01	; 1
 49c:	80 81       	ld	r24, Z
 49e:	88 61       	ori	r24, 0x18	; 24
 4a0:	80 83       	st	Z, r24
 4a2:	08 95       	ret

000004a4 <left_encoder_pin_config>:
 4a4:	6c 98       	cbi	0x0d, 4	; 13
 4a6:	74 9a       	sbi	0x0e, 4	; 14
 4a8:	08 95       	ret

000004aa <right_encoder_pin_config>:
 4aa:	6d 98       	cbi	0x0d, 5	; 13
 4ac:	75 9a       	sbi	0x0e, 5	; 14
 4ae:	08 95       	ret

000004b0 <port_init>:
 4b0:	da df       	rcall	.-76     	; 0x466 <lcd_port_config>
 4b2:	e0 df       	rcall	.-64     	; 0x474 <adc_pin_config>
 4b4:	e6 df       	rcall	.-52     	; 0x482 <motion_pin_config>
 4b6:	f6 df       	rcall	.-20     	; 0x4a4 <left_encoder_pin_config>
 4b8:	f8 cf       	rjmp	.-16     	; 0x4aa <right_encoder_pin_config>
 4ba:	08 95       	ret

000004bc <timer5_init>:
 4bc:	e1 e2       	ldi	r30, 0x21	; 33
 4be:	f1 e0       	ldi	r31, 0x01	; 1
 4c0:	10 82       	st	Z, r1
 4c2:	8f ef       	ldi	r24, 0xFF	; 255
 4c4:	80 93 25 01 	sts	0x0125, r24
 4c8:	91 e0       	ldi	r25, 0x01	; 1
 4ca:	90 93 24 01 	sts	0x0124, r25
 4ce:	10 92 29 01 	sts	0x0129, r1
 4d2:	80 93 28 01 	sts	0x0128, r24
 4d6:	10 92 2b 01 	sts	0x012B, r1
 4da:	80 93 2a 01 	sts	0x012A, r24
 4de:	10 92 2d 01 	sts	0x012D, r1
 4e2:	80 93 2c 01 	sts	0x012C, r24
 4e6:	89 ea       	ldi	r24, 0xA9	; 169
 4e8:	80 93 20 01 	sts	0x0120, r24
 4ec:	8b e0       	ldi	r24, 0x0B	; 11
 4ee:	80 83       	st	Z, r24
 4f0:	08 95       	ret

000004f2 <adc_init>:
 4f2:	ea e7       	ldi	r30, 0x7A	; 122
 4f4:	f0 e0       	ldi	r31, 0x00	; 0
 4f6:	10 82       	st	Z, r1
 4f8:	10 92 7b 00 	sts	0x007B, r1
 4fc:	80 e2       	ldi	r24, 0x20	; 32
 4fe:	80 93 7c 00 	sts	0x007C, r24
 502:	80 e8       	ldi	r24, 0x80	; 128
 504:	80 bf       	out	0x30, r24	; 48
 506:	86 e8       	ldi	r24, 0x86	; 134
 508:	80 83       	st	Z, r24
 50a:	08 95       	ret

0000050c <ADC_Conversion>:
 50c:	88 30       	cpi	r24, 0x08	; 8
 50e:	18 f0       	brcs	.+6      	; 0x516 <ADC_Conversion+0xa>
 510:	98 e0       	ldi	r25, 0x08	; 8
 512:	90 93 7b 00 	sts	0x007B, r25
 516:	87 70       	andi	r24, 0x07	; 7
 518:	80 62       	ori	r24, 0x20	; 32
 51a:	80 93 7c 00 	sts	0x007C, r24
 51e:	ea e7       	ldi	r30, 0x7A	; 122
 520:	f0 e0       	ldi	r31, 0x00	; 0
 522:	80 81       	ld	r24, Z
 524:	80 64       	ori	r24, 0x40	; 64
 526:	80 83       	st	Z, r24
 528:	80 81       	ld	r24, Z
 52a:	84 ff       	sbrs	r24, 4
 52c:	fd cf       	rjmp	.-6      	; 0x528 <ADC_Conversion+0x1c>
 52e:	80 91 79 00 	lds	r24, 0x0079
 532:	ea e7       	ldi	r30, 0x7A	; 122
 534:	f0 e0       	ldi	r31, 0x00	; 0
 536:	90 81       	ld	r25, Z
 538:	90 61       	ori	r25, 0x10	; 16
 53a:	90 83       	st	Z, r25
 53c:	10 92 7b 00 	sts	0x007B, r1
 540:	08 95       	ret

00000542 <print_sensor>:
 542:	cf 93       	push	r28
 544:	df 93       	push	r29
 546:	c8 2f       	mov	r28, r24
 548:	d6 2f       	mov	r29, r22
 54a:	84 2f       	mov	r24, r20
 54c:	df df       	rcall	.-66     	; 0x50c <ADC_Conversion>
 54e:	80 93 11 02 	sts	0x0211, r24
 552:	48 2f       	mov	r20, r24
 554:	50 e0       	ldi	r21, 0x00	; 0
 556:	23 e0       	ldi	r18, 0x03	; 3
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	6d 2f       	mov	r22, r29
 55c:	8c 2f       	mov	r24, r28
 55e:	97 de       	rcall	.-722    	; 0x28e <lcd_print>
 560:	df 91       	pop	r29
 562:	cf 91       	pop	r28
 564:	08 95       	ret

00000566 <left_position_encoder_interrupt_init>:
 566:	f8 94       	cli
 568:	ea e6       	ldi	r30, 0x6A	; 106
 56a:	f0 e0       	ldi	r31, 0x00	; 0
 56c:	80 81       	ld	r24, Z
 56e:	82 60       	ori	r24, 0x02	; 2
 570:	80 83       	st	Z, r24
 572:	ec 9a       	sbi	0x1d, 4	; 29
 574:	78 94       	sei
 576:	08 95       	ret

00000578 <right_position_encoder_interrupt_init>:
 578:	f8 94       	cli
 57a:	ea e6       	ldi	r30, 0x6A	; 106
 57c:	f0 e0       	ldi	r31, 0x00	; 0
 57e:	80 81       	ld	r24, Z
 580:	88 60       	ori	r24, 0x08	; 8
 582:	80 83       	st	Z, r24
 584:	ed 9a       	sbi	0x1d, 5	; 29
 586:	78 94       	sei
 588:	08 95       	ret

0000058a <__vector_6>:
 58a:	1f 92       	push	r1
 58c:	0f 92       	push	r0
 58e:	0f b6       	in	r0, 0x3f	; 63
 590:	0f 92       	push	r0
 592:	11 24       	eor	r1, r1
 594:	8f 93       	push	r24
 596:	9f 93       	push	r25
 598:	af 93       	push	r26
 59a:	bf 93       	push	r27
 59c:	80 91 00 02 	lds	r24, 0x0200
 5a0:	90 91 01 02 	lds	r25, 0x0201
 5a4:	a0 91 02 02 	lds	r26, 0x0202
 5a8:	b0 91 03 02 	lds	r27, 0x0203
 5ac:	01 96       	adiw	r24, 0x01	; 1
 5ae:	a1 1d       	adc	r26, r1
 5b0:	b1 1d       	adc	r27, r1
 5b2:	80 93 00 02 	sts	0x0200, r24
 5b6:	90 93 01 02 	sts	0x0201, r25
 5ba:	a0 93 02 02 	sts	0x0202, r26
 5be:	b0 93 03 02 	sts	0x0203, r27
 5c2:	bf 91       	pop	r27
 5c4:	af 91       	pop	r26
 5c6:	9f 91       	pop	r25
 5c8:	8f 91       	pop	r24
 5ca:	0f 90       	pop	r0
 5cc:	0f be       	out	0x3f, r0	; 63
 5ce:	0f 90       	pop	r0
 5d0:	1f 90       	pop	r1
 5d2:	18 95       	reti

000005d4 <__vector_5>:
 5d4:	1f 92       	push	r1
 5d6:	0f 92       	push	r0
 5d8:	0f b6       	in	r0, 0x3f	; 63
 5da:	0f 92       	push	r0
 5dc:	11 24       	eor	r1, r1
 5de:	8f 93       	push	r24
 5e0:	9f 93       	push	r25
 5e2:	af 93       	push	r26
 5e4:	bf 93       	push	r27
 5e6:	80 91 04 02 	lds	r24, 0x0204
 5ea:	90 91 05 02 	lds	r25, 0x0205
 5ee:	a0 91 06 02 	lds	r26, 0x0206
 5f2:	b0 91 07 02 	lds	r27, 0x0207
 5f6:	01 96       	adiw	r24, 0x01	; 1
 5f8:	a1 1d       	adc	r26, r1
 5fa:	b1 1d       	adc	r27, r1
 5fc:	80 93 04 02 	sts	0x0204, r24
 600:	90 93 05 02 	sts	0x0205, r25
 604:	a0 93 06 02 	sts	0x0206, r26
 608:	b0 93 07 02 	sts	0x0207, r27
 60c:	bf 91       	pop	r27
 60e:	af 91       	pop	r26
 610:	9f 91       	pop	r25
 612:	8f 91       	pop	r24
 614:	0f 90       	pop	r0
 616:	0f be       	out	0x3f, r0	; 63
 618:	0f 90       	pop	r0
 61a:	1f 90       	pop	r1
 61c:	18 95       	reti

0000061e <motion_set>:
 61e:	92 b1       	in	r25, 0x02	; 2
 620:	90 7f       	andi	r25, 0xF0	; 240
 622:	8f 70       	andi	r24, 0x0F	; 15
 624:	98 2b       	or	r25, r24
 626:	92 b9       	out	0x02, r25	; 2
 628:	08 95       	ret

0000062a <forward>:
 62a:	86 e0       	ldi	r24, 0x06	; 6
 62c:	f8 cf       	rjmp	.-16     	; 0x61e <motion_set>
 62e:	08 95       	ret

00000630 <stop>:
 630:	80 e0       	ldi	r24, 0x00	; 0
 632:	f5 cf       	rjmp	.-22     	; 0x61e <motion_set>
 634:	08 95       	ret

00000636 <left>:
 636:	85 e0       	ldi	r24, 0x05	; 5
 638:	f2 cf       	rjmp	.-28     	; 0x61e <motion_set>
 63a:	08 95       	ret

0000063c <right>:
 63c:	8a e0       	ldi	r24, 0x0A	; 10
 63e:	ef cf       	rjmp	.-34     	; 0x61e <motion_set>
 640:	08 95       	ret

00000642 <angle_rotate>:
 642:	cf 92       	push	r12
 644:	df 92       	push	r13
 646:	ef 92       	push	r14
 648:	ff 92       	push	r15
 64a:	cf 93       	push	r28
 64c:	bc 01       	movw	r22, r24
 64e:	80 e0       	ldi	r24, 0x00	; 0
 650:	90 e0       	ldi	r25, 0x00	; 0
 652:	7f d1       	rcall	.+766    	; 0x952 <__floatunsisf>
 654:	28 e4       	ldi	r18, 0x48	; 72
 656:	31 ee       	ldi	r19, 0xE1	; 225
 658:	42 e8       	ldi	r20, 0x82	; 130
 65a:	50 e4       	ldi	r21, 0x40	; 64
 65c:	e6 d0       	rcall	.+460    	; 0x82a <__divsf3>
 65e:	4d d1       	rcall	.+666    	; 0x8fa <__fixunssfsi>
 660:	6b 01       	movw	r12, r22
 662:	e1 2c       	mov	r14, r1
 664:	f1 2c       	mov	r15, r1
 666:	10 92 00 02 	sts	0x0200, r1
 66a:	10 92 01 02 	sts	0x0201, r1
 66e:	10 92 02 02 	sts	0x0202, r1
 672:	10 92 03 02 	sts	0x0203, r1
 676:	10 92 04 02 	sts	0x0204, r1
 67a:	10 92 05 02 	sts	0x0205, r1
 67e:	10 92 06 02 	sts	0x0206, r1
 682:	10 92 07 02 	sts	0x0207, r1
 686:	c0 e0       	ldi	r28, 0x00	; 0
 688:	21 e0       	ldi	r18, 0x01	; 1
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	45 e0       	ldi	r20, 0x05	; 5
 68e:	50 e0       	ldi	r21, 0x00	; 0
 690:	61 e0       	ldi	r22, 0x01	; 1
 692:	82 e0       	ldi	r24, 0x02	; 2
 694:	fc dd       	rcall	.-1032   	; 0x28e <lcd_print>
 696:	21 e0       	ldi	r18, 0x01	; 1
 698:	80 91 04 02 	lds	r24, 0x0204
 69c:	90 91 05 02 	lds	r25, 0x0205
 6a0:	a0 91 06 02 	lds	r26, 0x0206
 6a4:	b0 91 07 02 	lds	r27, 0x0207
 6a8:	8c 15       	cp	r24, r12
 6aa:	9d 05       	cpc	r25, r13
 6ac:	ae 05       	cpc	r26, r14
 6ae:	bf 05       	cpc	r27, r15
 6b0:	08 f4       	brcc	.+2      	; 0x6b4 <angle_rotate+0x72>
 6b2:	2c 2f       	mov	r18, r28
 6b4:	21 11       	cpse	r18, r1
 6b6:	11 c0       	rjmp	.+34     	; 0x6da <angle_rotate+0x98>
 6b8:	21 e0       	ldi	r18, 0x01	; 1
 6ba:	80 91 00 02 	lds	r24, 0x0200
 6be:	90 91 01 02 	lds	r25, 0x0201
 6c2:	a0 91 02 02 	lds	r26, 0x0202
 6c6:	b0 91 03 02 	lds	r27, 0x0203
 6ca:	8c 15       	cp	r24, r12
 6cc:	9d 05       	cpc	r25, r13
 6ce:	ae 05       	cpc	r26, r14
 6d0:	bf 05       	cpc	r27, r15
 6d2:	08 f4       	brcc	.+2      	; 0x6d6 <angle_rotate+0x94>
 6d4:	2c 2f       	mov	r18, r28
 6d6:	22 23       	and	r18, r18
 6d8:	b9 f2       	breq	.-82     	; 0x688 <angle_rotate+0x46>
 6da:	aa df       	rcall	.-172    	; 0x630 <stop>
 6dc:	cf 91       	pop	r28
 6de:	ff 90       	pop	r15
 6e0:	ef 90       	pop	r14
 6e2:	df 90       	pop	r13
 6e4:	cf 90       	pop	r12
 6e6:	08 95       	ret

000006e8 <buzzer_on>:


void buzzer_on (void)
{
	unsigned char port_restore = 0;
	port_restore = PINC;
 6e8:	86 b1       	in	r24, 0x06	; 6
	port_restore = port_restore | 0x08;
 6ea:	88 60       	ori	r24, 0x08	; 8
	PORTC = port_restore;
 6ec:	88 b9       	out	0x08, r24	; 8
 6ee:	08 95       	ret

000006f0 <buzzer_off>:
}

void buzzer_off (void)
{
	unsigned char port_restore = 0;
	port_restore = PINC;
 6f0:	86 b1       	in	r24, 0x06	; 6
	port_restore = port_restore & 0xF7;
 6f2:	87 7f       	andi	r24, 0xF7	; 247
	PORTC = port_restore;
 6f4:	88 b9       	out	0x08, r24	; 8
 6f6:	08 95       	ret

000006f8 <init_devices>:
}


void init_devices (void)
{
 	cli(); //Clears the global interrupts
 6f8:	f8 94       	cli
	port_init();
 6fa:	da de       	rcall	.-588    	; 0x4b0 <port_init>
	adc_init();
 6fc:	fa de       	rcall	.-524    	; 0x4f2 <adc_init>
	left_position_encoder_interrupt_init();
 6fe:	33 df       	rcall	.-410    	; 0x566 <left_position_encoder_interrupt_init>
	right_position_encoder_interrupt_init();
 700:	3b df       	rcall	.-394    	; 0x578 <right_position_encoder_interrupt_init>
	DDRC = DDRC | 0x08;		//Setting PORTC 3 as output
 702:	3b 9a       	sbi	0x07, 3	; 7
	PORTC = PORTC & 0xF7;
 704:	43 98       	cbi	0x08, 3	; 8
	timer5_init();
 706:	da de       	rcall	.-588    	; 0x4bc <timer5_init>
	sei();   //Enables the global interrupts
 708:	78 94       	sei
 70a:	08 95       	ret

0000070c <set_color>:

// forward jaa plz

void set_color()
{
	Left_white_line = ADC_Conversion(3);	//Getting data of Left WL Sensor
 70c:	83 e0       	ldi	r24, 0x03	; 3
 70e:	fe de       	rcall	.-516    	; 0x50c <ADC_Conversion>
 710:	80 93 0a 02 	sts	0x020A, r24
	Center_white_line = ADC_Conversion(2);	//Getting data of Center WL Sensor
 714:	82 e0       	ldi	r24, 0x02	; 2
 716:	fa de       	rcall	.-524    	; 0x50c <ADC_Conversion>
 718:	80 93 09 02 	sts	0x0209, r24
	Right_white_line = ADC_Conversion(1);	//Getting data of Right WL Sensor
 71c:	81 e0       	ldi	r24, 0x01	; 1
 71e:	f6 de       	rcall	.-532    	; 0x50c <ADC_Conversion>
 720:	80 93 08 02 	sts	0x0208, r24
 724:	08 95       	ret

00000726 <correct>:

}

void correct()
{
 726:	cf 93       	push	r28
 728:	df 93       	push	r29
	unsigned int i=0;
	Degrees=5;
 72a:	85 e0       	ldi	r24, 0x05	; 5
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	90 93 0c 02 	sts	0x020C, r25
 732:	80 93 0b 02 	sts	0x020B, r24

}

void correct()
{
	unsigned int i=0;
 736:	c0 e0       	ldi	r28, 0x00	; 0
 738:	d0 e0       	ldi	r29, 0x00	; 0
	Degrees=5;
	for(;i<3;i++)
	{
			left(); //Left wheel backward, Right wheel forward
 73a:	7d df       	rcall	.-262    	; 0x636 <left>
			lcd_print(2,1,i,1);
 73c:	21 e0       	ldi	r18, 0x01	; 1
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	ae 01       	movw	r20, r28
 742:	61 e0       	ldi	r22, 0x01	; 1
 744:	82 e0       	ldi	r24, 0x02	; 2
 746:	a3 dd       	rcall	.-1210   	; 0x28e <lcd_print>
			angle_rotate(Degrees);
 748:	80 91 0b 02 	lds	r24, 0x020B
 74c:	90 91 0c 02 	lds	r25, 0x020C
 750:	78 df       	rcall	.-272    	; 0x642 <angle_rotate>
			stop();
 752:	6e df       	rcall	.-292    	; 0x630 <stop>
			set_color();
 754:	db df       	rcall	.-74     	; 0x70c <set_color>
			if(Center_white_line>40)
 756:	80 91 09 02 	lds	r24, 0x0209
 75a:	89 32       	cpi	r24, 0x29	; 41
 75c:	a8 f4       	brcc	.+42     	; 0x788 <correct+0x62>

void correct()
{
	unsigned int i=0;
	Degrees=5;
	for(;i<3;i++)
 75e:	21 96       	adiw	r28, 0x01	; 1
 760:	c3 30       	cpi	r28, 0x03	; 3
 762:	d1 05       	cpc	r29, r1
 764:	51 f7       	brne	.-44     	; 0x73a <correct+0x14>
			set_color();
			if(Center_white_line>40)
				return;
	}
	//normal
	right();
 766:	6a df       	rcall	.-300    	; 0x63c <right>
	while(Center_white_line<40)
 768:	80 91 09 02 	lds	r24, 0x0209
 76c:	88 32       	cpi	r24, 0x28	; 40
 76e:	60 f4       	brcc	.+24     	; 0x788 <correct+0x62>
	{
		lcd_print(2,1,7,1);
 770:	21 e0       	ldi	r18, 0x01	; 1
 772:	30 e0       	ldi	r19, 0x00	; 0
 774:	47 e0       	ldi	r20, 0x07	; 7
 776:	50 e0       	ldi	r21, 0x00	; 0
 778:	61 e0       	ldi	r22, 0x01	; 1
 77a:	82 e0       	ldi	r24, 0x02	; 2
 77c:	88 dd       	rcall	.-1264   	; 0x28e <lcd_print>
		set_color();
 77e:	c6 df       	rcall	.-116    	; 0x70c <set_color>
			if(Center_white_line>40)
				return;
	}
	//normal
	right();
	while(Center_white_line<40)
 780:	80 91 09 02 	lds	r24, 0x0209
 784:	88 32       	cpi	r24, 0x28	; 40
 786:	a0 f3       	brcs	.-24     	; 0x770 <correct+0x4a>
		lcd_print(2,1,7,1);
		set_color();
		
	}
	return;
}
 788:	df 91       	pop	r29
 78a:	cf 91       	pop	r28
 78c:	08 95       	ret

0000078e <noNatak>:
void noNatak()
{
	//buzzer_on();
	//lcd_print(2,1,7,1);
	correct();
 78e:	cb df       	rcall	.-106    	; 0x726 <correct>
		
	stop();
 790:	4f cf       	rjmp	.-354    	; 0x630 <stop>
 792:	08 95       	ret

00000794 <forwardJaa>:
	return;
}


void forwardJaa()
{
 794:	ff 92       	push	r15
 796:	0f 93       	push	r16
 798:	1f 93       	push	r17
 79a:	cf 93       	push	r28
 79c:	df 93       	push	r29
}

//Function for velocity control
void velocity (unsigned char left_motor, unsigned char right_motor)
{
	OCR5AL = (unsigned char)left_motor;
 79e:	08 e2       	ldi	r16, 0x28	; 40
 7a0:	11 e0       	ldi	r17, 0x01	; 1
 7a2:	0f 2e       	mov	r0, r31
 7a4:	f8 ec       	ldi	r31, 0xC8	; 200
 7a6:	ff 2e       	mov	r15, r31
 7a8:	f0 2d       	mov	r31, r0
	OCR5BL = (unsigned char)right_motor;
 7aa:	ca e2       	ldi	r28, 0x2A	; 42
 7ac:	d1 e0       	ldi	r29, 0x01	; 1

void forwardJaa()
{
	do
	{
		set_color();
 7ae:	ae df       	rcall	.-164    	; 0x70c <set_color>
		if(Center_white_line>40 && (Left_white_line>40 || Right_white_line>40) )
 7b0:	80 91 09 02 	lds	r24, 0x0209
 7b4:	89 32       	cpi	r24, 0x29	; 41
 7b6:	c8 f0       	brcs	.+50     	; 0x7ea <forwardJaa+0x56>
 7b8:	80 91 0a 02 	lds	r24, 0x020A
 7bc:	89 32       	cpi	r24, 0x29	; 41
 7be:	20 f4       	brcc	.+8      	; 0x7c8 <forwardJaa+0x34>
 7c0:	80 91 08 02 	lds	r24, 0x0208
 7c4:	89 32       	cpi	r24, 0x29	; 41
 7c6:	88 f0       	brcs	.+34     	; 0x7ea <forwardJaa+0x56>
		{
			buzzer_on();
 7c8:	8f df       	rcall	.-226    	; 0x6e8 <buzzer_on>
			forward();
 7ca:	2f df       	rcall	.-418    	; 0x62a <forward>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7cc:	2f e7       	ldi	r18, 0x7F	; 127
 7ce:	84 e8       	ldi	r24, 0x84	; 132
 7d0:	9e e1       	ldi	r25, 0x1E	; 30
 7d2:	21 50       	subi	r18, 0x01	; 1
 7d4:	80 40       	sbci	r24, 0x00	; 0
 7d6:	90 40       	sbci	r25, 0x00	; 0
 7d8:	e1 f7       	brne	.-8      	; 0x7d2 <forwardJaa+0x3e>
 7da:	00 c0       	rjmp	.+0      	; 0x7dc <forwardJaa+0x48>
 7dc:	00 00       	nop
			_delay_ms(10000);
			right();
 7de:	2e df       	rcall	.-420    	; 0x63c <right>
			angle_rotate(90);
 7e0:	8a e5       	ldi	r24, 0x5A	; 90
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	2e df       	rcall	.-420    	; 0x642 <angle_rotate>
			stop();
 7e6:	24 df       	rcall	.-440    	; 0x630 <stop>
			buzzer_off();
 7e8:	83 df       	rcall	.-250    	; 0x6f0 <buzzer_off>
		}	
		print_sensor(1,1,3);	//Prints value of White Line Sensor1
 7ea:	43 e0       	ldi	r20, 0x03	; 3
 7ec:	61 e0       	ldi	r22, 0x01	; 1
 7ee:	81 e0       	ldi	r24, 0x01	; 1
 7f0:	a8 de       	rcall	.-688    	; 0x542 <print_sensor>
		print_sensor(1,5,2);	//Prints Value of White Line Sensor2
 7f2:	42 e0       	ldi	r20, 0x02	; 2
 7f4:	65 e0       	ldi	r22, 0x05	; 5
 7f6:	81 e0       	ldi	r24, 0x01	; 1
 7f8:	a4 de       	rcall	.-696    	; 0x542 <print_sensor>
		print_sensor(1,9,1);	//Prints Value of White Line Sensor3
 7fa:	41 e0       	ldi	r20, 0x01	; 1
 7fc:	69 e0       	ldi	r22, 0x09	; 9
 7fe:	81 e0       	ldi	r24, 0x01	; 1
 800:	a0 de       	rcall	.-704    	; 0x542 <print_sensor>
	
		forward();
 802:	13 df       	rcall	.-474    	; 0x62a <forward>
}

//Function for velocity control
void velocity (unsigned char left_motor, unsigned char right_motor)
{
	OCR5AL = (unsigned char)left_motor;
 804:	f8 01       	movw	r30, r16
 806:	f0 82       	st	Z, r15
	OCR5BL = (unsigned char)right_motor;
 808:	f8 82       	st	Y, r15
		print_sensor(1,9,1);	//Prints Value of White Line Sensor3
	
		forward();
		velocity(200,200);
	
	}while(Center_white_line>0x28);
 80a:	80 91 09 02 	lds	r24, 0x0209
 80e:	89 32       	cpi	r24, 0x29	; 41
 810:	70 f6       	brcc	.-100    	; 0x7ae <forwardJaa+0x1a>
	
	noNatak();	
 812:	bd df       	rcall	.-134    	; 0x78e <noNatak>
	return;
}
 814:	df 91       	pop	r29
 816:	cf 91       	pop	r28
 818:	1f 91       	pop	r17
 81a:	0f 91       	pop	r16
 81c:	ff 90       	pop	r15
 81e:	08 95       	ret

00000820 <main>:

//Main Function
int main()
{
	init_devices();
 820:	6b df       	rcall	.-298    	; 0x6f8 <init_devices>
	lcd_set_4bit();
 822:	73 dc       	rcall	.-1818   	; 0x10a <lcd_set_4bit>
	lcd_init();
 824:	e0 dc       	rcall	.-1600   	; 0x1e6 <lcd_init>
	
	while(1)
	{
		forwardJaa();	
 826:	b6 df       	rcall	.-148    	; 0x794 <forwardJaa>
 828:	fe cf       	rjmp	.-4      	; 0x826 <main+0x6>

0000082a <__divsf3>:
 82a:	0c d0       	rcall	.+24     	; 0x844 <__divsf3x>
 82c:	e6 c0       	rjmp	.+460    	; 0x9fa <__fp_round>
 82e:	de d0       	rcall	.+444    	; 0x9ec <__fp_pscB>
 830:	40 f0       	brcs	.+16     	; 0x842 <__divsf3+0x18>
 832:	d5 d0       	rcall	.+426    	; 0x9de <__fp_pscA>
 834:	30 f0       	brcs	.+12     	; 0x842 <__divsf3+0x18>
 836:	21 f4       	brne	.+8      	; 0x840 <__divsf3+0x16>
 838:	5f 3f       	cpi	r21, 0xFF	; 255
 83a:	19 f0       	breq	.+6      	; 0x842 <__divsf3+0x18>
 83c:	c7 c0       	rjmp	.+398    	; 0x9cc <__fp_inf>
 83e:	51 11       	cpse	r21, r1
 840:	10 c1       	rjmp	.+544    	; 0xa62 <__fp_szero>
 842:	ca c0       	rjmp	.+404    	; 0x9d8 <__fp_nan>

00000844 <__divsf3x>:
 844:	eb d0       	rcall	.+470    	; 0xa1c <__fp_split3>
 846:	98 f3       	brcs	.-26     	; 0x82e <__divsf3+0x4>

00000848 <__divsf3_pse>:
 848:	99 23       	and	r25, r25
 84a:	c9 f3       	breq	.-14     	; 0x83e <__divsf3+0x14>
 84c:	55 23       	and	r21, r21
 84e:	b1 f3       	breq	.-20     	; 0x83c <__divsf3+0x12>
 850:	95 1b       	sub	r25, r21
 852:	55 0b       	sbc	r21, r21
 854:	bb 27       	eor	r27, r27
 856:	aa 27       	eor	r26, r26
 858:	62 17       	cp	r22, r18
 85a:	73 07       	cpc	r23, r19
 85c:	84 07       	cpc	r24, r20
 85e:	38 f0       	brcs	.+14     	; 0x86e <__divsf3_pse+0x26>
 860:	9f 5f       	subi	r25, 0xFF	; 255
 862:	5f 4f       	sbci	r21, 0xFF	; 255
 864:	22 0f       	add	r18, r18
 866:	33 1f       	adc	r19, r19
 868:	44 1f       	adc	r20, r20
 86a:	aa 1f       	adc	r26, r26
 86c:	a9 f3       	breq	.-22     	; 0x858 <__divsf3_pse+0x10>
 86e:	33 d0       	rcall	.+102    	; 0x8d6 <__divsf3_pse+0x8e>
 870:	0e 2e       	mov	r0, r30
 872:	3a f0       	brmi	.+14     	; 0x882 <__divsf3_pse+0x3a>
 874:	e0 e8       	ldi	r30, 0x80	; 128
 876:	30 d0       	rcall	.+96     	; 0x8d8 <__divsf3_pse+0x90>
 878:	91 50       	subi	r25, 0x01	; 1
 87a:	50 40       	sbci	r21, 0x00	; 0
 87c:	e6 95       	lsr	r30
 87e:	00 1c       	adc	r0, r0
 880:	ca f7       	brpl	.-14     	; 0x874 <__divsf3_pse+0x2c>
 882:	29 d0       	rcall	.+82     	; 0x8d6 <__divsf3_pse+0x8e>
 884:	fe 2f       	mov	r31, r30
 886:	27 d0       	rcall	.+78     	; 0x8d6 <__divsf3_pse+0x8e>
 888:	66 0f       	add	r22, r22
 88a:	77 1f       	adc	r23, r23
 88c:	88 1f       	adc	r24, r24
 88e:	bb 1f       	adc	r27, r27
 890:	26 17       	cp	r18, r22
 892:	37 07       	cpc	r19, r23
 894:	48 07       	cpc	r20, r24
 896:	ab 07       	cpc	r26, r27
 898:	b0 e8       	ldi	r27, 0x80	; 128
 89a:	09 f0       	breq	.+2      	; 0x89e <__divsf3_pse+0x56>
 89c:	bb 0b       	sbc	r27, r27
 89e:	80 2d       	mov	r24, r0
 8a0:	bf 01       	movw	r22, r30
 8a2:	ff 27       	eor	r31, r31
 8a4:	93 58       	subi	r25, 0x83	; 131
 8a6:	5f 4f       	sbci	r21, 0xFF	; 255
 8a8:	2a f0       	brmi	.+10     	; 0x8b4 <__divsf3_pse+0x6c>
 8aa:	9e 3f       	cpi	r25, 0xFE	; 254
 8ac:	51 05       	cpc	r21, r1
 8ae:	68 f0       	brcs	.+26     	; 0x8ca <__divsf3_pse+0x82>
 8b0:	8d c0       	rjmp	.+282    	; 0x9cc <__fp_inf>
 8b2:	d7 c0       	rjmp	.+430    	; 0xa62 <__fp_szero>
 8b4:	5f 3f       	cpi	r21, 0xFF	; 255
 8b6:	ec f3       	brlt	.-6      	; 0x8b2 <__divsf3_pse+0x6a>
 8b8:	98 3e       	cpi	r25, 0xE8	; 232
 8ba:	dc f3       	brlt	.-10     	; 0x8b2 <__divsf3_pse+0x6a>
 8bc:	86 95       	lsr	r24
 8be:	77 95       	ror	r23
 8c0:	67 95       	ror	r22
 8c2:	b7 95       	ror	r27
 8c4:	f7 95       	ror	r31
 8c6:	9f 5f       	subi	r25, 0xFF	; 255
 8c8:	c9 f7       	brne	.-14     	; 0x8bc <__divsf3_pse+0x74>
 8ca:	88 0f       	add	r24, r24
 8cc:	91 1d       	adc	r25, r1
 8ce:	96 95       	lsr	r25
 8d0:	87 95       	ror	r24
 8d2:	97 f9       	bld	r25, 7
 8d4:	08 95       	ret
 8d6:	e1 e0       	ldi	r30, 0x01	; 1
 8d8:	66 0f       	add	r22, r22
 8da:	77 1f       	adc	r23, r23
 8dc:	88 1f       	adc	r24, r24
 8de:	bb 1f       	adc	r27, r27
 8e0:	62 17       	cp	r22, r18
 8e2:	73 07       	cpc	r23, r19
 8e4:	84 07       	cpc	r24, r20
 8e6:	ba 07       	cpc	r27, r26
 8e8:	20 f0       	brcs	.+8      	; 0x8f2 <__divsf3_pse+0xaa>
 8ea:	62 1b       	sub	r22, r18
 8ec:	73 0b       	sbc	r23, r19
 8ee:	84 0b       	sbc	r24, r20
 8f0:	ba 0b       	sbc	r27, r26
 8f2:	ee 1f       	adc	r30, r30
 8f4:	88 f7       	brcc	.-30     	; 0x8d8 <__divsf3_pse+0x90>
 8f6:	e0 95       	com	r30
 8f8:	08 95       	ret

000008fa <__fixunssfsi>:
 8fa:	98 d0       	rcall	.+304    	; 0xa2c <__fp_splitA>
 8fc:	88 f0       	brcs	.+34     	; 0x920 <__fixunssfsi+0x26>
 8fe:	9f 57       	subi	r25, 0x7F	; 127
 900:	90 f0       	brcs	.+36     	; 0x926 <__fixunssfsi+0x2c>
 902:	b9 2f       	mov	r27, r25
 904:	99 27       	eor	r25, r25
 906:	b7 51       	subi	r27, 0x17	; 23
 908:	a0 f0       	brcs	.+40     	; 0x932 <__fixunssfsi+0x38>
 90a:	d1 f0       	breq	.+52     	; 0x940 <__fixunssfsi+0x46>
 90c:	66 0f       	add	r22, r22
 90e:	77 1f       	adc	r23, r23
 910:	88 1f       	adc	r24, r24
 912:	99 1f       	adc	r25, r25
 914:	1a f0       	brmi	.+6      	; 0x91c <__fixunssfsi+0x22>
 916:	ba 95       	dec	r27
 918:	c9 f7       	brne	.-14     	; 0x90c <__fixunssfsi+0x12>
 91a:	12 c0       	rjmp	.+36     	; 0x940 <__fixunssfsi+0x46>
 91c:	b1 30       	cpi	r27, 0x01	; 1
 91e:	81 f0       	breq	.+32     	; 0x940 <__fixunssfsi+0x46>
 920:	9f d0       	rcall	.+318    	; 0xa60 <__fp_zero>
 922:	b1 e0       	ldi	r27, 0x01	; 1
 924:	08 95       	ret
 926:	9c c0       	rjmp	.+312    	; 0xa60 <__fp_zero>
 928:	67 2f       	mov	r22, r23
 92a:	78 2f       	mov	r23, r24
 92c:	88 27       	eor	r24, r24
 92e:	b8 5f       	subi	r27, 0xF8	; 248
 930:	39 f0       	breq	.+14     	; 0x940 <__fixunssfsi+0x46>
 932:	b9 3f       	cpi	r27, 0xF9	; 249
 934:	cc f3       	brlt	.-14     	; 0x928 <__fixunssfsi+0x2e>
 936:	86 95       	lsr	r24
 938:	77 95       	ror	r23
 93a:	67 95       	ror	r22
 93c:	b3 95       	inc	r27
 93e:	d9 f7       	brne	.-10     	; 0x936 <__fixunssfsi+0x3c>
 940:	3e f4       	brtc	.+14     	; 0x950 <__fixunssfsi+0x56>
 942:	90 95       	com	r25
 944:	80 95       	com	r24
 946:	70 95       	com	r23
 948:	61 95       	neg	r22
 94a:	7f 4f       	sbci	r23, 0xFF	; 255
 94c:	8f 4f       	sbci	r24, 0xFF	; 255
 94e:	9f 4f       	sbci	r25, 0xFF	; 255
 950:	08 95       	ret

00000952 <__floatunsisf>:
 952:	e8 94       	clt
 954:	09 c0       	rjmp	.+18     	; 0x968 <__floatsisf+0x12>

00000956 <__floatsisf>:
 956:	97 fb       	bst	r25, 7
 958:	3e f4       	brtc	.+14     	; 0x968 <__floatsisf+0x12>
 95a:	90 95       	com	r25
 95c:	80 95       	com	r24
 95e:	70 95       	com	r23
 960:	61 95       	neg	r22
 962:	7f 4f       	sbci	r23, 0xFF	; 255
 964:	8f 4f       	sbci	r24, 0xFF	; 255
 966:	9f 4f       	sbci	r25, 0xFF	; 255
 968:	99 23       	and	r25, r25
 96a:	a9 f0       	breq	.+42     	; 0x996 <__floatsisf+0x40>
 96c:	f9 2f       	mov	r31, r25
 96e:	96 e9       	ldi	r25, 0x96	; 150
 970:	bb 27       	eor	r27, r27
 972:	93 95       	inc	r25
 974:	f6 95       	lsr	r31
 976:	87 95       	ror	r24
 978:	77 95       	ror	r23
 97a:	67 95       	ror	r22
 97c:	b7 95       	ror	r27
 97e:	f1 11       	cpse	r31, r1
 980:	f8 cf       	rjmp	.-16     	; 0x972 <__floatsisf+0x1c>
 982:	fa f4       	brpl	.+62     	; 0x9c2 <__floatsisf+0x6c>
 984:	bb 0f       	add	r27, r27
 986:	11 f4       	brne	.+4      	; 0x98c <__floatsisf+0x36>
 988:	60 ff       	sbrs	r22, 0
 98a:	1b c0       	rjmp	.+54     	; 0x9c2 <__floatsisf+0x6c>
 98c:	6f 5f       	subi	r22, 0xFF	; 255
 98e:	7f 4f       	sbci	r23, 0xFF	; 255
 990:	8f 4f       	sbci	r24, 0xFF	; 255
 992:	9f 4f       	sbci	r25, 0xFF	; 255
 994:	16 c0       	rjmp	.+44     	; 0x9c2 <__floatsisf+0x6c>
 996:	88 23       	and	r24, r24
 998:	11 f0       	breq	.+4      	; 0x99e <__floatsisf+0x48>
 99a:	96 e9       	ldi	r25, 0x96	; 150
 99c:	11 c0       	rjmp	.+34     	; 0x9c0 <__floatsisf+0x6a>
 99e:	77 23       	and	r23, r23
 9a0:	21 f0       	breq	.+8      	; 0x9aa <__floatsisf+0x54>
 9a2:	9e e8       	ldi	r25, 0x8E	; 142
 9a4:	87 2f       	mov	r24, r23
 9a6:	76 2f       	mov	r23, r22
 9a8:	05 c0       	rjmp	.+10     	; 0x9b4 <__floatsisf+0x5e>
 9aa:	66 23       	and	r22, r22
 9ac:	71 f0       	breq	.+28     	; 0x9ca <__floatsisf+0x74>
 9ae:	96 e8       	ldi	r25, 0x86	; 134
 9b0:	86 2f       	mov	r24, r22
 9b2:	70 e0       	ldi	r23, 0x00	; 0
 9b4:	60 e0       	ldi	r22, 0x00	; 0
 9b6:	2a f0       	brmi	.+10     	; 0x9c2 <__floatsisf+0x6c>
 9b8:	9a 95       	dec	r25
 9ba:	66 0f       	add	r22, r22
 9bc:	77 1f       	adc	r23, r23
 9be:	88 1f       	adc	r24, r24
 9c0:	da f7       	brpl	.-10     	; 0x9b8 <__floatsisf+0x62>
 9c2:	88 0f       	add	r24, r24
 9c4:	96 95       	lsr	r25
 9c6:	87 95       	ror	r24
 9c8:	97 f9       	bld	r25, 7
 9ca:	08 95       	ret

000009cc <__fp_inf>:
 9cc:	97 f9       	bld	r25, 7
 9ce:	9f 67       	ori	r25, 0x7F	; 127
 9d0:	80 e8       	ldi	r24, 0x80	; 128
 9d2:	70 e0       	ldi	r23, 0x00	; 0
 9d4:	60 e0       	ldi	r22, 0x00	; 0
 9d6:	08 95       	ret

000009d8 <__fp_nan>:
 9d8:	9f ef       	ldi	r25, 0xFF	; 255
 9da:	80 ec       	ldi	r24, 0xC0	; 192
 9dc:	08 95       	ret

000009de <__fp_pscA>:
 9de:	00 24       	eor	r0, r0
 9e0:	0a 94       	dec	r0
 9e2:	16 16       	cp	r1, r22
 9e4:	17 06       	cpc	r1, r23
 9e6:	18 06       	cpc	r1, r24
 9e8:	09 06       	cpc	r0, r25
 9ea:	08 95       	ret

000009ec <__fp_pscB>:
 9ec:	00 24       	eor	r0, r0
 9ee:	0a 94       	dec	r0
 9f0:	12 16       	cp	r1, r18
 9f2:	13 06       	cpc	r1, r19
 9f4:	14 06       	cpc	r1, r20
 9f6:	05 06       	cpc	r0, r21
 9f8:	08 95       	ret

000009fa <__fp_round>:
 9fa:	09 2e       	mov	r0, r25
 9fc:	03 94       	inc	r0
 9fe:	00 0c       	add	r0, r0
 a00:	11 f4       	brne	.+4      	; 0xa06 <__fp_round+0xc>
 a02:	88 23       	and	r24, r24
 a04:	52 f0       	brmi	.+20     	; 0xa1a <__fp_round+0x20>
 a06:	bb 0f       	add	r27, r27
 a08:	40 f4       	brcc	.+16     	; 0xa1a <__fp_round+0x20>
 a0a:	bf 2b       	or	r27, r31
 a0c:	11 f4       	brne	.+4      	; 0xa12 <__fp_round+0x18>
 a0e:	60 ff       	sbrs	r22, 0
 a10:	04 c0       	rjmp	.+8      	; 0xa1a <__fp_round+0x20>
 a12:	6f 5f       	subi	r22, 0xFF	; 255
 a14:	7f 4f       	sbci	r23, 0xFF	; 255
 a16:	8f 4f       	sbci	r24, 0xFF	; 255
 a18:	9f 4f       	sbci	r25, 0xFF	; 255
 a1a:	08 95       	ret

00000a1c <__fp_split3>:
 a1c:	57 fd       	sbrc	r21, 7
 a1e:	90 58       	subi	r25, 0x80	; 128
 a20:	44 0f       	add	r20, r20
 a22:	55 1f       	adc	r21, r21
 a24:	59 f0       	breq	.+22     	; 0xa3c <__fp_splitA+0x10>
 a26:	5f 3f       	cpi	r21, 0xFF	; 255
 a28:	71 f0       	breq	.+28     	; 0xa46 <__fp_splitA+0x1a>
 a2a:	47 95       	ror	r20

00000a2c <__fp_splitA>:
 a2c:	88 0f       	add	r24, r24
 a2e:	97 fb       	bst	r25, 7
 a30:	99 1f       	adc	r25, r25
 a32:	61 f0       	breq	.+24     	; 0xa4c <__fp_splitA+0x20>
 a34:	9f 3f       	cpi	r25, 0xFF	; 255
 a36:	79 f0       	breq	.+30     	; 0xa56 <__fp_splitA+0x2a>
 a38:	87 95       	ror	r24
 a3a:	08 95       	ret
 a3c:	12 16       	cp	r1, r18
 a3e:	13 06       	cpc	r1, r19
 a40:	14 06       	cpc	r1, r20
 a42:	55 1f       	adc	r21, r21
 a44:	f2 cf       	rjmp	.-28     	; 0xa2a <__fp_split3+0xe>
 a46:	46 95       	lsr	r20
 a48:	f1 df       	rcall	.-30     	; 0xa2c <__fp_splitA>
 a4a:	08 c0       	rjmp	.+16     	; 0xa5c <__fp_splitA+0x30>
 a4c:	16 16       	cp	r1, r22
 a4e:	17 06       	cpc	r1, r23
 a50:	18 06       	cpc	r1, r24
 a52:	99 1f       	adc	r25, r25
 a54:	f1 cf       	rjmp	.-30     	; 0xa38 <__fp_splitA+0xc>
 a56:	86 95       	lsr	r24
 a58:	71 05       	cpc	r23, r1
 a5a:	61 05       	cpc	r22, r1
 a5c:	08 94       	sec
 a5e:	08 95       	ret

00000a60 <__fp_zero>:
 a60:	e8 94       	clt

00000a62 <__fp_szero>:
 a62:	bb 27       	eor	r27, r27
 a64:	66 27       	eor	r22, r22
 a66:	77 27       	eor	r23, r23
 a68:	cb 01       	movw	r24, r22
 a6a:	97 f9       	bld	r25, 7
 a6c:	08 95       	ret

00000a6e <__umulhisi3>:
 a6e:	a2 9f       	mul	r26, r18
 a70:	b0 01       	movw	r22, r0
 a72:	b3 9f       	mul	r27, r19
 a74:	c0 01       	movw	r24, r0
 a76:	a3 9f       	mul	r26, r19
 a78:	70 0d       	add	r23, r0
 a7a:	81 1d       	adc	r24, r1
 a7c:	11 24       	eor	r1, r1
 a7e:	91 1d       	adc	r25, r1
 a80:	b2 9f       	mul	r27, r18
 a82:	70 0d       	add	r23, r0
 a84:	81 1d       	adc	r24, r1
 a86:	11 24       	eor	r1, r1
 a88:	91 1d       	adc	r25, r1
 a8a:	08 95       	ret

00000a8c <_exit>:
 a8c:	f8 94       	cli

00000a8e <__stop_program>:
 a8e:	ff cf       	rjmp	.-2      	; 0xa8e <__stop_program>
