
Navigation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000072  00800200  00002b2e  00002bc2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002b2e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000065  00800272  00800272  00002c34  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002c34  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000360  00000000  00000000  00002c64  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003371  00000000  00000000  00002fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000050f  00000000  00000000  00006335  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000024c8  00000000  00000000  00006844  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000934  00000000  00000000  00008d0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000814  00000000  00000000  00009640  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000203d  00000000  00000000  00009e54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000003b0  00000000  00000000  0000be91  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	03 c3       	rjmp	.+1542   	; 0x60c <__vector_1>
       6:	00 00       	nop
       8:	8e c0       	rjmp	.+284    	; 0x126 <__bad_interrupt>
       a:	00 00       	nop
       c:	8c c0       	rjmp	.+280    	; 0x126 <__bad_interrupt>
       e:	00 00       	nop
      10:	8a c0       	rjmp	.+276    	; 0x126 <__bad_interrupt>
      12:	00 00       	nop
      14:	88 c0       	rjmp	.+272    	; 0x126 <__bad_interrupt>
      16:	00 00       	nop
      18:	86 c0       	rjmp	.+268    	; 0x126 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	84 c0       	rjmp	.+264    	; 0x126 <__bad_interrupt>
      1e:	00 00       	nop
      20:	82 c0       	rjmp	.+260    	; 0x126 <__bad_interrupt>
      22:	00 00       	nop
      24:	80 c0       	rjmp	.+256    	; 0x126 <__bad_interrupt>
      26:	00 00       	nop
      28:	7e c0       	rjmp	.+252    	; 0x126 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7c c0       	rjmp	.+248    	; 0x126 <__bad_interrupt>
      2e:	00 00       	nop
      30:	7a c0       	rjmp	.+244    	; 0x126 <__bad_interrupt>
      32:	00 00       	nop
      34:	78 c0       	rjmp	.+240    	; 0x126 <__bad_interrupt>
      36:	00 00       	nop
      38:	76 c0       	rjmp	.+236    	; 0x126 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	74 c0       	rjmp	.+232    	; 0x126 <__bad_interrupt>
      3e:	00 00       	nop
      40:	72 c0       	rjmp	.+228    	; 0x126 <__bad_interrupt>
      42:	00 00       	nop
      44:	70 c0       	rjmp	.+224    	; 0x126 <__bad_interrupt>
      46:	00 00       	nop
      48:	6e c0       	rjmp	.+220    	; 0x126 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6c c0       	rjmp	.+216    	; 0x126 <__bad_interrupt>
      4e:	00 00       	nop
      50:	6a c0       	rjmp	.+212    	; 0x126 <__bad_interrupt>
      52:	00 00       	nop
      54:	68 c0       	rjmp	.+208    	; 0x126 <__bad_interrupt>
      56:	00 00       	nop
      58:	66 c0       	rjmp	.+204    	; 0x126 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	64 c0       	rjmp	.+200    	; 0x126 <__bad_interrupt>
      5e:	00 00       	nop
      60:	62 c0       	rjmp	.+196    	; 0x126 <__bad_interrupt>
      62:	00 00       	nop
      64:	60 c0       	rjmp	.+192    	; 0x126 <__bad_interrupt>
      66:	00 00       	nop
      68:	5e c0       	rjmp	.+188    	; 0x126 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5c c0       	rjmp	.+184    	; 0x126 <__bad_interrupt>
      6e:	00 00       	nop
      70:	5a c0       	rjmp	.+180    	; 0x126 <__bad_interrupt>
      72:	00 00       	nop
      74:	58 c0       	rjmp	.+176    	; 0x126 <__bad_interrupt>
      76:	00 00       	nop
      78:	56 c0       	rjmp	.+172    	; 0x126 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	54 c0       	rjmp	.+168    	; 0x126 <__bad_interrupt>
      7e:	00 00       	nop
      80:	52 c0       	rjmp	.+164    	; 0x126 <__bad_interrupt>
      82:	00 00       	nop
      84:	50 c0       	rjmp	.+160    	; 0x126 <__bad_interrupt>
      86:	00 00       	nop
      88:	4e c0       	rjmp	.+156    	; 0x126 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4c c0       	rjmp	.+152    	; 0x126 <__bad_interrupt>
      8e:	00 00       	nop
      90:	4a c0       	rjmp	.+148    	; 0x126 <__bad_interrupt>
      92:	00 00       	nop
      94:	48 c0       	rjmp	.+144    	; 0x126 <__bad_interrupt>
      96:	00 00       	nop
      98:	46 c0       	rjmp	.+140    	; 0x126 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	44 c0       	rjmp	.+136    	; 0x126 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	42 c0       	rjmp	.+132    	; 0x126 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	40 c0       	rjmp	.+128    	; 0x126 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3e c0       	rjmp	.+124    	; 0x126 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3c c0       	rjmp	.+120    	; 0x126 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	3a c0       	rjmp	.+116    	; 0x126 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	38 c0       	rjmp	.+112    	; 0x126 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	36 c0       	rjmp	.+108    	; 0x126 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	34 c0       	rjmp	.+104    	; 0x126 <__bad_interrupt>
      be:	00 00       	nop
      c0:	32 c0       	rjmp	.+100    	; 0x126 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	30 c0       	rjmp	.+96     	; 0x126 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2e c0       	rjmp	.+92     	; 0x126 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2c c0       	rjmp	.+88     	; 0x126 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	2a c0       	rjmp	.+84     	; 0x126 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	28 c0       	rjmp	.+80     	; 0x126 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	26 c0       	rjmp	.+76     	; 0x126 <__bad_interrupt>
      da:	00 00       	nop
      dc:	24 c0       	rjmp	.+72     	; 0x126 <__bad_interrupt>
      de:	00 00       	nop
      e0:	22 c0       	rjmp	.+68     	; 0x126 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee e2       	ldi	r30, 0x2E	; 46
      fc:	fb e2       	ldi	r31, 0x2B	; 43
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 37       	cpi	r26, 0x72	; 114
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a2 e7       	ldi	r26, 0x72	; 114
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a7 3d       	cpi	r26, 0xD7	; 215
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 73 13 	call	0x26e6	; 0x26e6 <main>
     122:	0c 94 95 15 	jmp	0x2b2a	; 0x2b2a <_exit>

00000126 <__bad_interrupt>:
     126:	6c cf       	rjmp	.-296    	; 0x0 <__vectors>

00000128 <lcd_set_4bit>:
	lcd_print(2,1,t,5);
	_delay_ms(10000);
	lcd_wr_command(0x01); //Clear the LCD
	lcd((char*)t);
	return t;
}
     128:	86 e6       	ldi	r24, 0x66	; 102
     12a:	9e e0       	ldi	r25, 0x0E	; 14
     12c:	01 97       	sbiw	r24, 0x01	; 1
     12e:	f1 f7       	brne	.-4      	; 0x12c <lcd_set_4bit+0x4>
     130:	00 00       	nop
     132:	40 98       	cbi	0x08, 0	; 8
     134:	41 98       	cbi	0x08, 1	; 8
     136:	80 e3       	ldi	r24, 0x30	; 48
     138:	88 b9       	out	0x08, r24	; 8
     13a:	42 9a       	sbi	0x08, 2	; 8
     13c:	8f ef       	ldi	r24, 0xFF	; 255
     13e:	97 e4       	ldi	r25, 0x47	; 71
     140:	01 97       	sbiw	r24, 0x01	; 1
     142:	f1 f7       	brne	.-4      	; 0x140 <lcd_set_4bit+0x18>
     144:	00 c0       	rjmp	.+0      	; 0x146 <lcd_set_4bit+0x1e>
     146:	00 00       	nop
     148:	42 98       	cbi	0x08, 2	; 8
     14a:	86 e6       	ldi	r24, 0x66	; 102
     14c:	9e e0       	ldi	r25, 0x0E	; 14
     14e:	01 97       	sbiw	r24, 0x01	; 1
     150:	f1 f7       	brne	.-4      	; 0x14e <lcd_set_4bit+0x26>
     152:	00 00       	nop
     154:	40 98       	cbi	0x08, 0	; 8
     156:	41 98       	cbi	0x08, 1	; 8
     158:	80 e3       	ldi	r24, 0x30	; 48
     15a:	88 b9       	out	0x08, r24	; 8
     15c:	42 9a       	sbi	0x08, 2	; 8
     15e:	8f ef       	ldi	r24, 0xFF	; 255
     160:	97 e4       	ldi	r25, 0x47	; 71
     162:	01 97       	sbiw	r24, 0x01	; 1
     164:	f1 f7       	brne	.-4      	; 0x162 <lcd_set_4bit+0x3a>
     166:	00 c0       	rjmp	.+0      	; 0x168 <lcd_set_4bit+0x40>
     168:	00 00       	nop
     16a:	42 98       	cbi	0x08, 2	; 8
     16c:	86 e6       	ldi	r24, 0x66	; 102
     16e:	9e e0       	ldi	r25, 0x0E	; 14
     170:	01 97       	sbiw	r24, 0x01	; 1
     172:	f1 f7       	brne	.-4      	; 0x170 <lcd_set_4bit+0x48>
     174:	00 00       	nop
     176:	40 98       	cbi	0x08, 0	; 8
     178:	41 98       	cbi	0x08, 1	; 8
     17a:	80 e3       	ldi	r24, 0x30	; 48
     17c:	88 b9       	out	0x08, r24	; 8
     17e:	42 9a       	sbi	0x08, 2	; 8
     180:	8f ef       	ldi	r24, 0xFF	; 255
     182:	97 e4       	ldi	r25, 0x47	; 71
     184:	01 97       	sbiw	r24, 0x01	; 1
     186:	f1 f7       	brne	.-4      	; 0x184 <lcd_set_4bit+0x5c>
     188:	00 c0       	rjmp	.+0      	; 0x18a <lcd_set_4bit+0x62>
     18a:	00 00       	nop
     18c:	42 98       	cbi	0x08, 2	; 8
     18e:	86 e6       	ldi	r24, 0x66	; 102
     190:	9e e0       	ldi	r25, 0x0E	; 14
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <lcd_set_4bit+0x6a>
     196:	00 00       	nop
     198:	40 98       	cbi	0x08, 0	; 8
     19a:	41 98       	cbi	0x08, 1	; 8
     19c:	80 e2       	ldi	r24, 0x20	; 32
     19e:	88 b9       	out	0x08, r24	; 8
     1a0:	42 9a       	sbi	0x08, 2	; 8
     1a2:	8f ef       	ldi	r24, 0xFF	; 255
     1a4:	97 e4       	ldi	r25, 0x47	; 71
     1a6:	01 97       	sbiw	r24, 0x01	; 1
     1a8:	f1 f7       	brne	.-4      	; 0x1a6 <lcd_set_4bit+0x7e>
     1aa:	00 c0       	rjmp	.+0      	; 0x1ac <lcd_set_4bit+0x84>
     1ac:	00 00       	nop
     1ae:	42 98       	cbi	0x08, 2	; 8
     1b0:	08 95       	ret

000001b2 <lcd_wr_command>:
     1b2:	98 b1       	in	r25, 0x08	; 8
     1b4:	9f 70       	andi	r25, 0x0F	; 15
     1b6:	98 b9       	out	0x08, r25	; 8
     1b8:	98 b1       	in	r25, 0x08	; 8
     1ba:	28 2f       	mov	r18, r24
     1bc:	20 7f       	andi	r18, 0xF0	; 240
     1be:	92 2b       	or	r25, r18
     1c0:	98 b9       	out	0x08, r25	; 8
     1c2:	40 98       	cbi	0x08, 0	; 8
     1c4:	41 98       	cbi	0x08, 1	; 8
     1c6:	42 9a       	sbi	0x08, 2	; 8
     1c8:	ef ef       	ldi	r30, 0xFF	; 255
     1ca:	f7 e4       	ldi	r31, 0x47	; 71
     1cc:	31 97       	sbiw	r30, 0x01	; 1
     1ce:	f1 f7       	brne	.-4      	; 0x1cc <lcd_wr_command+0x1a>
     1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <lcd_wr_command+0x20>
     1d2:	00 00       	nop
     1d4:	42 98       	cbi	0x08, 2	; 8
     1d6:	98 b1       	in	r25, 0x08	; 8
     1d8:	9f 70       	andi	r25, 0x0F	; 15
     1da:	98 b9       	out	0x08, r25	; 8
     1dc:	98 b1       	in	r25, 0x08	; 8
     1de:	82 95       	swap	r24
     1e0:	80 7f       	andi	r24, 0xF0	; 240
     1e2:	89 2b       	or	r24, r25
     1e4:	88 b9       	out	0x08, r24	; 8
     1e6:	40 98       	cbi	0x08, 0	; 8
     1e8:	41 98       	cbi	0x08, 1	; 8
     1ea:	42 9a       	sbi	0x08, 2	; 8
     1ec:	8f ef       	ldi	r24, 0xFF	; 255
     1ee:	97 e4       	ldi	r25, 0x47	; 71
     1f0:	01 97       	sbiw	r24, 0x01	; 1
     1f2:	f1 f7       	brne	.-4      	; 0x1f0 <lcd_wr_command+0x3e>
     1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <lcd_wr_command+0x44>
     1f6:	00 00       	nop
     1f8:	42 98       	cbi	0x08, 2	; 8
     1fa:	08 95       	ret

000001fc <lcd_init>:
     1fc:	95 df       	rcall	.-214    	; 0x128 <lcd_set_4bit>
     1fe:	86 e6       	ldi	r24, 0x66	; 102
     200:	9e e0       	ldi	r25, 0x0E	; 14
     202:	01 97       	sbiw	r24, 0x01	; 1
     204:	f1 f7       	brne	.-4      	; 0x202 <lcd_init+0x6>
     206:	00 00       	nop
     208:	88 e2       	ldi	r24, 0x28	; 40
     20a:	d3 df       	rcall	.-90     	; 0x1b2 <lcd_wr_command>
     20c:	81 e0       	ldi	r24, 0x01	; 1
     20e:	d1 df       	rcall	.-94     	; 0x1b2 <lcd_wr_command>
     210:	86 e0       	ldi	r24, 0x06	; 6
     212:	cf df       	rcall	.-98     	; 0x1b2 <lcd_wr_command>
     214:	8e e0       	ldi	r24, 0x0E	; 14
     216:	cd df       	rcall	.-102    	; 0x1b2 <lcd_wr_command>
     218:	80 e8       	ldi	r24, 0x80	; 128
     21a:	cb cf       	rjmp	.-106    	; 0x1b2 <lcd_wr_command>
     21c:	08 95       	ret

0000021e <lcd_wr_char>:
     21e:	98 b1       	in	r25, 0x08	; 8
     220:	9f 70       	andi	r25, 0x0F	; 15
     222:	98 b9       	out	0x08, r25	; 8
     224:	98 b1       	in	r25, 0x08	; 8
     226:	28 2f       	mov	r18, r24
     228:	20 7f       	andi	r18, 0xF0	; 240
     22a:	92 2b       	or	r25, r18
     22c:	98 b9       	out	0x08, r25	; 8
     22e:	40 9a       	sbi	0x08, 0	; 8
     230:	41 98       	cbi	0x08, 1	; 8
     232:	42 9a       	sbi	0x08, 2	; 8
     234:	ef ef       	ldi	r30, 0xFF	; 255
     236:	f7 e4       	ldi	r31, 0x47	; 71
     238:	31 97       	sbiw	r30, 0x01	; 1
     23a:	f1 f7       	brne	.-4      	; 0x238 <lcd_wr_char+0x1a>
     23c:	00 c0       	rjmp	.+0      	; 0x23e <lcd_wr_char+0x20>
     23e:	00 00       	nop
     240:	42 98       	cbi	0x08, 2	; 8
     242:	98 b1       	in	r25, 0x08	; 8
     244:	9f 70       	andi	r25, 0x0F	; 15
     246:	98 b9       	out	0x08, r25	; 8
     248:	98 b1       	in	r25, 0x08	; 8
     24a:	82 95       	swap	r24
     24c:	80 7f       	andi	r24, 0xF0	; 240
     24e:	89 2b       	or	r24, r25
     250:	88 b9       	out	0x08, r24	; 8
     252:	40 9a       	sbi	0x08, 0	; 8
     254:	41 98       	cbi	0x08, 1	; 8
     256:	42 9a       	sbi	0x08, 2	; 8
     258:	8f ef       	ldi	r24, 0xFF	; 255
     25a:	97 e4       	ldi	r25, 0x47	; 71
     25c:	01 97       	sbiw	r24, 0x01	; 1
     25e:	f1 f7       	brne	.-4      	; 0x25c <lcd_wr_char+0x3e>
     260:	00 c0       	rjmp	.+0      	; 0x262 <lcd_wr_char+0x44>
     262:	00 00       	nop
     264:	42 98       	cbi	0x08, 2	; 8
     266:	08 95       	ret

00000268 <lcd_home>:
     268:	80 e8       	ldi	r24, 0x80	; 128
     26a:	a3 cf       	rjmp	.-186    	; 0x1b2 <lcd_wr_command>
     26c:	08 95       	ret

0000026e <lcd_string>:
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	ec 01       	movw	r28, r24
     274:	88 81       	ld	r24, Y
     276:	88 23       	and	r24, r24
     278:	29 f0       	breq	.+10     	; 0x284 <lcd_string+0x16>
     27a:	21 96       	adiw	r28, 0x01	; 1
     27c:	d0 df       	rcall	.-96     	; 0x21e <lcd_wr_char>
     27e:	89 91       	ld	r24, Y+
     280:	81 11       	cpse	r24, r1
     282:	fc cf       	rjmp	.-8      	; 0x27c <lcd_string+0xe>
     284:	df 91       	pop	r29
     286:	cf 91       	pop	r28
     288:	08 95       	ret

0000028a <lcd_cursor>:
     28a:	82 30       	cpi	r24, 0x02	; 2
     28c:	69 f0       	breq	.+26     	; 0x2a8 <lcd_cursor+0x1e>
     28e:	18 f4       	brcc	.+6      	; 0x296 <lcd_cursor+0xc>
     290:	81 30       	cpi	r24, 0x01	; 1
     292:	31 f0       	breq	.+12     	; 0x2a0 <lcd_cursor+0x16>
     294:	08 95       	ret
     296:	83 30       	cpi	r24, 0x03	; 3
     298:	59 f0       	breq	.+22     	; 0x2b0 <lcd_cursor+0x26>
     29a:	84 30       	cpi	r24, 0x04	; 4
     29c:	69 f0       	breq	.+26     	; 0x2b8 <lcd_cursor+0x2e>
     29e:	08 95       	ret
     2a0:	8f e7       	ldi	r24, 0x7F	; 127
     2a2:	86 0f       	add	r24, r22
     2a4:	86 cf       	rjmp	.-244    	; 0x1b2 <lcd_wr_command>
     2a6:	08 95       	ret
     2a8:	8f eb       	ldi	r24, 0xBF	; 191
     2aa:	86 0f       	add	r24, r22
     2ac:	82 cf       	rjmp	.-252    	; 0x1b2 <lcd_wr_command>
     2ae:	08 95       	ret
     2b0:	83 e9       	ldi	r24, 0x93	; 147
     2b2:	86 0f       	add	r24, r22
     2b4:	7e cf       	rjmp	.-260    	; 0x1b2 <lcd_wr_command>
     2b6:	08 95       	ret
     2b8:	83 ed       	ldi	r24, 0xD3	; 211
     2ba:	86 0f       	add	r24, r22
     2bc:	7a cf       	rjmp	.-268    	; 0x1b2 <lcd_wr_command>
     2be:	08 95       	ret

000002c0 <lcd_print>:
     2c0:	0f 93       	push	r16
     2c2:	1f 93       	push	r17
     2c4:	cf 93       	push	r28
     2c6:	df 93       	push	r29
     2c8:	8a 01       	movw	r16, r20
     2ca:	e9 01       	movw	r28, r18
     2cc:	88 23       	and	r24, r24
     2ce:	11 f0       	breq	.+4      	; 0x2d4 <lcd_print+0x14>
     2d0:	61 11       	cpse	r22, r1
     2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <lcd_print+0x18>
     2d4:	c9 df       	rcall	.-110    	; 0x268 <lcd_home>
     2d6:	01 c0       	rjmp	.+2      	; 0x2da <lcd_print+0x1a>
     2d8:	d8 df       	rcall	.-80     	; 0x28a <lcd_cursor>
     2da:	c5 30       	cpi	r28, 0x05	; 5
     2dc:	d1 05       	cpc	r29, r1
     2de:	09 f0       	breq	.+2      	; 0x2e2 <lcd_print+0x22>
     2e0:	d5 c0       	rjmp	.+426    	; 0x48c <lcd_print+0x1cc>
     2e2:	98 01       	movw	r18, r16
     2e4:	32 95       	swap	r19
     2e6:	22 95       	swap	r18
     2e8:	2f 70       	andi	r18, 0x0F	; 15
     2ea:	23 27       	eor	r18, r19
     2ec:	3f 70       	andi	r19, 0x0F	; 15
     2ee:	23 27       	eor	r18, r19
     2f0:	a7 e4       	ldi	r26, 0x47	; 71
     2f2:	b3 e0       	ldi	r27, 0x03	; 3
     2f4:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <__umulhisi3>
     2f8:	96 95       	lsr	r25
     2fa:	87 95       	ror	r24
     2fc:	96 95       	lsr	r25
     2fe:	87 95       	ror	r24
     300:	96 95       	lsr	r25
     302:	87 95       	ror	r24
     304:	c0 96       	adiw	r24, 0x30	; 48
     306:	90 93 93 02 	sts	0x0293, r25
     30a:	80 93 92 02 	sts	0x0292, r24
     30e:	87 df       	rcall	.-242    	; 0x21e <lcd_wr_char>
     310:	98 01       	movw	r18, r16
     312:	36 95       	lsr	r19
     314:	27 95       	ror	r18
     316:	36 95       	lsr	r19
     318:	27 95       	ror	r18
     31a:	36 95       	lsr	r19
     31c:	27 95       	ror	r18
     31e:	a5 ec       	ldi	r26, 0xC5	; 197
     320:	b0 e2       	ldi	r27, 0x20	; 32
     322:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <__umulhisi3>
     326:	ac 01       	movw	r20, r24
     328:	52 95       	swap	r21
     32a:	42 95       	swap	r20
     32c:	4f 70       	andi	r20, 0x0F	; 15
     32e:	45 27       	eor	r20, r21
     330:	5f 70       	andi	r21, 0x0F	; 15
     332:	45 27       	eor	r20, r21
     334:	50 93 97 02 	sts	0x0297, r21
     338:	40 93 96 02 	sts	0x0296, r20
     33c:	9a 01       	movw	r18, r20
     33e:	ad ec       	ldi	r26, 0xCD	; 205
     340:	bc ec       	ldi	r27, 0xCC	; 204
     342:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <__umulhisi3>
     346:	96 95       	lsr	r25
     348:	87 95       	ror	r24
     34a:	96 95       	lsr	r25
     34c:	87 95       	ror	r24
     34e:	96 95       	lsr	r25
     350:	87 95       	ror	r24
     352:	9c 01       	movw	r18, r24
     354:	22 0f       	add	r18, r18
     356:	33 1f       	adc	r19, r19
     358:	88 0f       	add	r24, r24
     35a:	99 1f       	adc	r25, r25
     35c:	88 0f       	add	r24, r24
     35e:	99 1f       	adc	r25, r25
     360:	88 0f       	add	r24, r24
     362:	99 1f       	adc	r25, r25
     364:	82 0f       	add	r24, r18
     366:	93 1f       	adc	r25, r19
     368:	48 1b       	sub	r20, r24
     36a:	59 0b       	sbc	r21, r25
     36c:	ca 01       	movw	r24, r20
     36e:	c0 96       	adiw	r24, 0x30	; 48
     370:	90 93 d6 02 	sts	0x02D6, r25
     374:	80 93 d5 02 	sts	0x02D5, r24
     378:	52 df       	rcall	.-348    	; 0x21e <lcd_wr_char>
     37a:	04 c0       	rjmp	.+8      	; 0x384 <lcd_print+0xc4>
     37c:	c3 30       	cpi	r28, 0x03	; 3
     37e:	d1 05       	cpc	r29, r1
     380:	09 f0       	breq	.+2      	; 0x384 <lcd_print+0xc4>
     382:	89 c0       	rjmp	.+274    	; 0x496 <lcd_print+0x1d6>
     384:	98 01       	movw	r18, r16
     386:	36 95       	lsr	r19
     388:	27 95       	ror	r18
     38a:	36 95       	lsr	r19
     38c:	27 95       	ror	r18
     38e:	ab e7       	ldi	r26, 0x7B	; 123
     390:	b4 e1       	ldi	r27, 0x14	; 20
     392:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <__umulhisi3>
     396:	ac 01       	movw	r20, r24
     398:	56 95       	lsr	r21
     39a:	47 95       	ror	r20
     39c:	50 93 97 02 	sts	0x0297, r21
     3a0:	40 93 96 02 	sts	0x0296, r20
     3a4:	9a 01       	movw	r18, r20
     3a6:	ad ec       	ldi	r26, 0xCD	; 205
     3a8:	bc ec       	ldi	r27, 0xCC	; 204
     3aa:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <__umulhisi3>
     3ae:	96 95       	lsr	r25
     3b0:	87 95       	ror	r24
     3b2:	96 95       	lsr	r25
     3b4:	87 95       	ror	r24
     3b6:	96 95       	lsr	r25
     3b8:	87 95       	ror	r24
     3ba:	9c 01       	movw	r18, r24
     3bc:	22 0f       	add	r18, r18
     3be:	33 1f       	adc	r19, r19
     3c0:	88 0f       	add	r24, r24
     3c2:	99 1f       	adc	r25, r25
     3c4:	88 0f       	add	r24, r24
     3c6:	99 1f       	adc	r25, r25
     3c8:	88 0f       	add	r24, r24
     3ca:	99 1f       	adc	r25, r25
     3cc:	82 0f       	add	r24, r18
     3ce:	93 1f       	adc	r25, r19
     3d0:	48 1b       	sub	r20, r24
     3d2:	59 0b       	sbc	r21, r25
     3d4:	ca 01       	movw	r24, r20
     3d6:	c0 96       	adiw	r24, 0x30	; 48
     3d8:	90 93 cc 02 	sts	0x02CC, r25
     3dc:	80 93 cb 02 	sts	0x02CB, r24
     3e0:	1e df       	rcall	.-452    	; 0x21e <lcd_wr_char>
     3e2:	98 01       	movw	r18, r16
     3e4:	ad ec       	ldi	r26, 0xCD	; 205
     3e6:	bc ec       	ldi	r27, 0xCC	; 204
     3e8:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <__umulhisi3>
     3ec:	ac 01       	movw	r20, r24
     3ee:	56 95       	lsr	r21
     3f0:	47 95       	ror	r20
     3f2:	56 95       	lsr	r21
     3f4:	47 95       	ror	r20
     3f6:	56 95       	lsr	r21
     3f8:	47 95       	ror	r20
     3fa:	50 93 97 02 	sts	0x0297, r21
     3fe:	40 93 96 02 	sts	0x0296, r20
     402:	9a 01       	movw	r18, r20
     404:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <__umulhisi3>
     408:	96 95       	lsr	r25
     40a:	87 95       	ror	r24
     40c:	96 95       	lsr	r25
     40e:	87 95       	ror	r24
     410:	96 95       	lsr	r25
     412:	87 95       	ror	r24
     414:	9c 01       	movw	r18, r24
     416:	22 0f       	add	r18, r18
     418:	33 1f       	adc	r19, r19
     41a:	88 0f       	add	r24, r24
     41c:	99 1f       	adc	r25, r25
     41e:	88 0f       	add	r24, r24
     420:	99 1f       	adc	r25, r25
     422:	88 0f       	add	r24, r24
     424:	99 1f       	adc	r25, r25
     426:	82 0f       	add	r24, r18
     428:	93 1f       	adc	r25, r19
     42a:	48 1b       	sub	r20, r24
     42c:	59 0b       	sbc	r21, r25
     42e:	ca 01       	movw	r24, r20
     430:	c0 96       	adiw	r24, 0x30	; 48
     432:	90 93 a8 02 	sts	0x02A8, r25
     436:	80 93 a7 02 	sts	0x02A7, r24
     43a:	f1 de       	rcall	.-542    	; 0x21e <lcd_wr_char>
     43c:	03 c0       	rjmp	.+6      	; 0x444 <lcd_print+0x184>
     43e:	c1 30       	cpi	r28, 0x01	; 1
     440:	d1 05       	cpc	r29, r1
     442:	f9 f4       	brne	.+62     	; 0x482 <lcd_print+0x1c2>
     444:	98 01       	movw	r18, r16
     446:	ad ec       	ldi	r26, 0xCD	; 205
     448:	bc ec       	ldi	r27, 0xCC	; 204
     44a:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <__umulhisi3>
     44e:	96 95       	lsr	r25
     450:	87 95       	ror	r24
     452:	96 95       	lsr	r25
     454:	87 95       	ror	r24
     456:	96 95       	lsr	r25
     458:	87 95       	ror	r24
     45a:	9c 01       	movw	r18, r24
     45c:	22 0f       	add	r18, r18
     45e:	33 1f       	adc	r19, r19
     460:	88 0f       	add	r24, r24
     462:	99 1f       	adc	r25, r25
     464:	88 0f       	add	r24, r24
     466:	99 1f       	adc	r25, r25
     468:	88 0f       	add	r24, r24
     46a:	99 1f       	adc	r25, r25
     46c:	82 0f       	add	r24, r18
     46e:	93 1f       	adc	r25, r19
     470:	08 1b       	sub	r16, r24
     472:	19 0b       	sbc	r17, r25
     474:	c8 01       	movw	r24, r16
     476:	c0 96       	adiw	r24, 0x30	; 48
     478:	90 93 d4 02 	sts	0x02D4, r25
     47c:	80 93 d3 02 	sts	0x02D3, r24
     480:	ce de       	rcall	.-612    	; 0x21e <lcd_wr_char>
     482:	26 97       	sbiw	r28, 0x06	; 6
     484:	64 f0       	brlt	.+24     	; 0x49e <lcd_print+0x1de>
     486:	85 e4       	ldi	r24, 0x45	; 69
     488:	ca de       	rcall	.-620    	; 0x21e <lcd_wr_char>
     48a:	09 c0       	rjmp	.+18     	; 0x49e <lcd_print+0x1de>
     48c:	c4 30       	cpi	r28, 0x04	; 4
     48e:	d1 05       	cpc	r29, r1
     490:	09 f0       	breq	.+2      	; 0x494 <lcd_print+0x1d4>
     492:	74 cf       	rjmp	.-280    	; 0x37c <lcd_print+0xbc>
     494:	3d cf       	rjmp	.-390    	; 0x310 <lcd_print+0x50>
     496:	c2 30       	cpi	r28, 0x02	; 2
     498:	d1 05       	cpc	r29, r1
     49a:	89 f6       	brne	.-94     	; 0x43e <lcd_print+0x17e>
     49c:	a2 cf       	rjmp	.-188    	; 0x3e2 <lcd_print+0x122>
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	1f 91       	pop	r17
     4a4:	0f 91       	pop	r16
     4a6:	08 95       	ret

000004a8 <timer5_init>:
     4a8:	e1 e2       	ldi	r30, 0x21	; 33
     4aa:	f1 e0       	ldi	r31, 0x01	; 1
     4ac:	10 82       	st	Z, r1
     4ae:	8f ef       	ldi	r24, 0xFF	; 255
     4b0:	80 93 25 01 	sts	0x0125, r24
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	90 93 24 01 	sts	0x0124, r25
     4ba:	10 92 29 01 	sts	0x0129, r1
     4be:	80 93 28 01 	sts	0x0128, r24
     4c2:	10 92 2b 01 	sts	0x012B, r1
     4c6:	80 93 2a 01 	sts	0x012A, r24
     4ca:	10 92 2d 01 	sts	0x012D, r1
     4ce:	80 93 2c 01 	sts	0x012C, r24
     4d2:	89 ea       	ldi	r24, 0xA9	; 169
     4d4:	80 93 20 01 	sts	0x0120, r24
     4d8:	8b e0       	ldi	r24, 0x0B	; 11
     4da:	80 83       	st	Z, r24
     4dc:	08 95       	ret

000004de <motion_pin_config>:
     4de:	81 b1       	in	r24, 0x01	; 1
     4e0:	8f 60       	ori	r24, 0x0F	; 15
     4e2:	81 b9       	out	0x01, r24	; 1
     4e4:	82 b1       	in	r24, 0x02	; 2
     4e6:	80 7f       	andi	r24, 0xF0	; 240
     4e8:	82 b9       	out	0x02, r24	; 2
     4ea:	ea e0       	ldi	r30, 0x0A	; 10
     4ec:	f1 e0       	ldi	r31, 0x01	; 1
     4ee:	80 81       	ld	r24, Z
     4f0:	88 61       	ori	r24, 0x18	; 24
     4f2:	80 83       	st	Z, r24
     4f4:	eb e0       	ldi	r30, 0x0B	; 11
     4f6:	f1 e0       	ldi	r31, 0x01	; 1
     4f8:	80 81       	ld	r24, Z
     4fa:	88 61       	ori	r24, 0x18	; 24
     4fc:	80 83       	st	Z, r24
     4fe:	08 95       	ret

00000500 <motion_set>:
     500:	92 b1       	in	r25, 0x02	; 2
     502:	90 7f       	andi	r25, 0xF0	; 240
     504:	8f 70       	andi	r24, 0x0F	; 15
     506:	98 2b       	or	r25, r24
     508:	92 b9       	out	0x02, r25	; 2
     50a:	08 95       	ret

0000050c <forward>:
     50c:	86 e0       	ldi	r24, 0x06	; 6
     50e:	f8 cf       	rjmp	.-16     	; 0x500 <motion_set>
     510:	08 95       	ret

00000512 <left>:
     512:	85 e0       	ldi	r24, 0x05	; 5
     514:	f5 cf       	rjmp	.-22     	; 0x500 <motion_set>
     516:	08 95       	ret

00000518 <right>:
     518:	8a e0       	ldi	r24, 0x0A	; 10
     51a:	f2 cf       	rjmp	.-28     	; 0x500 <motion_set>
     51c:	08 95       	ret

0000051e <stop>:
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	ef cf       	rjmp	.-34     	; 0x500 <motion_set>
     522:	08 95       	ret

00000524 <lcd_port_config>:
     524:	87 b1       	in	r24, 0x07	; 7
     526:	87 6f       	ori	r24, 0xF7	; 247
     528:	87 b9       	out	0x07, r24	; 7
     52a:	88 b1       	in	r24, 0x08	; 8
     52c:	80 78       	andi	r24, 0x80	; 128
     52e:	88 b9       	out	0x08, r24	; 8
     530:	08 95       	ret

00000532 <color_sensor_pin_config>:
     532:	8a b1       	in	r24, 0x0a	; 10
     534:	8e 6f       	ori	r24, 0xFE	; 254
     536:	8a b9       	out	0x0a, r24	; 10
     538:	58 9a       	sbi	0x0b, 0	; 11
     53a:	08 95       	ret

0000053c <adc_pin_config>:
     53c:	10 ba       	out	0x10, r1	; 16
     53e:	11 ba       	out	0x11, r1	; 17
     540:	10 92 07 01 	sts	0x0107, r1
     544:	10 92 08 01 	sts	0x0108, r1
     548:	08 95       	ret

0000054a <servo1_pin_config>:
     54a:	25 9a       	sbi	0x04, 5	; 4
     54c:	2d 9a       	sbi	0x05, 5	; 5
     54e:	08 95       	ret

00000550 <servo2_pin_config>:
     550:	26 9a       	sbi	0x04, 6	; 4
     552:	2e 9a       	sbi	0x05, 6	; 5
     554:	08 95       	ret

00000556 <servo3_pin_config>:
     556:	27 9a       	sbi	0x04, 7	; 4
     558:	2f 9a       	sbi	0x05, 7	; 5
     55a:	08 95       	ret

0000055c <timer1_init>:
     55c:	e1 e8       	ldi	r30, 0x81	; 129
     55e:	f0 e0       	ldi	r31, 0x00	; 0
     560:	10 82       	st	Z, r1
     562:	8c ef       	ldi	r24, 0xFC	; 252
     564:	80 93 85 00 	sts	0x0085, r24
     568:	81 e0       	ldi	r24, 0x01	; 1
     56a:	80 93 84 00 	sts	0x0084, r24
     56e:	93 e0       	ldi	r25, 0x03	; 3
     570:	90 93 89 00 	sts	0x0089, r25
     574:	8f ef       	ldi	r24, 0xFF	; 255
     576:	80 93 88 00 	sts	0x0088, r24
     57a:	90 93 8b 00 	sts	0x008B, r25
     57e:	80 93 8a 00 	sts	0x008A, r24
     582:	90 93 8d 00 	sts	0x008D, r25
     586:	80 93 8c 00 	sts	0x008C, r24
     58a:	90 93 87 00 	sts	0x0087, r25
     58e:	80 93 86 00 	sts	0x0086, r24
     592:	8b ea       	ldi	r24, 0xAB	; 171
     594:	80 93 80 00 	sts	0x0080, r24
     598:	10 92 82 00 	sts	0x0082, r1
     59c:	8c e0       	ldi	r24, 0x0C	; 12
     59e:	80 83       	st	Z, r24
     5a0:	08 95       	ret

000005a2 <port_init>:
     5a2:	c0 df       	rcall	.-128    	; 0x524 <lcd_port_config>
     5a4:	cb df       	rcall	.-106    	; 0x53c <adc_pin_config>
     5a6:	3b 9a       	sbi	0x07, 3	; 7
     5a8:	43 98       	cbi	0x08, 3	; 8
     5aa:	cf df       	rcall	.-98     	; 0x54a <servo1_pin_config>
     5ac:	d1 df       	rcall	.-94     	; 0x550 <servo2_pin_config>
     5ae:	d3 df       	rcall	.-90     	; 0x556 <servo3_pin_config>
     5b0:	c0 cf       	rjmp	.-128    	; 0x532 <color_sensor_pin_config>
     5b2:	08 95       	ret

000005b4 <buzzer_on>:
     5b4:	86 b1       	in	r24, 0x06	; 6
     5b6:	88 60       	ori	r24, 0x08	; 8
     5b8:	88 b9       	out	0x08, r24	; 8
     5ba:	08 95       	ret

000005bc <buzzer_off>:
     5bc:	86 b1       	in	r24, 0x06	; 6
     5be:	87 7f       	andi	r24, 0xF7	; 247
     5c0:	88 b9       	out	0x08, r24	; 8
     5c2:	08 95       	ret

000005c4 <ADC_Conversion>:
     5c4:	88 30       	cpi	r24, 0x08	; 8
     5c6:	18 f0       	brcs	.+6      	; 0x5ce <ADC_Conversion+0xa>
     5c8:	98 e0       	ldi	r25, 0x08	; 8
     5ca:	90 93 7b 00 	sts	0x007B, r25
     5ce:	87 70       	andi	r24, 0x07	; 7
     5d0:	80 62       	ori	r24, 0x20	; 32
     5d2:	80 93 7c 00 	sts	0x007C, r24
     5d6:	ea e7       	ldi	r30, 0x7A	; 122
     5d8:	f0 e0       	ldi	r31, 0x00	; 0
     5da:	80 81       	ld	r24, Z
     5dc:	80 64       	ori	r24, 0x40	; 64
     5de:	80 83       	st	Z, r24
     5e0:	80 81       	ld	r24, Z
     5e2:	84 ff       	sbrs	r24, 4
     5e4:	fd cf       	rjmp	.-6      	; 0x5e0 <ADC_Conversion+0x1c>
     5e6:	80 91 79 00 	lds	r24, 0x0079
     5ea:	ea e7       	ldi	r30, 0x7A	; 122
     5ec:	f0 e0       	ldi	r31, 0x00	; 0
     5ee:	90 81       	ld	r25, Z
     5f0:	90 61       	ori	r25, 0x10	; 16
     5f2:	90 83       	st	Z, r25
     5f4:	10 92 7b 00 	sts	0x007B, r1
     5f8:	08 95       	ret

000005fa <color_sensor_pin_interrupt_init>:
     5fa:	f8 94       	cli
     5fc:	e9 e6       	ldi	r30, 0x69	; 105
     5fe:	f0 e0       	ldi	r31, 0x00	; 0
     600:	80 81       	ld	r24, Z
     602:	82 60       	ori	r24, 0x02	; 2
     604:	80 83       	st	Z, r24
     606:	e8 9a       	sbi	0x1d, 0	; 29
     608:	78 94       	sei
     60a:	08 95       	ret

0000060c <__vector_1>:
     60c:	1f 92       	push	r1
     60e:	0f 92       	push	r0
     610:	0f b6       	in	r0, 0x3f	; 63
     612:	0f 92       	push	r0
     614:	11 24       	eor	r1, r1
     616:	8f 93       	push	r24
     618:	9f 93       	push	r25
     61a:	af 93       	push	r26
     61c:	bf 93       	push	r27
     61e:	80 91 7e 02 	lds	r24, 0x027E
     622:	90 91 7f 02 	lds	r25, 0x027F
     626:	a0 91 80 02 	lds	r26, 0x0280
     62a:	b0 91 81 02 	lds	r27, 0x0281
     62e:	01 96       	adiw	r24, 0x01	; 1
     630:	a1 1d       	adc	r26, r1
     632:	b1 1d       	adc	r27, r1
     634:	80 93 7e 02 	sts	0x027E, r24
     638:	90 93 7f 02 	sts	0x027F, r25
     63c:	a0 93 80 02 	sts	0x0280, r26
     640:	b0 93 81 02 	sts	0x0281, r27
     644:	bf 91       	pop	r27
     646:	af 91       	pop	r26
     648:	9f 91       	pop	r25
     64a:	8f 91       	pop	r24
     64c:	0f 90       	pop	r0
     64e:	0f be       	out	0x3f, r0	; 63
     650:	0f 90       	pop	r0
     652:	1f 90       	pop	r1
     654:	18 95       	reti

00000656 <adc_init>:
     656:	ea e7       	ldi	r30, 0x7A	; 122
     658:	f0 e0       	ldi	r31, 0x00	; 0
     65a:	10 82       	st	Z, r1
     65c:	10 92 7b 00 	sts	0x007B, r1
     660:	80 e2       	ldi	r24, 0x20	; 32
     662:	80 93 7c 00 	sts	0x007C, r24
     666:	80 e8       	ldi	r24, 0x80	; 128
     668:	80 bf       	out	0x30, r24	; 48
     66a:	86 e8       	ldi	r24, 0x86	; 134
     66c:	80 83       	st	Z, r24
     66e:	08 95       	ret

00000670 <init_devices>:
     670:	f8 94       	cli
     672:	97 df       	rcall	.-210    	; 0x5a2 <port_init>
     674:	c2 df       	rcall	.-124    	; 0x5fa <color_sensor_pin_interrupt_init>
     676:	ef df       	rcall	.-34     	; 0x656 <adc_init>
     678:	32 df       	rcall	.-412    	; 0x4de <motion_pin_config>
     67a:	16 df       	rcall	.-468    	; 0x4a8 <timer5_init>
     67c:	6f df       	rcall	.-290    	; 0x55c <timer1_init>
     67e:	78 94       	sei
     680:	08 95       	ret

00000682 <servo_1>:
     682:	10 92 89 00 	sts	0x0089, r1
     686:	68 2f       	mov	r22, r24
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	80 e0       	ldi	r24, 0x00	; 0
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <__floatunsisf>
     692:	2b e7       	ldi	r18, 0x7B	; 123
     694:	34 e1       	ldi	r19, 0x14	; 20
     696:	4e ee       	ldi	r20, 0xEE	; 238
     698:	5f e3       	ldi	r21, 0x3F	; 63
     69a:	0e 94 3d 14 	call	0x287a	; 0x287a <__divsf3>
     69e:	20 e0       	ldi	r18, 0x00	; 0
     6a0:	30 e0       	ldi	r19, 0x00	; 0
     6a2:	4c e0       	ldi	r20, 0x0C	; 12
     6a4:	52 e4       	ldi	r21, 0x42	; 66
     6a6:	0e 94 d9 13 	call	0x27b2	; 0x27b2 <__addsf3>
     6aa:	0e 94 a5 14 	call	0x294a	; 0x294a <__fixunssfsi>
     6ae:	60 93 88 00 	sts	0x0088, r22
     6b2:	08 95       	ret

000006b4 <filter_red>:
     6b4:	5e 98       	cbi	0x0b, 6	; 11
     6b6:	5f 98       	cbi	0x0b, 7	; 11
     6b8:	08 95       	ret

000006ba <filter_green>:
     6ba:	5e 9a       	sbi	0x0b, 6	; 11
     6bc:	5f 9a       	sbi	0x0b, 7	; 11
     6be:	08 95       	ret

000006c0 <filter_blue>:
     6c0:	5e 98       	cbi	0x0b, 6	; 11
     6c2:	5f 9a       	sbi	0x0b, 7	; 11
     6c4:	08 95       	ret

000006c6 <color_sensor_scaling>:
     6c6:	5c 9a       	sbi	0x0b, 4	; 11
     6c8:	5d 9a       	sbi	0x0b, 5	; 11
     6ca:	08 95       	ret

000006cc <red_read>:
     6cc:	f3 df       	rcall	.-26     	; 0x6b4 <filter_red>
     6ce:	10 92 7e 02 	sts	0x027E, r1
     6d2:	10 92 7f 02 	sts	0x027F, r1
     6d6:	10 92 80 02 	sts	0x0280, r1
     6da:	10 92 81 02 	sts	0x0281, r1
     6de:	2f ef       	ldi	r18, 0xFF	; 255
     6e0:	8f e7       	ldi	r24, 0x7F	; 127
     6e2:	94 e0       	ldi	r25, 0x04	; 4
     6e4:	21 50       	subi	r18, 0x01	; 1
     6e6:	80 40       	sbci	r24, 0x00	; 0
     6e8:	90 40       	sbci	r25, 0x00	; 0
     6ea:	e1 f7       	brne	.-8      	; 0x6e4 <red_read+0x18>
     6ec:	00 c0       	rjmp	.+0      	; 0x6ee <red_read+0x22>
     6ee:	00 00       	nop
     6f0:	80 91 7e 02 	lds	r24, 0x027E
     6f4:	90 91 7f 02 	lds	r25, 0x027F
     6f8:	a0 91 80 02 	lds	r26, 0x0280
     6fc:	b0 91 81 02 	lds	r27, 0x0281
     700:	80 93 9c 02 	sts	0x029C, r24
     704:	90 93 9d 02 	sts	0x029D, r25
     708:	a0 93 9e 02 	sts	0x029E, r26
     70c:	b0 93 9f 02 	sts	0x029F, r27
     710:	2f ef       	ldi	r18, 0xFF	; 255
     712:	8f ef       	ldi	r24, 0xFF	; 255
     714:	9c e2       	ldi	r25, 0x2C	; 44
     716:	21 50       	subi	r18, 0x01	; 1
     718:	80 40       	sbci	r24, 0x00	; 0
     71a:	90 40       	sbci	r25, 0x00	; 0
     71c:	e1 f7       	brne	.-8      	; 0x716 <red_read+0x4a>
     71e:	00 c0       	rjmp	.+0      	; 0x720 <red_read+0x54>
     720:	00 00       	nop
     722:	08 95       	ret

00000724 <green_read>:
     724:	ca df       	rcall	.-108    	; 0x6ba <filter_green>
     726:	10 92 7e 02 	sts	0x027E, r1
     72a:	10 92 7f 02 	sts	0x027F, r1
     72e:	10 92 80 02 	sts	0x0280, r1
     732:	10 92 81 02 	sts	0x0281, r1
     736:	2f ef       	ldi	r18, 0xFF	; 255
     738:	8f e7       	ldi	r24, 0x7F	; 127
     73a:	94 e0       	ldi	r25, 0x04	; 4
     73c:	21 50       	subi	r18, 0x01	; 1
     73e:	80 40       	sbci	r24, 0x00	; 0
     740:	90 40       	sbci	r25, 0x00	; 0
     742:	e1 f7       	brne	.-8      	; 0x73c <green_read+0x18>
     744:	00 c0       	rjmp	.+0      	; 0x746 <green_read+0x22>
     746:	00 00       	nop
     748:	80 91 7e 02 	lds	r24, 0x027E
     74c:	90 91 7f 02 	lds	r25, 0x027F
     750:	a0 91 80 02 	lds	r26, 0x0280
     754:	b0 91 81 02 	lds	r27, 0x0281
     758:	80 93 98 02 	sts	0x0298, r24
     75c:	90 93 99 02 	sts	0x0299, r25
     760:	a0 93 9a 02 	sts	0x029A, r26
     764:	b0 93 9b 02 	sts	0x029B, r27
     768:	08 95       	ret

0000076a <blue_read>:
     76a:	aa df       	rcall	.-172    	; 0x6c0 <filter_blue>
     76c:	10 92 7e 02 	sts	0x027E, r1
     770:	10 92 7f 02 	sts	0x027F, r1
     774:	10 92 80 02 	sts	0x0280, r1
     778:	10 92 81 02 	sts	0x0281, r1
     77c:	2f ef       	ldi	r18, 0xFF	; 255
     77e:	8f e7       	ldi	r24, 0x7F	; 127
     780:	94 e0       	ldi	r25, 0x04	; 4
     782:	21 50       	subi	r18, 0x01	; 1
     784:	80 40       	sbci	r24, 0x00	; 0
     786:	90 40       	sbci	r25, 0x00	; 0
     788:	e1 f7       	brne	.-8      	; 0x782 <blue_read+0x18>
     78a:	00 c0       	rjmp	.+0      	; 0x78c <blue_read+0x22>
     78c:	00 00       	nop
     78e:	80 91 7e 02 	lds	r24, 0x027E
     792:	90 91 7f 02 	lds	r25, 0x027F
     796:	a0 91 80 02 	lds	r26, 0x0280
     79a:	b0 91 81 02 	lds	r27, 0x0281
     79e:	80 93 8c 02 	sts	0x028C, r24
     7a2:	90 93 8d 02 	sts	0x028D, r25
     7a6:	a0 93 8e 02 	sts	0x028E, r26
     7aa:	b0 93 8f 02 	sts	0x028F, r27
     7ae:	08 95       	ret

000007b0 <Delay>:
     7b0:	0f 93       	push	r16
     7b2:	1f 93       	push	r17
     7b4:	cf 93       	push	r28
     7b6:	df 93       	push	r29
     7b8:	8c 01       	movw	r16, r24
     7ba:	18 16       	cp	r1, r24
     7bc:	19 06       	cpc	r1, r25
     7be:	8c f4       	brge	.+34     	; 0x7e2 <Delay+0x32>
     7c0:	c0 e0       	ldi	r28, 0x00	; 0
     7c2:	d0 e0       	ldi	r29, 0x00	; 0
     7c4:	09 c0       	rjmp	.+18     	; 0x7d8 <Delay+0x28>
     7c6:	86 e6       	ldi	r24, 0x66	; 102
     7c8:	9e e0       	ldi	r25, 0x0E	; 14
     7ca:	01 97       	sbiw	r24, 0x01	; 1
     7cc:	f1 f7       	brne	.-4      	; 0x7ca <Delay+0x1a>
     7ce:	00 00       	nop
     7d0:	21 96       	adiw	r28, 0x01	; 1
     7d2:	c0 17       	cp	r28, r16
     7d4:	d1 07       	cpc	r29, r17
     7d6:	39 f0       	breq	.+14     	; 0x7e6 <Delay+0x36>
     7d8:	82 e0       	ldi	r24, 0x02	; 2
     7da:	f4 de       	rcall	.-536    	; 0x5c4 <ADC_Conversion>
     7dc:	89 32       	cpi	r24, 0x29	; 41
     7de:	98 f3       	brcs	.-26     	; 0x7c6 <Delay+0x16>
     7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <Delay+0x36>
     7e2:	c0 e0       	ldi	r28, 0x00	; 0
     7e4:	d0 e0       	ldi	r29, 0x00	; 0
     7e6:	9b de       	rcall	.-714    	; 0x51e <stop>
     7e8:	81 e0       	ldi	r24, 0x01	; 1
     7ea:	c0 17       	cp	r28, r16
     7ec:	d1 07       	cpc	r29, r17
     7ee:	0c f0       	brlt	.+2      	; 0x7f2 <Delay+0x42>
     7f0:	80 e0       	ldi	r24, 0x00	; 0
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	1f 91       	pop	r17
     7f8:	0f 91       	pop	r16
     7fa:	08 95       	ret

000007fc <scan>:
     7fc:	0f 93       	push	r16
     7fe:	1f 93       	push	r17
     800:	65 df       	rcall	.-310    	; 0x6cc <red_read>
     802:	b3 df       	rcall	.-154    	; 0x76a <blue_read>
     804:	8f df       	rcall	.-226    	; 0x724 <green_read>
     806:	80 91 8a 02 	lds	r24, 0x028A
     80a:	90 91 8b 02 	lds	r25, 0x028B
     80e:	aa 27       	eor	r26, r26
     810:	97 fd       	sbrc	r25, 7
     812:	a0 95       	com	r26
     814:	ba 2f       	mov	r27, r26
     816:	40 91 9c 02 	lds	r20, 0x029C
     81a:	50 91 9d 02 	lds	r21, 0x029D
     81e:	60 91 9e 02 	lds	r22, 0x029E
     822:	70 91 9f 02 	lds	r23, 0x029F
     826:	48 17       	cp	r20, r24
     828:	59 07       	cpc	r21, r25
     82a:	6a 07       	cpc	r22, r26
     82c:	7b 07       	cpc	r23, r27
     82e:	d8 f4       	brcc	.+54     	; 0x866 <scan+0x6a>
     830:	40 91 98 02 	lds	r20, 0x0298
     834:	50 91 99 02 	lds	r21, 0x0299
     838:	60 91 9a 02 	lds	r22, 0x029A
     83c:	70 91 9b 02 	lds	r23, 0x029B
     840:	48 17       	cp	r20, r24
     842:	59 07       	cpc	r21, r25
     844:	6a 07       	cpc	r22, r26
     846:	7b 07       	cpc	r23, r27
     848:	70 f4       	brcc	.+28     	; 0x866 <scan+0x6a>
     84a:	40 91 8c 02 	lds	r20, 0x028C
     84e:	50 91 8d 02 	lds	r21, 0x028D
     852:	60 91 8e 02 	lds	r22, 0x028E
     856:	70 91 8f 02 	lds	r23, 0x028F
     85a:	48 17       	cp	r20, r24
     85c:	59 07       	cpc	r21, r25
     85e:	6a 07       	cpc	r22, r26
     860:	7b 07       	cpc	r23, r27
     862:	08 f4       	brcc	.+2      	; 0x866 <scan+0x6a>
     864:	46 c0       	rjmp	.+140    	; 0x8f2 <scan+0xf6>
     866:	40 91 9c 02 	lds	r20, 0x029C
     86a:	50 91 9d 02 	lds	r21, 0x029D
     86e:	60 91 9e 02 	lds	r22, 0x029E
     872:	70 91 9f 02 	lds	r23, 0x029F
     876:	80 91 8c 02 	lds	r24, 0x028C
     87a:	90 91 8d 02 	lds	r25, 0x028D
     87e:	a0 91 8e 02 	lds	r26, 0x028E
     882:	b0 91 8f 02 	lds	r27, 0x028F
     886:	84 17       	cp	r24, r20
     888:	95 07       	cpc	r25, r21
     88a:	a6 07       	cpc	r26, r22
     88c:	b7 07       	cpc	r27, r23
     88e:	c8 f4       	brcc	.+50     	; 0x8c2 <scan+0xc6>
     890:	00 91 9c 02 	lds	r16, 0x029C
     894:	10 91 9d 02 	lds	r17, 0x029D
     898:	20 91 9e 02 	lds	r18, 0x029E
     89c:	30 91 9f 02 	lds	r19, 0x029F
     8a0:	40 91 98 02 	lds	r20, 0x0298
     8a4:	50 91 99 02 	lds	r21, 0x0299
     8a8:	60 91 9a 02 	lds	r22, 0x029A
     8ac:	70 91 9b 02 	lds	r23, 0x029B
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	40 17       	cp	r20, r16
     8b6:	51 07       	cpc	r21, r17
     8b8:	62 07       	cpc	r22, r18
     8ba:	73 07       	cpc	r23, r19
     8bc:	f8 f4       	brcc	.+62     	; 0x8fc <scan+0x100>
     8be:	80 e0       	ldi	r24, 0x00	; 0
     8c0:	1d c0       	rjmp	.+58     	; 0x8fc <scan+0x100>
     8c2:	40 91 8c 02 	lds	r20, 0x028C
     8c6:	50 91 8d 02 	lds	r21, 0x028D
     8ca:	60 91 8e 02 	lds	r22, 0x028E
     8ce:	70 91 8f 02 	lds	r23, 0x028F
     8d2:	80 91 98 02 	lds	r24, 0x0298
     8d6:	90 91 99 02 	lds	r25, 0x0299
     8da:	a0 91 9a 02 	lds	r26, 0x029A
     8de:	b0 91 9b 02 	lds	r27, 0x029B
     8e2:	84 17       	cp	r24, r20
     8e4:	95 07       	cpc	r25, r21
     8e6:	a6 07       	cpc	r26, r22
     8e8:	b7 07       	cpc	r27, r23
     8ea:	30 f4       	brcc	.+12     	; 0x8f8 <scan+0xfc>
     8ec:	82 e0       	ldi	r24, 0x02	; 2
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	05 c0       	rjmp	.+10     	; 0x8fc <scan+0x100>
     8f2:	83 e0       	ldi	r24, 0x03	; 3
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	02 c0       	rjmp	.+4      	; 0x8fc <scan+0x100>
     8f8:	81 e0       	ldi	r24, 0x01	; 1
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	1f 91       	pop	r17
     8fe:	0f 91       	pop	r16
     900:	08 95       	ret

00000902 <sharpLeft>:
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	80 ef       	ldi	r24, 0xF0	; 240
     908:	80 93 28 01 	sts	0x0128, r24
     90c:	80 93 2a 01 	sts	0x012A, r24
     910:	00 de       	rcall	.-1024   	; 0x512 <left>
     912:	c0 e0       	ldi	r28, 0x00	; 0
     914:	d0 e0       	ldi	r29, 0x00	; 0
     916:	04 c0       	rjmp	.+8      	; 0x920 <sharpLeft+0x1e>
     918:	21 96       	adiw	r28, 0x01	; 1
     91a:	c0 31       	cpi	r28, 0x10	; 16
     91c:	d1 05       	cpc	r29, r1
     91e:	c9 f0       	breq	.+50     	; 0x952 <sharpLeft+0x50>
     920:	8b e0       	ldi	r24, 0x0B	; 11
     922:	50 de       	rcall	.-864    	; 0x5c4 <ADC_Conversion>
     924:	81 34       	cpi	r24, 0x41	; 65
     926:	c0 f3       	brcs	.-16     	; 0x918 <sharpLeft+0x16>
     928:	fa dd       	rcall	.-1036   	; 0x51e <stop>
     92a:	60 97       	sbiw	r28, 0x10	; 16
     92c:	18 f4       	brcc	.+6      	; 0x934 <sharpLeft+0x32>
     92e:	66 df       	rcall	.-308    	; 0x7fc <scan>
     930:	c8 2f       	mov	r28, r24
     932:	01 c0       	rjmp	.+2      	; 0x936 <sharpLeft+0x34>
     934:	cf ef       	ldi	r28, 0xFF	; 255
     936:	f0 dd       	rcall	.-1056   	; 0x518 <right>
     938:	82 e0       	ldi	r24, 0x02	; 2
     93a:	44 de       	rcall	.-888    	; 0x5c4 <ADC_Conversion>
     93c:	89 32       	cpi	r24, 0x29	; 41
     93e:	e0 f3       	brcs	.-8      	; 0x938 <sharpLeft+0x36>
     940:	81 e0       	ldi	r24, 0x01	; 1
     942:	40 de       	rcall	.-896    	; 0x5c4 <ADC_Conversion>
     944:	89 32       	cpi	r24, 0x29	; 41
     946:	40 f4       	brcc	.+16     	; 0x958 <sharpLeft+0x56>
     948:	83 e0       	ldi	r24, 0x03	; 3
     94a:	3c de       	rcall	.-904    	; 0x5c4 <ADC_Conversion>
     94c:	89 32       	cpi	r24, 0x29	; 41
     94e:	a0 f3       	brcs	.-24     	; 0x938 <sharpLeft+0x36>
     950:	03 c0       	rjmp	.+6      	; 0x958 <sharpLeft+0x56>
     952:	e5 dd       	rcall	.-1078   	; 0x51e <stop>
     954:	cf ef       	ldi	r28, 0xFF	; 255
     956:	ef cf       	rjmp	.-34     	; 0x936 <sharpLeft+0x34>
     958:	e2 dd       	rcall	.-1084   	; 0x51e <stop>
     95a:	8c 2f       	mov	r24, r28
     95c:	df 91       	pop	r29
     95e:	cf 91       	pop	r28
     960:	08 95       	ret

00000962 <setIndicatorAndColor>:
     962:	cf 93       	push	r28
     964:	df 93       	push	r29
     966:	c9 eb       	ldi	r28, 0xB9	; 185
     968:	d2 e0       	ldi	r29, 0x02	; 2
     96a:	e9 ea       	ldi	r30, 0xA9	; 169
     96c:	f2 e0       	ldi	r31, 0x02	; 2
     96e:	a2 e8       	ldi	r26, 0x82	; 130
     970:	b2 e0       	ldi	r27, 0x02	; 2
     972:	80 e0       	ldi	r24, 0x00	; 0
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	2e ef       	ldi	r18, 0xFE	; 254
     978:	3f ef       	ldi	r19, 0xFF	; 255
     97a:	89 93       	st	Y+, r24
     97c:	99 93       	st	Y+, r25
     97e:	33 83       	std	Z+3, r19	; 0x03
     980:	22 83       	std	Z+2, r18	; 0x02
     982:	31 83       	std	Z+1, r19	; 0x01
     984:	20 83       	st	Z, r18
     986:	1d 92       	st	X+, r1
     988:	1d 92       	st	X+, r1
     98a:	01 96       	adiw	r24, 0x01	; 1
     98c:	34 96       	adiw	r30, 0x04	; 4
     98e:	84 30       	cpi	r24, 0x04	; 4
     990:	91 05       	cpc	r25, r1
     992:	99 f7       	brne	.-26     	; 0x97a <setIndicatorAndColor+0x18>
     994:	e0 91 b9 02 	lds	r30, 0x02B9
     998:	f0 91 ba 02 	lds	r31, 0x02BA
     99c:	ee 0f       	add	r30, r30
     99e:	ff 1f       	adc	r31, r31
     9a0:	ef 53       	subi	r30, 0x3F	; 63
     9a2:	fd 4f       	sbci	r31, 0xFD	; 253
     9a4:	11 82       	std	Z+1, r1	; 0x01
     9a6:	10 82       	st	Z, r1
     9a8:	e0 91 bb 02 	lds	r30, 0x02BB
     9ac:	f0 91 bc 02 	lds	r31, 0x02BC
     9b0:	ee 0f       	add	r30, r30
     9b2:	ff 1f       	adc	r31, r31
     9b4:	ef 53       	subi	r30, 0x3F	; 63
     9b6:	fd 4f       	sbci	r31, 0xFD	; 253
     9b8:	81 e0       	ldi	r24, 0x01	; 1
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	91 83       	std	Z+1, r25	; 0x01
     9be:	80 83       	st	Z, r24
     9c0:	e0 91 bd 02 	lds	r30, 0x02BD
     9c4:	f0 91 be 02 	lds	r31, 0x02BE
     9c8:	ee 0f       	add	r30, r30
     9ca:	ff 1f       	adc	r31, r31
     9cc:	ef 53       	subi	r30, 0x3F	; 63
     9ce:	fd 4f       	sbci	r31, 0xFD	; 253
     9d0:	82 e0       	ldi	r24, 0x02	; 2
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	91 83       	std	Z+1, r25	; 0x01
     9d6:	80 83       	st	Z, r24
     9d8:	e0 91 bf 02 	lds	r30, 0x02BF
     9dc:	f0 91 c0 02 	lds	r31, 0x02C0
     9e0:	ee 0f       	add	r30, r30
     9e2:	ff 1f       	adc	r31, r31
     9e4:	ef 53       	subi	r30, 0x3F	; 63
     9e6:	fd 4f       	sbci	r31, 0xFD	; 253
     9e8:	83 e0       	ldi	r24, 0x03	; 3
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	91 83       	std	Z+1, r25	; 0x01
     9ee:	80 83       	st	Z, r24
     9f0:	8f ef       	ldi	r24, 0xFF	; 255
     9f2:	9f ef       	ldi	r25, 0xFF	; 255
     9f4:	90 93 a4 02 	sts	0x02A4, r25
     9f8:	80 93 a3 02 	sts	0x02A3, r24
     9fc:	90 93 a2 02 	sts	0x02A2, r25
     a00:	80 93 a1 02 	sts	0x02A1, r24
     a04:	90 93 d0 02 	sts	0x02D0, r25
     a08:	80 93 cf 02 	sts	0x02CF, r24
     a0c:	90 93 ce 02 	sts	0x02CE, r25
     a10:	80 93 cd 02 	sts	0x02CD, r24
     a14:	df 91       	pop	r29
     a16:	cf 91       	pop	r28
     a18:	08 95       	ret

00000a1a <set_color>:
     a1a:	83 e0       	ldi	r24, 0x03	; 3
     a1c:	d3 dd       	rcall	.-1114   	; 0x5c4 <ADC_Conversion>
     a1e:	80 93 75 02 	sts	0x0275, r24
     a22:	82 e0       	ldi	r24, 0x02	; 2
     a24:	cf dd       	rcall	.-1122   	; 0x5c4 <ADC_Conversion>
     a26:	80 93 74 02 	sts	0x0274, r24
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	cb dd       	rcall	.-1130   	; 0x5c4 <ADC_Conversion>
     a2e:	80 93 73 02 	sts	0x0273, r24
     a32:	08 95       	ret

00000a34 <node>:
     a34:	88 ec       	ldi	r24, 0xC8	; 200
     a36:	80 93 28 01 	sts	0x0128, r24
     a3a:	80 93 2a 01 	sts	0x012A, r24
     a3e:	80 91 74 02 	lds	r24, 0x0274
     a42:	89 32       	cpi	r24, 0x29	; 41
     a44:	38 f4       	brcc	.+14     	; 0xa54 <node+0x20>
     a46:	0e c0       	rjmp	.+28     	; 0xa64 <node+0x30>
     a48:	61 dd       	rcall	.-1342   	; 0x50c <forward>
     a4a:	e7 df       	rcall	.-50     	; 0xa1a <set_color>
     a4c:	80 91 74 02 	lds	r24, 0x0274
     a50:	89 32       	cpi	r24, 0x29	; 41
     a52:	40 f0       	brcs	.+16     	; 0xa64 <node+0x30>
     a54:	80 91 75 02 	lds	r24, 0x0275
     a58:	89 32       	cpi	r24, 0x29	; 41
     a5a:	b0 f7       	brcc	.-20     	; 0xa48 <node+0x14>
     a5c:	80 91 73 02 	lds	r24, 0x0273
     a60:	89 32       	cpi	r24, 0x29	; 41
     a62:	90 f7       	brcc	.-28     	; 0xa48 <node+0x14>
     a64:	2f ef       	ldi	r18, 0xFF	; 255
     a66:	8f ef       	ldi	r24, 0xFF	; 255
     a68:	9a e1       	ldi	r25, 0x1A	; 26
     a6a:	21 50       	subi	r18, 0x01	; 1
     a6c:	80 40       	sbci	r24, 0x00	; 0
     a6e:	90 40       	sbci	r25, 0x00	; 0
     a70:	e1 f7       	brne	.-8      	; 0xa6a <node+0x36>
     a72:	00 c0       	rjmp	.+0      	; 0xa74 <node+0x40>
     a74:	00 00       	nop
     a76:	53 cd       	rjmp	.-1370   	; 0x51e <stop>
     a78:	08 95       	ret

00000a7a <nodeLeft>:
     a7a:	dc df       	rcall	.-72     	; 0xa34 <node>
     a7c:	4a dd       	rcall	.-1388   	; 0x512 <left>
     a7e:	2f ef       	ldi	r18, 0xFF	; 255
     a80:	8f e7       	ldi	r24, 0x7F	; 127
     a82:	91 e3       	ldi	r25, 0x31	; 49
     a84:	21 50       	subi	r18, 0x01	; 1
     a86:	80 40       	sbci	r24, 0x00	; 0
     a88:	90 40       	sbci	r25, 0x00	; 0
     a8a:	e1 f7       	brne	.-8      	; 0xa84 <nodeLeft+0xa>
     a8c:	00 c0       	rjmp	.+0      	; 0xa8e <nodeLeft+0x14>
     a8e:	00 00       	nop
     a90:	46 dd       	rcall	.-1396   	; 0x51e <stop>
     a92:	90 dd       	rcall	.-1248   	; 0x5b4 <buzzer_on>
     a94:	2f ef       	ldi	r18, 0xFF	; 255
     a96:	8f ef       	ldi	r24, 0xFF	; 255
     a98:	9c e2       	ldi	r25, 0x2C	; 44
     a9a:	21 50       	subi	r18, 0x01	; 1
     a9c:	80 40       	sbci	r24, 0x00	; 0
     a9e:	90 40       	sbci	r25, 0x00	; 0
     aa0:	e1 f7       	brne	.-8      	; 0xa9a <nodeLeft+0x20>
     aa2:	00 c0       	rjmp	.+0      	; 0xaa4 <nodeLeft+0x2a>
     aa4:	00 00       	nop
     aa6:	8a cd       	rjmp	.-1260   	; 0x5bc <buzzer_off>
     aa8:	08 95       	ret

00000aaa <Uturn>:
     aaa:	e7 df       	rcall	.-50     	; 0xa7a <nodeLeft>
     aac:	e6 df       	rcall	.-52     	; 0xa7a <nodeLeft>
     aae:	82 dd       	rcall	.-1276   	; 0x5b4 <buzzer_on>
     ab0:	2f ef       	ldi	r18, 0xFF	; 255
     ab2:	8f ef       	ldi	r24, 0xFF	; 255
     ab4:	9c e2       	ldi	r25, 0x2C	; 44
     ab6:	21 50       	subi	r18, 0x01	; 1
     ab8:	80 40       	sbci	r24, 0x00	; 0
     aba:	90 40       	sbci	r25, 0x00	; 0
     abc:	e1 f7       	brne	.-8      	; 0xab6 <Uturn+0xc>
     abe:	00 c0       	rjmp	.+0      	; 0xac0 <Uturn+0x16>
     ac0:	00 00       	nop
     ac2:	7c dd       	rcall	.-1288   	; 0x5bc <buzzer_off>
     ac4:	2c cd       	rjmp	.-1448   	; 0x51e <stop>
     ac6:	08 95       	ret

00000ac8 <turn>:
     ac8:	f0 df       	rcall	.-32     	; 0xaaa <Uturn>
     aca:	80 91 76 02 	lds	r24, 0x0276
     ace:	90 91 77 02 	lds	r25, 0x0277
     ad2:	02 96       	adiw	r24, 0x02	; 2
     ad4:	83 70       	andi	r24, 0x03	; 3
     ad6:	90 78       	andi	r25, 0x80	; 128
     ad8:	99 23       	and	r25, r25
     ada:	24 f4       	brge	.+8      	; 0xae4 <turn+0x1c>
     adc:	01 97       	sbiw	r24, 0x01	; 1
     ade:	8c 6f       	ori	r24, 0xFC	; 252
     ae0:	9f 6f       	ori	r25, 0xFF	; 255
     ae2:	01 96       	adiw	r24, 0x01	; 1
     ae4:	90 93 77 02 	sts	0x0277, r25
     ae8:	80 93 76 02 	sts	0x0276, r24
     aec:	08 95       	ret

00000aee <turnLeft>:
     aee:	c5 df       	rcall	.-118    	; 0xa7a <nodeLeft>
     af0:	80 91 76 02 	lds	r24, 0x0276
     af4:	90 91 77 02 	lds	r25, 0x0277
     af8:	03 96       	adiw	r24, 0x03	; 3
     afa:	83 70       	andi	r24, 0x03	; 3
     afc:	90 78       	andi	r25, 0x80	; 128
     afe:	99 23       	and	r25, r25
     b00:	24 f4       	brge	.+8      	; 0xb0a <turnLeft+0x1c>
     b02:	01 97       	sbiw	r24, 0x01	; 1
     b04:	8c 6f       	ori	r24, 0xFC	; 252
     b06:	9f 6f       	ori	r25, 0xFF	; 255
     b08:	01 96       	adiw	r24, 0x01	; 1
     b0a:	90 93 77 02 	sts	0x0277, r25
     b0e:	80 93 76 02 	sts	0x0276, r24
     b12:	08 95       	ret

00000b14 <nodeRight>:
     b14:	8f df       	rcall	.-226    	; 0xa34 <node>
     b16:	00 dd       	rcall	.-1536   	; 0x518 <right>
     b18:	2f ef       	ldi	r18, 0xFF	; 255
     b1a:	8f e7       	ldi	r24, 0x7F	; 127
     b1c:	91 e3       	ldi	r25, 0x31	; 49
     b1e:	21 50       	subi	r18, 0x01	; 1
     b20:	80 40       	sbci	r24, 0x00	; 0
     b22:	90 40       	sbci	r25, 0x00	; 0
     b24:	e1 f7       	brne	.-8      	; 0xb1e <nodeRight+0xa>
     b26:	00 c0       	rjmp	.+0      	; 0xb28 <nodeRight+0x14>
     b28:	00 00       	nop
     b2a:	f9 dc       	rcall	.-1550   	; 0x51e <stop>
     b2c:	43 dd       	rcall	.-1402   	; 0x5b4 <buzzer_on>
     b2e:	2f ef       	ldi	r18, 0xFF	; 255
     b30:	8f ef       	ldi	r24, 0xFF	; 255
     b32:	9c e2       	ldi	r25, 0x2C	; 44
     b34:	21 50       	subi	r18, 0x01	; 1
     b36:	80 40       	sbci	r24, 0x00	; 0
     b38:	90 40       	sbci	r25, 0x00	; 0
     b3a:	e1 f7       	brne	.-8      	; 0xb34 <nodeRight+0x20>
     b3c:	00 c0       	rjmp	.+0      	; 0xb3e <nodeRight+0x2a>
     b3e:	00 00       	nop
     b40:	3d cd       	rjmp	.-1414   	; 0x5bc <buzzer_off>
     b42:	08 95       	ret

00000b44 <turnRight>:
     b44:	e7 df       	rcall	.-50     	; 0xb14 <nodeRight>
     b46:	80 91 76 02 	lds	r24, 0x0276
     b4a:	90 91 77 02 	lds	r25, 0x0277
     b4e:	01 96       	adiw	r24, 0x01	; 1
     b50:	83 70       	andi	r24, 0x03	; 3
     b52:	90 78       	andi	r25, 0x80	; 128
     b54:	99 23       	and	r25, r25
     b56:	24 f4       	brge	.+8      	; 0xb60 <turnRight+0x1c>
     b58:	01 97       	sbiw	r24, 0x01	; 1
     b5a:	8c 6f       	ori	r24, 0xFC	; 252
     b5c:	9f 6f       	ori	r25, 0xFF	; 255
     b5e:	01 96       	adiw	r24, 0x01	; 1
     b60:	90 93 77 02 	sts	0x0277, r25
     b64:	80 93 76 02 	sts	0x0276, r24
     b68:	08 95       	ret

00000b6a <elevate>:
     b6a:	61 11       	cpse	r22, r1
     b6c:	02 c0       	rjmp	.+4      	; 0xb72 <elevate+0x8>
     b6e:	89 cd       	rjmp	.-1262   	; 0x682 <servo_1>
     b70:	08 95       	ret
     b72:	61 30       	cpi	r22, 0x01	; 1
     b74:	31 f4       	brne	.+12     	; 0xb82 <elevate+0x18>
     b76:	8d 32       	cpi	r24, 0x2D	; 45
     b78:	11 f4       	brne	.+4      	; 0xb7e <elevate+0x14>
     b7a:	80 e0       	ldi	r24, 0x00	; 0
     b7c:	01 c0       	rjmp	.+2      	; 0xb80 <elevate+0x16>
     b7e:	8d e2       	ldi	r24, 0x2D	; 45
     b80:	80 cd       	rjmp	.-1280   	; 0x682 <servo_1>
     b82:	08 95       	ret

00000b84 <open>:
     b84:	81 11       	cpse	r24, r1
     b86:	06 c0       	rjmp	.+12     	; 0xb94 <open+0x10>
     b88:	10 92 8b 00 	sts	0x008B, r1
     b8c:	83 e8       	ldi	r24, 0x83	; 131
     b8e:	80 93 8a 00 	sts	0x008A, r24
     b92:	08 95       	ret
     b94:	81 30       	cpi	r24, 0x01	; 1
     b96:	29 f4       	brne	.+10     	; 0xba2 <open+0x1e>
     b98:	10 92 8d 00 	sts	0x008D, r1
     b9c:	83 e8       	ldi	r24, 0x83	; 131
     b9e:	80 93 8c 00 	sts	0x008C, r24
     ba2:	08 95       	ret

00000ba4 <close>:
     ba4:	81 11       	cpse	r24, r1
     ba6:	06 c0       	rjmp	.+12     	; 0xbb4 <close+0x10>
     ba8:	10 92 8b 00 	sts	0x008B, r1
     bac:	83 e2       	ldi	r24, 0x23	; 35
     bae:	80 93 8a 00 	sts	0x008A, r24
     bb2:	08 95       	ret
     bb4:	81 30       	cpi	r24, 0x01	; 1
     bb6:	29 f4       	brne	.+10     	; 0xbc2 <close+0x1e>
     bb8:	10 92 8d 00 	sts	0x008D, r1
     bbc:	83 e2       	ldi	r24, 0x23	; 35
     bbe:	80 93 8c 00 	sts	0x008C, r24
     bc2:	08 95       	ret

00000bc4 <predict>:
     bc4:	80 91 a9 02 	lds	r24, 0x02A9
     bc8:	90 91 aa 02 	lds	r25, 0x02AA
     bcc:	20 91 b9 02 	lds	r18, 0x02B9
     bd0:	30 91 ba 02 	lds	r19, 0x02BA
     bd4:	82 17       	cp	r24, r18
     bd6:	93 07       	cpc	r25, r19
     bd8:	09 f0       	breq	.+2      	; 0xbdc <predict+0x18>
     bda:	5f c0       	rjmp	.+190    	; 0xc9a <predict+0xd6>
     bdc:	20 91 ab 02 	lds	r18, 0x02AB
     be0:	30 91 ac 02 	lds	r19, 0x02AC
     be4:	82 17       	cp	r24, r18
     be6:	93 07       	cpc	r25, r19
     be8:	09 f0       	breq	.+2      	; 0xbec <predict+0x28>
     bea:	57 c0       	rjmp	.+174    	; 0xc9a <predict+0xd6>
     bec:	80 91 ad 02 	lds	r24, 0x02AD
     bf0:	90 91 ae 02 	lds	r25, 0x02AE
     bf4:	20 91 bb 02 	lds	r18, 0x02BB
     bf8:	30 91 bc 02 	lds	r19, 0x02BC
     bfc:	82 17       	cp	r24, r18
     bfe:	93 07       	cpc	r25, r19
     c00:	09 f0       	breq	.+2      	; 0xc04 <predict+0x40>
     c02:	4b c0       	rjmp	.+150    	; 0xc9a <predict+0xd6>
     c04:	20 91 af 02 	lds	r18, 0x02AF
     c08:	30 91 b0 02 	lds	r19, 0x02B0
     c0c:	82 17       	cp	r24, r18
     c0e:	93 07       	cpc	r25, r19
     c10:	09 f0       	breq	.+2      	; 0xc14 <predict+0x50>
     c12:	43 c0       	rjmp	.+134    	; 0xc9a <predict+0xd6>
     c14:	80 91 a5 02 	lds	r24, 0x02A5
     c18:	90 91 a6 02 	lds	r25, 0x02A6
     c1c:	fc 01       	movw	r30, r24
     c1e:	ee 0f       	add	r30, r30
     c20:	ff 1f       	adc	r31, r31
     c22:	ee 0f       	add	r30, r30
     c24:	ff 1f       	adc	r31, r31
     c26:	e7 55       	subi	r30, 0x57	; 87
     c28:	fd 4f       	sbci	r31, 0xFD	; 253
     c2a:	20 81       	ld	r18, Z
     c2c:	31 81       	ldd	r19, Z+1	; 0x01
     c2e:	fc 01       	movw	r30, r24
     c30:	ee 0f       	add	r30, r30
     c32:	ff 1f       	adc	r31, r31
     c34:	e7 54       	subi	r30, 0x47	; 71
     c36:	fd 4f       	sbci	r31, 0xFD	; 253
     c38:	40 81       	ld	r20, Z
     c3a:	51 81       	ldd	r21, Z+1	; 0x01
     c3c:	24 17       	cp	r18, r20
     c3e:	35 07       	cpc	r19, r21
     c40:	61 f5       	brne	.+88     	; 0xc9a <predict+0xd6>
     c42:	fc 01       	movw	r30, r24
     c44:	ee 0f       	add	r30, r30
     c46:	ff 1f       	adc	r31, r31
     c48:	ee 0f       	add	r30, r30
     c4a:	ff 1f       	adc	r31, r31
     c4c:	e7 55       	subi	r30, 0x57	; 87
     c4e:	fd 4f       	sbci	r31, 0xFD	; 253
     c50:	82 81       	ldd	r24, Z+2	; 0x02
     c52:	93 81       	ldd	r25, Z+3	; 0x03
     c54:	28 17       	cp	r18, r24
     c56:	39 07       	cpc	r19, r25
     c58:	01 f5       	brne	.+64     	; 0xc9a <predict+0xd6>
     c5a:	80 91 a1 02 	lds	r24, 0x02A1
     c5e:	90 91 a2 02 	lds	r25, 0x02A2
     c62:	01 96       	adiw	r24, 0x01	; 1
     c64:	d1 f4       	brne	.+52     	; 0xc9a <predict+0xd6>
     c66:	80 91 a3 02 	lds	r24, 0x02A3
     c6a:	90 91 a4 02 	lds	r25, 0x02A4
     c6e:	01 96       	adiw	r24, 0x01	; 1
     c70:	a1 f4       	brne	.+40     	; 0xc9a <predict+0xd6>
     c72:	80 91 cd 02 	lds	r24, 0x02CD
     c76:	90 91 ce 02 	lds	r25, 0x02CE
     c7a:	01 96       	adiw	r24, 0x01	; 1
     c7c:	71 f4       	brne	.+28     	; 0xc9a <predict+0xd6>
     c7e:	80 91 cf 02 	lds	r24, 0x02CF
     c82:	90 91 d0 02 	lds	r25, 0x02D0
     c86:	01 96       	adiw	r24, 0x01	; 1
     c88:	41 f4       	brne	.+16     	; 0xc9a <predict+0xd6>
     c8a:	80 91 00 02 	lds	r24, 0x0200
     c8e:	90 91 01 02 	lds	r25, 0x0201
     c92:	90 93 7d 02 	sts	0x027D, r25
     c96:	80 93 7c 02 	sts	0x027C, r24
     c9a:	08 95       	ret

00000c9c <lcd>:
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
     ca0:	ec 01       	movw	r28, r24
     ca2:	81 e0       	ldi	r24, 0x01	; 1
     ca4:	86 da       	rcall	.-2804   	; 0x1b2 <lcd_wr_command>
     ca6:	61 e0       	ldi	r22, 0x01	; 1
     ca8:	81 e0       	ldi	r24, 0x01	; 1
     caa:	ef da       	rcall	.-2594   	; 0x28a <lcd_cursor>
     cac:	ce 01       	movw	r24, r28
     cae:	df da       	rcall	.-2626   	; 0x26e <lcd_string>
     cb0:	df 91       	pop	r29
     cb2:	cf 91       	pop	r28
     cb4:	08 95       	ret

00000cb6 <sharpRight>:
     cb6:	cf 93       	push	r28
     cb8:	df 93       	push	r29
     cba:	84 e0       	ldi	r24, 0x04	; 4
     cbc:	92 e0       	ldi	r25, 0x02	; 2
     cbe:	ee df       	rcall	.-36     	; 0xc9c <lcd>
     cc0:	80 ef       	ldi	r24, 0xF0	; 240
     cc2:	80 93 28 01 	sts	0x0128, r24
     cc6:	80 93 2a 01 	sts	0x012A, r24
     cca:	26 dc       	rcall	.-1972   	; 0x518 <right>
     ccc:	c0 e0       	ldi	r28, 0x00	; 0
     cce:	d0 e0       	ldi	r29, 0x00	; 0
     cd0:	04 c0       	rjmp	.+8      	; 0xcda <sharpRight+0x24>
     cd2:	21 96       	adiw	r28, 0x01	; 1
     cd4:	c0 31       	cpi	r28, 0x10	; 16
     cd6:	d1 05       	cpc	r29, r1
     cd8:	d1 f0       	breq	.+52     	; 0xd0e <sharpRight+0x58>
     cda:	8b e0       	ldi	r24, 0x0B	; 11
     cdc:	73 dc       	rcall	.-1818   	; 0x5c4 <ADC_Conversion>
     cde:	81 34       	cpi	r24, 0x41	; 65
     ce0:	c0 f3       	brcs	.-16     	; 0xcd2 <sharpRight+0x1c>
     ce2:	1d dc       	rcall	.-1990   	; 0x51e <stop>
     ce4:	6b dc       	rcall	.-1834   	; 0x5bc <buzzer_off>
     ce6:	60 97       	sbiw	r28, 0x10	; 16
     ce8:	18 f4       	brcc	.+6      	; 0xcf0 <sharpRight+0x3a>
     cea:	88 dd       	rcall	.-1264   	; 0x7fc <scan>
     cec:	c8 2f       	mov	r28, r24
     cee:	01 c0       	rjmp	.+2      	; 0xcf2 <sharpRight+0x3c>
     cf0:	cf ef       	ldi	r28, 0xFF	; 255
     cf2:	0f dc       	rcall	.-2018   	; 0x512 <left>
     cf4:	82 e0       	ldi	r24, 0x02	; 2
     cf6:	66 dc       	rcall	.-1844   	; 0x5c4 <ADC_Conversion>
     cf8:	89 32       	cpi	r24, 0x29	; 41
     cfa:	e0 f3       	brcs	.-8      	; 0xcf4 <sharpRight+0x3e>
     cfc:	81 e0       	ldi	r24, 0x01	; 1
     cfe:	62 dc       	rcall	.-1852   	; 0x5c4 <ADC_Conversion>
     d00:	89 32       	cpi	r24, 0x29	; 41
     d02:	48 f4       	brcc	.+18     	; 0xd16 <sharpRight+0x60>
     d04:	83 e0       	ldi	r24, 0x03	; 3
     d06:	5e dc       	rcall	.-1860   	; 0x5c4 <ADC_Conversion>
     d08:	89 32       	cpi	r24, 0x29	; 41
     d0a:	a0 f3       	brcs	.-24     	; 0xcf4 <sharpRight+0x3e>
     d0c:	04 c0       	rjmp	.+8      	; 0xd16 <sharpRight+0x60>
     d0e:	07 dc       	rcall	.-2034   	; 0x51e <stop>
     d10:	55 dc       	rcall	.-1878   	; 0x5bc <buzzer_off>
     d12:	cf ef       	ldi	r28, 0xFF	; 255
     d14:	ee cf       	rjmp	.-36     	; 0xcf2 <sharpRight+0x3c>
     d16:	03 dc       	rcall	.-2042   	; 0x51e <stop>
     d18:	87 e0       	ldi	r24, 0x07	; 7
     d1a:	92 e0       	ldi	r25, 0x02	; 2
     d1c:	bf df       	rcall	.-130    	; 0xc9c <lcd>
     d1e:	8c 2f       	mov	r24, r28
     d20:	df 91       	pop	r29
     d22:	cf 91       	pop	r28
     d24:	08 95       	ret

00000d26 <semiCorrect>:
     d26:	80 91 74 02 	lds	r24, 0x0274
     d2a:	88 32       	cpi	r24, 0x28	; 40
     d2c:	08 f0       	brcs	.+2      	; 0xd30 <semiCorrect+0xa>
     d2e:	4f c0       	rjmp	.+158    	; 0xdce <semiCorrect+0xa8>
     d30:	80 91 75 02 	lds	r24, 0x0275
     d34:	89 32       	cpi	r24, 0x29	; 41
     d36:	28 f1       	brcs	.+74     	; 0xd82 <semiCorrect+0x5c>
     d38:	90 91 73 02 	lds	r25, 0x0273
     d3c:	98 32       	cpi	r25, 0x28	; 40
     d3e:	08 f5       	brcc	.+66     	; 0xd82 <semiCorrect+0x5c>
     d40:	8b e0       	ldi	r24, 0x0B	; 11
     d42:	92 e0       	ldi	r25, 0x02	; 2
     d44:	ab df       	rcall	.-170    	; 0xc9c <lcd>
     d46:	80 91 74 02 	lds	r24, 0x0274
     d4a:	88 32       	cpi	r24, 0x28	; 40
     d4c:	b0 f4       	brcc	.+44     	; 0xd7a <semiCorrect+0x54>
     d4e:	80 91 75 02 	lds	r24, 0x0275
     d52:	89 32       	cpi	r24, 0x29	; 41
     d54:	90 f0       	brcs	.+36     	; 0xd7a <semiCorrect+0x54>
     d56:	80 91 73 02 	lds	r24, 0x0273
     d5a:	88 32       	cpi	r24, 0x28	; 40
     d5c:	70 f4       	brcc	.+28     	; 0xd7a <semiCorrect+0x54>
     d5e:	d9 db       	rcall	.-2126   	; 0x512 <left>
     d60:	5c de       	rcall	.-840    	; 0xa1a <set_color>
     d62:	80 91 74 02 	lds	r24, 0x0274
     d66:	88 32       	cpi	r24, 0x28	; 40
     d68:	40 f4       	brcc	.+16     	; 0xd7a <semiCorrect+0x54>
     d6a:	80 91 75 02 	lds	r24, 0x0275
     d6e:	89 32       	cpi	r24, 0x29	; 41
     d70:	20 f0       	brcs	.+8      	; 0xd7a <semiCorrect+0x54>
     d72:	80 91 73 02 	lds	r24, 0x0273
     d76:	88 32       	cpi	r24, 0x28	; 40
     d78:	90 f3       	brcs	.-28     	; 0xd5e <semiCorrect+0x38>
     d7a:	8f e0       	ldi	r24, 0x0F	; 15
     d7c:	92 e0       	ldi	r25, 0x02	; 2
     d7e:	8e cf       	rjmp	.-228    	; 0xc9c <lcd>
     d80:	08 95       	ret
     d82:	90 91 73 02 	lds	r25, 0x0273
     d86:	99 32       	cpi	r25, 0x29	; 41
     d88:	10 f1       	brcs	.+68     	; 0xdce <semiCorrect+0xa8>
     d8a:	88 32       	cpi	r24, 0x28	; 40
     d8c:	00 f5       	brcc	.+64     	; 0xdce <semiCorrect+0xa8>
     d8e:	81 e1       	ldi	r24, 0x11	; 17
     d90:	92 e0       	ldi	r25, 0x02	; 2
     d92:	84 df       	rcall	.-248    	; 0xc9c <lcd>
     d94:	80 91 74 02 	lds	r24, 0x0274
     d98:	88 32       	cpi	r24, 0x28	; 40
     d9a:	b0 f4       	brcc	.+44     	; 0xdc8 <semiCorrect+0xa2>
     d9c:	80 91 75 02 	lds	r24, 0x0275
     da0:	88 32       	cpi	r24, 0x28	; 40
     da2:	90 f4       	brcc	.+36     	; 0xdc8 <semiCorrect+0xa2>
     da4:	80 91 73 02 	lds	r24, 0x0273
     da8:	89 32       	cpi	r24, 0x29	; 41
     daa:	70 f0       	brcs	.+28     	; 0xdc8 <semiCorrect+0xa2>
     dac:	b5 db       	rcall	.-2198   	; 0x518 <right>
     dae:	35 de       	rcall	.-918    	; 0xa1a <set_color>
     db0:	80 91 74 02 	lds	r24, 0x0274
     db4:	88 32       	cpi	r24, 0x28	; 40
     db6:	40 f4       	brcc	.+16     	; 0xdc8 <semiCorrect+0xa2>
     db8:	80 91 75 02 	lds	r24, 0x0275
     dbc:	88 32       	cpi	r24, 0x28	; 40
     dbe:	20 f4       	brcc	.+8      	; 0xdc8 <semiCorrect+0xa2>
     dc0:	80 91 73 02 	lds	r24, 0x0273
     dc4:	89 32       	cpi	r24, 0x29	; 41
     dc6:	90 f7       	brcc	.-28     	; 0xdac <semiCorrect+0x86>
     dc8:	8f e0       	ldi	r24, 0x0F	; 15
     dca:	92 e0       	ldi	r25, 0x02	; 2
     dcc:	67 cf       	rjmp	.-306    	; 0xc9c <lcd>
     dce:	08 95       	ret

00000dd0 <correct>:
     dd0:	0f 93       	push	r16
     dd2:	1f 93       	push	r17
     dd4:	cf 93       	push	r28
     dd6:	df 93       	push	r29
     dd8:	85 e0       	ldi	r24, 0x05	; 5
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	90 93 91 02 	sts	0x0291, r25
     de0:	80 93 90 02 	sts	0x0290, r24
     de4:	85 e1       	ldi	r24, 0x15	; 21
     de6:	92 e0       	ldi	r25, 0x02	; 2
     de8:	59 df       	rcall	.-334    	; 0xc9c <lcd>
     dea:	99 db       	rcall	.-2254   	; 0x51e <stop>
     dec:	80 91 72 02 	lds	r24, 0x0272
     df0:	81 30       	cpi	r24, 0x01	; 1
     df2:	09 f0       	breq	.+2      	; 0xdf6 <correct+0x26>
     df4:	34 c0       	rjmp	.+104    	; 0xe5e <correct+0x8e>
     df6:	10 92 72 02 	sts	0x0272, r1
     dfa:	ce e3       	ldi	r28, 0x3E	; 62
     dfc:	d0 e0       	ldi	r29, 0x00	; 0
     dfe:	02 e0       	ldi	r16, 0x02	; 2
     e00:	10 e0       	ldi	r17, 0x00	; 0
     e02:	8a db       	rcall	.-2284   	; 0x518 <right>
     e04:	02 30       	cpi	r16, 0x02	; 2
     e06:	11 05       	cpc	r17, r1
     e08:	31 f4       	brne	.+12     	; 0xe16 <correct+0x46>
     e0a:	8e e1       	ldi	r24, 0x1E	; 30
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	d0 dc       	rcall	.-1632   	; 0x7b0 <Delay>
     e10:	88 23       	and	r24, r24
     e12:	29 f0       	breq	.+10     	; 0xe1e <correct+0x4e>
     e14:	5b c0       	rjmp	.+182    	; 0xecc <correct+0xfc>
     e16:	ce 01       	movw	r24, r28
     e18:	cb dc       	rcall	.-1642   	; 0x7b0 <Delay>
     e1a:	81 11       	cpse	r24, r1
     e1c:	57 c0       	rjmp	.+174    	; 0xecc <correct+0xfc>
     e1e:	7f db       	rcall	.-2306   	; 0x51e <stop>
     e20:	82 e0       	ldi	r24, 0x02	; 2
     e22:	d0 db       	rcall	.-2144   	; 0x5c4 <ADC_Conversion>
     e24:	89 32       	cpi	r24, 0x29	; 41
     e26:	08 f0       	brcs	.+2      	; 0xe2a <correct+0x5a>
     e28:	4d c0       	rjmp	.+154    	; 0xec4 <correct+0xf4>
     e2a:	7d df       	rcall	.-262    	; 0xd26 <semiCorrect>
     e2c:	72 db       	rcall	.-2332   	; 0x512 <left>
     e2e:	02 30       	cpi	r16, 0x02	; 2
     e30:	11 05       	cpc	r17, r1
     e32:	31 f4       	brne	.+12     	; 0xe40 <correct+0x70>
     e34:	8c e3       	ldi	r24, 0x3C	; 60
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	bb dc       	rcall	.-1674   	; 0x7b0 <Delay>
     e3a:	88 23       	and	r24, r24
     e3c:	29 f0       	breq	.+10     	; 0xe48 <correct+0x78>
     e3e:	46 c0       	rjmp	.+140    	; 0xecc <correct+0xfc>
     e40:	ce 01       	movw	r24, r28
     e42:	b6 dc       	rcall	.-1684   	; 0x7b0 <Delay>
     e44:	81 11       	cpse	r24, r1
     e46:	42 c0       	rjmp	.+132    	; 0xecc <correct+0xfc>
     e48:	6a db       	rcall	.-2348   	; 0x51e <stop>
     e4a:	82 e0       	ldi	r24, 0x02	; 2
     e4c:	bb db       	rcall	.-2186   	; 0x5c4 <ADC_Conversion>
     e4e:	64 96       	adiw	r28, 0x14	; 20
     e50:	88 32       	cpi	r24, 0x28	; 40
     e52:	08 f4       	brcc	.+2      	; 0xe56 <correct+0x86>
     e54:	37 c0       	rjmp	.+110    	; 0xec4 <correct+0xf4>
     e56:	67 df       	rcall	.-306    	; 0xd26 <semiCorrect>
     e58:	0c 5e       	subi	r16, 0xEC	; 236
     e5a:	1f 4f       	sbci	r17, 0xFF	; 255
     e5c:	d2 cf       	rjmp	.-92     	; 0xe02 <correct+0x32>
     e5e:	81 e0       	ldi	r24, 0x01	; 1
     e60:	80 93 72 02 	sts	0x0272, r24
     e64:	ce e3       	ldi	r28, 0x3E	; 62
     e66:	d0 e0       	ldi	r29, 0x00	; 0
     e68:	02 e0       	ldi	r16, 0x02	; 2
     e6a:	10 e0       	ldi	r17, 0x00	; 0
     e6c:	52 db       	rcall	.-2396   	; 0x512 <left>
     e6e:	02 30       	cpi	r16, 0x02	; 2
     e70:	11 05       	cpc	r17, r1
     e72:	31 f4       	brne	.+12     	; 0xe80 <correct+0xb0>
     e74:	8e e1       	ldi	r24, 0x1E	; 30
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	9b dc       	rcall	.-1738   	; 0x7b0 <Delay>
     e7a:	88 23       	and	r24, r24
     e7c:	29 f0       	breq	.+10     	; 0xe88 <correct+0xb8>
     e7e:	26 c0       	rjmp	.+76     	; 0xecc <correct+0xfc>
     e80:	ce 01       	movw	r24, r28
     e82:	96 dc       	rcall	.-1748   	; 0x7b0 <Delay>
     e84:	81 11       	cpse	r24, r1
     e86:	22 c0       	rjmp	.+68     	; 0xecc <correct+0xfc>
     e88:	4a db       	rcall	.-2412   	; 0x51e <stop>
     e8a:	82 e0       	ldi	r24, 0x02	; 2
     e8c:	9b db       	rcall	.-2250   	; 0x5c4 <ADC_Conversion>
     e8e:	89 32       	cpi	r24, 0x29	; 41
     e90:	c8 f4       	brcc	.+50     	; 0xec4 <correct+0xf4>
     e92:	49 df       	rcall	.-366    	; 0xd26 <semiCorrect>
     e94:	41 db       	rcall	.-2430   	; 0x518 <right>
     e96:	02 30       	cpi	r16, 0x02	; 2
     e98:	11 05       	cpc	r17, r1
     e9a:	31 f4       	brne	.+12     	; 0xea8 <correct+0xd8>
     e9c:	8c e3       	ldi	r24, 0x3C	; 60
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	87 dc       	rcall	.-1778   	; 0x7b0 <Delay>
     ea2:	88 23       	and	r24, r24
     ea4:	29 f0       	breq	.+10     	; 0xeb0 <correct+0xe0>
     ea6:	12 c0       	rjmp	.+36     	; 0xecc <correct+0xfc>
     ea8:	ce 01       	movw	r24, r28
     eaa:	82 dc       	rcall	.-1788   	; 0x7b0 <Delay>
     eac:	81 11       	cpse	r24, r1
     eae:	0e c0       	rjmp	.+28     	; 0xecc <correct+0xfc>
     eb0:	36 db       	rcall	.-2452   	; 0x51e <stop>
     eb2:	82 e0       	ldi	r24, 0x02	; 2
     eb4:	87 db       	rcall	.-2290   	; 0x5c4 <ADC_Conversion>
     eb6:	64 96       	adiw	r28, 0x14	; 20
     eb8:	88 32       	cpi	r24, 0x28	; 40
     eba:	20 f0       	brcs	.+8      	; 0xec4 <correct+0xf4>
     ebc:	34 df       	rcall	.-408    	; 0xd26 <semiCorrect>
     ebe:	0c 5e       	subi	r16, 0xEC	; 236
     ec0:	1f 4f       	sbci	r17, 0xFF	; 255
     ec2:	d4 cf       	rjmp	.-88     	; 0xe6c <correct+0x9c>
     ec4:	8f e0       	ldi	r24, 0x0F	; 15
     ec6:	92 e0       	ldi	r25, 0x02	; 2
     ec8:	e9 de       	rcall	.-558    	; 0xc9c <lcd>
     eca:	29 db       	rcall	.-2478   	; 0x51e <stop>
     ecc:	df 91       	pop	r29
     ece:	cf 91       	pop	r28
     ed0:	1f 91       	pop	r17
     ed2:	0f 91       	pop	r16
     ed4:	08 95       	ret

00000ed6 <noNatak>:
     ed6:	86 e9       	ldi	r24, 0x96	; 150
     ed8:	80 93 28 01 	sts	0x0128, r24
     edc:	80 93 2a 01 	sts	0x012A, r24
     ee0:	80 91 74 02 	lds	r24, 0x0274
     ee4:	88 32       	cpi	r24, 0x28	; 40
     ee6:	08 f0       	brcs	.+2      	; 0xeea <noNatak+0x14>
     ee8:	52 c0       	rjmp	.+164    	; 0xf8e <noNatak+0xb8>
     eea:	80 91 75 02 	lds	r24, 0x0275
     eee:	89 32       	cpi	r24, 0x29	; 41
     ef0:	28 f1       	brcs	.+74     	; 0xf3c <noNatak+0x66>
     ef2:	90 91 73 02 	lds	r25, 0x0273
     ef6:	98 32       	cpi	r25, 0x28	; 40
     ef8:	08 f5       	brcc	.+66     	; 0xf3c <noNatak+0x66>
     efa:	8b e0       	ldi	r24, 0x0B	; 11
     efc:	92 e0       	ldi	r25, 0x02	; 2
     efe:	ce de       	rcall	.-612    	; 0xc9c <lcd>
     f00:	80 91 74 02 	lds	r24, 0x0274
     f04:	88 32       	cpi	r24, 0x28	; 40
     f06:	b0 f4       	brcc	.+44     	; 0xf34 <noNatak+0x5e>
     f08:	80 91 75 02 	lds	r24, 0x0275
     f0c:	89 32       	cpi	r24, 0x29	; 41
     f0e:	90 f0       	brcs	.+36     	; 0xf34 <noNatak+0x5e>
     f10:	80 91 73 02 	lds	r24, 0x0273
     f14:	88 32       	cpi	r24, 0x28	; 40
     f16:	70 f4       	brcc	.+28     	; 0xf34 <noNatak+0x5e>
     f18:	fc da       	rcall	.-2568   	; 0x512 <left>
     f1a:	7f dd       	rcall	.-1282   	; 0xa1a <set_color>
     f1c:	80 91 74 02 	lds	r24, 0x0274
     f20:	88 32       	cpi	r24, 0x28	; 40
     f22:	40 f4       	brcc	.+16     	; 0xf34 <noNatak+0x5e>
     f24:	80 91 75 02 	lds	r24, 0x0275
     f28:	89 32       	cpi	r24, 0x29	; 41
     f2a:	20 f0       	brcs	.+8      	; 0xf34 <noNatak+0x5e>
     f2c:	80 91 73 02 	lds	r24, 0x0273
     f30:	88 32       	cpi	r24, 0x28	; 40
     f32:	90 f3       	brcs	.-28     	; 0xf18 <noNatak+0x42>
     f34:	8f e0       	ldi	r24, 0x0F	; 15
     f36:	92 e0       	ldi	r25, 0x02	; 2
     f38:	b1 de       	rcall	.-670    	; 0xc9c <lcd>
     f3a:	38 c0       	rjmp	.+112    	; 0xfac <noNatak+0xd6>
     f3c:	90 91 73 02 	lds	r25, 0x0273
     f40:	99 32       	cpi	r25, 0x29	; 41
     f42:	18 f1       	brcs	.+70     	; 0xf8a <noNatak+0xb4>
     f44:	88 32       	cpi	r24, 0x28	; 40
     f46:	08 f5       	brcc	.+66     	; 0xf8a <noNatak+0xb4>
     f48:	81 e1       	ldi	r24, 0x11	; 17
     f4a:	92 e0       	ldi	r25, 0x02	; 2
     f4c:	a7 de       	rcall	.-690    	; 0xc9c <lcd>
     f4e:	80 91 74 02 	lds	r24, 0x0274
     f52:	88 32       	cpi	r24, 0x28	; 40
     f54:	b0 f4       	brcc	.+44     	; 0xf82 <noNatak+0xac>
     f56:	80 91 75 02 	lds	r24, 0x0275
     f5a:	88 32       	cpi	r24, 0x28	; 40
     f5c:	90 f4       	brcc	.+36     	; 0xf82 <noNatak+0xac>
     f5e:	80 91 73 02 	lds	r24, 0x0273
     f62:	89 32       	cpi	r24, 0x29	; 41
     f64:	70 f0       	brcs	.+28     	; 0xf82 <noNatak+0xac>
     f66:	d8 da       	rcall	.-2640   	; 0x518 <right>
     f68:	58 dd       	rcall	.-1360   	; 0xa1a <set_color>
     f6a:	80 91 74 02 	lds	r24, 0x0274
     f6e:	88 32       	cpi	r24, 0x28	; 40
     f70:	40 f4       	brcc	.+16     	; 0xf82 <noNatak+0xac>
     f72:	80 91 75 02 	lds	r24, 0x0275
     f76:	88 32       	cpi	r24, 0x28	; 40
     f78:	20 f4       	brcc	.+8      	; 0xf82 <noNatak+0xac>
     f7a:	80 91 73 02 	lds	r24, 0x0273
     f7e:	89 32       	cpi	r24, 0x29	; 41
     f80:	90 f7       	brcc	.-28     	; 0xf66 <noNatak+0x90>
     f82:	8f e0       	ldi	r24, 0x0F	; 15
     f84:	92 e0       	ldi	r25, 0x02	; 2
     f86:	8a de       	rcall	.-748    	; 0xc9c <lcd>
     f88:	11 c0       	rjmp	.+34     	; 0xfac <noNatak+0xd6>
     f8a:	22 df       	rcall	.-444    	; 0xdd0 <correct>
     f8c:	0f c0       	rjmp	.+30     	; 0xfac <noNatak+0xd6>
     f8e:	80 91 75 02 	lds	r24, 0x0275
     f92:	89 32       	cpi	r24, 0x29	; 41
     f94:	20 f0       	brcs	.+8      	; 0xf9e <noNatak+0xc8>
     f96:	90 91 73 02 	lds	r25, 0x0273
     f9a:	98 32       	cpi	r25, 0x28	; 40
     f9c:	40 f0       	brcs	.+16     	; 0xfae <noNatak+0xd8>
     f9e:	88 32       	cpi	r24, 0x28	; 40
     fa0:	20 f4       	brcc	.+8      	; 0xfaa <noNatak+0xd4>
     fa2:	80 91 73 02 	lds	r24, 0x0273
     fa6:	89 32       	cpi	r24, 0x29	; 41
     fa8:	10 f4       	brcc	.+4      	; 0xfae <noNatak+0xd8>
     faa:	12 df       	rcall	.-476    	; 0xdd0 <correct>
     fac:	b8 ca       	rjmp	.-2704   	; 0x51e <stop>
     fae:	08 95       	ret

00000fb0 <forwardJaa>:
     fb0:	ff 92       	push	r15
     fb2:	0f 93       	push	r16
     fb4:	1f 93       	push	r17
     fb6:	cf 93       	push	r28
     fb8:	df 93       	push	r29
     fba:	08 e2       	ldi	r16, 0x28	; 40
     fbc:	11 e0       	ldi	r17, 0x01	; 1
     fbe:	0f 2e       	mov	r0, r31
     fc0:	f0 ef       	ldi	r31, 0xF0	; 240
     fc2:	ff 2e       	mov	r15, r31
     fc4:	f0 2d       	mov	r31, r0
     fc6:	ca e2       	ldi	r28, 0x2A	; 42
     fc8:	d1 e0       	ldi	r29, 0x01	; 1
     fca:	a0 da       	rcall	.-2752   	; 0x50c <forward>
     fcc:	26 dd       	rcall	.-1460   	; 0xa1a <set_color>
     fce:	80 91 74 02 	lds	r24, 0x0274
     fd2:	89 32       	cpi	r24, 0x29	; 41
     fd4:	50 f0       	brcs	.+20     	; 0xfea <forwardJaa+0x3a>
     fd6:	80 91 75 02 	lds	r24, 0x0275
     fda:	89 32       	cpi	r24, 0x29	; 41
     fdc:	20 f4       	brcc	.+8      	; 0xfe6 <forwardJaa+0x36>
     fde:	80 91 73 02 	lds	r24, 0x0273
     fe2:	89 32       	cpi	r24, 0x29	; 41
     fe4:	10 f0       	brcs	.+4      	; 0xfea <forwardJaa+0x3a>
     fe6:	26 dd       	rcall	.-1460   	; 0xa34 <node>
     fe8:	11 c0       	rjmp	.+34     	; 0x100c <forwardJaa+0x5c>
     fea:	f8 01       	movw	r30, r16
     fec:	f0 82       	st	Z, r15
     fee:	f8 82       	st	Y, r15
     ff0:	80 91 74 02 	lds	r24, 0x0274
     ff4:	89 32       	cpi	r24, 0x29	; 41
     ff6:	40 f0       	brcs	.+16     	; 0x1008 <forwardJaa+0x58>
     ff8:	80 91 75 02 	lds	r24, 0x0275
     ffc:	88 32       	cpi	r24, 0x28	; 40
     ffe:	20 f4       	brcc	.+8      	; 0x1008 <forwardJaa+0x58>
    1000:	80 91 73 02 	lds	r24, 0x0273
    1004:	88 32       	cpi	r24, 0x28	; 40
    1006:	08 f3       	brcs	.-62     	; 0xfca <forwardJaa+0x1a>
    1008:	66 df       	rcall	.-308    	; 0xed6 <noNatak>
    100a:	d2 df       	rcall	.-92     	; 0xfb0 <forwardJaa>
    100c:	df 91       	pop	r29
    100e:	cf 91       	pop	r28
    1010:	1f 91       	pop	r17
    1012:	0f 91       	pop	r16
    1014:	ff 90       	pop	r15
    1016:	08 95       	ret

00001018 <front>:
    1018:	cb df       	rcall	.-106    	; 0xfb0 <forwardJaa>
    101a:	80 91 94 02 	lds	r24, 0x0294
    101e:	90 91 95 02 	lds	r25, 0x0295
    1022:	01 96       	adiw	r24, 0x01	; 1
    1024:	90 93 95 02 	sts	0x0295, r25
    1028:	80 93 94 02 	sts	0x0294, r24
    102c:	08 95       	ret

0000102e <traverseToSort>:
    102e:	cf 93       	push	r28
    1030:	df 93       	push	r29
    1032:	ec 01       	movw	r28, r24
    1034:	04 97       	sbiw	r24, 0x04	; 4
    1036:	02 97       	sbiw	r24, 0x02	; 2
    1038:	88 f5       	brcc	.+98     	; 0x109c <traverseToSort+0x6e>
    103a:	c4 30       	cpi	r28, 0x04	; 4
    103c:	d1 05       	cpc	r29, r1
    103e:	39 f4       	brne	.+14     	; 0x104e <traverseToSort+0x20>
    1040:	80 91 76 02 	lds	r24, 0x0276
    1044:	90 91 77 02 	lds	r25, 0x0277
    1048:	89 2b       	or	r24, r25
    104a:	51 f0       	breq	.+20     	; 0x1060 <traverseToSort+0x32>
    104c:	0b c0       	rjmp	.+22     	; 0x1064 <traverseToSort+0x36>
    104e:	c5 30       	cpi	r28, 0x05	; 5
    1050:	d1 05       	cpc	r29, r1
    1052:	41 f4       	brne	.+16     	; 0x1064 <traverseToSort+0x36>
    1054:	80 91 76 02 	lds	r24, 0x0276
    1058:	90 91 77 02 	lds	r25, 0x0277
    105c:	02 97       	sbiw	r24, 0x02	; 2
    105e:	11 f4       	brne	.+4      	; 0x1064 <traverseToSort+0x36>
    1060:	71 dd       	rcall	.-1310   	; 0xb44 <turnRight>
    1062:	01 c0       	rjmp	.+2      	; 0x1066 <traverseToSort+0x38>
    1064:	44 dd       	rcall	.-1400   	; 0xaee <turnLeft>
    1066:	d8 df       	rcall	.-80     	; 0x1018 <front>
    1068:	d7 df       	rcall	.-82     	; 0x1018 <front>
    106a:	24 97       	sbiw	r28, 0x04	; 4
    106c:	39 f4       	brne	.+14     	; 0x107c <traverseToSort+0x4e>
    106e:	85 e0       	ldi	r24, 0x05	; 5
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	90 93 79 02 	sts	0x0279, r25
    1076:	80 93 78 02 	sts	0x0278, r24
    107a:	06 c0       	rjmp	.+12     	; 0x1088 <traverseToSort+0x5a>
    107c:	84 e0       	ldi	r24, 0x04	; 4
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	90 93 79 02 	sts	0x0279, r25
    1084:	80 93 78 02 	sts	0x0278, r24
    1088:	80 91 94 02 	lds	r24, 0x0294
    108c:	90 91 95 02 	lds	r25, 0x0295
    1090:	02 96       	adiw	r24, 0x02	; 2
    1092:	90 93 95 02 	sts	0x0295, r25
    1096:	80 93 94 02 	sts	0x0294, r24
    109a:	22 c0       	rjmp	.+68     	; 0x10e0 <traverseToSort+0xb2>
    109c:	22 97       	sbiw	r28, 0x02	; 2
    109e:	3c f4       	brge	.+14     	; 0x10ae <traverseToSort+0x80>
    10a0:	80 91 76 02 	lds	r24, 0x0276
    10a4:	90 91 77 02 	lds	r25, 0x0277
    10a8:	89 2b       	or	r24, r25
    10aa:	39 f0       	breq	.+14     	; 0x10ba <traverseToSort+0x8c>
    10ac:	07 c0       	rjmp	.+14     	; 0x10bc <traverseToSort+0x8e>
    10ae:	80 91 76 02 	lds	r24, 0x0276
    10b2:	90 91 77 02 	lds	r25, 0x0277
    10b6:	02 97       	sbiw	r24, 0x02	; 2
    10b8:	09 f4       	brne	.+2      	; 0x10bc <traverseToSort+0x8e>
    10ba:	06 dd       	rcall	.-1524   	; 0xac8 <turn>
    10bc:	ad df       	rcall	.-166    	; 0x1018 <front>
    10be:	80 91 a5 02 	lds	r24, 0x02A5
    10c2:	90 91 a6 02 	lds	r25, 0x02A6
    10c6:	81 70       	andi	r24, 0x01	; 1
    10c8:	90 78       	andi	r25, 0x80	; 128
    10ca:	99 23       	and	r25, r25
    10cc:	24 f4       	brge	.+8      	; 0x10d6 <traverseToSort+0xa8>
    10ce:	01 97       	sbiw	r24, 0x01	; 1
    10d0:	8e 6f       	ori	r24, 0xFE	; 254
    10d2:	9f 6f       	ori	r25, 0xFF	; 255
    10d4:	01 96       	adiw	r24, 0x01	; 1
    10d6:	04 96       	adiw	r24, 0x04	; 4
    10d8:	90 93 79 02 	sts	0x0279, r25
    10dc:	80 93 78 02 	sts	0x0278, r24
    10e0:	df 91       	pop	r29
    10e2:	cf 91       	pop	r28
    10e4:	08 95       	ret

000010e6 <position>:
    10e6:	0f 93       	push	r16
    10e8:	1f 93       	push	r17
    10ea:	cf 93       	push	r28
    10ec:	df 93       	push	r29
    10ee:	8c 01       	movw	r16, r24
    10f0:	eb 01       	movw	r28, r22
    10f2:	20 91 a5 02 	lds	r18, 0x02A5
    10f6:	30 91 a6 02 	lds	r19, 0x02A6
    10fa:	40 91 78 02 	lds	r20, 0x0278
    10fe:	50 91 79 02 	lds	r21, 0x0279
    1102:	24 17       	cp	r18, r20
    1104:	35 07       	cpc	r19, r21
    1106:	09 f0       	breq	.+2      	; 0x110a <position+0x24>
    1108:	6a c0       	rjmp	.+212    	; 0x11de <position+0xf8>
    110a:	c9 01       	movw	r24, r18
    110c:	22 30       	cpi	r18, 0x02	; 2
    110e:	31 05       	cpc	r19, r1
    1110:	30 f4       	brcc	.+12     	; 0x111e <position+0x38>
    1112:	40 91 76 02 	lds	r20, 0x0276
    1116:	50 91 77 02 	lds	r21, 0x0277
    111a:	45 2b       	or	r20, r21
    111c:	61 f0       	breq	.+24     	; 0x1136 <position+0x50>
    111e:	22 50       	subi	r18, 0x02	; 2
    1120:	31 09       	sbc	r19, r1
    1122:	22 30       	cpi	r18, 0x02	; 2
    1124:	31 05       	cpc	r19, r1
    1126:	68 f4       	brcc	.+26     	; 0x1142 <position+0x5c>
    1128:	40 91 76 02 	lds	r20, 0x0276
    112c:	50 91 77 02 	lds	r21, 0x0277
    1130:	42 30       	cpi	r20, 0x02	; 2
    1132:	51 05       	cpc	r21, r1
    1134:	31 f4       	brne	.+12     	; 0x1142 <position+0x5c>
    1136:	0c 17       	cp	r16, r28
    1138:	1d 07       	cpc	r17, r29
    113a:	09 f4       	brne	.+2      	; 0x113e <position+0x58>
    113c:	a8 c0       	rjmp	.+336    	; 0x128e <position+0x1a8>
    113e:	c4 dc       	rcall	.-1656   	; 0xac8 <turn>
    1140:	a6 c0       	rjmp	.+332    	; 0x128e <position+0x1a8>
    1142:	82 30       	cpi	r24, 0x02	; 2
    1144:	91 05       	cpc	r25, r1
    1146:	38 f4       	brcc	.+14     	; 0x1156 <position+0x70>
    1148:	40 91 76 02 	lds	r20, 0x0276
    114c:	50 91 77 02 	lds	r21, 0x0277
    1150:	42 30       	cpi	r20, 0x02	; 2
    1152:	51 05       	cpc	r21, r1
    1154:	49 f0       	breq	.+18     	; 0x1168 <position+0x82>
    1156:	22 30       	cpi	r18, 0x02	; 2
    1158:	31 05       	cpc	r19, r1
    115a:	60 f4       	brcc	.+24     	; 0x1174 <position+0x8e>
    115c:	40 91 76 02 	lds	r20, 0x0276
    1160:	50 91 77 02 	lds	r21, 0x0277
    1164:	45 2b       	or	r20, r21
    1166:	31 f4       	brne	.+12     	; 0x1174 <position+0x8e>
    1168:	0c 17       	cp	r16, r28
    116a:	1d 07       	cpc	r17, r29
    116c:	09 f0       	breq	.+2      	; 0x1170 <position+0x8a>
    116e:	8f c0       	rjmp	.+286    	; 0x128e <position+0x1a8>
    1170:	ab dc       	rcall	.-1706   	; 0xac8 <turn>
    1172:	8d c0       	rjmp	.+282    	; 0x128e <position+0x1a8>
    1174:	82 30       	cpi	r24, 0x02	; 2
    1176:	91 05       	cpc	r25, r1
    1178:	38 f4       	brcc	.+14     	; 0x1188 <position+0xa2>
    117a:	40 91 76 02 	lds	r20, 0x0276
    117e:	50 91 77 02 	lds	r21, 0x0277
    1182:	41 30       	cpi	r20, 0x01	; 1
    1184:	51 05       	cpc	r21, r1
    1186:	51 f0       	breq	.+20     	; 0x119c <position+0xb6>
    1188:	22 30       	cpi	r18, 0x02	; 2
    118a:	31 05       	cpc	r19, r1
    118c:	70 f4       	brcc	.+28     	; 0x11aa <position+0xc4>
    118e:	40 91 76 02 	lds	r20, 0x0276
    1192:	50 91 77 02 	lds	r21, 0x0277
    1196:	43 30       	cpi	r20, 0x03	; 3
    1198:	51 05       	cpc	r21, r1
    119a:	39 f4       	brne	.+14     	; 0x11aa <position+0xc4>
    119c:	0c 17       	cp	r16, r28
    119e:	1d 07       	cpc	r17, r29
    11a0:	11 f0       	breq	.+4      	; 0x11a6 <position+0xc0>
    11a2:	d0 dc       	rcall	.-1632   	; 0xb44 <turnRight>
    11a4:	74 c0       	rjmp	.+232    	; 0x128e <position+0x1a8>
    11a6:	a3 dc       	rcall	.-1722   	; 0xaee <turnLeft>
    11a8:	72 c0       	rjmp	.+228    	; 0x128e <position+0x1a8>
    11aa:	02 97       	sbiw	r24, 0x02	; 2
    11ac:	30 f4       	brcc	.+12     	; 0x11ba <position+0xd4>
    11ae:	80 91 76 02 	lds	r24, 0x0276
    11b2:	90 91 77 02 	lds	r25, 0x0277
    11b6:	03 97       	sbiw	r24, 0x03	; 3
    11b8:	59 f0       	breq	.+22     	; 0x11d0 <position+0xea>
    11ba:	22 30       	cpi	r18, 0x02	; 2
    11bc:	31 05       	cpc	r19, r1
    11be:	08 f0       	brcs	.+2      	; 0x11c2 <position+0xdc>
    11c0:	66 c0       	rjmp	.+204    	; 0x128e <position+0x1a8>
    11c2:	80 91 76 02 	lds	r24, 0x0276
    11c6:	90 91 77 02 	lds	r25, 0x0277
    11ca:	01 97       	sbiw	r24, 0x01	; 1
    11cc:	09 f0       	breq	.+2      	; 0x11d0 <position+0xea>
    11ce:	5f c0       	rjmp	.+190    	; 0x128e <position+0x1a8>
    11d0:	0c 17       	cp	r16, r28
    11d2:	1d 07       	cpc	r17, r29
    11d4:	11 f4       	brne	.+4      	; 0x11da <position+0xf4>
    11d6:	b6 dc       	rcall	.-1684   	; 0xb44 <turnRight>
    11d8:	5a c0       	rjmp	.+180    	; 0x128e <position+0x1a8>
    11da:	89 dc       	rcall	.-1774   	; 0xaee <turnLeft>
    11dc:	58 c0       	rjmp	.+176    	; 0x128e <position+0x1a8>
    11de:	80 91 76 02 	lds	r24, 0x0276
    11e2:	90 91 77 02 	lds	r25, 0x0277
    11e6:	00 97       	sbiw	r24, 0x00	; 0
    11e8:	19 f0       	breq	.+6      	; 0x11f0 <position+0x10a>
    11ea:	02 97       	sbiw	r24, 0x02	; 2
    11ec:	81 f5       	brne	.+96     	; 0x124e <position+0x168>
    11ee:	04 c0       	rjmp	.+8      	; 0x11f8 <position+0x112>
    11f0:	22 30       	cpi	r18, 0x02	; 2
    11f2:	31 05       	cpc	r19, r1
    11f4:	a8 f4       	brcc	.+42     	; 0x1220 <position+0x13a>
    11f6:	05 c0       	rjmp	.+10     	; 0x1202 <position+0x11c>
    11f8:	22 50       	subi	r18, 0x02	; 2
    11fa:	31 09       	sbc	r19, r1
    11fc:	22 30       	cpi	r18, 0x02	; 2
    11fe:	31 05       	cpc	r19, r1
    1200:	78 f4       	brcc	.+30     	; 0x1220 <position+0x13a>
    1202:	44 50       	subi	r20, 0x04	; 4
    1204:	51 09       	sbc	r21, r1
    1206:	42 30       	cpi	r20, 0x02	; 2
    1208:	51 05       	cpc	r21, r1
    120a:	10 f0       	brcs	.+4      	; 0x1210 <position+0x12a>
    120c:	70 dc       	rcall	.-1824   	; 0xaee <turnLeft>
    120e:	04 df       	rcall	.-504    	; 0x1018 <front>
    1210:	0c 17       	cp	r16, r28
    1212:	1d 07       	cpc	r17, r29
    1214:	11 f4       	brne	.+4      	; 0x121a <position+0x134>
    1216:	00 df       	rcall	.-512    	; 0x1018 <front>
    1218:	32 c0       	rjmp	.+100    	; 0x127e <position+0x198>
    121a:	fe de       	rcall	.-516    	; 0x1018 <front>
    121c:	55 dc       	rcall	.-1878   	; 0xac8 <turn>
    121e:	2f c0       	rjmp	.+94     	; 0x127e <position+0x198>
    1220:	0c 17       	cp	r16, r28
    1222:	1d 07       	cpc	r17, r29
    1224:	59 f4       	brne	.+22     	; 0x123c <position+0x156>
    1226:	44 50       	subi	r20, 0x04	; 4
    1228:	51 09       	sbc	r21, r1
    122a:	42 30       	cpi	r20, 0x02	; 2
    122c:	51 05       	cpc	r21, r1
    122e:	18 f0       	brcs	.+6      	; 0x1236 <position+0x150>
    1230:	5e dc       	rcall	.-1860   	; 0xaee <turnLeft>
    1232:	f2 de       	rcall	.-540    	; 0x1018 <front>
    1234:	01 c0       	rjmp	.+2      	; 0x1238 <position+0x152>
    1236:	48 dc       	rcall	.-1904   	; 0xac8 <turn>
    1238:	ef de       	rcall	.-546    	; 0x1018 <front>
    123a:	21 c0       	rjmp	.+66     	; 0x127e <position+0x198>
    123c:	44 50       	subi	r20, 0x04	; 4
    123e:	51 09       	sbc	r21, r1
    1240:	42 30       	cpi	r20, 0x02	; 2
    1242:	51 05       	cpc	r21, r1
    1244:	10 f0       	brcs	.+4      	; 0x124a <position+0x164>
    1246:	53 dc       	rcall	.-1882   	; 0xaee <turnLeft>
    1248:	e7 de       	rcall	.-562    	; 0x1018 <front>
    124a:	e6 de       	rcall	.-564    	; 0x1018 <front>
    124c:	18 c0       	rjmp	.+48     	; 0x127e <position+0x198>
    124e:	06 17       	cp	r16, r22
    1250:	17 07       	cpc	r17, r23
    1252:	59 f4       	brne	.+22     	; 0x126a <position+0x184>
    1254:	21 15       	cp	r18, r1
    1256:	31 05       	cpc	r19, r1
    1258:	19 f0       	breq	.+6      	; 0x1260 <position+0x17a>
    125a:	23 30       	cpi	r18, 0x03	; 3
    125c:	31 05       	cpc	r19, r1
    125e:	11 f4       	brne	.+4      	; 0x1264 <position+0x17e>
    1260:	71 dc       	rcall	.-1822   	; 0xb44 <turnRight>
    1262:	01 c0       	rjmp	.+2      	; 0x1266 <position+0x180>
    1264:	44 dc       	rcall	.-1912   	; 0xaee <turnLeft>
    1266:	d8 de       	rcall	.-592    	; 0x1018 <front>
    1268:	0a c0       	rjmp	.+20     	; 0x127e <position+0x198>
    126a:	21 15       	cp	r18, r1
    126c:	31 05       	cpc	r19, r1
    126e:	19 f0       	breq	.+6      	; 0x1276 <position+0x190>
    1270:	23 30       	cpi	r18, 0x03	; 3
    1272:	31 05       	cpc	r19, r1
    1274:	11 f4       	brne	.+4      	; 0x127a <position+0x194>
    1276:	66 dc       	rcall	.-1844   	; 0xb44 <turnRight>
    1278:	01 c0       	rjmp	.+2      	; 0x127c <position+0x196>
    127a:	39 dc       	rcall	.-1934   	; 0xaee <turnLeft>
    127c:	cd de       	rcall	.-614    	; 0x1018 <front>
    127e:	80 91 a5 02 	lds	r24, 0x02A5
    1282:	90 91 a6 02 	lds	r25, 0x02A6
    1286:	90 93 79 02 	sts	0x0279, r25
    128a:	80 93 78 02 	sts	0x0278, r24
    128e:	df 91       	pop	r29
    1290:	cf 91       	pop	r28
    1292:	1f 91       	pop	r17
    1294:	0f 91       	pop	r16
    1296:	08 95       	ret

00001298 <pick>:
	servo_2(0);
	else if (side == 1)
	servo_3(0);
}
void pick(int side)	//TODO delay
{
    1298:	cf 93       	push	r28
    129a:	df 93       	push	r29
    129c:	ec 01       	movw	r28, r24
	if(side==0)
    129e:	00 97       	sbiw	r24, 0x00	; 0
    12a0:	21 f4       	brne	.+8      	; 0x12aa <pick+0x12>
	lcd("pickRight");
    12a2:	8e e2       	ldi	r24, 0x2E	; 46
    12a4:	92 e0       	ldi	r25, 0x02	; 2
    12a6:	fa dc       	rcall	.-1548   	; 0xc9c <lcd>
    12a8:	03 c0       	rjmp	.+6      	; 0x12b0 <pick+0x18>
	else
	lcd("pickLeft");
    12aa:	88 e3       	ldi	r24, 0x38	; 56
    12ac:	92 e0       	ldi	r25, 0x02	; 2
    12ae:	f6 dc       	rcall	.-1556   	; 0xc9c <lcd>
	elevate(0, side);//lower
    12b0:	6c 2f       	mov	r22, r28
    12b2:	80 e0       	ldi	r24, 0x00	; 0
    12b4:	5a dc       	rcall	.-1868   	; 0xb6a <elevate>
	open(side);
    12b6:	8c 2f       	mov	r24, r28
    12b8:	65 dc       	rcall	.-1846   	; 0xb84 <open>
	close(side);
    12ba:	8c 2f       	mov	r24, r28
    12bc:	73 dc       	rcall	.-1818   	; 0xba4 <close>
	elevate(45, side);//mid
    12be:	6c 2f       	mov	r22, r28
    12c0:	8d e2       	ldi	r24, 0x2D	; 45
    12c2:	53 dc       	rcall	.-1882   	; 0xb6a <elevate>
	armCount--;
    12c4:	80 91 02 02 	lds	r24, 0x0202
    12c8:	90 91 03 02 	lds	r25, 0x0203
    12cc:	01 97       	sbiw	r24, 0x01	; 1
    12ce:	90 93 03 02 	sts	0x0203, r25
    12d2:	80 93 02 02 	sts	0x0202, r24
}
    12d6:	df 91       	pop	r29
    12d8:	cf 91       	pop	r28
    12da:	08 95       	ret

000012dc <pickNode>:
void pickNode(int armNo, int side)
{
    12dc:	0f 93       	push	r16
    12de:	1f 93       	push	r17
    12e0:	cf 93       	push	r28
    12e2:	df 93       	push	r29
    12e4:	8c 01       	movw	r16, r24
    12e6:	eb 01       	movw	r28, r22
	arm[armNo] = term[ct][side];
    12e8:	fc 01       	movw	r30, r24
    12ea:	ee 0f       	add	r30, r30
    12ec:	ff 1f       	adc	r31, r31
    12ee:	e3 53       	subi	r30, 0x33	; 51
    12f0:	fd 4f       	sbci	r31, 0xFD	; 253
    12f2:	a0 91 a5 02 	lds	r26, 0x02A5
    12f6:	b0 91 a6 02 	lds	r27, 0x02A6
    12fa:	aa 0f       	add	r26, r26
    12fc:	bb 1f       	adc	r27, r27
    12fe:	a6 0f       	add	r26, r22
    1300:	b7 1f       	adc	r27, r23
    1302:	aa 0f       	add	r26, r26
    1304:	bb 1f       	adc	r27, r27
    1306:	a7 55       	subi	r26, 0x57	; 87
    1308:	bd 4f       	sbci	r27, 0xFD	; 253
    130a:	8d 91       	ld	r24, X+
    130c:	9c 91       	ld	r25, X
    130e:	91 83       	std	Z+1, r25	; 0x01
    1310:	80 83       	st	Z, r24
	position(armNo,side);
    1312:	c8 01       	movw	r24, r16
    1314:	e8 de       	rcall	.-560    	; 0x10e6 <position>
	pick(armNo);
    1316:	c8 01       	movw	r24, r16
    1318:	bf df       	rcall	.-130    	; 0x1298 <pick>
	term[ct][side] = -1;
    131a:	80 91 a5 02 	lds	r24, 0x02A5
    131e:	90 91 a6 02 	lds	r25, 0x02A6
    1322:	88 0f       	add	r24, r24
    1324:	99 1f       	adc	r25, r25
    1326:	c8 0f       	add	r28, r24
    1328:	d9 1f       	adc	r29, r25
    132a:	cc 0f       	add	r28, r28
    132c:	dd 1f       	adc	r29, r29
    132e:	c7 55       	subi	r28, 0x57	; 87
    1330:	dd 4f       	sbci	r29, 0xFD	; 253
    1332:	8f ef       	ldi	r24, 0xFF	; 255
    1334:	9f ef       	ldi	r25, 0xFF	; 255
    1336:	99 83       	std	Y+1, r25	; 0x01
    1338:	88 83       	st	Y, r24
	//..printf("Arm %d picked %d from term[%d][%d]\n", armNo, arm[armNo], ct, side);
}
    133a:	df 91       	pop	r29
    133c:	cf 91       	pop	r28
    133e:	1f 91       	pop	r17
    1340:	0f 91       	pop	r16
    1342:	08 95       	ret

00001344 <dropPickup>:
	arm[armNo] = -1;
	//..printf("Arm %d dropped %d on sort[%d]\n", armNo, sort[sortNo], sortNo);
}

void dropPickup(int a1)
{
    1344:	cf 93       	push	r28
    1346:	df 93       	push	r29
	int a2 = (a1 + 1) % 2;
    1348:	9c 01       	movw	r18, r24
    134a:	2f 5f       	subi	r18, 0xFF	; 255
    134c:	3f 4f       	sbci	r19, 0xFF	; 255
    134e:	21 70       	andi	r18, 0x01	; 1
    1350:	30 78       	andi	r19, 0x80	; 128
    1352:	33 23       	and	r19, r19
    1354:	34 f4       	brge	.+12     	; 0x1362 <dropPickup+0x1e>
    1356:	21 50       	subi	r18, 0x01	; 1
    1358:	31 09       	sbc	r19, r1
    135a:	2e 6f       	ori	r18, 0xFE	; 254
    135c:	3f 6f       	ori	r19, 0xFF	; 255
    135e:	2f 5f       	subi	r18, 0xFF	; 255
    1360:	3f 4f       	sbci	r19, 0xFF	; 255
    1362:	d2 2f       	mov	r29, r18
    1364:	c3 2f       	mov	r28, r19
	if ((term[ct][a2] == color[ct] || term[ct][a2] != color[adj]) && (term[ct][a1] != color[ct] && term[ct][a1] != -1))
    1366:	e0 91 a5 02 	lds	r30, 0x02A5
    136a:	f0 91 a6 02 	lds	r31, 0x02A6
    136e:	af 01       	movw	r20, r30
    1370:	44 0f       	add	r20, r20
    1372:	55 1f       	adc	r21, r21
    1374:	24 0f       	add	r18, r20
    1376:	35 1f       	adc	r19, r21
    1378:	d9 01       	movw	r26, r18
    137a:	aa 0f       	add	r26, r26
    137c:	bb 1f       	adc	r27, r27
    137e:	a7 55       	subi	r26, 0x57	; 87
    1380:	bd 4f       	sbci	r27, 0xFD	; 253
    1382:	2d 91       	ld	r18, X+
    1384:	3c 91       	ld	r19, X
    1386:	da 01       	movw	r26, r20
    1388:	a7 54       	subi	r26, 0x47	; 71
    138a:	bd 4f       	sbci	r27, 0xFD	; 253
    138c:	4d 91       	ld	r20, X+
    138e:	5c 91       	ld	r21, X
    1390:	24 17       	cp	r18, r20
    1392:	35 07       	cpc	r19, r21
    1394:	69 f0       	breq	.+26     	; 0x13b0 <dropPickup+0x6c>
    1396:	a0 91 c9 02 	lds	r26, 0x02C9
    139a:	b0 91 ca 02 	lds	r27, 0x02CA
    139e:	aa 0f       	add	r26, r26
    13a0:	bb 1f       	adc	r27, r27
    13a2:	a7 54       	subi	r26, 0x47	; 71
    13a4:	bd 4f       	sbci	r27, 0xFD	; 253
    13a6:	6d 91       	ld	r22, X+
    13a8:	7c 91       	ld	r23, X
    13aa:	26 17       	cp	r18, r22
    13ac:	37 07       	cpc	r19, r23
    13ae:	a9 f0       	breq	.+42     	; 0x13da <dropPickup+0x96>
    13b0:	ee 0f       	add	r30, r30
    13b2:	ff 1f       	adc	r31, r31
    13b4:	e8 0f       	add	r30, r24
    13b6:	f9 1f       	adc	r31, r25
    13b8:	ee 0f       	add	r30, r30
    13ba:	ff 1f       	adc	r31, r31
    13bc:	e7 55       	subi	r30, 0x57	; 87
    13be:	fd 4f       	sbci	r31, 0xFD	; 253
    13c0:	01 90       	ld	r0, Z+
    13c2:	f0 81       	ld	r31, Z
    13c4:	e0 2d       	mov	r30, r0
    13c6:	4e 17       	cp	r20, r30
    13c8:	5f 07       	cpc	r21, r31
    13ca:	39 f0       	breq	.+14     	; 0x13da <dropPickup+0x96>
    13cc:	31 96       	adiw	r30, 0x01	; 1
    13ce:	29 f0       	breq	.+10     	; 0x13da <dropPickup+0x96>
	pickNode(a2, a1);
    13d0:	bc 01       	movw	r22, r24
    13d2:	8d 2f       	mov	r24, r29
    13d4:	9c 2f       	mov	r25, r28
    13d6:	82 df       	rcall	.-252    	; 0x12dc <pickNode>
    13d8:	0b c0       	rjmp	.+22     	; 0x13f0 <dropPickup+0xac>
	else		if (term[ct][a2] != color[ct] && term[ct][a2] != -1)
    13da:	24 17       	cp	r18, r20
    13dc:	35 07       	cpc	r19, r21
    13de:	41 f0       	breq	.+16     	; 0x13f0 <dropPickup+0xac>
    13e0:	2f 3f       	cpi	r18, 0xFF	; 255
    13e2:	3f 4f       	sbci	r19, 0xFF	; 255
    13e4:	29 f0       	breq	.+10     	; 0x13f0 <dropPickup+0xac>
	pickNode(a2, a2);
    13e6:	6d 2f       	mov	r22, r29
    13e8:	7c 2f       	mov	r23, r28
    13ea:	8d 2f       	mov	r24, r29
    13ec:	9c 2f       	mov	r25, r28
    13ee:	76 df       	rcall	.-276    	; 0x12dc <pickNode>
}
    13f0:	df 91       	pop	r29
    13f2:	cf 91       	pop	r28
    13f4:	08 95       	ret

000013f6 <pickSort>:
	term[ct][side] = -1;
	//..printf("Arm %d picked %d from term[%d][%d]\n", armNo, arm[armNo], ct, side);
}

void pickSort(int armNo, int sortNo)
{
    13f6:	0f 93       	push	r16
    13f8:	1f 93       	push	r17
    13fa:	cf 93       	push	r28
    13fc:	df 93       	push	r29
    13fe:	ec 01       	movw	r28, r24
    1400:	8b 01       	movw	r16, r22
	lcd("pickSort");
    1402:	81 e4       	ldi	r24, 0x41	; 65
    1404:	92 e0       	ldi	r25, 0x02	; 2
    1406:	4a dc       	rcall	.-1900   	; 0xc9c <lcd>
	arm[armNo] = sort[sortNo];
    1408:	fe 01       	movw	r30, r28
    140a:	ee 0f       	add	r30, r30
    140c:	ff 1f       	adc	r31, r31
    140e:	e3 53       	subi	r30, 0x33	; 51
    1410:	fd 4f       	sbci	r31, 0xFD	; 253
    1412:	d8 01       	movw	r26, r16
    1414:	aa 0f       	add	r26, r26
    1416:	bb 1f       	adc	r27, r27
    1418:	af 55       	subi	r26, 0x5F	; 95
    141a:	bd 4f       	sbci	r27, 0xFD	; 253
    141c:	8d 91       	ld	r24, X+
    141e:	9c 91       	ld	r25, X
    1420:	91 83       	std	Z+1, r25	; 0x01
    1422:	80 83       	st	Z, r24
	if (((armNo == sortNo) && dir == 0) || ((armNo != sortNo) && dir == 2))
    1424:	c0 17       	cp	r28, r16
    1426:	d1 07       	cpc	r29, r17
    1428:	39 f4       	brne	.+14     	; 0x1438 <pickSort+0x42>
    142a:	80 91 76 02 	lds	r24, 0x0276
    142e:	90 91 77 02 	lds	r25, 0x0277
    1432:	89 2b       	or	r24, r25
    1434:	49 f4       	brne	.+18     	; 0x1448 <pickSort+0x52>
    1436:	06 c0       	rjmp	.+12     	; 0x1444 <pickSort+0x4e>
    1438:	80 91 76 02 	lds	r24, 0x0276
    143c:	90 91 77 02 	lds	r25, 0x0277
    1440:	02 97       	sbiw	r24, 0x02	; 2
    1442:	11 f4       	brne	.+4      	; 0x1448 <pickSort+0x52>
	turn();
    1444:	41 db       	rcall	.-2430   	; 0xac8 <turn>
    1446:	0c c0       	rjmp	.+24     	; 0x1460 <pickSort+0x6a>
	else
	{
		if (dir == 1 || dir == 3)
    1448:	80 91 76 02 	lds	r24, 0x0276
    144c:	90 91 77 02 	lds	r25, 0x0277
    1450:	8d 7f       	andi	r24, 0xFD	; 253
    1452:	01 97       	sbiw	r24, 0x01	; 1
    1454:	29 f4       	brne	.+10     	; 0x1460 <pickSort+0x6a>
		{
			if (armNo == 0)
    1456:	20 97       	sbiw	r28, 0x00	; 0
    1458:	11 f4       	brne	.+4      	; 0x145e <pickSort+0x68>
			turnLeft();
    145a:	49 db       	rcall	.-2414   	; 0xaee <turnLeft>
    145c:	01 c0       	rjmp	.+2      	; 0x1460 <pickSort+0x6a>
			else turnRight();
    145e:	72 db       	rcall	.-2332   	; 0xb44 <turnRight>
		}
	}
	pick(armNo);
    1460:	ce 01       	movw	r24, r28
    1462:	1a df       	rcall	.-460    	; 0x1298 <pick>
	sort[sortNo] = -1;
    1464:	f8 01       	movw	r30, r16
    1466:	ee 0f       	add	r30, r30
    1468:	ff 1f       	adc	r31, r31
    146a:	ef 55       	subi	r30, 0x5F	; 95
    146c:	fd 4f       	sbci	r31, 0xFD	; 253
    146e:	8f ef       	ldi	r24, 0xFF	; 255
    1470:	9f ef       	ldi	r25, 0xFF	; 255
    1472:	91 83       	std	Z+1, r25	; 0x01
    1474:	80 83       	st	Z, r24
	//..printf("Arm %d picked %d from sort[%d]\n", armNo, arm[armNo], sortNo);
}
    1476:	df 91       	pop	r29
    1478:	cf 91       	pop	r28
    147a:	1f 91       	pop	r17
    147c:	0f 91       	pop	r16
    147e:	08 95       	ret

00001480 <drop>:
		}
	}
}

void drop(int side)	//TODO delay
{
    1480:	cf 93       	push	r28
    1482:	df 93       	push	r29
    1484:	ec 01       	movw	r28, r24
	if(side==0)
    1486:	00 97       	sbiw	r24, 0x00	; 0
    1488:	21 f4       	brne	.+8      	; 0x1492 <drop+0x12>
	lcd("dropRight");
    148a:	8a e4       	ldi	r24, 0x4A	; 74
    148c:	92 e0       	ldi	r25, 0x02	; 2
    148e:	06 dc       	rcall	.-2036   	; 0xc9c <lcd>
    1490:	03 c0       	rjmp	.+6      	; 0x1498 <drop+0x18>
	else
	lcd("dropLeft");
    1492:	84 e5       	ldi	r24, 0x54	; 84
    1494:	92 e0       	ldi	r25, 0x02	; 2
    1496:	02 dc       	rcall	.-2044   	; 0xc9c <lcd>
	elevate(0, side);//lower
    1498:	6c 2f       	mov	r22, r28
    149a:	80 e0       	ldi	r24, 0x00	; 0
    149c:	66 db       	rcall	.-2356   	; 0xb6a <elevate>
	open(side);
    149e:	8c 2f       	mov	r24, r28
    14a0:	71 db       	rcall	.-2334   	; 0xb84 <open>
	elevate(45, side);//mid
    14a2:	6c 2f       	mov	r22, r28
    14a4:	8d e2       	ldi	r24, 0x2D	; 45
    14a6:	61 db       	rcall	.-2366   	; 0xb6a <elevate>
	close(side);
    14a8:	8c 2f       	mov	r24, r28
    14aa:	7c db       	rcall	.-2312   	; 0xba4 <close>
	armCount++;
    14ac:	80 91 02 02 	lds	r24, 0x0202
    14b0:	90 91 03 02 	lds	r25, 0x0203
    14b4:	01 96       	adiw	r24, 0x01	; 1
    14b6:	90 93 03 02 	sts	0x0203, r25
    14ba:	80 93 02 02 	sts	0x0202, r24
}
    14be:	df 91       	pop	r29
    14c0:	cf 91       	pop	r28
    14c2:	08 95       	ret

000014c4 <nodeDrop>:
void nodeDrop(int armNo, int side)
{
    14c4:	0f 93       	push	r16
    14c6:	1f 93       	push	r17
    14c8:	cf 93       	push	r28
    14ca:	df 93       	push	r29
    14cc:	ec 01       	movw	r28, r24
	term[ct][side] = arm[armNo];
    14ce:	e0 91 a5 02 	lds	r30, 0x02A5
    14d2:	f0 91 a6 02 	lds	r31, 0x02A6
    14d6:	ee 0f       	add	r30, r30
    14d8:	ff 1f       	adc	r31, r31
    14da:	e6 0f       	add	r30, r22
    14dc:	f7 1f       	adc	r31, r23
    14de:	ee 0f       	add	r30, r30
    14e0:	ff 1f       	adc	r31, r31
    14e2:	e7 55       	subi	r30, 0x57	; 87
    14e4:	fd 4f       	sbci	r31, 0xFD	; 253
    14e6:	8c 01       	movw	r16, r24
    14e8:	00 0f       	add	r16, r16
    14ea:	11 1f       	adc	r17, r17
    14ec:	03 53       	subi	r16, 0x33	; 51
    14ee:	1d 4f       	sbci	r17, 0xFD	; 253
    14f0:	d8 01       	movw	r26, r16
    14f2:	8d 91       	ld	r24, X+
    14f4:	9c 91       	ld	r25, X
    14f6:	91 83       	std	Z+1, r25	; 0x01
    14f8:	80 83       	st	Z, r24
	position(armNo,side);
    14fa:	ce 01       	movw	r24, r28
    14fc:	f4 dd       	rcall	.-1048   	; 0x10e6 <position>
	drop(armNo);
    14fe:	ce 01       	movw	r24, r28
    1500:	bf df       	rcall	.-130    	; 0x1480 <drop>
	arm[armNo] = -1;
    1502:	8f ef       	ldi	r24, 0xFF	; 255
    1504:	9f ef       	ldi	r25, 0xFF	; 255
    1506:	f8 01       	movw	r30, r16
    1508:	91 83       	std	Z+1, r25	; 0x01
    150a:	80 83       	st	Z, r24
	//printf("Arm %d dropped %d on term[%d][%d]\n", armNo, term[ct][side], ct, side);
	sorted++;
    150c:	80 91 7c 02 	lds	r24, 0x027C
    1510:	90 91 7d 02 	lds	r25, 0x027D
    1514:	01 96       	adiw	r24, 0x01	; 1
    1516:	90 93 7d 02 	sts	0x027D, r25
    151a:	80 93 7c 02 	sts	0x027C, r24
}
    151e:	df 91       	pop	r29
    1520:	cf 91       	pop	r28
    1522:	1f 91       	pop	r17
    1524:	0f 91       	pop	r16
    1526:	08 95       	ret

00001528 <sortDrop>:
void sortDrop(int armNo, int sortNo)
{
    1528:	cf 93       	push	r28
    152a:	df 93       	push	r29
    152c:	ec 01       	movw	r28, r24
	sort[sortNo] = arm[armNo];
    152e:	fb 01       	movw	r30, r22
    1530:	ee 0f       	add	r30, r30
    1532:	ff 1f       	adc	r31, r31
    1534:	ef 55       	subi	r30, 0x5F	; 95
    1536:	fd 4f       	sbci	r31, 0xFD	; 253
    1538:	dc 01       	movw	r26, r24
    153a:	aa 0f       	add	r26, r26
    153c:	bb 1f       	adc	r27, r27
    153e:	a3 53       	subi	r26, 0x33	; 51
    1540:	bd 4f       	sbci	r27, 0xFD	; 253
    1542:	8d 91       	ld	r24, X+
    1544:	9c 91       	ld	r25, X
    1546:	91 83       	std	Z+1, r25	; 0x01
    1548:	80 83       	st	Z, r24
	if (((armNo == sortNo) && dir == 0) || ((armNo != sortNo) && dir == 2))
    154a:	c6 17       	cp	r28, r22
    154c:	d7 07       	cpc	r29, r23
    154e:	39 f4       	brne	.+14     	; 0x155e <sortDrop+0x36>
    1550:	80 91 76 02 	lds	r24, 0x0276
    1554:	90 91 77 02 	lds	r25, 0x0277
    1558:	89 2b       	or	r24, r25
    155a:	49 f4       	brne	.+18     	; 0x156e <sortDrop+0x46>
    155c:	06 c0       	rjmp	.+12     	; 0x156a <sortDrop+0x42>
    155e:	80 91 76 02 	lds	r24, 0x0276
    1562:	90 91 77 02 	lds	r25, 0x0277
    1566:	02 97       	sbiw	r24, 0x02	; 2
    1568:	11 f4       	brne	.+4      	; 0x156e <sortDrop+0x46>
	turn();
    156a:	ae da       	rcall	.-2724   	; 0xac8 <turn>
    156c:	0c c0       	rjmp	.+24     	; 0x1586 <sortDrop+0x5e>
	else
	{
		if (dir == 1 || dir == 3)
    156e:	80 91 76 02 	lds	r24, 0x0276
    1572:	90 91 77 02 	lds	r25, 0x0277
    1576:	8d 7f       	andi	r24, 0xFD	; 253
    1578:	01 97       	sbiw	r24, 0x01	; 1
    157a:	29 f4       	brne	.+10     	; 0x1586 <sortDrop+0x5e>
		{
			if (armNo == 0)
    157c:	20 97       	sbiw	r28, 0x00	; 0
    157e:	11 f4       	brne	.+4      	; 0x1584 <sortDrop+0x5c>
			turnLeft();
    1580:	b6 da       	rcall	.-2708   	; 0xaee <turnLeft>
    1582:	01 c0       	rjmp	.+2      	; 0x1586 <sortDrop+0x5e>
			else turnRight();
    1584:	df da       	rcall	.-2626   	; 0xb44 <turnRight>
		}
	}
	drop(armNo);
    1586:	ce 01       	movw	r24, r28
    1588:	7b df       	rcall	.-266    	; 0x1480 <drop>
	arm[armNo] = -1;
    158a:	cc 0f       	add	r28, r28
    158c:	dd 1f       	adc	r29, r29
    158e:	c3 53       	subi	r28, 0x33	; 51
    1590:	dd 4f       	sbci	r29, 0xFD	; 253
    1592:	8f ef       	ldi	r24, 0xFF	; 255
    1594:	9f ef       	ldi	r25, 0xFF	; 255
    1596:	99 83       	std	Y+1, r25	; 0x01
    1598:	88 83       	st	Y, r24
	//..printf("Arm %d dropped %d on sort[%d]\n", armNo, sort[sortNo], sortNo);
}
    159a:	df 91       	pop	r29
    159c:	cf 91       	pop	r28
    159e:	08 95       	ret

000015a0 <newSort>:
		ot = ct;
	}
}

void newSort()
{
    15a0:	ef 92       	push	r14
    15a2:	ff 92       	push	r15
    15a4:	0f 93       	push	r16
    15a6:	1f 93       	push	r17
    15a8:	cf 93       	push	r28
    15aa:	df 93       	push	r29
	int t1, t2, a1, a2;
	if (arm[0] != -1)
    15ac:	20 91 cd 02 	lds	r18, 0x02CD
    15b0:	30 91 ce 02 	lds	r19, 0x02CE
    15b4:	2f 3f       	cpi	r18, 0xFF	; 255
    15b6:	4f ef       	ldi	r20, 0xFF	; 255
    15b8:	34 07       	cpc	r19, r20
    15ba:	39 f0       	breq	.+14     	; 0x15ca <newSort+0x2a>
	a1 = indicator[arm[0]];
    15bc:	f9 01       	movw	r30, r18
    15be:	ee 0f       	add	r30, r30
    15c0:	ff 1f       	adc	r31, r31
    15c2:	ef 53       	subi	r30, 0x3F	; 63
    15c4:	fd 4f       	sbci	r31, 0xFD	; 253
    15c6:	c0 81       	ld	r28, Z
    15c8:	d1 81       	ldd	r29, Z+1	; 0x01
	if (arm[1] != -1)
    15ca:	e0 91 cf 02 	lds	r30, 0x02CF
    15ce:	f0 91 d0 02 	lds	r31, 0x02D0
    15d2:	ef 3f       	cpi	r30, 0xFF	; 255
    15d4:	6f ef       	ldi	r22, 0xFF	; 255
    15d6:	f6 07       	cpc	r31, r22
    15d8:	09 f4       	brne	.+2      	; 0x15dc <newSort+0x3c>
    15da:	5d c1       	rjmp	.+698    	; 0x1896 <newSort+0x2f6>
	a2 = indicator[arm[1]];
    15dc:	df 01       	movw	r26, r30
    15de:	aa 0f       	add	r26, r26
    15e0:	bb 1f       	adc	r27, r27
    15e2:	af 53       	subi	r26, 0x3F	; 63
    15e4:	bd 4f       	sbci	r27, 0xFD	; 253
    15e6:	0d 91       	ld	r16, X+
    15e8:	1c 91       	ld	r17, X

	t1 = (ct + 1) % 2;
    15ea:	80 91 a5 02 	lds	r24, 0x02A5
    15ee:	90 91 a6 02 	lds	r25, 0x02A6
    15f2:	01 96       	adiw	r24, 0x01	; 1
    15f4:	81 70       	andi	r24, 0x01	; 1
    15f6:	90 78       	andi	r25, 0x80	; 128
    15f8:	99 23       	and	r25, r25
    15fa:	24 f4       	brge	.+8      	; 0x1604 <newSort+0x64>
    15fc:	01 97       	sbiw	r24, 0x01	; 1
    15fe:	8e 6f       	ori	r24, 0xFE	; 254
    1600:	9f 6f       	ori	r25, 0xFF	; 255
    1602:	01 96       	adiw	r24, 0x01	; 1
    1604:	bc 01       	movw	r22, r24
	t2 = t1 + 2;
    1606:	02 96       	adiw	r24, 0x02	; 2
	if (arm[0] != -1 || arm[1] != -1)
	{
		ct = a1;
    1608:	d0 93 a6 02 	sts	0x02A6, r29
    160c:	c0 93 a5 02 	sts	0x02A5, r28
		if (arm[0] != -1 && (term[a1][0] == -1 || term[a1][1] == -1))
    1610:	2f 3f       	cpi	r18, 0xFF	; 255
    1612:	af ef       	ldi	r26, 0xFF	; 255
    1614:	3a 07       	cpc	r19, r26
    1616:	e1 f1       	breq	.+120    	; 0x1690 <newSort+0xf0>
    1618:	de 01       	movw	r26, r28
    161a:	aa 0f       	add	r26, r26
    161c:	bb 1f       	adc	r27, r27
    161e:	aa 0f       	add	r26, r26
    1620:	bb 1f       	adc	r27, r27
    1622:	a7 55       	subi	r26, 0x57	; 87
    1624:	bd 4f       	sbci	r27, 0xFD	; 253
    1626:	4d 91       	ld	r20, X+
    1628:	5c 91       	ld	r21, X
    162a:	4f 3f       	cpi	r20, 0xFF	; 255
    162c:	5f 4f       	sbci	r21, 0xFF	; 255
    162e:	71 f0       	breq	.+28     	; 0x164c <newSort+0xac>
    1630:	de 01       	movw	r26, r28
    1632:	aa 0f       	add	r26, r26
    1634:	bb 1f       	adc	r27, r27
    1636:	aa 0f       	add	r26, r26
    1638:	bb 1f       	adc	r27, r27
    163a:	a7 55       	subi	r26, 0x57	; 87
    163c:	bd 4f       	sbci	r27, 0xFD	; 253
    163e:	12 96       	adiw	r26, 0x02	; 2
    1640:	4d 91       	ld	r20, X+
    1642:	5c 91       	ld	r21, X
    1644:	13 97       	sbiw	r26, 0x03	; 3
    1646:	4f 3f       	cpi	r20, 0xFF	; 255
    1648:	5f 4f       	sbci	r21, 0xFF	; 255
    164a:	11 f5       	brne	.+68     	; 0x1690 <newSort+0xf0>
		{
			if (arm[1] == -1)
    164c:	31 96       	adiw	r30, 0x01	; 1
    164e:	09 f0       	breq	.+2      	; 0x1652 <newSort+0xb2>
    1650:	10 c1       	rjmp	.+544    	; 0x1872 <newSort+0x2d2>
			{
				if (sort[t1] == color[t1] || sort[t1] == color[t2])
    1652:	66 0f       	add	r22, r22
    1654:	77 1f       	adc	r23, r23
    1656:	fb 01       	movw	r30, r22
    1658:	ef 55       	subi	r30, 0x5F	; 95
    165a:	fd 4f       	sbci	r31, 0xFD	; 253
    165c:	20 81       	ld	r18, Z
    165e:	31 81       	ldd	r19, Z+1	; 0x01
    1660:	fb 01       	movw	r30, r22
    1662:	e7 54       	subi	r30, 0x47	; 71
    1664:	fd 4f       	sbci	r31, 0xFD	; 253
    1666:	40 81       	ld	r20, Z
    1668:	51 81       	ldd	r21, Z+1	; 0x01
    166a:	24 17       	cp	r18, r20
    166c:	35 07       	cpc	r19, r21
    166e:	59 f0       	breq	.+22     	; 0x1686 <newSort+0xe6>
    1670:	fc 01       	movw	r30, r24
    1672:	ee 0f       	add	r30, r30
    1674:	ff 1f       	adc	r31, r31
    1676:	e7 54       	subi	r30, 0x47	; 71
    1678:	fd 4f       	sbci	r31, 0xFD	; 253
    167a:	80 81       	ld	r24, Z
    167c:	91 81       	ldd	r25, Z+1	; 0x01
    167e:	28 17       	cp	r18, r24
    1680:	39 07       	cpc	r19, r25
    1682:	09 f0       	breq	.+2      	; 0x1686 <newSort+0xe6>
    1684:	f6 c0       	rjmp	.+492    	; 0x1872 <newSort+0x2d2>
				pickSort(1, a1);
    1686:	be 01       	movw	r22, r28
    1688:	81 e0       	ldi	r24, 0x01	; 1
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	b4 de       	rcall	.-664    	; 0x13f6 <pickSort>
    168e:	f1 c0       	rjmp	.+482    	; 0x1872 <newSort+0x2d2>
			}
		}
		else if (arm[1] != -1 && (term[a2][0] == -1 || term[a2][1] == -1))
    1690:	ef 3f       	cpi	r30, 0xFF	; 255
    1692:	4f ef       	ldi	r20, 0xFF	; 255
    1694:	f4 07       	cpc	r31, r20
    1696:	09 f4       	brne	.+2      	; 0x169a <newSort+0xfa>
    1698:	52 c0       	rjmp	.+164    	; 0x173e <newSort+0x19e>
    169a:	d8 01       	movw	r26, r16
    169c:	aa 0f       	add	r26, r26
    169e:	bb 1f       	adc	r27, r27
    16a0:	aa 0f       	add	r26, r26
    16a2:	bb 1f       	adc	r27, r27
    16a4:	a7 55       	subi	r26, 0x57	; 87
    16a6:	bd 4f       	sbci	r27, 0xFD	; 253
    16a8:	4d 91       	ld	r20, X+
    16aa:	5c 91       	ld	r21, X
    16ac:	4f 3f       	cpi	r20, 0xFF	; 255
    16ae:	5f 4f       	sbci	r21, 0xFF	; 255
    16b0:	09 f4       	brne	.+2      	; 0x16b4 <newSort+0x114>
    16b2:	14 c1       	rjmp	.+552    	; 0x18dc <newSort+0x33c>
    16b4:	d8 01       	movw	r26, r16
    16b6:	aa 0f       	add	r26, r26
    16b8:	bb 1f       	adc	r27, r27
    16ba:	aa 0f       	add	r26, r26
    16bc:	bb 1f       	adc	r27, r27
    16be:	a7 55       	subi	r26, 0x57	; 87
    16c0:	bd 4f       	sbci	r27, 0xFD	; 253
    16c2:	12 96       	adiw	r26, 0x02	; 2
    16c4:	4d 91       	ld	r20, X+
    16c6:	5c 91       	ld	r21, X
    16c8:	13 97       	sbiw	r26, 0x03	; 3
    16ca:	4f 3f       	cpi	r20, 0xFF	; 255
    16cc:	5f 4f       	sbci	r21, 0xFF	; 255
    16ce:	b9 f5       	brne	.+110    	; 0x173e <newSort+0x19e>
    16d0:	f3 c0       	rjmp	.+486    	; 0x18b8 <newSort+0x318>
		{
			ct = a2;
			if (term[a2][0] == -1 || term[a2][1] == -1)
			{
				if (arm[0] == -1)
    16d2:	2f 3f       	cpi	r18, 0xFF	; 255
    16d4:	3f 4f       	sbci	r19, 0xFF	; 255
    16d6:	09 f0       	breq	.+2      	; 0x16da <newSort+0x13a>
    16d8:	cc c0       	rjmp	.+408    	; 0x1872 <newSort+0x2d2>
				{
					if (sort[t1] == color[t1] && sort[t1] == color[t2])
    16da:	9b 01       	movw	r18, r22
    16dc:	22 0f       	add	r18, r18
    16de:	33 1f       	adc	r19, r19
    16e0:	f9 01       	movw	r30, r18
    16e2:	ef 55       	subi	r30, 0x5F	; 95
    16e4:	fd 4f       	sbci	r31, 0xFD	; 253
    16e6:	40 81       	ld	r20, Z
    16e8:	51 81       	ldd	r21, Z+1	; 0x01
    16ea:	f9 01       	movw	r30, r18
    16ec:	e7 54       	subi	r30, 0x47	; 71
    16ee:	fd 4f       	sbci	r31, 0xFD	; 253
    16f0:	20 81       	ld	r18, Z
    16f2:	31 81       	ldd	r19, Z+1	; 0x01
    16f4:	42 17       	cp	r20, r18
    16f6:	53 07       	cpc	r21, r19
    16f8:	09 f0       	breq	.+2      	; 0x16fc <newSort+0x15c>
    16fa:	bb c0       	rjmp	.+374    	; 0x1872 <newSort+0x2d2>
    16fc:	fc 01       	movw	r30, r24
    16fe:	ee 0f       	add	r30, r30
    1700:	ff 1f       	adc	r31, r31
    1702:	e7 54       	subi	r30, 0x47	; 71
    1704:	fd 4f       	sbci	r31, 0xFD	; 253
    1706:	80 81       	ld	r24, Z
    1708:	91 81       	ldd	r25, Z+1	; 0x01
    170a:	48 17       	cp	r20, r24
    170c:	59 07       	cpc	r21, r25
    170e:	09 f0       	breq	.+2      	; 0x1712 <newSort+0x172>
    1710:	b0 c0       	rjmp	.+352    	; 0x1872 <newSort+0x2d2>
					pickSort(1, t1);
    1712:	81 e0       	ldi	r24, 0x01	; 1
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	6f de       	rcall	.-802    	; 0x13f6 <pickSort>
    1718:	ac c0       	rjmp	.+344    	; 0x1872 <newSort+0x2d2>
				}
			}
			else	if (sort[t1] == -1 && arm[0] != -1)
    171a:	fb 01       	movw	r30, r22
    171c:	ee 0f       	add	r30, r30
    171e:	ff 1f       	adc	r31, r31
    1720:	ef 55       	subi	r30, 0x5F	; 95
    1722:	fd 4f       	sbci	r31, 0xFD	; 253
    1724:	80 81       	ld	r24, Z
    1726:	91 81       	ldd	r25, Z+1	; 0x01
    1728:	01 96       	adiw	r24, 0x01	; 1
    172a:	09 f0       	breq	.+2      	; 0x172e <newSort+0x18e>
    172c:	a2 c0       	rjmp	.+324    	; 0x1872 <newSort+0x2d2>
    172e:	2f 3f       	cpi	r18, 0xFF	; 255
    1730:	3f 4f       	sbci	r19, 0xFF	; 255
    1732:	09 f4       	brne	.+2      	; 0x1736 <newSort+0x196>
    1734:	9e c0       	rjmp	.+316    	; 0x1872 <newSort+0x2d2>
			sortDrop(1, t1);
    1736:	81 e0       	ldi	r24, 0x01	; 1
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	f6 de       	rcall	.-532    	; 0x1528 <sortDrop>
    173c:	9a c0       	rjmp	.+308    	; 0x1872 <newSort+0x2d2>
		}
		else	if (arm[0] != -1 && (sort[t1] == -1 && arm[1] != -1))
    173e:	2f 3f       	cpi	r18, 0xFF	; 255
    1740:	af ef       	ldi	r26, 0xFF	; 255
    1742:	3a 07       	cpc	r19, r26
    1744:	a1 f0       	breq	.+40     	; 0x176e <newSort+0x1ce>
    1746:	db 01       	movw	r26, r22
    1748:	aa 0f       	add	r26, r26
    174a:	bb 1f       	adc	r27, r27
    174c:	af 55       	subi	r26, 0x5F	; 95
    174e:	bd 4f       	sbci	r27, 0xFD	; 253
    1750:	8d 91       	ld	r24, X+
    1752:	9c 91       	ld	r25, X
    1754:	01 96       	adiw	r24, 0x01	; 1
    1756:	31 f4       	brne	.+12     	; 0x1764 <newSort+0x1c4>
    1758:	31 96       	adiw	r30, 0x01	; 1
    175a:	21 f0       	breq	.+8      	; 0x1764 <newSort+0x1c4>
		sortDrop(1, t1);
    175c:	81 e0       	ldi	r24, 0x01	; 1
    175e:	90 e0       	ldi	r25, 0x00	; 0
    1760:	e3 de       	rcall	.-570    	; 0x1528 <sortDrop>
    1762:	87 c0       	rjmp	.+270    	; 0x1872 <newSort+0x2d2>
		else if (arm[0] != -1)
		ct = arm[0];
    1764:	30 93 a6 02 	sts	0x02A6, r19
    1768:	20 93 a5 02 	sts	0x02A5, r18
    176c:	82 c0       	rjmp	.+260    	; 0x1872 <newSort+0x2d2>
		else ct = arm[1];
    176e:	f0 93 a6 02 	sts	0x02A6, r31
    1772:	e0 93 a5 02 	sts	0x02A5, r30
    1776:	7d c0       	rjmp	.+250    	; 0x1872 <newSort+0x2d2>
	}
	else
	{
		if ((sort[t1] == color[t1] || sort[t1] == color[t2]) && sort[t1] != -1)
    1778:	a7 01       	movw	r20, r14
    177a:	44 0f       	add	r20, r20
    177c:	55 1f       	adc	r21, r21
    177e:	fa 01       	movw	r30, r20
    1780:	ef 55       	subi	r30, 0x5F	; 95
    1782:	fd 4f       	sbci	r31, 0xFD	; 253
    1784:	20 81       	ld	r18, Z
    1786:	31 81       	ldd	r19, Z+1	; 0x01
    1788:	fa 01       	movw	r30, r20
    178a:	e7 54       	subi	r30, 0x47	; 71
    178c:	fd 4f       	sbci	r31, 0xFD	; 253
    178e:	40 81       	ld	r20, Z
    1790:	51 81       	ldd	r21, Z+1	; 0x01
    1792:	24 17       	cp	r18, r20
    1794:	35 07       	cpc	r19, r21
    1796:	51 f0       	breq	.+20     	; 0x17ac <newSort+0x20c>
    1798:	fc 01       	movw	r30, r24
    179a:	ee 0f       	add	r30, r30
    179c:	ff 1f       	adc	r31, r31
    179e:	e7 54       	subi	r30, 0x47	; 71
    17a0:	fd 4f       	sbci	r31, 0xFD	; 253
    17a2:	60 81       	ld	r22, Z
    17a4:	71 81       	ldd	r23, Z+1	; 0x01
    17a6:	26 17       	cp	r18, r22
    17a8:	37 07       	cpc	r19, r23
    17aa:	81 f4       	brne	.+32     	; 0x17cc <newSort+0x22c>
    17ac:	2f 3f       	cpi	r18, 0xFF	; 255
    17ae:	af ef       	ldi	r26, 0xFF	; 255
    17b0:	3a 07       	cpc	r19, r26
    17b2:	71 f1       	breq	.+92     	; 0x1810 <newSort+0x270>
		ct = indicator[sort[t1]];
    17b4:	f9 01       	movw	r30, r18
    17b6:	ee 0f       	add	r30, r30
    17b8:	ff 1f       	adc	r31, r31
    17ba:	ef 53       	subi	r30, 0x3F	; 63
    17bc:	fd 4f       	sbci	r31, 0xFD	; 253
    17be:	80 81       	ld	r24, Z
    17c0:	91 81       	ldd	r25, Z+1	; 0x01
    17c2:	90 93 a6 02 	sts	0x02A6, r25
    17c6:	80 93 a5 02 	sts	0x02A5, r24
    17ca:	53 c0       	rjmp	.+166    	; 0x1872 <newSort+0x2d2>
		else if (sort[t1] != -1)
    17cc:	2f 3f       	cpi	r18, 0xFF	; 255
    17ce:	3f 4f       	sbci	r19, 0xFF	; 255
    17d0:	f9 f0       	breq	.+62     	; 0x1810 <newSort+0x270>
		{
			pickSort(0, t1);
    17d2:	b7 01       	movw	r22, r14
    17d4:	80 e0       	ldi	r24, 0x00	; 0
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	0e de       	rcall	.-996    	; 0x13f6 <pickSort>
			ct = (t1 + 1) % 2 + 4;
    17da:	2f ef       	ldi	r18, 0xFF	; 255
    17dc:	e2 1a       	sub	r14, r18
    17de:	f2 0a       	sbc	r15, r18
    17e0:	41 e0       	ldi	r20, 0x01	; 1
    17e2:	e4 22       	and	r14, r20
    17e4:	40 e8       	ldi	r20, 0x80	; 128
    17e6:	f4 22       	and	r15, r20
    17e8:	ff 20       	and	r15, r15
    17ea:	54 f4       	brge	.+20     	; 0x1800 <newSort+0x260>
    17ec:	61 e0       	ldi	r22, 0x01	; 1
    17ee:	e6 1a       	sub	r14, r22
    17f0:	f1 08       	sbc	r15, r1
    17f2:	8e ef       	ldi	r24, 0xFE	; 254
    17f4:	e8 2a       	or	r14, r24
    17f6:	ff 24       	eor	r15, r15
    17f8:	fa 94       	dec	r15
    17fa:	af ef       	ldi	r26, 0xFF	; 255
    17fc:	ea 1a       	sub	r14, r26
    17fe:	fa 0a       	sbc	r15, r26
    1800:	e4 e0       	ldi	r30, 0x04	; 4
    1802:	ee 0e       	add	r14, r30
    1804:	f1 1c       	adc	r15, r1
    1806:	f0 92 a6 02 	sts	0x02A6, r15
    180a:	e0 92 a5 02 	sts	0x02A5, r14
    180e:	31 c0       	rjmp	.+98     	; 0x1872 <newSort+0x2d2>
		}
		else if (visited[t1] == 1 && (term[t1][0] == color[t1] || term[t1][0] == -1) && (term[t1][1] == color[t1] || term[t1][1] == -1))
    1810:	f7 01       	movw	r30, r14
    1812:	ee 0f       	add	r30, r30
    1814:	ff 1f       	adc	r31, r31
    1816:	ee 57       	subi	r30, 0x7E	; 126
    1818:	fd 4f       	sbci	r31, 0xFD	; 253
    181a:	20 81       	ld	r18, Z
    181c:	31 81       	ldd	r19, Z+1	; 0x01
    181e:	21 30       	cpi	r18, 0x01	; 1
    1820:	31 05       	cpc	r19, r1
    1822:	19 f5       	brne	.+70     	; 0x186a <newSort+0x2ca>
    1824:	f7 01       	movw	r30, r14
    1826:	ee 0f       	add	r30, r30
    1828:	ff 1f       	adc	r31, r31
    182a:	ee 0f       	add	r30, r30
    182c:	ff 1f       	adc	r31, r31
    182e:	e7 55       	subi	r30, 0x57	; 87
    1830:	fd 4f       	sbci	r31, 0xFD	; 253
    1832:	20 81       	ld	r18, Z
    1834:	31 81       	ldd	r19, Z+1	; 0x01
    1836:	42 17       	cp	r20, r18
    1838:	53 07       	cpc	r21, r19
    183a:	19 f0       	breq	.+6      	; 0x1842 <newSort+0x2a2>
    183c:	2f 3f       	cpi	r18, 0xFF	; 255
    183e:	3f 4f       	sbci	r19, 0xFF	; 255
    1840:	a1 f4       	brne	.+40     	; 0x186a <newSort+0x2ca>
    1842:	f7 01       	movw	r30, r14
    1844:	ee 0f       	add	r30, r30
    1846:	ff 1f       	adc	r31, r31
    1848:	ee 0f       	add	r30, r30
    184a:	ff 1f       	adc	r31, r31
    184c:	e7 55       	subi	r30, 0x57	; 87
    184e:	fd 4f       	sbci	r31, 0xFD	; 253
    1850:	22 81       	ldd	r18, Z+2	; 0x02
    1852:	33 81       	ldd	r19, Z+3	; 0x03
    1854:	42 17       	cp	r20, r18
    1856:	53 07       	cpc	r21, r19
    1858:	19 f0       	breq	.+6      	; 0x1860 <newSort+0x2c0>
    185a:	2f 3f       	cpi	r18, 0xFF	; 255
    185c:	3f 4f       	sbci	r19, 0xFF	; 255
    185e:	29 f4       	brne	.+10     	; 0x186a <newSort+0x2ca>
		ct = t2;
    1860:	90 93 a6 02 	sts	0x02A6, r25
    1864:	80 93 a5 02 	sts	0x02A5, r24
    1868:	04 c0       	rjmp	.+8      	; 0x1872 <newSort+0x2d2>
		else ct = t1;
    186a:	f0 92 a6 02 	sts	0x02A6, r15
    186e:	e0 92 a5 02 	sts	0x02A5, r14
	}
}

int adjCount(int ct)
{
	return (ct + 2) % 4;
    1872:	80 91 a5 02 	lds	r24, 0x02A5
    1876:	90 91 a6 02 	lds	r25, 0x02A6
    187a:	02 96       	adiw	r24, 0x02	; 2
    187c:	83 70       	andi	r24, 0x03	; 3
    187e:	90 78       	andi	r25, 0x80	; 128
    1880:	99 23       	and	r25, r25
    1882:	24 f4       	brge	.+8      	; 0x188c <newSort+0x2ec>
    1884:	01 97       	sbiw	r24, 0x01	; 1
    1886:	8c 6f       	ori	r24, 0xFC	; 252
    1888:	9f 6f       	ori	r25, 0xFF	; 255
    188a:	01 96       	adiw	r24, 0x01	; 1
		else if (visited[t1] == 1 && (term[t1][0] == color[t1] || term[t1][0] == -1) && (term[t1][1] == color[t1] || term[t1][1] == -1))
		ct = t2;
		else ct = t1;

	}
	adj = adjCount(ct);
    188c:	90 93 ca 02 	sts	0x02CA, r25
    1890:	80 93 c9 02 	sts	0x02C9, r24
    1894:	2d c0       	rjmp	.+90     	; 0x18f0 <newSort+0x350>
	if (arm[0] != -1)
	a1 = indicator[arm[0]];
	if (arm[1] != -1)
	a2 = indicator[arm[1]];

	t1 = (ct + 1) % 2;
    1896:	80 91 a5 02 	lds	r24, 0x02A5
    189a:	90 91 a6 02 	lds	r25, 0x02A6
    189e:	01 96       	adiw	r24, 0x01	; 1
    18a0:	62 e0       	ldi	r22, 0x02	; 2
    18a2:	70 e0       	ldi	r23, 0x00	; 0
    18a4:	0e 94 5f 15 	call	0x2abe	; 0x2abe <__divmodhi4>
    18a8:	7c 01       	movw	r14, r24
    18aa:	bc 01       	movw	r22, r24
	t2 = t1 + 2;
    18ac:	02 96       	adiw	r24, 0x02	; 2
	if (arm[0] != -1 || arm[1] != -1)
    18ae:	2f 3f       	cpi	r18, 0xFF	; 255
    18b0:	4f ef       	ldi	r20, 0xFF	; 255
    18b2:	34 07       	cpc	r19, r20
    18b4:	c1 f4       	brne	.+48     	; 0x18e6 <newSort+0x346>
    18b6:	60 cf       	rjmp	.-320    	; 0x1778 <newSort+0x1d8>
				pickSort(1, a1);
			}
		}
		else if (arm[1] != -1 && (term[a2][0] == -1 || term[a2][1] == -1))
		{
			ct = a2;
    18b8:	10 93 a6 02 	sts	0x02A6, r17
    18bc:	00 93 a5 02 	sts	0x02A5, r16
			if (term[a2][0] == -1 || term[a2][1] == -1)
    18c0:	f8 01       	movw	r30, r16
    18c2:	ee 0f       	add	r30, r30
    18c4:	ff 1f       	adc	r31, r31
    18c6:	ee 0f       	add	r30, r30
    18c8:	ff 1f       	adc	r31, r31
    18ca:	e7 55       	subi	r30, 0x57	; 87
    18cc:	fd 4f       	sbci	r31, 0xFD	; 253
    18ce:	42 81       	ldd	r20, Z+2	; 0x02
    18d0:	53 81       	ldd	r21, Z+3	; 0x03
    18d2:	4f 3f       	cpi	r20, 0xFF	; 255
    18d4:	5f 4f       	sbci	r21, 0xFF	; 255
    18d6:	09 f0       	breq	.+2      	; 0x18da <newSort+0x33a>
    18d8:	20 cf       	rjmp	.-448    	; 0x171a <newSort+0x17a>
    18da:	fb ce       	rjmp	.-522    	; 0x16d2 <newSort+0x132>
				pickSort(1, a1);
			}
		}
		else if (arm[1] != -1 && (term[a2][0] == -1 || term[a2][1] == -1))
		{
			ct = a2;
    18dc:	10 93 a6 02 	sts	0x02A6, r17
    18e0:	00 93 a5 02 	sts	0x02A5, r16
    18e4:	f6 ce       	rjmp	.-532    	; 0x16d2 <newSort+0x132>

	t1 = (ct + 1) % 2;
	t2 = t1 + 2;
	if (arm[0] != -1 || arm[1] != -1)
	{
		ct = a1;
    18e6:	d0 93 a6 02 	sts	0x02A6, r29
    18ea:	c0 93 a5 02 	sts	0x02A5, r28
    18ee:	94 ce       	rjmp	.-728    	; 0x1618 <newSort+0x78>
		ct = t2;
		else ct = t1;

	}
	adj = adjCount(ct);
}
    18f0:	df 91       	pop	r29
    18f2:	cf 91       	pop	r28
    18f4:	1f 91       	pop	r17
    18f6:	0f 91       	pop	r16
    18f8:	ff 90       	pop	r15
    18fa:	ef 90       	pop	r14
    18fc:	08 95       	ret

000018fe <sortCheck>:
void sortCheck()
{
    18fe:	8f 92       	push	r8
    1900:	9f 92       	push	r9
    1902:	af 92       	push	r10
    1904:	bf 92       	push	r11
    1906:	cf 92       	push	r12
    1908:	df 92       	push	r13
    190a:	ef 92       	push	r14
    190c:	ff 92       	push	r15
    190e:	0f 93       	push	r16
    1910:	1f 93       	push	r17
    1912:	cf 93       	push	r28
    1914:	df 93       	push	r29
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    1916:	40 91 a5 02 	lds	r20, 0x02A5
    191a:	50 91 a6 02 	lds	r21, 0x02A6
    191e:	42 30       	cpi	r20, 0x02	; 2
    1920:	51 05       	cpc	r21, r1
    1922:	30 f4       	brcc	.+12     	; 0x1930 <sortCheck+0x32>
    1924:	80 91 76 02 	lds	r24, 0x0276
    1928:	90 91 77 02 	lds	r25, 0x0277
    192c:	02 97       	sbiw	r24, 0x02	; 2
    192e:	79 f0       	breq	.+30     	; 0x194e <sortCheck+0x50>
    1930:	ca 01       	movw	r24, r20
    1932:	02 97       	sbiw	r24, 0x02	; 2
    1934:	02 97       	sbiw	r24, 0x02	; 2
    1936:	80 f4       	brcc	.+32     	; 0x1958 <sortCheck+0x5a>
    1938:	80 91 76 02 	lds	r24, 0x0276
    193c:	90 91 77 02 	lds	r25, 0x0277
    1940:	89 2b       	or	r24, r25
    1942:	79 f0       	breq	.+30     	; 0x1962 <sortCheck+0x64>
	adj = adjCount(ct);
}
void sortCheck()
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
    1944:	01 e0       	ldi	r16, 0x01	; 1
    1946:	10 e0       	ldi	r17, 0x00	; 0
    1948:	c0 e0       	ldi	r28, 0x00	; 0
    194a:	d0 e0       	ldi	r29, 0x00	; 0
    194c:	0e c0       	rjmp	.+28     	; 0x196a <sortCheck+0x6c>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    194e:	00 e0       	ldi	r16, 0x00	; 0
    1950:	10 e0       	ldi	r17, 0x00	; 0
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    1952:	c1 e0       	ldi	r28, 0x01	; 1
    1954:	d0 e0       	ldi	r29, 0x00	; 0
    1956:	09 c0       	rjmp	.+18     	; 0x196a <sortCheck+0x6c>
	adj = adjCount(ct);
}
void sortCheck()
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
    1958:	01 e0       	ldi	r16, 0x01	; 1
    195a:	10 e0       	ldi	r17, 0x00	; 0
    195c:	c0 e0       	ldi	r28, 0x00	; 0
    195e:	d0 e0       	ldi	r29, 0x00	; 0
    1960:	04 c0       	rjmp	.+8      	; 0x196a <sortCheck+0x6c>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    1962:	00 e0       	ldi	r16, 0x00	; 0
    1964:	10 e0       	ldi	r17, 0x00	; 0
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    1966:	c1 e0       	ldi	r28, 0x01	; 1
    1968:	d0 e0       	ldi	r29, 0x00	; 0
		arm1 = 0;
	}
	if ((sort[ct % 2] == color[ct] || sort[ct % 2] == color[adj]))
    196a:	9a 01       	movw	r18, r20
    196c:	21 70       	andi	r18, 0x01	; 1
    196e:	30 78       	andi	r19, 0x80	; 128
    1970:	33 23       	and	r19, r19
    1972:	34 f4       	brge	.+12     	; 0x1980 <sortCheck+0x82>
    1974:	21 50       	subi	r18, 0x01	; 1
    1976:	31 09       	sbc	r19, r1
    1978:	2e 6f       	ori	r18, 0xFE	; 254
    197a:	3f 6f       	ori	r19, 0xFF	; 255
    197c:	2f 5f       	subi	r18, 0xFF	; 255
    197e:	3f 4f       	sbci	r19, 0xFF	; 255
    1980:	b2 2e       	mov	r11, r18
    1982:	a3 2e       	mov	r10, r19
    1984:	f9 01       	movw	r30, r18
    1986:	ee 0f       	add	r30, r30
    1988:	ff 1f       	adc	r31, r31
    198a:	ef 55       	subi	r30, 0x5F	; 95
    198c:	fd 4f       	sbci	r31, 0xFD	; 253
    198e:	20 81       	ld	r18, Z
    1990:	31 81       	ldd	r19, Z+1	; 0x01
    1992:	fa 01       	movw	r30, r20
    1994:	ee 0f       	add	r30, r30
    1996:	ff 1f       	adc	r31, r31
    1998:	e7 54       	subi	r30, 0x47	; 71
    199a:	fd 4f       	sbci	r31, 0xFD	; 253
    199c:	80 81       	ld	r24, Z
    199e:	91 81       	ldd	r25, Z+1	; 0x01
    19a0:	28 17       	cp	r18, r24
    19a2:	39 07       	cpc	r19, r25
    19a4:	79 f0       	breq	.+30     	; 0x19c4 <sortCheck+0xc6>
    19a6:	80 91 c9 02 	lds	r24, 0x02C9
    19aa:	90 91 ca 02 	lds	r25, 0x02CA
    19ae:	fc 01       	movw	r30, r24
    19b0:	ee 0f       	add	r30, r30
    19b2:	ff 1f       	adc	r31, r31
    19b4:	e7 54       	subi	r30, 0x47	; 71
    19b6:	fd 4f       	sbci	r31, 0xFD	; 253
    19b8:	40 81       	ld	r20, Z
    19ba:	51 81       	ldd	r21, Z+1	; 0x01
    19bc:	24 17       	cp	r18, r20
    19be:	35 07       	cpc	r19, r21
    19c0:	09 f0       	breq	.+2      	; 0x19c4 <sortCheck+0xc6>
    19c2:	a6 c0       	rjmp	.+332    	; 0x1b10 <sortCheck+0x212>
	{
		if (armCount>0)
    19c4:	80 91 02 02 	lds	r24, 0x0202
    19c8:	90 91 03 02 	lds	r25, 0x0203
    19cc:	18 16       	cp	r1, r24
    19ce:	19 06       	cpc	r1, r25
    19d0:	0c f0       	brlt	.+2      	; 0x19d4 <sortCheck+0xd6>
    19d2:	95 c0       	rjmp	.+298    	; 0x1afe <sortCheck+0x200>
		{
			ct = indicator[sort[ct % 2]];
    19d4:	f9 01       	movw	r30, r18
    19d6:	ee 0f       	add	r30, r30
    19d8:	ff 1f       	adc	r31, r31
    19da:	ef 53       	subi	r30, 0x3F	; 63
    19dc:	fd 4f       	sbci	r31, 0xFD	; 253
    19de:	60 81       	ld	r22, Z
    19e0:	71 81       	ldd	r23, Z+1	; 0x01
    19e2:	70 93 a6 02 	sts	0x02A6, r23
    19e6:	60 93 a5 02 	sts	0x02A5, r22
			if (arm[arm0] == -1)
    19ea:	fe 01       	movw	r30, r28
    19ec:	ee 0f       	add	r30, r30
    19ee:	ff 1f       	adc	r31, r31
    19f0:	e3 53       	subi	r30, 0x33	; 51
    19f2:	fd 4f       	sbci	r31, 0xFD	; 253
    19f4:	80 81       	ld	r24, Z
    19f6:	91 81       	ldd	r25, Z+1	; 0x01
    19f8:	01 96       	adiw	r24, 0x01	; 1
    19fa:	69 f4       	brne	.+26     	; 0x1a16 <sortCheck+0x118>
			pickSort(arm0, ct % 2);
    19fc:	61 70       	andi	r22, 0x01	; 1
    19fe:	70 78       	andi	r23, 0x80	; 128
    1a00:	77 23       	and	r23, r23
    1a02:	34 f4       	brge	.+12     	; 0x1a10 <sortCheck+0x112>
    1a04:	61 50       	subi	r22, 0x01	; 1
    1a06:	71 09       	sbc	r23, r1
    1a08:	6e 6f       	ori	r22, 0xFE	; 254
    1a0a:	7f 6f       	ori	r23, 0xFF	; 255
    1a0c:	6f 5f       	subi	r22, 0xFF	; 255
    1a0e:	7f 4f       	sbci	r23, 0xFF	; 255
    1a10:	ce 01       	movw	r24, r28
    1a12:	f1 dc       	rcall	.-1566   	; 0x13f6 <pickSort>
    1a14:	15 c0       	rjmp	.+42     	; 0x1a40 <sortCheck+0x142>
			else if (arm[arm1] == -1)
    1a16:	f8 01       	movw	r30, r16
    1a18:	ee 0f       	add	r30, r30
    1a1a:	ff 1f       	adc	r31, r31
    1a1c:	e3 53       	subi	r30, 0x33	; 51
    1a1e:	fd 4f       	sbci	r31, 0xFD	; 253
    1a20:	80 81       	ld	r24, Z
    1a22:	91 81       	ldd	r25, Z+1	; 0x01
    1a24:	01 96       	adiw	r24, 0x01	; 1
    1a26:	61 f4       	brne	.+24     	; 0x1a40 <sortCheck+0x142>
			pickSort(arm1, ct % 2);
    1a28:	61 70       	andi	r22, 0x01	; 1
    1a2a:	70 78       	andi	r23, 0x80	; 128
    1a2c:	77 23       	and	r23, r23
    1a2e:	34 f4       	brge	.+12     	; 0x1a3c <sortCheck+0x13e>
    1a30:	61 50       	subi	r22, 0x01	; 1
    1a32:	71 09       	sbc	r23, r1
    1a34:	6e 6f       	ori	r22, 0xFE	; 254
    1a36:	7f 6f       	ori	r23, 0xFF	; 255
    1a38:	6f 5f       	subi	r22, 0xFF	; 255
    1a3a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a3c:	c8 01       	movw	r24, r16
    1a3e:	db dc       	rcall	.-1610   	; 0x13f6 <pickSort>
			if (armCount != 1 && term[ct][0] != -1 && term[ct][1] != -1 && sort[ct % 2] == -1)
    1a40:	80 91 02 02 	lds	r24, 0x0202
    1a44:	90 91 03 02 	lds	r25, 0x0203
    1a48:	01 97       	sbiw	r24, 0x01	; 1
    1a4a:	09 f4       	brne	.+2      	; 0x1a4e <sortCheck+0x150>
    1a4c:	68 c1       	rjmp	.+720    	; 0x1d1e <sortCheck+0x420>
    1a4e:	80 91 a5 02 	lds	r24, 0x02A5
    1a52:	90 91 a6 02 	lds	r25, 0x02A6
    1a56:	fc 01       	movw	r30, r24
    1a58:	ee 0f       	add	r30, r30
    1a5a:	ff 1f       	adc	r31, r31
    1a5c:	ee 0f       	add	r30, r30
    1a5e:	ff 1f       	adc	r31, r31
    1a60:	e7 55       	subi	r30, 0x57	; 87
    1a62:	fd 4f       	sbci	r31, 0xFD	; 253
    1a64:	20 81       	ld	r18, Z
    1a66:	31 81       	ldd	r19, Z+1	; 0x01
    1a68:	2f 3f       	cpi	r18, 0xFF	; 255
    1a6a:	3f 4f       	sbci	r19, 0xFF	; 255
    1a6c:	09 f4       	brne	.+2      	; 0x1a70 <sortCheck+0x172>
    1a6e:	57 c1       	rjmp	.+686    	; 0x1d1e <sortCheck+0x420>
    1a70:	fc 01       	movw	r30, r24
    1a72:	ee 0f       	add	r30, r30
    1a74:	ff 1f       	adc	r31, r31
    1a76:	ee 0f       	add	r30, r30
    1a78:	ff 1f       	adc	r31, r31
    1a7a:	e7 55       	subi	r30, 0x57	; 87
    1a7c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a7e:	22 81       	ldd	r18, Z+2	; 0x02
    1a80:	33 81       	ldd	r19, Z+3	; 0x03
    1a82:	2f 3f       	cpi	r18, 0xFF	; 255
    1a84:	3f 4f       	sbci	r19, 0xFF	; 255
    1a86:	09 f4       	brne	.+2      	; 0x1a8a <sortCheck+0x18c>
    1a88:	4a c1       	rjmp	.+660    	; 0x1d1e <sortCheck+0x420>
    1a8a:	9c 01       	movw	r18, r24
    1a8c:	21 70       	andi	r18, 0x01	; 1
    1a8e:	30 78       	andi	r19, 0x80	; 128
    1a90:	33 23       	and	r19, r19
    1a92:	34 f4       	brge	.+12     	; 0x1aa0 <sortCheck+0x1a2>
    1a94:	21 50       	subi	r18, 0x01	; 1
    1a96:	31 09       	sbc	r19, r1
    1a98:	2e 6f       	ori	r18, 0xFE	; 254
    1a9a:	3f 6f       	ori	r19, 0xFF	; 255
    1a9c:	2f 5f       	subi	r18, 0xFF	; 255
    1a9e:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa0:	62 2f       	mov	r22, r18
    1aa2:	73 2f       	mov	r23, r19
    1aa4:	f9 01       	movw	r30, r18
    1aa6:	ee 0f       	add	r30, r30
    1aa8:	ff 1f       	adc	r31, r31
    1aaa:	ef 55       	subi	r30, 0x5F	; 95
    1aac:	fd 4f       	sbci	r31, 0xFD	; 253
    1aae:	20 81       	ld	r18, Z
    1ab0:	31 81       	ldd	r19, Z+1	; 0x01
    1ab2:	2f 3f       	cpi	r18, 0xFF	; 255
    1ab4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ab6:	09 f0       	breq	.+2      	; 0x1aba <sortCheck+0x1bc>
    1ab8:	32 c1       	rjmp	.+612    	; 0x1d1e <sortCheck+0x420>
			{
				if (arm[arm0] == color[ct])
    1aba:	fc 01       	movw	r30, r24
    1abc:	ee 0f       	add	r30, r30
    1abe:	ff 1f       	adc	r31, r31
    1ac0:	e7 54       	subi	r30, 0x47	; 71
    1ac2:	fd 4f       	sbci	r31, 0xFD	; 253
    1ac4:	80 81       	ld	r24, Z
    1ac6:	91 81       	ldd	r25, Z+1	; 0x01
    1ac8:	fe 01       	movw	r30, r28
    1aca:	ee 0f       	add	r30, r30
    1acc:	ff 1f       	adc	r31, r31
    1ace:	e3 53       	subi	r30, 0x33	; 51
    1ad0:	fd 4f       	sbci	r31, 0xFD	; 253
    1ad2:	20 81       	ld	r18, Z
    1ad4:	31 81       	ldd	r19, Z+1	; 0x01
    1ad6:	28 17       	cp	r18, r24
    1ad8:	39 07       	cpc	r19, r25
    1ada:	19 f4       	brne	.+6      	; 0x1ae2 <sortCheck+0x1e4>
				sortDrop(arm1, ct % 2);
    1adc:	c8 01       	movw	r24, r16
    1ade:	24 dd       	rcall	.-1464   	; 0x1528 <sortDrop>
    1ae0:	1e c1       	rjmp	.+572    	; 0x1d1e <sortCheck+0x420>
				else if (arm[arm1] == color[ct])
    1ae2:	f8 01       	movw	r30, r16
    1ae4:	ee 0f       	add	r30, r30
    1ae6:	ff 1f       	adc	r31, r31
    1ae8:	e3 53       	subi	r30, 0x33	; 51
    1aea:	fd 4f       	sbci	r31, 0xFD	; 253
    1aec:	20 81       	ld	r18, Z
    1aee:	31 81       	ldd	r19, Z+1	; 0x01
    1af0:	82 17       	cp	r24, r18
    1af2:	93 07       	cpc	r25, r19
    1af4:	09 f0       	breq	.+2      	; 0x1af8 <sortCheck+0x1fa>
    1af6:	13 c1       	rjmp	.+550    	; 0x1d1e <sortCheck+0x420>
				sortDrop(arm0, ct % 2);
    1af8:	ce 01       	movw	r24, r28
    1afa:	16 dd       	rcall	.-1492   	; 0x1528 <sortDrop>
    1afc:	10 c1       	rjmp	.+544    	; 0x1d1e <sortCheck+0x420>
			}
		}
		else ct = adj;
    1afe:	80 91 c9 02 	lds	r24, 0x02C9
    1b02:	90 91 ca 02 	lds	r25, 0x02CA
    1b06:	90 93 a6 02 	sts	0x02A6, r25
    1b0a:	80 93 a5 02 	sts	0x02A5, r24
    1b0e:	07 c1       	rjmp	.+526    	; 0x1d1e <sortCheck+0x420>
	}
	else if (arm[arm0] != color[adj] && arm[arm1] != color[adj])
    1b10:	fe 01       	movw	r30, r28
    1b12:	ee 0f       	add	r30, r30
    1b14:	ff 1f       	adc	r31, r31
    1b16:	e3 53       	subi	r30, 0x33	; 51
    1b18:	fd 4f       	sbci	r31, 0xFD	; 253
    1b1a:	01 90       	ld	r0, Z+
    1b1c:	f0 81       	ld	r31, Z
    1b1e:	e0 2d       	mov	r30, r0
    1b20:	4e 17       	cp	r20, r30
    1b22:	5f 07       	cpc	r21, r31
    1b24:	09 f4       	brne	.+2      	; 0x1b28 <sortCheck+0x22a>
    1b26:	8c c0       	rjmp	.+280    	; 0x1c40 <sortCheck+0x342>
    1b28:	d8 01       	movw	r26, r16
    1b2a:	aa 0f       	add	r26, r26
    1b2c:	bb 1f       	adc	r27, r27
    1b2e:	a3 53       	subi	r26, 0x33	; 51
    1b30:	bd 4f       	sbci	r27, 0xFD	; 253
    1b32:	8d 90       	ld	r8, X+
    1b34:	9c 90       	ld	r9, X
    1b36:	48 15       	cp	r20, r8
    1b38:	59 05       	cpc	r21, r9
    1b3a:	09 f4       	brne	.+2      	; 0x1b3e <sortCheck+0x240>
    1b3c:	81 c0       	rjmp	.+258    	; 0x1c40 <sortCheck+0x342>
	{
		if (armCount == 0 || (armCount == 1 && sort[ct % 2] != -1) || ((armCount == 2 || armCount == 1) && (term[adj][0] == color[adj] || term[adj][0] == -1) && (term[adj][1] == color[adj] || term[adj][1] == -1)))
    1b3e:	e0 90 02 02 	lds	r14, 0x0202
    1b42:	f0 90 03 02 	lds	r15, 0x0203
    1b46:	e1 14       	cp	r14, r1
    1b48:	f1 04       	cpc	r15, r1
    1b4a:	09 f4       	brne	.+2      	; 0x1b4e <sortCheck+0x250>
    1b4c:	4c c0       	rjmp	.+152    	; 0x1be6 <sortCheck+0x2e8>
    1b4e:	b1 e0       	ldi	r27, 0x01	; 1
    1b50:	eb 16       	cp	r14, r27
    1b52:	f1 04       	cpc	r15, r1
    1b54:	29 f4       	brne	.+10     	; 0x1b60 <sortCheck+0x262>
    1b56:	2f 3f       	cpi	r18, 0xFF	; 255
    1b58:	6f ef       	ldi	r22, 0xFF	; 255
    1b5a:	36 07       	cpc	r19, r22
    1b5c:	b1 f5       	brne	.+108    	; 0x1bca <sortCheck+0x2cc>
    1b5e:	09 c0       	rjmp	.+18     	; 0x1b72 <sortCheck+0x274>
    1b60:	67 01       	movw	r12, r14
    1b62:	71 e0       	ldi	r23, 0x01	; 1
    1b64:	c7 1a       	sub	r12, r23
    1b66:	d1 08       	sbc	r13, r1
    1b68:	a2 e0       	ldi	r26, 0x02	; 2
    1b6a:	ca 16       	cp	r12, r26
    1b6c:	d1 04       	cpc	r13, r1
    1b6e:	08 f0       	brcs	.+2      	; 0x1b72 <sortCheck+0x274>
    1b70:	62 c0       	rjmp	.+196    	; 0x1c36 <sortCheck+0x338>
    1b72:	6c 01       	movw	r12, r24
    1b74:	cc 0c       	add	r12, r12
    1b76:	dd 1c       	adc	r13, r13
    1b78:	cc 0c       	add	r12, r12
    1b7a:	dd 1c       	adc	r13, r13
    1b7c:	b6 01       	movw	r22, r12
    1b7e:	67 55       	subi	r22, 0x57	; 87
    1b80:	7d 4f       	sbci	r23, 0xFD	; 253
    1b82:	db 01       	movw	r26, r22
    1b84:	cd 90       	ld	r12, X+
    1b86:	dc 90       	ld	r13, X
    1b88:	4c 15       	cp	r20, r12
    1b8a:	5d 05       	cpc	r21, r13
    1b8c:	21 f0       	breq	.+8      	; 0x1b96 <sortCheck+0x298>
    1b8e:	cd 20       	and	r12, r13
    1b90:	c0 94       	com	r12
    1b92:	09 f0       	breq	.+2      	; 0x1b96 <sortCheck+0x298>
    1b94:	50 c0       	rjmp	.+160    	; 0x1c36 <sortCheck+0x338>
    1b96:	6c 01       	movw	r12, r24
    1b98:	cc 0c       	add	r12, r12
    1b9a:	dd 1c       	adc	r13, r13
    1b9c:	cc 0c       	add	r12, r12
    1b9e:	dd 1c       	adc	r13, r13
    1ba0:	b6 01       	movw	r22, r12
    1ba2:	67 55       	subi	r22, 0x57	; 87
    1ba4:	7d 4f       	sbci	r23, 0xFD	; 253
    1ba6:	db 01       	movw	r26, r22
    1ba8:	12 96       	adiw	r26, 0x02	; 2
    1baa:	cd 90       	ld	r12, X+
    1bac:	dc 90       	ld	r13, X
    1bae:	13 97       	sbiw	r26, 0x03	; 3
    1bb0:	4c 15       	cp	r20, r12
    1bb2:	5d 05       	cpc	r21, r13
    1bb4:	21 f0       	breq	.+8      	; 0x1bbe <sortCheck+0x2c0>
    1bb6:	cd 20       	and	r12, r13
    1bb8:	c0 94       	com	r12
    1bba:	09 f0       	breq	.+2      	; 0x1bbe <sortCheck+0x2c0>
    1bbc:	3c c0       	rjmp	.+120    	; 0x1c36 <sortCheck+0x338>
		{
			if (armCount>0)
    1bbe:	1e 14       	cp	r1, r14
    1bc0:	1f 04       	cpc	r1, r15
    1bc2:	8c f4       	brge	.+34     	; 0x1be6 <sortCheck+0x2e8>
			{
				if(sort[ct % 2] != -1)
    1bc4:	2f 3f       	cpi	r18, 0xFF	; 255
    1bc6:	3f 4f       	sbci	r19, 0xFF	; 255
    1bc8:	71 f0       	breq	.+28     	; 0x1be6 <sortCheck+0x2e8>
				{
					
					if (arm[arm0] == -1)
    1bca:	31 96       	adiw	r30, 0x01	; 1
    1bcc:	29 f4       	brne	.+10     	; 0x1bd8 <sortCheck+0x2da>
					pickSort(arm0, ct % 2);
    1bce:	6b 2d       	mov	r22, r11
    1bd0:	7a 2d       	mov	r23, r10
    1bd2:	ce 01       	movw	r24, r28
    1bd4:	10 dc       	rcall	.-2016   	; 0x13f6 <pickSort>
    1bd6:	07 c0       	rjmp	.+14     	; 0x1be6 <sortCheck+0x2e8>
					else if (arm[arm1] == -1)
    1bd8:	89 20       	and	r8, r9
    1bda:	80 94       	com	r8
    1bdc:	21 f4       	brne	.+8      	; 0x1be6 <sortCheck+0x2e8>
					pickSort(arm1, ct % 2);
    1bde:	6b 2d       	mov	r22, r11
    1be0:	7a 2d       	mov	r23, r10
    1be2:	c8 01       	movw	r24, r16
    1be4:	08 dc       	rcall	.-2032   	; 0x13f6 <pickSort>
				}
			}
			traverseToSort(ct % 2 + 4, (ct + 1) % 2 + 4);
    1be6:	80 91 a5 02 	lds	r24, 0x02A5
    1bea:	90 91 a6 02 	lds	r25, 0x02A6
    1bee:	bc 01       	movw	r22, r24
    1bf0:	6f 5f       	subi	r22, 0xFF	; 255
    1bf2:	7f 4f       	sbci	r23, 0xFF	; 255
    1bf4:	61 70       	andi	r22, 0x01	; 1
    1bf6:	70 78       	andi	r23, 0x80	; 128
    1bf8:	77 23       	and	r23, r23
    1bfa:	34 f4       	brge	.+12     	; 0x1c08 <sortCheck+0x30a>
    1bfc:	61 50       	subi	r22, 0x01	; 1
    1bfe:	71 09       	sbc	r23, r1
    1c00:	6e 6f       	ori	r22, 0xFE	; 254
    1c02:	7f 6f       	ori	r23, 0xFF	; 255
    1c04:	6f 5f       	subi	r22, 0xFF	; 255
    1c06:	7f 4f       	sbci	r23, 0xFF	; 255
    1c08:	6c 5f       	subi	r22, 0xFC	; 252
    1c0a:	7f 4f       	sbci	r23, 0xFF	; 255
    1c0c:	81 70       	andi	r24, 0x01	; 1
    1c0e:	90 78       	andi	r25, 0x80	; 128
    1c10:	99 23       	and	r25, r25
    1c12:	24 f4       	brge	.+8      	; 0x1c1c <sortCheck+0x31e>
    1c14:	01 97       	sbiw	r24, 0x01	; 1
    1c16:	8e 6f       	ori	r24, 0xFE	; 254
    1c18:	9f 6f       	ori	r25, 0xFF	; 255
    1c1a:	01 96       	adiw	r24, 0x01	; 1
    1c1c:	04 96       	adiw	r24, 0x04	; 4
    1c1e:	07 da       	rcall	.-3058   	; 0x102e <traverseToSort>
			newSort();
    1c20:	bf dc       	rcall	.-1666   	; 0x15a0 <newSort>
			if (ct == 4 || ct == 5)
    1c22:	80 91 a5 02 	lds	r24, 0x02A5
    1c26:	90 91 a6 02 	lds	r25, 0x02A6
    1c2a:	04 97       	sbiw	r24, 0x04	; 4
    1c2c:	02 97       	sbiw	r24, 0x02	; 2
    1c2e:	08 f0       	brcs	.+2      	; 0x1c32 <sortCheck+0x334>
    1c30:	87 c0       	rjmp	.+270    	; 0x1d40 <sortCheck+0x442>
			newSort();
    1c32:	b6 dc       	rcall	.-1684   	; 0x15a0 <newSort>
    1c34:	85 c0       	rjmp	.+266    	; 0x1d40 <sortCheck+0x442>
			return;
		}
		else ct = adj;
    1c36:	90 93 a6 02 	sts	0x02A6, r25
    1c3a:	80 93 a5 02 	sts	0x02A5, r24
		}
		else ct = adj;
	}
	else if (arm[arm0] != color[adj] && arm[arm1] != color[adj])
	{
		if (armCount == 0 || (armCount == 1 && sort[ct % 2] != -1) || ((armCount == 2 || armCount == 1) && (term[adj][0] == color[adj] || term[adj][0] == -1) && (term[adj][1] == color[adj] || term[adj][1] == -1)))
    1c3e:	6f c0       	rjmp	.+222    	; 0x1d1e <sortCheck+0x420>
		}
		else ct = adj;
	}
	else
	{
		if (armCount == 0 && ((visited[adj] == 1 && (term[adj][0] != -1 && term[adj][1] != -1)) || visited[adj] == 0) && sort[ct % 2] == -1)
    1c40:	a0 91 02 02 	lds	r26, 0x0202
    1c44:	b0 91 03 02 	lds	r27, 0x0203
    1c48:	10 97       	sbiw	r26, 0x00	; 0
    1c4a:	c1 f5       	brne	.+112    	; 0x1cbc <sortCheck+0x3be>
    1c4c:	dc 01       	movw	r26, r24
    1c4e:	aa 0f       	add	r26, r26
    1c50:	bb 1f       	adc	r27, r27
    1c52:	ae 57       	subi	r26, 0x7E	; 126
    1c54:	bd 4f       	sbci	r27, 0xFD	; 253
    1c56:	0d 90       	ld	r0, X+
    1c58:	bc 91       	ld	r27, X
    1c5a:	a0 2d       	mov	r26, r0
    1c5c:	a1 30       	cpi	r26, 0x01	; 1
    1c5e:	b1 05       	cpc	r27, r1
    1c60:	d9 f4       	brne	.+54     	; 0x1c98 <sortCheck+0x39a>
    1c62:	dc 01       	movw	r26, r24
    1c64:	aa 0f       	add	r26, r26
    1c66:	bb 1f       	adc	r27, r27
    1c68:	aa 0f       	add	r26, r26
    1c6a:	bb 1f       	adc	r27, r27
    1c6c:	a7 55       	subi	r26, 0x57	; 87
    1c6e:	bd 4f       	sbci	r27, 0xFD	; 253
    1c70:	0d 90       	ld	r0, X+
    1c72:	bc 91       	ld	r27, X
    1c74:	a0 2d       	mov	r26, r0
    1c76:	11 96       	adiw	r26, 0x01	; 1
    1c78:	09 f4       	brne	.+2      	; 0x1c7c <sortCheck+0x37e>
    1c7a:	49 c0       	rjmp	.+146    	; 0x1d0e <sortCheck+0x410>
    1c7c:	dc 01       	movw	r26, r24
    1c7e:	aa 0f       	add	r26, r26
    1c80:	bb 1f       	adc	r27, r27
    1c82:	aa 0f       	add	r26, r26
    1c84:	bb 1f       	adc	r27, r27
    1c86:	a7 55       	subi	r26, 0x57	; 87
    1c88:	bd 4f       	sbci	r27, 0xFD	; 253
    1c8a:	12 96       	adiw	r26, 0x02	; 2
    1c8c:	8d 91       	ld	r24, X+
    1c8e:	9c 91       	ld	r25, X
    1c90:	13 97       	sbiw	r26, 0x03	; 3
    1c92:	01 96       	adiw	r24, 0x01	; 1
    1c94:	19 f4       	brne	.+6      	; 0x1c9c <sortCheck+0x39e>
    1c96:	3b c0       	rjmp	.+118    	; 0x1d0e <sortCheck+0x410>
    1c98:	ab 2b       	or	r26, r27
    1c9a:	c9 f5       	brne	.+114    	; 0x1d0e <sortCheck+0x410>
    1c9c:	2f 3f       	cpi	r18, 0xFF	; 255
    1c9e:	3f 4f       	sbci	r19, 0xFF	; 255
    1ca0:	b1 f5       	brne	.+108    	; 0x1d0e <sortCheck+0x410>
		if (arm[arm0] == color[adj])
    1ca2:	4e 17       	cp	r20, r30
    1ca4:	5f 07       	cpc	r21, r31
    1ca6:	29 f4       	brne	.+10     	; 0x1cb2 <sortCheck+0x3b4>
		sortDrop(arm1, ct % 2);
    1ca8:	6b 2d       	mov	r22, r11
    1caa:	7a 2d       	mov	r23, r10
    1cac:	c8 01       	movw	r24, r16
    1cae:	3c dc       	rcall	.-1928   	; 0x1528 <sortDrop>
    1cb0:	2e c0       	rjmp	.+92     	; 0x1d0e <sortCheck+0x410>
		else sortDrop(arm0, ct % 2);
    1cb2:	6b 2d       	mov	r22, r11
    1cb4:	7a 2d       	mov	r23, r10
    1cb6:	ce 01       	movw	r24, r28
    1cb8:	37 dc       	rcall	.-1938   	; 0x1528 <sortDrop>
    1cba:	29 c0       	rjmp	.+82     	; 0x1d0e <sortCheck+0x410>
		else if (armCount == 1 && (term[adj][0] == -1 || term[adj][1] == -1) && sort[ct % 2] != -1)
    1cbc:	11 97       	sbiw	r26, 0x01	; 1
    1cbe:	39 f5       	brne	.+78     	; 0x1d0e <sortCheck+0x410>
    1cc0:	dc 01       	movw	r26, r24
    1cc2:	aa 0f       	add	r26, r26
    1cc4:	bb 1f       	adc	r27, r27
    1cc6:	aa 0f       	add	r26, r26
    1cc8:	bb 1f       	adc	r27, r27
    1cca:	a7 55       	subi	r26, 0x57	; 87
    1ccc:	bd 4f       	sbci	r27, 0xFD	; 253
    1cce:	4d 91       	ld	r20, X+
    1cd0:	5c 91       	ld	r21, X
    1cd2:	4f 3f       	cpi	r20, 0xFF	; 255
    1cd4:	5f 4f       	sbci	r21, 0xFF	; 255
    1cd6:	69 f0       	breq	.+26     	; 0x1cf2 <sortCheck+0x3f4>
    1cd8:	dc 01       	movw	r26, r24
    1cda:	aa 0f       	add	r26, r26
    1cdc:	bb 1f       	adc	r27, r27
    1cde:	aa 0f       	add	r26, r26
    1ce0:	bb 1f       	adc	r27, r27
    1ce2:	a7 55       	subi	r26, 0x57	; 87
    1ce4:	bd 4f       	sbci	r27, 0xFD	; 253
    1ce6:	12 96       	adiw	r26, 0x02	; 2
    1ce8:	8d 91       	ld	r24, X+
    1cea:	9c 91       	ld	r25, X
    1cec:	13 97       	sbiw	r26, 0x03	; 3
    1cee:	01 96       	adiw	r24, 0x01	; 1
    1cf0:	71 f4       	brne	.+28     	; 0x1d0e <sortCheck+0x410>
    1cf2:	2f 3f       	cpi	r18, 0xFF	; 255
    1cf4:	3f 4f       	sbci	r19, 0xFF	; 255
    1cf6:	59 f0       	breq	.+22     	; 0x1d0e <sortCheck+0x410>
		if (arm[arm0] == -1)
    1cf8:	31 96       	adiw	r30, 0x01	; 1
    1cfa:	29 f4       	brne	.+10     	; 0x1d06 <sortCheck+0x408>
		pickSort(arm0, ct % 2);
    1cfc:	6b 2d       	mov	r22, r11
    1cfe:	7a 2d       	mov	r23, r10
    1d00:	ce 01       	movw	r24, r28
    1d02:	79 db       	rcall	.-2318   	; 0x13f6 <pickSort>
    1d04:	04 c0       	rjmp	.+8      	; 0x1d0e <sortCheck+0x410>
		else	pickSort(arm1, ct % 2);
    1d06:	6b 2d       	mov	r22, r11
    1d08:	7a 2d       	mov	r23, r10
    1d0a:	c8 01       	movw	r24, r16
    1d0c:	74 db       	rcall	.-2328   	; 0x13f6 <pickSort>
		ct = adj;
    1d0e:	80 91 c9 02 	lds	r24, 0x02C9
    1d12:	90 91 ca 02 	lds	r25, 0x02CA
    1d16:	90 93 a6 02 	sts	0x02A6, r25
    1d1a:	80 93 a5 02 	sts	0x02A5, r24
	}
}

int adjCount(int ct)
{
	return (ct + 2) % 4;
    1d1e:	80 91 a5 02 	lds	r24, 0x02A5
    1d22:	90 91 a6 02 	lds	r25, 0x02A6
    1d26:	02 96       	adiw	r24, 0x02	; 2
    1d28:	83 70       	andi	r24, 0x03	; 3
    1d2a:	90 78       	andi	r25, 0x80	; 128
    1d2c:	99 23       	and	r25, r25
    1d2e:	24 f4       	brge	.+8      	; 0x1d38 <sortCheck+0x43a>
    1d30:	01 97       	sbiw	r24, 0x01	; 1
    1d32:	8c 6f       	ori	r24, 0xFC	; 252
    1d34:	9f 6f       	ori	r25, 0xFF	; 255
    1d36:	01 96       	adiw	r24, 0x01	; 1
		if (arm[arm0] == -1)
		pickSort(arm0, ct % 2);
		else	pickSort(arm1, ct % 2);
		ct = adj;
	}
	adj = adjCount(ct);
    1d38:	90 93 ca 02 	sts	0x02CA, r25
    1d3c:	80 93 c9 02 	sts	0x02C9, r24
}
    1d40:	df 91       	pop	r29
    1d42:	cf 91       	pop	r28
    1d44:	1f 91       	pop	r17
    1d46:	0f 91       	pop	r16
    1d48:	ff 90       	pop	r15
    1d4a:	ef 90       	pop	r14
    1d4c:	df 90       	pop	r13
    1d4e:	cf 90       	pop	r12
    1d50:	bf 90       	pop	r11
    1d52:	af 90       	pop	r10
    1d54:	9f 90       	pop	r9
    1d56:	8f 90       	pop	r8
    1d58:	08 95       	ret

00001d5a <terminalCheck1>:
int adjCount(int ct)
{
	return (ct + 2) % 4;
}
void terminalCheck1()
{
    1d5a:	cf 93       	push	r28
    1d5c:	df 93       	push	r29
	if (ct != ot)
    1d5e:	80 91 78 02 	lds	r24, 0x0278
    1d62:	90 91 79 02 	lds	r25, 0x0279
    1d66:	20 91 a5 02 	lds	r18, 0x02A5
    1d6a:	30 91 a6 02 	lds	r19, 0x02A6
    1d6e:	28 17       	cp	r18, r24
    1d70:	39 07       	cpc	r19, r25
    1d72:	a1 f1       	breq	.+104    	; 0x1ddc <terminalCheck1+0x82>
	{
		if (dir == 1 || dir == 3)
    1d74:	20 91 76 02 	lds	r18, 0x0276
    1d78:	30 91 77 02 	lds	r19, 0x0277
    1d7c:	2d 7f       	andi	r18, 0xFD	; 253
    1d7e:	21 30       	cpi	r18, 0x01	; 1
    1d80:	31 05       	cpc	r19, r1
    1d82:	51 f4       	brne	.+20     	; 0x1d98 <terminalCheck1+0x3e>
		{
			if (ot == 3 || ot == 0)
    1d84:	83 30       	cpi	r24, 0x03	; 3
    1d86:	91 05       	cpc	r25, r1
    1d88:	11 f0       	breq	.+4      	; 0x1d8e <terminalCheck1+0x34>
    1d8a:	89 2b       	or	r24, r25
    1d8c:	19 f4       	brne	.+6      	; 0x1d94 <terminalCheck1+0x3a>
			turnRight();
    1d8e:	0e 94 a2 05 	call	0xb44	; 0xb44 <turnRight>
    1d92:	02 c0       	rjmp	.+4      	; 0x1d98 <terminalCheck1+0x3e>
			else turnLeft();
    1d94:	0e 94 77 05 	call	0xaee	; 0xaee <turnLeft>
		}
		if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    1d98:	80 91 a5 02 	lds	r24, 0x02A5
    1d9c:	90 91 a6 02 	lds	r25, 0x02A6
    1da0:	82 30       	cpi	r24, 0x02	; 2
    1da2:	91 05       	cpc	r25, r1
    1da4:	38 f4       	brcc	.+14     	; 0x1db4 <terminalCheck1+0x5a>
    1da6:	20 91 76 02 	lds	r18, 0x0276
    1daa:	30 91 77 02 	lds	r19, 0x0277
    1dae:	22 30       	cpi	r18, 0x02	; 2
    1db0:	31 05       	cpc	r19, r1
    1db2:	49 f0       	breq	.+18     	; 0x1dc6 <terminalCheck1+0x6c>
    1db4:	02 97       	sbiw	r24, 0x02	; 2
    1db6:	02 97       	sbiw	r24, 0x02	; 2
    1db8:	40 f4       	brcc	.+16     	; 0x1dca <terminalCheck1+0x70>
    1dba:	80 91 76 02 	lds	r24, 0x0276
    1dbe:	90 91 77 02 	lds	r25, 0x0277
    1dc2:	89 2b       	or	r24, r25
    1dc4:	11 f4       	brne	.+4      	; 0x1dca <terminalCheck1+0x70>
		turn();
    1dc6:	0e 94 64 05 	call	0xac8	; 0xac8 <turn>
		front();
    1dca:	26 d9       	rcall	.-3508   	; 0x1018 <front>
		ot = ct;
    1dcc:	80 91 a5 02 	lds	r24, 0x02A5
    1dd0:	90 91 a6 02 	lds	r25, 0x02A6
    1dd4:	90 93 79 02 	sts	0x0279, r25
    1dd8:	80 93 78 02 	sts	0x0278, r24
	}
	lcd_print(1,1,1111,4);
    1ddc:	24 e0       	ldi	r18, 0x04	; 4
    1dde:	30 e0       	ldi	r19, 0x00	; 0
    1de0:	47 e5       	ldi	r20, 0x57	; 87
    1de2:	54 e0       	ldi	r21, 0x04	; 4
    1de4:	61 e0       	ldi	r22, 0x01	; 1
    1de6:	81 e0       	ldi	r24, 0x01	; 1
    1de8:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
	//printf("Enter term[%d][%d]\n", ct, 0);
	//scanf("%d", &term[ct][0]);
	term[ct][0]=sharpRight();
    1dec:	c0 91 a5 02 	lds	r28, 0x02A5
    1df0:	d0 91 a6 02 	lds	r29, 0x02A6
    1df4:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <sharpRight>
    1df8:	cc 0f       	add	r28, r28
    1dfa:	dd 1f       	adc	r29, r29
    1dfc:	cc 0f       	add	r28, r28
    1dfe:	dd 1f       	adc	r29, r29
    1e00:	c7 55       	subi	r28, 0x57	; 87
    1e02:	dd 4f       	sbci	r29, 0xFD	; 253
    1e04:	90 e0       	ldi	r25, 0x00	; 0
    1e06:	99 83       	std	Y+1, r25	; 0x01
    1e08:	88 83       	st	Y, r24
	lcd((char*)term[ct][0]);
    1e0a:	e0 91 a5 02 	lds	r30, 0x02A5
    1e0e:	f0 91 a6 02 	lds	r31, 0x02A6
    1e12:	ee 0f       	add	r30, r30
    1e14:	ff 1f       	adc	r31, r31
    1e16:	ee 0f       	add	r30, r30
    1e18:	ff 1f       	adc	r31, r31
    1e1a:	e7 55       	subi	r30, 0x57	; 87
    1e1c:	fd 4f       	sbci	r31, 0xFD	; 253
    1e1e:	80 81       	ld	r24, Z
    1e20:	91 81       	ldd	r25, Z+1	; 0x01
    1e22:	0e 94 4e 06 	call	0xc9c	; 0xc9c <lcd>
	if (term[ct][0] == -1 || term[ct][0] == color[ct])
    1e26:	20 91 a5 02 	lds	r18, 0x02A5
    1e2a:	30 91 a6 02 	lds	r19, 0x02A6
    1e2e:	f9 01       	movw	r30, r18
    1e30:	ee 0f       	add	r30, r30
    1e32:	ff 1f       	adc	r31, r31
    1e34:	ee 0f       	add	r30, r30
    1e36:	ff 1f       	adc	r31, r31
    1e38:	e7 55       	subi	r30, 0x57	; 87
    1e3a:	fd 4f       	sbci	r31, 0xFD	; 253
    1e3c:	80 81       	ld	r24, Z
    1e3e:	91 81       	ldd	r25, Z+1	; 0x01
    1e40:	8f 3f       	cpi	r24, 0xFF	; 255
    1e42:	4f ef       	ldi	r20, 0xFF	; 255
    1e44:	94 07       	cpc	r25, r20
    1e46:	51 f0       	breq	.+20     	; 0x1e5c <terminalCheck1+0x102>
    1e48:	f9 01       	movw	r30, r18
    1e4a:	ee 0f       	add	r30, r30
    1e4c:	ff 1f       	adc	r31, r31
    1e4e:	e7 54       	subi	r30, 0x47	; 71
    1e50:	fd 4f       	sbci	r31, 0xFD	; 253
    1e52:	20 81       	ld	r18, Z
    1e54:	31 81       	ldd	r19, Z+1	; 0x01
    1e56:	82 17       	cp	r24, r18
    1e58:	93 07       	cpc	r25, r19
    1e5a:	49 f4       	brne	.+18     	; 0x1e6e <terminalCheck1+0x114>
	total--;
    1e5c:	80 91 00 02 	lds	r24, 0x0200
    1e60:	90 91 01 02 	lds	r25, 0x0201
    1e64:	01 97       	sbiw	r24, 0x01	; 1
    1e66:	90 93 01 02 	sts	0x0201, r25
    1e6a:	80 93 00 02 	sts	0x0200, r24
}
    1e6e:	df 91       	pop	r29
    1e70:	cf 91       	pop	r28
    1e72:	08 95       	ret

00001e74 <terminalCheck2>:
void terminalCheck2()
{
    1e74:	cf 93       	push	r28
    1e76:	df 93       	push	r29
	if (((ct == 0 || ct == 1) && dir == 0) || ((ct == 2 || ct == 3) && dir == 2))
    1e78:	80 91 a5 02 	lds	r24, 0x02A5
    1e7c:	90 91 a6 02 	lds	r25, 0x02A6
    1e80:	82 30       	cpi	r24, 0x02	; 2
    1e82:	91 05       	cpc	r25, r1
    1e84:	30 f4       	brcc	.+12     	; 0x1e92 <terminalCheck2+0x1e>
    1e86:	20 91 76 02 	lds	r18, 0x0276
    1e8a:	30 91 77 02 	lds	r19, 0x0277
    1e8e:	23 2b       	or	r18, r19
    1e90:	49 f0       	breq	.+18     	; 0x1ea4 <terminalCheck2+0x30>
    1e92:	02 97       	sbiw	r24, 0x02	; 2
    1e94:	02 97       	sbiw	r24, 0x02	; 2
    1e96:	40 f4       	brcc	.+16     	; 0x1ea8 <terminalCheck2+0x34>
    1e98:	80 91 76 02 	lds	r24, 0x0276
    1e9c:	90 91 77 02 	lds	r25, 0x0277
    1ea0:	02 97       	sbiw	r24, 0x02	; 2
    1ea2:	11 f4       	brne	.+4      	; 0x1ea8 <terminalCheck2+0x34>
		turnLeft();
    1ea4:	0e 94 77 05 	call	0xaee	; 0xaee <turnLeft>
	//..printf("Enter term[%d][%d]\n", ct, 1);
	//..scanf("%d", &term[ct][1]);
	term[ct][1]=sharpLeft();
    1ea8:	c0 91 a5 02 	lds	r28, 0x02A5
    1eac:	d0 91 a6 02 	lds	r29, 0x02A6
    1eb0:	0e 94 81 04 	call	0x902	; 0x902 <sharpLeft>
    1eb4:	cc 0f       	add	r28, r28
    1eb6:	dd 1f       	adc	r29, r29
    1eb8:	cc 0f       	add	r28, r28
    1eba:	dd 1f       	adc	r29, r29
    1ebc:	c7 55       	subi	r28, 0x57	; 87
    1ebe:	dd 4f       	sbci	r29, 0xFD	; 253
    1ec0:	90 e0       	ldi	r25, 0x00	; 0
    1ec2:	9b 83       	std	Y+3, r25	; 0x03
    1ec4:	8a 83       	std	Y+2, r24	; 0x02
	lcd((char*)term[ct][1]);
    1ec6:	e0 91 a5 02 	lds	r30, 0x02A5
    1eca:	f0 91 a6 02 	lds	r31, 0x02A6
    1ece:	ee 0f       	add	r30, r30
    1ed0:	ff 1f       	adc	r31, r31
    1ed2:	ee 0f       	add	r30, r30
    1ed4:	ff 1f       	adc	r31, r31
    1ed6:	e7 55       	subi	r30, 0x57	; 87
    1ed8:	fd 4f       	sbci	r31, 0xFD	; 253
    1eda:	82 81       	ldd	r24, Z+2	; 0x02
    1edc:	93 81       	ldd	r25, Z+3	; 0x03
    1ede:	0e 94 4e 06 	call	0xc9c	; 0xc9c <lcd>
	if (term[ct][1] == -1 || term[ct][1] == color[ct])
    1ee2:	80 91 a5 02 	lds	r24, 0x02A5
    1ee6:	90 91 a6 02 	lds	r25, 0x02A6
    1eea:	fc 01       	movw	r30, r24
    1eec:	ee 0f       	add	r30, r30
    1eee:	ff 1f       	adc	r31, r31
    1ef0:	ee 0f       	add	r30, r30
    1ef2:	ff 1f       	adc	r31, r31
    1ef4:	e7 55       	subi	r30, 0x57	; 87
    1ef6:	fd 4f       	sbci	r31, 0xFD	; 253
    1ef8:	22 81       	ldd	r18, Z+2	; 0x02
    1efa:	33 81       	ldd	r19, Z+3	; 0x03
    1efc:	2f 3f       	cpi	r18, 0xFF	; 255
    1efe:	4f ef       	ldi	r20, 0xFF	; 255
    1f00:	34 07       	cpc	r19, r20
    1f02:	51 f0       	breq	.+20     	; 0x1f18 <terminalCheck2+0xa4>
    1f04:	fc 01       	movw	r30, r24
    1f06:	ee 0f       	add	r30, r30
    1f08:	ff 1f       	adc	r31, r31
    1f0a:	e7 54       	subi	r30, 0x47	; 71
    1f0c:	fd 4f       	sbci	r31, 0xFD	; 253
    1f0e:	40 81       	ld	r20, Z
    1f10:	51 81       	ldd	r21, Z+1	; 0x01
    1f12:	24 17       	cp	r18, r20
    1f14:	35 07       	cpc	r19, r21
    1f16:	51 f4       	brne	.+20     	; 0x1f2c <terminalCheck2+0xb8>
	total--;
    1f18:	20 91 00 02 	lds	r18, 0x0200
    1f1c:	30 91 01 02 	lds	r19, 0x0201
    1f20:	21 50       	subi	r18, 0x01	; 1
    1f22:	31 09       	sbc	r19, r1
    1f24:	30 93 01 02 	sts	0x0201, r19
    1f28:	20 93 00 02 	sts	0x0200, r18
	visited[ct] = 1;
    1f2c:	fc 01       	movw	r30, r24
    1f2e:	ee 0f       	add	r30, r30
    1f30:	ff 1f       	adc	r31, r31
    1f32:	ee 57       	subi	r30, 0x7E	; 126
    1f34:	fd 4f       	sbci	r31, 0xFD	; 253
    1f36:	81 e0       	ldi	r24, 0x01	; 1
    1f38:	90 e0       	ldi	r25, 0x00	; 0
    1f3a:	91 83       	std	Z+1, r25	; 0x01
    1f3c:	80 83       	st	Z, r24
	visitedCount++;
    1f3e:	80 91 7a 02 	lds	r24, 0x027A
    1f42:	90 91 7b 02 	lds	r25, 0x027B
    1f46:	01 96       	adiw	r24, 0x01	; 1
    1f48:	90 93 7b 02 	sts	0x027B, r25
    1f4c:	80 93 7a 02 	sts	0x027A, r24
}
    1f50:	df 91       	pop	r29
    1f52:	cf 91       	pop	r28
    1f54:	08 95       	ret

00001f56 <pickup>:
	pick(armNo);
	sort[sortNo] = -1;
	//..printf("Arm %d picked %d from sort[%d]\n", armNo, arm[armNo], sortNo);
}
void pickup()
{
    1f56:	ef 92       	push	r14
    1f58:	ff 92       	push	r15
    1f5a:	0f 93       	push	r16
    1f5c:	1f 93       	push	r17
    1f5e:	cf 93       	push	r28
    1f60:	df 93       	push	r29
	lcd("pickup");
    1f62:	8d e5       	ldi	r24, 0x5D	; 93
    1f64:	92 e0       	ldi	r25, 0x02	; 2
    1f66:	0e 94 4e 06 	call	0xc9c	; 0xc9c <lcd>
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    1f6a:	20 91 a5 02 	lds	r18, 0x02A5
    1f6e:	30 91 a6 02 	lds	r19, 0x02A6
    1f72:	22 30       	cpi	r18, 0x02	; 2
    1f74:	31 05       	cpc	r19, r1
    1f76:	30 f4       	brcc	.+12     	; 0x1f84 <pickup+0x2e>
    1f78:	80 91 76 02 	lds	r24, 0x0276
    1f7c:	90 91 77 02 	lds	r25, 0x0277
    1f80:	02 97       	sbiw	r24, 0x02	; 2
    1f82:	79 f0       	breq	.+30     	; 0x1fa2 <pickup+0x4c>
    1f84:	c9 01       	movw	r24, r18
    1f86:	02 97       	sbiw	r24, 0x02	; 2
    1f88:	02 97       	sbiw	r24, 0x02	; 2
    1f8a:	80 f4       	brcc	.+32     	; 0x1fac <pickup+0x56>
    1f8c:	80 91 76 02 	lds	r24, 0x0276
    1f90:	90 91 77 02 	lds	r25, 0x0277
    1f94:	89 2b       	or	r24, r25
    1f96:	79 f0       	breq	.+30     	; 0x1fb6 <pickup+0x60>
	//..printf("Arm %d picked %d from sort[%d]\n", armNo, arm[armNo], sortNo);
}
void pickup()
{
	lcd("pickup");
	int arm0 = 0, arm1 = 1;
    1f98:	c1 e0       	ldi	r28, 0x01	; 1
    1f9a:	d0 e0       	ldi	r29, 0x00	; 0
    1f9c:	00 e0       	ldi	r16, 0x00	; 0
    1f9e:	10 e0       	ldi	r17, 0x00	; 0
    1fa0:	0e c0       	rjmp	.+28     	; 0x1fbe <pickup+0x68>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    1fa2:	c0 e0       	ldi	r28, 0x00	; 0
    1fa4:	d0 e0       	ldi	r29, 0x00	; 0
{
	lcd("pickup");
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    1fa6:	01 e0       	ldi	r16, 0x01	; 1
    1fa8:	10 e0       	ldi	r17, 0x00	; 0
    1faa:	09 c0       	rjmp	.+18     	; 0x1fbe <pickup+0x68>
	//..printf("Arm %d picked %d from sort[%d]\n", armNo, arm[armNo], sortNo);
}
void pickup()
{
	lcd("pickup");
	int arm0 = 0, arm1 = 1;
    1fac:	c1 e0       	ldi	r28, 0x01	; 1
    1fae:	d0 e0       	ldi	r29, 0x00	; 0
    1fb0:	00 e0       	ldi	r16, 0x00	; 0
    1fb2:	10 e0       	ldi	r17, 0x00	; 0
    1fb4:	04 c0       	rjmp	.+8      	; 0x1fbe <pickup+0x68>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    1fb6:	c0 e0       	ldi	r28, 0x00	; 0
    1fb8:	d0 e0       	ldi	r29, 0x00	; 0
{
	lcd("pickup");
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    1fba:	01 e0       	ldi	r16, 0x01	; 1
    1fbc:	10 e0       	ldi	r17, 0x00	; 0
		arm1 = 0;
	}
	if (visited[ct] == 0)
    1fbe:	f9 01       	movw	r30, r18
    1fc0:	ee 0f       	add	r30, r30
    1fc2:	ff 1f       	adc	r31, r31
    1fc4:	ee 57       	subi	r30, 0x7E	; 126
    1fc6:	fd 4f       	sbci	r31, 0xFD	; 253
    1fc8:	40 81       	ld	r20, Z
    1fca:	51 81       	ldd	r21, Z+1	; 0x01
    1fcc:	45 2b       	or	r20, r21
    1fce:	09 f0       	breq	.+2      	; 0x1fd2 <pickup+0x7c>
    1fd0:	28 c2       	rjmp	.+1104   	; 0x2422 <__stack+0x223>
	{
		if (term[ct][0] == -2)
    1fd2:	f9 01       	movw	r30, r18
    1fd4:	ee 0f       	add	r30, r30
    1fd6:	ff 1f       	adc	r31, r31
    1fd8:	ee 0f       	add	r30, r30
    1fda:	ff 1f       	adc	r31, r31
    1fdc:	e7 55       	subi	r30, 0x57	; 87
    1fde:	fd 4f       	sbci	r31, 0xFD	; 253
    1fe0:	80 81       	ld	r24, Z
    1fe2:	91 81       	ldd	r25, Z+1	; 0x01
    1fe4:	02 96       	adiw	r24, 0x02	; 2
    1fe6:	19 f4       	brne	.+6      	; 0x1fee <pickup+0x98>
		{
			terminalCheck1();
    1fe8:	b8 de       	rcall	.-656    	; 0x1d5a <terminalCheck1>
			terminalCheck2();
    1fea:	44 df       	rcall	.-376    	; 0x1e74 <terminalCheck2>
    1fec:	01 c0       	rjmp	.+2      	; 0x1ff0 <pickup+0x9a>
		}
		else
		terminalCheck2();
    1fee:	42 df       	rcall	.-380    	; 0x1e74 <terminalCheck2>
		if ((term[ct][0] != color[ct] && term[ct][0] != -1) || (term[ct][1] != color[ct] && term[ct][1] != -1))
    1ff0:	20 91 a5 02 	lds	r18, 0x02A5
    1ff4:	30 91 a6 02 	lds	r19, 0x02A6
    1ff8:	f9 01       	movw	r30, r18
    1ffa:	ee 0f       	add	r30, r30
    1ffc:	ff 1f       	adc	r31, r31
    1ffe:	ee 0f       	add	r30, r30
    2000:	ff 1f       	adc	r31, r31
    2002:	e7 55       	subi	r30, 0x57	; 87
    2004:	fd 4f       	sbci	r31, 0xFD	; 253
    2006:	80 81       	ld	r24, Z
    2008:	91 81       	ldd	r25, Z+1	; 0x01
    200a:	f9 01       	movw	r30, r18
    200c:	ee 0f       	add	r30, r30
    200e:	ff 1f       	adc	r31, r31
    2010:	e7 54       	subi	r30, 0x47	; 71
    2012:	fd 4f       	sbci	r31, 0xFD	; 253
    2014:	40 81       	ld	r20, Z
    2016:	51 81       	ldd	r21, Z+1	; 0x01
    2018:	84 17       	cp	r24, r20
    201a:	95 07       	cpc	r25, r21
    201c:	21 f0       	breq	.+8      	; 0x2026 <pickup+0xd0>
    201e:	8f 3f       	cpi	r24, 0xFF	; 255
    2020:	6f ef       	ldi	r22, 0xFF	; 255
    2022:	96 07       	cpc	r25, r22
    2024:	89 f4       	brne	.+34     	; 0x2048 <pickup+0xf2>
    2026:	f9 01       	movw	r30, r18
    2028:	ee 0f       	add	r30, r30
    202a:	ff 1f       	adc	r31, r31
    202c:	ee 0f       	add	r30, r30
    202e:	ff 1f       	adc	r31, r31
    2030:	e7 55       	subi	r30, 0x57	; 87
    2032:	fd 4f       	sbci	r31, 0xFD	; 253
    2034:	62 81       	ldd	r22, Z+2	; 0x02
    2036:	73 81       	ldd	r23, Z+3	; 0x03
    2038:	46 17       	cp	r20, r22
    203a:	57 07       	cpc	r21, r23
    203c:	09 f4       	brne	.+2      	; 0x2040 <pickup+0xea>
    203e:	f1 c1       	rjmp	.+994    	; 0x2422 <__stack+0x223>
    2040:	6f 3f       	cpi	r22, 0xFF	; 255
    2042:	7f 4f       	sbci	r23, 0xFF	; 255
    2044:	09 f4       	brne	.+2      	; 0x2048 <pickup+0xf2>
    2046:	ed c1       	rjmp	.+986    	; 0x2422 <__stack+0x223>
		{
			if (armCount == 2)
    2048:	60 91 02 02 	lds	r22, 0x0202
    204c:	70 91 03 02 	lds	r23, 0x0203
    2050:	62 30       	cpi	r22, 0x02	; 2
    2052:	71 05       	cpc	r23, r1
    2054:	09 f0       	breq	.+2      	; 0x2058 <pickup+0x102>
    2056:	af c0       	rjmp	.+350    	; 0x21b6 <pickup+0x260>
			{
				if (term[ct][0] == color[adj] || term[ct][1] == color[adj])
    2058:	e0 91 c9 02 	lds	r30, 0x02C9
    205c:	f0 91 ca 02 	lds	r31, 0x02CA
    2060:	df 01       	movw	r26, r30
    2062:	aa 0f       	add	r26, r26
    2064:	bb 1f       	adc	r27, r27
    2066:	a7 54       	subi	r26, 0x47	; 71
    2068:	bd 4f       	sbci	r27, 0xFD	; 253
    206a:	6d 91       	ld	r22, X+
    206c:	7c 91       	ld	r23, X
    206e:	86 17       	cp	r24, r22
    2070:	97 07       	cpc	r25, r23
    2072:	79 f0       	breq	.+30     	; 0x2092 <pickup+0x13c>
    2074:	d9 01       	movw	r26, r18
    2076:	aa 0f       	add	r26, r26
    2078:	bb 1f       	adc	r27, r27
    207a:	aa 0f       	add	r26, r26
    207c:	bb 1f       	adc	r27, r27
    207e:	a7 55       	subi	r26, 0x57	; 87
    2080:	bd 4f       	sbci	r27, 0xFD	; 253
    2082:	12 96       	adiw	r26, 0x02	; 2
    2084:	ed 90       	ld	r14, X+
    2086:	fc 90       	ld	r15, X
    2088:	13 97       	sbiw	r26, 0x03	; 3
    208a:	6e 15       	cp	r22, r14
    208c:	7f 05       	cpc	r23, r15
    208e:	59 f4       	brne	.+22     	; 0x20a6 <pickup+0x150>
    2090:	05 c0       	rjmp	.+10     	; 0x209c <pickup+0x146>
				{
					if (term[ct][0] == color[adj])
					pickNode(arm0, 0);
    2092:	60 e0       	ldi	r22, 0x00	; 0
    2094:	70 e0       	ldi	r23, 0x00	; 0
    2096:	c8 01       	movw	r24, r16
    2098:	21 d9       	rcall	.-3518   	; 0x12dc <pickNode>
    209a:	8d c0       	rjmp	.+282    	; 0x21b6 <pickup+0x260>
					else	pickNode(arm1, 1);
    209c:	61 e0       	ldi	r22, 0x01	; 1
    209e:	70 e0       	ldi	r23, 0x00	; 0
    20a0:	ce 01       	movw	r24, r28
    20a2:	1c d9       	rcall	.-3528   	; 0x12dc <pickNode>
    20a4:	88 c0       	rjmp	.+272    	; 0x21b6 <pickup+0x260>
				}
				else	if ((term[ct][1] != color[ct]) && term[ct][1] != -1)
    20a6:	4e 15       	cp	r20, r14
    20a8:	5f 05       	cpc	r21, r15
    20aa:	09 f4       	brne	.+2      	; 0x20ae <pickup+0x158>
    20ac:	4e c0       	rjmp	.+156    	; 0x214a <pickup+0x1f4>
    20ae:	ef 20       	and	r14, r15
    20b0:	e0 94       	com	r14
    20b2:	09 f4       	brne	.+2      	; 0x20b6 <pickup+0x160>
    20b4:	4a c0       	rjmp	.+148    	; 0x214a <pickup+0x1f4>
				{
					if (term[ct][0] != color[ct] && term[ct][0] != -1)
    20b6:	84 17       	cp	r24, r20
    20b8:	95 07       	cpc	r25, r21
    20ba:	69 f0       	breq	.+26     	; 0x20d6 <pickup+0x180>
    20bc:	8f 3f       	cpi	r24, 0xFF	; 255
    20be:	af ef       	ldi	r26, 0xFF	; 255
    20c0:	9a 07       	cpc	r25, r26
    20c2:	49 f0       	breq	.+18     	; 0x20d6 <pickup+0x180>
					{
						pickNode(arm1, 1);
    20c4:	61 e0       	ldi	r22, 0x01	; 1
    20c6:	70 e0       	ldi	r23, 0x00	; 0
    20c8:	ce 01       	movw	r24, r28
    20ca:	08 d9       	rcall	.-3568   	; 0x12dc <pickNode>
						pickNode(arm0, 0);
    20cc:	60 e0       	ldi	r22, 0x00	; 0
    20ce:	70 e0       	ldi	r23, 0x00	; 0
    20d0:	c8 01       	movw	r24, r16
    20d2:	04 d9       	rcall	.-3576   	; 0x12dc <pickNode>
    20d4:	70 c0       	rjmp	.+224    	; 0x21b6 <pickup+0x260>
					}
					else if (sort[ct % 2] == -1 || ((term[adj][0] == color[adj] || term[adj][0] == -1) || (term[adj][1] == color[adj] || term[adj][1] == -1)) || (term[ct][0] == color[ct] || term[ct][1] == color[ct]))
    20d6:	21 70       	andi	r18, 0x01	; 1
    20d8:	30 78       	andi	r19, 0x80	; 128
    20da:	33 23       	and	r19, r19
    20dc:	34 f4       	brge	.+12     	; 0x20ea <pickup+0x194>
    20de:	21 50       	subi	r18, 0x01	; 1
    20e0:	31 09       	sbc	r19, r1
    20e2:	2e 6f       	ori	r18, 0xFE	; 254
    20e4:	3f 6f       	ori	r19, 0xFF	; 255
    20e6:	2f 5f       	subi	r18, 0xFF	; 255
    20e8:	3f 4f       	sbci	r19, 0xFF	; 255
    20ea:	d9 01       	movw	r26, r18
    20ec:	aa 0f       	add	r26, r26
    20ee:	bb 1f       	adc	r27, r27
    20f0:	af 55       	subi	r26, 0x5F	; 95
    20f2:	bd 4f       	sbci	r27, 0xFD	; 253
    20f4:	2d 91       	ld	r18, X+
    20f6:	3c 91       	ld	r19, X
    20f8:	2f 3f       	cpi	r18, 0xFF	; 255
    20fa:	3f 4f       	sbci	r19, 0xFF	; 255
    20fc:	09 f1       	breq	.+66     	; 0x2140 <pickup+0x1ea>
    20fe:	df 01       	movw	r26, r30
    2100:	aa 0f       	add	r26, r26
    2102:	bb 1f       	adc	r27, r27
    2104:	aa 0f       	add	r26, r26
    2106:	bb 1f       	adc	r27, r27
    2108:	a7 55       	subi	r26, 0x57	; 87
    210a:	bd 4f       	sbci	r27, 0xFD	; 253
    210c:	2d 91       	ld	r18, X+
    210e:	3c 91       	ld	r19, X
    2110:	62 17       	cp	r22, r18
    2112:	73 07       	cpc	r23, r19
    2114:	a9 f0       	breq	.+42     	; 0x2140 <pickup+0x1ea>
    2116:	2f 3f       	cpi	r18, 0xFF	; 255
    2118:	3f 4f       	sbci	r19, 0xFF	; 255
    211a:	91 f0       	breq	.+36     	; 0x2140 <pickup+0x1ea>
    211c:	ee 0f       	add	r30, r30
    211e:	ff 1f       	adc	r31, r31
    2120:	ee 0f       	add	r30, r30
    2122:	ff 1f       	adc	r31, r31
    2124:	e7 55       	subi	r30, 0x57	; 87
    2126:	fd 4f       	sbci	r31, 0xFD	; 253
    2128:	22 81       	ldd	r18, Z+2	; 0x02
    212a:	33 81       	ldd	r19, Z+3	; 0x03
    212c:	62 17       	cp	r22, r18
    212e:	73 07       	cpc	r23, r19
    2130:	39 f0       	breq	.+14     	; 0x2140 <pickup+0x1ea>
    2132:	2f 3f       	cpi	r18, 0xFF	; 255
    2134:	3f 4f       	sbci	r19, 0xFF	; 255
    2136:	21 f0       	breq	.+8      	; 0x2140 <pickup+0x1ea>
    2138:	84 17       	cp	r24, r20
    213a:	95 07       	cpc	r25, r21
    213c:	09 f0       	breq	.+2      	; 0x2140 <pickup+0x1ea>
    213e:	71 c1       	rjmp	.+738    	; 0x2422 <__stack+0x223>
					pickNode(arm1, 1);
    2140:	61 e0       	ldi	r22, 0x01	; 1
    2142:	70 e0       	ldi	r23, 0x00	; 0
    2144:	ce 01       	movw	r24, r28
    2146:	ca d8       	rcall	.-3692   	; 0x12dc <pickNode>
    2148:	36 c0       	rjmp	.+108    	; 0x21b6 <pickup+0x260>
				}
				else	if (term[ct][0] != color[ct] && term[ct][0] != -1)
    214a:	84 17       	cp	r24, r20
    214c:	95 07       	cpc	r25, r21
    214e:	09 f4       	brne	.+2      	; 0x2152 <pickup+0x1fc>
    2150:	68 c1       	rjmp	.+720    	; 0x2422 <__stack+0x223>
    2152:	01 96       	adiw	r24, 0x01	; 1
    2154:	09 f4       	brne	.+2      	; 0x2158 <pickup+0x202>
    2156:	65 c1       	rjmp	.+714    	; 0x2422 <__stack+0x223>
				{
					if (sort[ct % 2] == -1 || ((term[adj][0] == color[adj] || term[adj][0] == -1) || (term[adj][1] == color[adj] || term[adj][1] == -1)))
    2158:	21 70       	andi	r18, 0x01	; 1
    215a:	30 78       	andi	r19, 0x80	; 128
    215c:	33 23       	and	r19, r19
    215e:	34 f4       	brge	.+12     	; 0x216c <pickup+0x216>
    2160:	21 50       	subi	r18, 0x01	; 1
    2162:	31 09       	sbc	r19, r1
    2164:	2e 6f       	ori	r18, 0xFE	; 254
    2166:	3f 6f       	ori	r19, 0xFF	; 255
    2168:	2f 5f       	subi	r18, 0xFF	; 255
    216a:	3f 4f       	sbci	r19, 0xFF	; 255
    216c:	d9 01       	movw	r26, r18
    216e:	aa 0f       	add	r26, r26
    2170:	bb 1f       	adc	r27, r27
    2172:	af 55       	subi	r26, 0x5F	; 95
    2174:	bd 4f       	sbci	r27, 0xFD	; 253
    2176:	8d 91       	ld	r24, X+
    2178:	9c 91       	ld	r25, X
    217a:	01 96       	adiw	r24, 0x01	; 1
    217c:	c1 f0       	breq	.+48     	; 0x21ae <pickup+0x258>
    217e:	df 01       	movw	r26, r30
    2180:	aa 0f       	add	r26, r26
    2182:	bb 1f       	adc	r27, r27
    2184:	aa 0f       	add	r26, r26
    2186:	bb 1f       	adc	r27, r27
    2188:	a7 55       	subi	r26, 0x57	; 87
    218a:	bd 4f       	sbci	r27, 0xFD	; 253
    218c:	8d 91       	ld	r24, X+
    218e:	9c 91       	ld	r25, X
    2190:	11 97       	sbiw	r26, 0x01	; 1
    2192:	68 17       	cp	r22, r24
    2194:	79 07       	cpc	r23, r25
    2196:	59 f0       	breq	.+22     	; 0x21ae <pickup+0x258>
    2198:	01 96       	adiw	r24, 0x01	; 1
    219a:	49 f0       	breq	.+18     	; 0x21ae <pickup+0x258>
    219c:	fd 01       	movw	r30, r26
    219e:	82 81       	ldd	r24, Z+2	; 0x02
    21a0:	93 81       	ldd	r25, Z+3	; 0x03
    21a2:	68 17       	cp	r22, r24
    21a4:	79 07       	cpc	r23, r25
    21a6:	19 f0       	breq	.+6      	; 0x21ae <pickup+0x258>
    21a8:	01 96       	adiw	r24, 0x01	; 1
    21aa:	09 f0       	breq	.+2      	; 0x21ae <pickup+0x258>
    21ac:	3a c1       	rjmp	.+628    	; 0x2422 <__stack+0x223>
					pickNode(arm0, 0);
    21ae:	60 e0       	ldi	r22, 0x00	; 0
    21b0:	70 e0       	ldi	r23, 0x00	; 0
    21b2:	c8 01       	movw	r24, r16
    21b4:	93 d8       	rcall	.-3802   	; 0x12dc <pickNode>
				}
				else	if (term[ct][0] != color[ct] && term[ct][0] != -1)
				pickNode(arm0, 0);

			}
			if (armCount == 1)
    21b6:	80 91 02 02 	lds	r24, 0x0202
    21ba:	90 91 03 02 	lds	r25, 0x0203
    21be:	01 97       	sbiw	r24, 0x01	; 1
    21c0:	09 f0       	breq	.+2      	; 0x21c4 <pickup+0x26e>
    21c2:	2f c1       	rjmp	.+606    	; 0x2422 <__stack+0x223>
			{
				int a1, a2;
				if (arm[arm0] == -1)
    21c4:	f8 01       	movw	r30, r16
    21c6:	ee 0f       	add	r30, r30
    21c8:	ff 1f       	adc	r31, r31
    21ca:	e3 53       	subi	r30, 0x33	; 51
    21cc:	fd 4f       	sbci	r31, 0xFD	; 253
    21ce:	80 81       	ld	r24, Z
    21d0:	91 81       	ldd	r25, Z+1	; 0x01
    21d2:	01 96       	adiw	r24, 0x01	; 1
    21d4:	09 f4       	brne	.+2      	; 0x21d8 <pickup+0x282>
				a1 = arm0;
    21d6:	e8 01       	movw	r28, r16
				else a1 = arm1;
				a2 = (a1 + 1) % 2;
    21d8:	be 01       	movw	r22, r28
    21da:	6f 5f       	subi	r22, 0xFF	; 255
    21dc:	7f 4f       	sbci	r23, 0xFF	; 255
    21de:	61 70       	andi	r22, 0x01	; 1
    21e0:	70 78       	andi	r23, 0x80	; 128
    21e2:	77 23       	and	r23, r23
    21e4:	34 f4       	brge	.+12     	; 0x21f2 <pickup+0x29c>
    21e6:	61 50       	subi	r22, 0x01	; 1
    21e8:	71 09       	sbc	r23, r1
    21ea:	6e 6f       	ori	r22, 0xFE	; 254
    21ec:	7f 6f       	ori	r23, 0xFF	; 255
    21ee:	6f 5f       	subi	r22, 0xFF	; 255
    21f0:	7f 4f       	sbci	r23, 0xFF	; 255

				if (sort[ct % 2] == -1)
    21f2:	80 91 a5 02 	lds	r24, 0x02A5
    21f6:	90 91 a6 02 	lds	r25, 0x02A6
    21fa:	9c 01       	movw	r18, r24
    21fc:	21 70       	andi	r18, 0x01	; 1
    21fe:	30 78       	andi	r19, 0x80	; 128
    2200:	33 23       	and	r19, r19
    2202:	34 f4       	brge	.+12     	; 0x2210 <__stack+0x11>
    2204:	21 50       	subi	r18, 0x01	; 1
    2206:	31 09       	sbc	r19, r1
    2208:	2e 6f       	ori	r18, 0xFE	; 254
    220a:	3f 6f       	ori	r19, 0xFF	; 255
    220c:	2f 5f       	subi	r18, 0xFF	; 255
    220e:	3f 4f       	sbci	r19, 0xFF	; 255
    2210:	f9 01       	movw	r30, r18
    2212:	ee 0f       	add	r30, r30
    2214:	ff 1f       	adc	r31, r31
    2216:	ef 55       	subi	r30, 0x5F	; 95
    2218:	fd 4f       	sbci	r31, 0xFD	; 253
    221a:	20 81       	ld	r18, Z
    221c:	31 81       	ldd	r19, Z+1	; 0x01
    221e:	2f 3f       	cpi	r18, 0xFF	; 255
    2220:	af ef       	ldi	r26, 0xFF	; 255
    2222:	3a 07       	cpc	r19, r26
    2224:	d9 f5       	brne	.+118    	; 0x229c <__stack+0x9d>
				{
					if (term[ct][a1] != -1 && term[ct][a1] != color[ct])
    2226:	fc 01       	movw	r30, r24
    2228:	ee 0f       	add	r30, r30
    222a:	ff 1f       	adc	r31, r31
    222c:	ec 0f       	add	r30, r28
    222e:	fd 1f       	adc	r31, r29
    2230:	ee 0f       	add	r30, r30
    2232:	ff 1f       	adc	r31, r31
    2234:	e7 55       	subi	r30, 0x57	; 87
    2236:	fd 4f       	sbci	r31, 0xFD	; 253
    2238:	20 81       	ld	r18, Z
    223a:	31 81       	ldd	r19, Z+1	; 0x01
    223c:	2f 3f       	cpi	r18, 0xFF	; 255
    223e:	ef ef       	ldi	r30, 0xFF	; 255
    2240:	3e 07       	cpc	r19, r30
    2242:	71 f0       	breq	.+28     	; 0x2260 <__stack+0x61>
    2244:	fc 01       	movw	r30, r24
    2246:	ee 0f       	add	r30, r30
    2248:	ff 1f       	adc	r31, r31
    224a:	e7 54       	subi	r30, 0x47	; 71
    224c:	fd 4f       	sbci	r31, 0xFD	; 253
    224e:	40 81       	ld	r20, Z
    2250:	51 81       	ldd	r21, Z+1	; 0x01
    2252:	24 17       	cp	r18, r20
    2254:	35 07       	cpc	r19, r21
    2256:	21 f0       	breq	.+8      	; 0x2260 <__stack+0x61>
					pickNode(a1, a1);
    2258:	be 01       	movw	r22, r28
    225a:	ce 01       	movw	r24, r28
    225c:	3f d8       	rcall	.-3970   	; 0x12dc <pickNode>
    225e:	e1 c0       	rjmp	.+450    	; 0x2422 <__stack+0x223>
					else if (term[ct][a2] != -1 && term[ct][a2] != color[ct])
    2260:	fc 01       	movw	r30, r24
    2262:	ee 0f       	add	r30, r30
    2264:	ff 1f       	adc	r31, r31
    2266:	e6 0f       	add	r30, r22
    2268:	f7 1f       	adc	r31, r23
    226a:	ee 0f       	add	r30, r30
    226c:	ff 1f       	adc	r31, r31
    226e:	e7 55       	subi	r30, 0x57	; 87
    2270:	fd 4f       	sbci	r31, 0xFD	; 253
    2272:	20 81       	ld	r18, Z
    2274:	31 81       	ldd	r19, Z+1	; 0x01
    2276:	2f 3f       	cpi	r18, 0xFF	; 255
    2278:	4f ef       	ldi	r20, 0xFF	; 255
    227a:	34 07       	cpc	r19, r20
    227c:	09 f4       	brne	.+2      	; 0x2280 <__stack+0x81>
    227e:	d1 c0       	rjmp	.+418    	; 0x2422 <__stack+0x223>
    2280:	fc 01       	movw	r30, r24
    2282:	ee 0f       	add	r30, r30
    2284:	ff 1f       	adc	r31, r31
    2286:	e7 54       	subi	r30, 0x47	; 71
    2288:	fd 4f       	sbci	r31, 0xFD	; 253
    228a:	80 81       	ld	r24, Z
    228c:	91 81       	ldd	r25, Z+1	; 0x01
    228e:	28 17       	cp	r18, r24
    2290:	39 07       	cpc	r19, r25
    2292:	09 f4       	brne	.+2      	; 0x2296 <__stack+0x97>
    2294:	c6 c0       	rjmp	.+396    	; 0x2422 <__stack+0x223>
					pickNode(a1, a2);
    2296:	ce 01       	movw	r24, r28
    2298:	21 d8       	rcall	.-4030   	; 0x12dc <pickNode>
    229a:	c3 c0       	rjmp	.+390    	; 0x2422 <__stack+0x223>
				}
				else
				{
					if (term[ct][0] == color[adj] || term[ct][1] == color[adj])
    229c:	40 91 c9 02 	lds	r20, 0x02C9
    22a0:	50 91 ca 02 	lds	r21, 0x02CA
    22a4:	fa 01       	movw	r30, r20
    22a6:	ee 0f       	add	r30, r30
    22a8:	ff 1f       	adc	r31, r31
    22aa:	e7 54       	subi	r30, 0x47	; 71
    22ac:	fd 4f       	sbci	r31, 0xFD	; 253
    22ae:	01 90       	ld	r0, Z+
    22b0:	f0 81       	ld	r31, Z
    22b2:	e0 2d       	mov	r30, r0
    22b4:	dc 01       	movw	r26, r24
    22b6:	aa 0f       	add	r26, r26
    22b8:	bb 1f       	adc	r27, r27
    22ba:	aa 0f       	add	r26, r26
    22bc:	bb 1f       	adc	r27, r27
    22be:	a7 55       	subi	r26, 0x57	; 87
    22c0:	bd 4f       	sbci	r27, 0xFD	; 253
    22c2:	0d 90       	ld	r0, X+
    22c4:	bc 91       	ld	r27, X
    22c6:	a0 2d       	mov	r26, r0
    22c8:	ae 17       	cp	r26, r30
    22ca:	bf 07       	cpc	r27, r31
    22cc:	71 f0       	breq	.+28     	; 0x22ea <__stack+0xeb>
    22ce:	dc 01       	movw	r26, r24
    22d0:	aa 0f       	add	r26, r26
    22d2:	bb 1f       	adc	r27, r27
    22d4:	aa 0f       	add	r26, r26
    22d6:	bb 1f       	adc	r27, r27
    22d8:	a7 55       	subi	r26, 0x57	; 87
    22da:	bd 4f       	sbci	r27, 0xFD	; 253
    22dc:	12 96       	adiw	r26, 0x02	; 2
    22de:	0d 90       	ld	r0, X+
    22e0:	bc 91       	ld	r27, X
    22e2:	a0 2d       	mov	r26, r0
    22e4:	ea 17       	cp	r30, r26
    22e6:	fb 07       	cpc	r31, r27
    22e8:	e9 f5       	brne	.+122    	; 0x2364 <__stack+0x165>
					{
						if ((visited[adj] == 1 && (term[adj][0] == -1 || term[adj][1] == -1)))
    22ea:	da 01       	movw	r26, r20
    22ec:	aa 0f       	add	r26, r26
    22ee:	bb 1f       	adc	r27, r27
    22f0:	ae 57       	subi	r26, 0x7E	; 126
    22f2:	bd 4f       	sbci	r27, 0xFD	; 253
    22f4:	2d 91       	ld	r18, X+
    22f6:	3c 91       	ld	r19, X
    22f8:	21 30       	cpi	r18, 0x01	; 1
    22fa:	31 05       	cpc	r19, r1
    22fc:	09 f0       	breq	.+2      	; 0x2300 <__stack+0x101>
    22fe:	91 c0       	rjmp	.+290    	; 0x2422 <__stack+0x223>
    2300:	da 01       	movw	r26, r20
    2302:	aa 0f       	add	r26, r26
    2304:	bb 1f       	adc	r27, r27
    2306:	aa 0f       	add	r26, r26
    2308:	bb 1f       	adc	r27, r27
    230a:	a7 55       	subi	r26, 0x57	; 87
    230c:	bd 4f       	sbci	r27, 0xFD	; 253
    230e:	2d 91       	ld	r18, X+
    2310:	3c 91       	ld	r19, X
    2312:	2f 3f       	cpi	r18, 0xFF	; 255
    2314:	3f 4f       	sbci	r19, 0xFF	; 255
    2316:	79 f0       	breq	.+30     	; 0x2336 <__stack+0x137>
    2318:	da 01       	movw	r26, r20
    231a:	aa 0f       	add	r26, r26
    231c:	bb 1f       	adc	r27, r27
    231e:	aa 0f       	add	r26, r26
    2320:	bb 1f       	adc	r27, r27
    2322:	a7 55       	subi	r26, 0x57	; 87
    2324:	bd 4f       	sbci	r27, 0xFD	; 253
    2326:	12 96       	adiw	r26, 0x02	; 2
    2328:	2d 91       	ld	r18, X+
    232a:	3c 91       	ld	r19, X
    232c:	13 97       	sbiw	r26, 0x03	; 3
    232e:	2f 3f       	cpi	r18, 0xFF	; 255
    2330:	3f 4f       	sbci	r19, 0xFF	; 255
    2332:	09 f0       	breq	.+2      	; 0x2336 <__stack+0x137>
    2334:	76 c0       	rjmp	.+236    	; 0x2422 <__stack+0x223>
						{
							if (term[ct][a1] == color[adj])
    2336:	88 0f       	add	r24, r24
    2338:	99 1f       	adc	r25, r25
    233a:	8c 0f       	add	r24, r28
    233c:	9d 1f       	adc	r25, r29
    233e:	dc 01       	movw	r26, r24
    2340:	aa 0f       	add	r26, r26
    2342:	bb 1f       	adc	r27, r27
    2344:	a7 55       	subi	r26, 0x57	; 87
    2346:	bd 4f       	sbci	r27, 0xFD	; 253
    2348:	8d 91       	ld	r24, X+
    234a:	9c 91       	ld	r25, X
    234c:	e8 17       	cp	r30, r24
    234e:	f9 07       	cpc	r31, r25
    2350:	29 f4       	brne	.+10     	; 0x235c <__stack+0x15d>
							pickNode(a1, a1);
    2352:	be 01       	movw	r22, r28
    2354:	ce 01       	movw	r24, r28
    2356:	0e 94 6e 09 	call	0x12dc	; 0x12dc <pickNode>
    235a:	63 c0       	rjmp	.+198    	; 0x2422 <__stack+0x223>
							else pickNode(a1, a2);
    235c:	ce 01       	movw	r24, r28
    235e:	0e 94 6e 09 	call	0x12dc	; 0x12dc <pickNode>
    2362:	5f c0       	rjmp	.+190    	; 0x2422 <__stack+0x223>
						}
					}
					else
					{
						if (sort[ct % 2] != color[ct] && sort[ct % 2] != color[adj])
    2364:	dc 01       	movw	r26, r24
    2366:	aa 0f       	add	r26, r26
    2368:	bb 1f       	adc	r27, r27
    236a:	a7 54       	subi	r26, 0x47	; 71
    236c:	bd 4f       	sbci	r27, 0xFD	; 253
    236e:	0d 90       	ld	r0, X+
    2370:	bc 91       	ld	r27, X
    2372:	a0 2d       	mov	r26, r0
    2374:	2a 17       	cp	r18, r26
    2376:	3b 07       	cpc	r19, r27
    2378:	09 f4       	brne	.+2      	; 0x237c <__stack+0x17d>
    237a:	53 c0       	rjmp	.+166    	; 0x2422 <__stack+0x223>
    237c:	2e 17       	cp	r18, r30
    237e:	3f 07       	cpc	r19, r31
    2380:	09 f4       	brne	.+2      	; 0x2384 <__stack+0x185>
    2382:	4f c0       	rjmp	.+158    	; 0x2422 <__stack+0x223>
						{
							if ((visited[adj] == 1 && ((term[adj][0] != color[ct]) && (term[adj][1] != color[ct]))))
    2384:	fa 01       	movw	r30, r20
    2386:	ee 0f       	add	r30, r30
    2388:	ff 1f       	adc	r31, r31
    238a:	ee 57       	subi	r30, 0x7E	; 126
    238c:	fd 4f       	sbci	r31, 0xFD	; 253
    238e:	20 81       	ld	r18, Z
    2390:	31 81       	ldd	r19, Z+1	; 0x01
    2392:	21 30       	cpi	r18, 0x01	; 1
    2394:	31 05       	cpc	r19, r1
    2396:	09 f0       	breq	.+2      	; 0x239a <__stack+0x19b>
    2398:	44 c0       	rjmp	.+136    	; 0x2422 <__stack+0x223>
    239a:	fa 01       	movw	r30, r20
    239c:	ee 0f       	add	r30, r30
    239e:	ff 1f       	adc	r31, r31
    23a0:	ee 0f       	add	r30, r30
    23a2:	ff 1f       	adc	r31, r31
    23a4:	e7 55       	subi	r30, 0x57	; 87
    23a6:	fd 4f       	sbci	r31, 0xFD	; 253
    23a8:	20 81       	ld	r18, Z
    23aa:	31 81       	ldd	r19, Z+1	; 0x01
    23ac:	a2 17       	cp	r26, r18
    23ae:	b3 07       	cpc	r27, r19
    23b0:	c1 f1       	breq	.+112    	; 0x2422 <__stack+0x223>
    23b2:	fa 01       	movw	r30, r20
    23b4:	ee 0f       	add	r30, r30
    23b6:	ff 1f       	adc	r31, r31
    23b8:	ee 0f       	add	r30, r30
    23ba:	ff 1f       	adc	r31, r31
    23bc:	e7 55       	subi	r30, 0x57	; 87
    23be:	fd 4f       	sbci	r31, 0xFD	; 253
    23c0:	22 81       	ldd	r18, Z+2	; 0x02
    23c2:	33 81       	ldd	r19, Z+3	; 0x03
    23c4:	a2 17       	cp	r26, r18
    23c6:	b3 07       	cpc	r27, r19
    23c8:	61 f1       	breq	.+88     	; 0x2422 <__stack+0x223>
							{
								if (term[ct][a1] != -1 && term[ct][a1] != color[ct])
    23ca:	fc 01       	movw	r30, r24
    23cc:	ee 0f       	add	r30, r30
    23ce:	ff 1f       	adc	r31, r31
    23d0:	ec 0f       	add	r30, r28
    23d2:	fd 1f       	adc	r31, r29
    23d4:	ee 0f       	add	r30, r30
    23d6:	ff 1f       	adc	r31, r31
    23d8:	e7 55       	subi	r30, 0x57	; 87
    23da:	fd 4f       	sbci	r31, 0xFD	; 253
    23dc:	20 81       	ld	r18, Z
    23de:	31 81       	ldd	r19, Z+1	; 0x01
    23e0:	2f 3f       	cpi	r18, 0xFF	; 255
    23e2:	ef ef       	ldi	r30, 0xFF	; 255
    23e4:	3e 07       	cpc	r19, r30
    23e6:	41 f0       	breq	.+16     	; 0x23f8 <__stack+0x1f9>
    23e8:	a2 17       	cp	r26, r18
    23ea:	b3 07       	cpc	r27, r19
    23ec:	29 f0       	breq	.+10     	; 0x23f8 <__stack+0x1f9>
								pickNode(a1, a1);
    23ee:	be 01       	movw	r22, r28
    23f0:	ce 01       	movw	r24, r28
    23f2:	0e 94 6e 09 	call	0x12dc	; 0x12dc <pickNode>
    23f6:	15 c0       	rjmp	.+42     	; 0x2422 <__stack+0x223>
								else	if (term[ct][a2] != -1 && term[ct][a2] != color[ct])
    23f8:	88 0f       	add	r24, r24
    23fa:	99 1f       	adc	r25, r25
    23fc:	86 0f       	add	r24, r22
    23fe:	97 1f       	adc	r25, r23
    2400:	fc 01       	movw	r30, r24
    2402:	ee 0f       	add	r30, r30
    2404:	ff 1f       	adc	r31, r31
    2406:	e7 55       	subi	r30, 0x57	; 87
    2408:	fd 4f       	sbci	r31, 0xFD	; 253
    240a:	80 81       	ld	r24, Z
    240c:	91 81       	ldd	r25, Z+1	; 0x01
    240e:	8f 3f       	cpi	r24, 0xFF	; 255
    2410:	2f ef       	ldi	r18, 0xFF	; 255
    2412:	92 07       	cpc	r25, r18
    2414:	31 f0       	breq	.+12     	; 0x2422 <__stack+0x223>
    2416:	a8 17       	cp	r26, r24
    2418:	b9 07       	cpc	r27, r25
    241a:	19 f0       	breq	.+6      	; 0x2422 <__stack+0x223>
								pickNode(a1, a2);
    241c:	ce 01       	movw	r24, r28
    241e:	0e 94 6e 09 	call	0x12dc	; 0x12dc <pickNode>
					}
				}
			}
		}
	}
}
    2422:	df 91       	pop	r29
    2424:	cf 91       	pop	r28
    2426:	1f 91       	pop	r17
    2428:	0f 91       	pop	r16
    242a:	ff 90       	pop	r15
    242c:	ef 90       	pop	r14
    242e:	08 95       	ret

00002430 <canDrop>:
	else		if (term[ct][a2] != color[ct] && term[ct][a2] != -1)
	pickNode(a2, a2);
}

void canDrop()
{
    2430:	0f 93       	push	r16
    2432:	1f 93       	push	r17
    2434:	cf 93       	push	r28
    2436:	df 93       	push	r29
	int arm0 = 0, arm1 = 1;
	lcd("canDrop");
    2438:	84 e6       	ldi	r24, 0x64	; 100
    243a:	92 e0       	ldi	r25, 0x02	; 2
    243c:	0e 94 4e 06 	call	0xc9c	; 0xc9c <lcd>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    2440:	20 91 a5 02 	lds	r18, 0x02A5
    2444:	30 91 a6 02 	lds	r19, 0x02A6
    2448:	22 30       	cpi	r18, 0x02	; 2
    244a:	31 05       	cpc	r19, r1
    244c:	30 f4       	brcc	.+12     	; 0x245a <canDrop+0x2a>
    244e:	80 91 76 02 	lds	r24, 0x0276
    2452:	90 91 77 02 	lds	r25, 0x0277
    2456:	02 97       	sbiw	r24, 0x02	; 2
    2458:	79 f0       	breq	.+30     	; 0x2478 <canDrop+0x48>
    245a:	c9 01       	movw	r24, r18
    245c:	02 97       	sbiw	r24, 0x02	; 2
    245e:	02 97       	sbiw	r24, 0x02	; 2
    2460:	80 f4       	brcc	.+32     	; 0x2482 <canDrop+0x52>
    2462:	80 91 76 02 	lds	r24, 0x0276
    2466:	90 91 77 02 	lds	r25, 0x0277
    246a:	89 2b       	or	r24, r25
    246c:	79 f0       	breq	.+30     	; 0x248c <canDrop+0x5c>
	pickNode(a2, a2);
}

void canDrop()
{
	int arm0 = 0, arm1 = 1;
    246e:	01 e0       	ldi	r16, 0x01	; 1
    2470:	10 e0       	ldi	r17, 0x00	; 0
    2472:	c0 e0       	ldi	r28, 0x00	; 0
    2474:	d0 e0       	ldi	r29, 0x00	; 0
    2476:	0e c0       	rjmp	.+28     	; 0x2494 <canDrop+0x64>
	lcd("canDrop");
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    2478:	00 e0       	ldi	r16, 0x00	; 0
    247a:	10 e0       	ldi	r17, 0x00	; 0
{
	int arm0 = 0, arm1 = 1;
	lcd("canDrop");
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    247c:	c1 e0       	ldi	r28, 0x01	; 1
    247e:	d0 e0       	ldi	r29, 0x00	; 0
    2480:	09 c0       	rjmp	.+18     	; 0x2494 <canDrop+0x64>
	pickNode(a2, a2);
}

void canDrop()
{
	int arm0 = 0, arm1 = 1;
    2482:	01 e0       	ldi	r16, 0x01	; 1
    2484:	10 e0       	ldi	r17, 0x00	; 0
    2486:	c0 e0       	ldi	r28, 0x00	; 0
    2488:	d0 e0       	ldi	r29, 0x00	; 0
    248a:	04 c0       	rjmp	.+8      	; 0x2494 <canDrop+0x64>
	lcd("canDrop");
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    248c:	00 e0       	ldi	r16, 0x00	; 0
    248e:	10 e0       	ldi	r17, 0x00	; 0
{
	int arm0 = 0, arm1 = 1;
	lcd("canDrop");
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    2490:	c1 e0       	ldi	r28, 0x01	; 1
    2492:	d0 e0       	ldi	r29, 0x00	; 0
		arm1 = 0;
	}

	if (armCount == 2 || (arm[0] != color[ct] && arm[1] != color[ct]))
    2494:	40 91 02 02 	lds	r20, 0x0202
    2498:	50 91 03 02 	lds	r21, 0x0203
    249c:	42 30       	cpi	r20, 0x02	; 2
    249e:	51 05       	cpc	r21, r1
    24a0:	09 f4       	brne	.+2      	; 0x24a4 <canDrop+0x74>
    24a2:	1c c1       	rjmp	.+568    	; 0x26dc <canDrop+0x2ac>
    24a4:	f9 01       	movw	r30, r18
    24a6:	ee 0f       	add	r30, r30
    24a8:	ff 1f       	adc	r31, r31
    24aa:	e7 54       	subi	r30, 0x47	; 71
    24ac:	fd 4f       	sbci	r31, 0xFD	; 253
    24ae:	40 81       	ld	r20, Z
    24b0:	51 81       	ldd	r21, Z+1	; 0x01
    24b2:	60 91 cd 02 	lds	r22, 0x02CD
    24b6:	70 91 ce 02 	lds	r23, 0x02CE
    24ba:	64 17       	cp	r22, r20
    24bc:	75 07       	cpc	r23, r21
    24be:	41 f0       	breq	.+16     	; 0x24d0 <canDrop+0xa0>
    24c0:	80 91 cf 02 	lds	r24, 0x02CF
    24c4:	90 91 d0 02 	lds	r25, 0x02D0
    24c8:	48 17       	cp	r20, r24
    24ca:	59 07       	cpc	r21, r25
    24cc:	09 f0       	breq	.+2      	; 0x24d0 <canDrop+0xa0>
    24ce:	06 c1       	rjmp	.+524    	; 0x26dc <canDrop+0x2ac>
	return;
	else
	{
		if (visited[ct] == 0)
    24d0:	f9 01       	movw	r30, r18
    24d2:	ee 0f       	add	r30, r30
    24d4:	ff 1f       	adc	r31, r31
    24d6:	ee 57       	subi	r30, 0x7E	; 126
    24d8:	fd 4f       	sbci	r31, 0xFD	; 253
    24da:	80 81       	ld	r24, Z
    24dc:	91 81       	ldd	r25, Z+1	; 0x01
    24de:	89 2b       	or	r24, r25
    24e0:	11 f4       	brne	.+4      	; 0x24e6 <canDrop+0xb6>
		{
			terminalCheck1();
    24e2:	3b dc       	rcall	.-1930   	; 0x1d5a <terminalCheck1>
			terminalCheck2();
    24e4:	c7 dc       	rcall	.-1650   	; 0x1e74 <terminalCheck2>
		}
		if (armCount == 0)
    24e6:	80 91 02 02 	lds	r24, 0x0202
    24ea:	90 91 03 02 	lds	r25, 0x0203
    24ee:	89 2b       	or	r24, r25
    24f0:	09 f0       	breq	.+2      	; 0x24f4 <canDrop+0xc4>
    24f2:	4c c0       	rjmp	.+152    	; 0x258c <canDrop+0x15c>
		{
			if (arm[arm0] == color[ct])
    24f4:	20 91 a5 02 	lds	r18, 0x02A5
    24f8:	30 91 a6 02 	lds	r19, 0x02A6
    24fc:	f9 01       	movw	r30, r18
    24fe:	ee 0f       	add	r30, r30
    2500:	ff 1f       	adc	r31, r31
    2502:	e7 54       	subi	r30, 0x47	; 71
    2504:	fd 4f       	sbci	r31, 0xFD	; 253
    2506:	80 81       	ld	r24, Z
    2508:	91 81       	ldd	r25, Z+1	; 0x01
    250a:	fe 01       	movw	r30, r28
    250c:	ee 0f       	add	r30, r30
    250e:	ff 1f       	adc	r31, r31
    2510:	e3 53       	subi	r30, 0x33	; 51
    2512:	fd 4f       	sbci	r31, 0xFD	; 253
    2514:	40 81       	ld	r20, Z
    2516:	51 81       	ldd	r21, Z+1	; 0x01
    2518:	48 17       	cp	r20, r24
    251a:	59 07       	cpc	r21, r25
    251c:	b9 f4       	brne	.+46     	; 0x254c <canDrop+0x11c>
			{
				if (term[ct][0] == -1)
    251e:	f9 01       	movw	r30, r18
    2520:	ee 0f       	add	r30, r30
    2522:	ff 1f       	adc	r31, r31
    2524:	ee 0f       	add	r30, r30
    2526:	ff 1f       	adc	r31, r31
    2528:	e7 55       	subi	r30, 0x57	; 87
    252a:	fd 4f       	sbci	r31, 0xFD	; 253
    252c:	80 81       	ld	r24, Z
    252e:	91 81       	ldd	r25, Z+1	; 0x01
    2530:	01 96       	adiw	r24, 0x01	; 1
    2532:	31 f4       	brne	.+12     	; 0x2540 <canDrop+0x110>
				nodeDrop(arm0, 0);
    2534:	60 e0       	ldi	r22, 0x00	; 0
    2536:	70 e0       	ldi	r23, 0x00	; 0
    2538:	ce 01       	movw	r24, r28
    253a:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <nodeDrop>
    253e:	26 c0       	rjmp	.+76     	; 0x258c <canDrop+0x15c>
				else nodeDrop(arm0, 1);
    2540:	61 e0       	ldi	r22, 0x01	; 1
    2542:	70 e0       	ldi	r23, 0x00	; 0
    2544:	ce 01       	movw	r24, r28
    2546:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <nodeDrop>
    254a:	20 c0       	rjmp	.+64     	; 0x258c <canDrop+0x15c>
			}
			else if (arm[arm1] == color[ct])
    254c:	f8 01       	movw	r30, r16
    254e:	ee 0f       	add	r30, r30
    2550:	ff 1f       	adc	r31, r31
    2552:	e3 53       	subi	r30, 0x33	; 51
    2554:	fd 4f       	sbci	r31, 0xFD	; 253
    2556:	40 81       	ld	r20, Z
    2558:	51 81       	ldd	r21, Z+1	; 0x01
    255a:	84 17       	cp	r24, r20
    255c:	95 07       	cpc	r25, r21
    255e:	b1 f4       	brne	.+44     	; 0x258c <canDrop+0x15c>
			{
				if (term[ct][0] != -1)
    2560:	f9 01       	movw	r30, r18
    2562:	ee 0f       	add	r30, r30
    2564:	ff 1f       	adc	r31, r31
    2566:	ee 0f       	add	r30, r30
    2568:	ff 1f       	adc	r31, r31
    256a:	e7 55       	subi	r30, 0x57	; 87
    256c:	fd 4f       	sbci	r31, 0xFD	; 253
    256e:	80 81       	ld	r24, Z
    2570:	91 81       	ldd	r25, Z+1	; 0x01
    2572:	01 96       	adiw	r24, 0x01	; 1
    2574:	31 f0       	breq	.+12     	; 0x2582 <canDrop+0x152>
				nodeDrop(arm1, 1);
    2576:	61 e0       	ldi	r22, 0x01	; 1
    2578:	70 e0       	ldi	r23, 0x00	; 0
    257a:	c8 01       	movw	r24, r16
    257c:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <nodeDrop>
    2580:	05 c0       	rjmp	.+10     	; 0x258c <canDrop+0x15c>
				else nodeDrop(arm1, 0);
    2582:	60 e0       	ldi	r22, 0x00	; 0
    2584:	70 e0       	ldi	r23, 0x00	; 0
    2586:	c8 01       	movw	r24, r16
    2588:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <nodeDrop>
			}
		}
		if (arm[0] == color[ct] || arm[1] == color[ct])
    258c:	20 91 a5 02 	lds	r18, 0x02A5
    2590:	30 91 a6 02 	lds	r19, 0x02A6
    2594:	f9 01       	movw	r30, r18
    2596:	ee 0f       	add	r30, r30
    2598:	ff 1f       	adc	r31, r31
    259a:	e7 54       	subi	r30, 0x47	; 71
    259c:	fd 4f       	sbci	r31, 0xFD	; 253
    259e:	80 81       	ld	r24, Z
    25a0:	91 81       	ldd	r25, Z+1	; 0x01
    25a2:	40 91 cd 02 	lds	r20, 0x02CD
    25a6:	50 91 ce 02 	lds	r21, 0x02CE
    25aa:	48 17       	cp	r20, r24
    25ac:	59 07       	cpc	r21, r25
    25ae:	41 f0       	breq	.+16     	; 0x25c0 <canDrop+0x190>
    25b0:	40 91 cf 02 	lds	r20, 0x02CF
    25b4:	50 91 d0 02 	lds	r21, 0x02D0
    25b8:	84 17       	cp	r24, r20
    25ba:	95 07       	cpc	r25, r21
    25bc:	09 f0       	breq	.+2      	; 0x25c0 <canDrop+0x190>
    25be:	8e c0       	rjmp	.+284    	; 0x26dc <canDrop+0x2ac>
		{
			if (term[ct][0] != -1 && term[ct][1] != -1)
    25c0:	f9 01       	movw	r30, r18
    25c2:	ee 0f       	add	r30, r30
    25c4:	ff 1f       	adc	r31, r31
    25c6:	ee 0f       	add	r30, r30
    25c8:	ff 1f       	adc	r31, r31
    25ca:	e7 55       	subi	r30, 0x57	; 87
    25cc:	fd 4f       	sbci	r31, 0xFD	; 253
    25ce:	40 81       	ld	r20, Z
    25d0:	51 81       	ldd	r21, Z+1	; 0x01
    25d2:	4f 3f       	cpi	r20, 0xFF	; 255
    25d4:	5f 4f       	sbci	r21, 0xFF	; 255
    25d6:	e9 f0       	breq	.+58     	; 0x2612 <canDrop+0x1e2>
    25d8:	f9 01       	movw	r30, r18
    25da:	ee 0f       	add	r30, r30
    25dc:	ff 1f       	adc	r31, r31
    25de:	ee 0f       	add	r30, r30
    25e0:	ff 1f       	adc	r31, r31
    25e2:	e7 55       	subi	r30, 0x57	; 87
    25e4:	fd 4f       	sbci	r31, 0xFD	; 253
    25e6:	22 81       	ldd	r18, Z+2	; 0x02
    25e8:	33 81       	ldd	r19, Z+3	; 0x03
    25ea:	2f 3f       	cpi	r18, 0xFF	; 255
    25ec:	3f 4f       	sbci	r19, 0xFF	; 255
    25ee:	89 f0       	breq	.+34     	; 0x2612 <canDrop+0x1e2>
			{
				if (arm[arm0] == color[ct])
    25f0:	fe 01       	movw	r30, r28
    25f2:	ee 0f       	add	r30, r30
    25f4:	ff 1f       	adc	r31, r31
    25f6:	e3 53       	subi	r30, 0x33	; 51
    25f8:	fd 4f       	sbci	r31, 0xFD	; 253
    25fa:	20 81       	ld	r18, Z
    25fc:	31 81       	ldd	r19, Z+1	; 0x01
    25fe:	82 17       	cp	r24, r18
    2600:	93 07       	cpc	r25, r19
    2602:	21 f4       	brne	.+8      	; 0x260c <canDrop+0x1dc>
				dropPickup(arm0);
    2604:	ce 01       	movw	r24, r28
    2606:	0e 94 a2 09 	call	0x1344	; 0x1344 <dropPickup>
    260a:	03 c0       	rjmp	.+6      	; 0x2612 <canDrop+0x1e2>
				else dropPickup(arm1);
    260c:	c8 01       	movw	r24, r16
    260e:	0e 94 a2 09 	call	0x1344	; 0x1344 <dropPickup>
			}
			if (arm[arm0] == color[ct] && term[ct][0] == -1)
    2612:	80 91 a5 02 	lds	r24, 0x02A5
    2616:	90 91 a6 02 	lds	r25, 0x02A6
    261a:	fc 01       	movw	r30, r24
    261c:	ee 0f       	add	r30, r30
    261e:	ff 1f       	adc	r31, r31
    2620:	e7 54       	subi	r30, 0x47	; 71
    2622:	fd 4f       	sbci	r31, 0xFD	; 253
    2624:	20 81       	ld	r18, Z
    2626:	31 81       	ldd	r19, Z+1	; 0x01
    2628:	fe 01       	movw	r30, r28
    262a:	ee 0f       	add	r30, r30
    262c:	ff 1f       	adc	r31, r31
    262e:	e3 53       	subi	r30, 0x33	; 51
    2630:	fd 4f       	sbci	r31, 0xFD	; 253
    2632:	40 81       	ld	r20, Z
    2634:	51 81       	ldd	r21, Z+1	; 0x01
    2636:	42 17       	cp	r20, r18
    2638:	53 07       	cpc	r21, r19
    263a:	21 f5       	brne	.+72     	; 0x2684 <canDrop+0x254>
    263c:	fc 01       	movw	r30, r24
    263e:	ee 0f       	add	r30, r30
    2640:	ff 1f       	adc	r31, r31
    2642:	ee 0f       	add	r30, r30
    2644:	ff 1f       	adc	r31, r31
    2646:	e7 55       	subi	r30, 0x57	; 87
    2648:	fd 4f       	sbci	r31, 0xFD	; 253
    264a:	40 81       	ld	r20, Z
    264c:	51 81       	ldd	r21, Z+1	; 0x01
    264e:	4f 3f       	cpi	r20, 0xFF	; 255
    2650:	5f 4f       	sbci	r21, 0xFF	; 255
    2652:	31 f4       	brne	.+12     	; 0x2660 <canDrop+0x230>
			nodeDrop(arm0, 0);
    2654:	60 e0       	ldi	r22, 0x00	; 0
    2656:	70 e0       	ldi	r23, 0x00	; 0
    2658:	ce 01       	movw	r24, r28
    265a:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <nodeDrop>
    265e:	3e c0       	rjmp	.+124    	; 0x26dc <canDrop+0x2ac>
			else if (arm[arm0] == color[ct] && term[ct][1] == -1)
    2660:	fc 01       	movw	r30, r24
    2662:	ee 0f       	add	r30, r30
    2664:	ff 1f       	adc	r31, r31
    2666:	ee 0f       	add	r30, r30
    2668:	ff 1f       	adc	r31, r31
    266a:	e7 55       	subi	r30, 0x57	; 87
    266c:	fd 4f       	sbci	r31, 0xFD	; 253
    266e:	42 81       	ldd	r20, Z+2	; 0x02
    2670:	53 81       	ldd	r21, Z+3	; 0x03
    2672:	4f 3f       	cpi	r20, 0xFF	; 255
    2674:	5f 4f       	sbci	r21, 0xFF	; 255
    2676:	31 f4       	brne	.+12     	; 0x2684 <canDrop+0x254>
			nodeDrop(arm0, 1);
    2678:	61 e0       	ldi	r22, 0x01	; 1
    267a:	70 e0       	ldi	r23, 0x00	; 0
    267c:	ce 01       	movw	r24, r28
    267e:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <nodeDrop>
    2682:	2c c0       	rjmp	.+88     	; 0x26dc <canDrop+0x2ac>
			else if (arm[arm1] == color[ct] && term[ct][0] == -1)
    2684:	f8 01       	movw	r30, r16
    2686:	ee 0f       	add	r30, r30
    2688:	ff 1f       	adc	r31, r31
    268a:	e3 53       	subi	r30, 0x33	; 51
    268c:	fd 4f       	sbci	r31, 0xFD	; 253
    268e:	40 81       	ld	r20, Z
    2690:	51 81       	ldd	r21, Z+1	; 0x01
    2692:	24 17       	cp	r18, r20
    2694:	35 07       	cpc	r19, r21
    2696:	11 f5       	brne	.+68     	; 0x26dc <canDrop+0x2ac>
    2698:	fc 01       	movw	r30, r24
    269a:	ee 0f       	add	r30, r30
    269c:	ff 1f       	adc	r31, r31
    269e:	ee 0f       	add	r30, r30
    26a0:	ff 1f       	adc	r31, r31
    26a2:	e7 55       	subi	r30, 0x57	; 87
    26a4:	fd 4f       	sbci	r31, 0xFD	; 253
    26a6:	20 81       	ld	r18, Z
    26a8:	31 81       	ldd	r19, Z+1	; 0x01
    26aa:	2f 3f       	cpi	r18, 0xFF	; 255
    26ac:	3f 4f       	sbci	r19, 0xFF	; 255
    26ae:	31 f4       	brne	.+12     	; 0x26bc <canDrop+0x28c>
			nodeDrop(arm1, 0);
    26b0:	60 e0       	ldi	r22, 0x00	; 0
    26b2:	70 e0       	ldi	r23, 0x00	; 0
    26b4:	c8 01       	movw	r24, r16
    26b6:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <nodeDrop>
    26ba:	10 c0       	rjmp	.+32     	; 0x26dc <canDrop+0x2ac>
			else if (arm[arm1] == color[ct] && term[ct][1] == -1)
    26bc:	fc 01       	movw	r30, r24
    26be:	ee 0f       	add	r30, r30
    26c0:	ff 1f       	adc	r31, r31
    26c2:	ee 0f       	add	r30, r30
    26c4:	ff 1f       	adc	r31, r31
    26c6:	e7 55       	subi	r30, 0x57	; 87
    26c8:	fd 4f       	sbci	r31, 0xFD	; 253
    26ca:	82 81       	ldd	r24, Z+2	; 0x02
    26cc:	93 81       	ldd	r25, Z+3	; 0x03
    26ce:	01 96       	adiw	r24, 0x01	; 1
    26d0:	29 f4       	brne	.+10     	; 0x26dc <canDrop+0x2ac>
			nodeDrop(arm1, 1);
    26d2:	61 e0       	ldi	r22, 0x01	; 1
    26d4:	70 e0       	ldi	r23, 0x00	; 0
    26d6:	c8 01       	movw	r24, r16
    26d8:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <nodeDrop>
		}
	}
}
    26dc:	df 91       	pop	r29
    26de:	cf 91       	pop	r28
    26e0:	1f 91       	pop	r17
    26e2:	0f 91       	pop	r16
    26e4:	08 95       	ret

000026e6 <main>:
	lcd_string(str);
}
int main()
{
	int i=0;
	init_devices();
    26e6:	0e 94 38 03 	call	0x670	; 0x670 <init_devices>
	lcd_set_4bit();
    26ea:	0e 94 94 00 	call	0x128	; 0x128 <lcd_set_4bit>
	lcd_init();
    26ee:	0e 94 fe 00 	call	0x1fc	; 0x1fc <lcd_init>
	color_sensor_scaling();
    26f2:	0e 94 63 03 	call	0x6c6	; 0x6c6 <color_sensor_scaling>
	lcd_print(2,11,scan(),1);
	stop();
	while(1);
	*/
	
	setIndicatorAndColor();
    26f6:	0e 94 b1 04 	call	0x962	; 0x962 <setIndicatorAndColor>
	ct = 0; adj = 2;
    26fa:	10 92 a6 02 	sts	0x02A6, r1
    26fe:	10 92 a5 02 	sts	0x02A5, r1
    2702:	82 e0       	ldi	r24, 0x02	; 2
    2704:	90 e0       	ldi	r25, 0x00	; 0
    2706:	90 93 ca 02 	sts	0x02CA, r25
    270a:	80 93 c9 02 	sts	0x02C9, r24
	lcd("Begin");
    270e:	8c e6       	ldi	r24, 0x6C	; 108
    2710:	92 e0       	ldi	r25, 0x02	; 2
    2712:	0e 94 4e 06 	call	0xc9c	; 0xc9c <lcd>
	while (sorted<total)
    2716:	20 91 7c 02 	lds	r18, 0x027C
    271a:	30 91 7d 02 	lds	r19, 0x027D
    271e:	80 91 00 02 	lds	r24, 0x0200
    2722:	90 91 01 02 	lds	r25, 0x0201
    2726:	28 17       	cp	r18, r24
    2728:	39 07       	cpc	r19, r25
    272a:	0c f0       	brlt	.+2      	; 0x272e <main+0x48>
    272c:	3e c0       	rjmp	.+124    	; 0x27aa <main+0xc4>
	{
		canDrop();
    272e:	80 de       	rcall	.-768    	; 0x2430 <canDrop>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2730:	2f ef       	ldi	r18, 0xFF	; 255
    2732:	8f e7       	ldi	r24, 0x7F	; 127
    2734:	96 e1       	ldi	r25, 0x16	; 22
    2736:	21 50       	subi	r18, 0x01	; 1
    2738:	80 40       	sbci	r24, 0x00	; 0
    273a:	90 40       	sbci	r25, 0x00	; 0
    273c:	e1 f7       	brne	.-8      	; 0x2736 <main+0x50>
    273e:	00 c0       	rjmp	.+0      	; 0x2740 <main+0x5a>
    2740:	00 00       	nop
		//buzzer_on();
		_delay_ms(500);
		//buzzer_off();
		if (visitedCount == 3)
    2742:	80 91 7a 02 	lds	r24, 0x027A
    2746:	90 91 7b 02 	lds	r25, 0x027B
    274a:	03 97       	sbiw	r24, 0x03	; 3
    274c:	11 f4       	brne	.+4      	; 0x2752 <main+0x6c>
			predict();
    274e:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <predict>
		if (sorted == total)
    2752:	20 91 7c 02 	lds	r18, 0x027C
    2756:	30 91 7d 02 	lds	r19, 0x027D
    275a:	80 91 00 02 	lds	r24, 0x0200
    275e:	90 91 01 02 	lds	r25, 0x0201
    2762:	28 17       	cp	r18, r24
    2764:	39 07       	cpc	r19, r25
    2766:	09 f1       	breq	.+66     	; 0x27aa <main+0xc4>
			break;
		pickup();
    2768:	f6 db       	rcall	.-2068   	; 0x1f56 <pickup>
		traverseToSort(ct, ct % 2 + 4);
    276a:	80 91 a5 02 	lds	r24, 0x02A5
    276e:	90 91 a6 02 	lds	r25, 0x02A6
    2772:	bc 01       	movw	r22, r24
    2774:	61 70       	andi	r22, 0x01	; 1
    2776:	70 78       	andi	r23, 0x80	; 128
    2778:	77 23       	and	r23, r23
    277a:	34 f4       	brge	.+12     	; 0x2788 <main+0xa2>
    277c:	61 50       	subi	r22, 0x01	; 1
    277e:	71 09       	sbc	r23, r1
    2780:	6e 6f       	ori	r22, 0xFE	; 254
    2782:	7f 6f       	ori	r23, 0xFF	; 255
    2784:	6f 5f       	subi	r22, 0xFF	; 255
    2786:	7f 4f       	sbci	r23, 0xFF	; 255
    2788:	6c 5f       	subi	r22, 0xFC	; 252
    278a:	7f 4f       	sbci	r23, 0xFF	; 255
    278c:	0e 94 17 08 	call	0x102e	; 0x102e <traverseToSort>
		sortCheck();
    2790:	b6 d8       	rcall	.-3732   	; 0x18fe <sortCheck>
	*/
	
	setIndicatorAndColor();
	ct = 0; adj = 2;
	lcd("Begin");
	while (sorted<total)
    2792:	20 91 7c 02 	lds	r18, 0x027C
    2796:	30 91 7d 02 	lds	r19, 0x027D
    279a:	80 91 00 02 	lds	r24, 0x0200
    279e:	90 91 01 02 	lds	r25, 0x0201
    27a2:	28 17       	cp	r18, r24
    27a4:	39 07       	cpc	r19, r25
    27a6:	0c f4       	brge	.+2      	; 0x27aa <main+0xc4>
    27a8:	c2 cf       	rjmp	.-124    	; 0x272e <main+0x48>
		//..printf("%d %d\n", term[i][0], term[i][1]);
	//..printf("Sort 0=%dSort 1=%d\nArm 0=%dArm 1=%d\n", sort[0], sort[1], arm[0], arm[1]);
	//..printf("Cost=%d\nSORTED!!!!!\n", cost + 7);
	//getch();
	return 0;
    27aa:	80 e0       	ldi	r24, 0x00	; 0
    27ac:	90 e0       	ldi	r25, 0x00	; 0
    27ae:	08 95       	ret

000027b0 <__subsf3>:
    27b0:	50 58       	subi	r21, 0x80	; 128

000027b2 <__addsf3>:
    27b2:	bb 27       	eor	r27, r27
    27b4:	aa 27       	eor	r26, r26
    27b6:	0e d0       	rcall	.+28     	; 0x27d4 <__addsf3x>
    27b8:	48 c1       	rjmp	.+656    	; 0x2a4a <__fp_round>
    27ba:	39 d1       	rcall	.+626    	; 0x2a2e <__fp_pscA>
    27bc:	30 f0       	brcs	.+12     	; 0x27ca <__addsf3+0x18>
    27be:	3e d1       	rcall	.+636    	; 0x2a3c <__fp_pscB>
    27c0:	20 f0       	brcs	.+8      	; 0x27ca <__addsf3+0x18>
    27c2:	31 f4       	brne	.+12     	; 0x27d0 <__addsf3+0x1e>
    27c4:	9f 3f       	cpi	r25, 0xFF	; 255
    27c6:	11 f4       	brne	.+4      	; 0x27cc <__addsf3+0x1a>
    27c8:	1e f4       	brtc	.+6      	; 0x27d0 <__addsf3+0x1e>
    27ca:	2e c1       	rjmp	.+604    	; 0x2a28 <__fp_nan>
    27cc:	0e f4       	brtc	.+2      	; 0x27d0 <__addsf3+0x1e>
    27ce:	e0 95       	com	r30
    27d0:	e7 fb       	bst	r30, 7
    27d2:	24 c1       	rjmp	.+584    	; 0x2a1c <__fp_inf>

000027d4 <__addsf3x>:
    27d4:	e9 2f       	mov	r30, r25
    27d6:	4a d1       	rcall	.+660    	; 0x2a6c <__fp_split3>
    27d8:	80 f3       	brcs	.-32     	; 0x27ba <__addsf3+0x8>
    27da:	ba 17       	cp	r27, r26
    27dc:	62 07       	cpc	r22, r18
    27de:	73 07       	cpc	r23, r19
    27e0:	84 07       	cpc	r24, r20
    27e2:	95 07       	cpc	r25, r21
    27e4:	18 f0       	brcs	.+6      	; 0x27ec <__addsf3x+0x18>
    27e6:	71 f4       	brne	.+28     	; 0x2804 <__addsf3x+0x30>
    27e8:	9e f5       	brtc	.+102    	; 0x2850 <__addsf3x+0x7c>
    27ea:	62 c1       	rjmp	.+708    	; 0x2ab0 <__fp_zero>
    27ec:	0e f4       	brtc	.+2      	; 0x27f0 <__addsf3x+0x1c>
    27ee:	e0 95       	com	r30
    27f0:	0b 2e       	mov	r0, r27
    27f2:	ba 2f       	mov	r27, r26
    27f4:	a0 2d       	mov	r26, r0
    27f6:	0b 01       	movw	r0, r22
    27f8:	b9 01       	movw	r22, r18
    27fa:	90 01       	movw	r18, r0
    27fc:	0c 01       	movw	r0, r24
    27fe:	ca 01       	movw	r24, r20
    2800:	a0 01       	movw	r20, r0
    2802:	11 24       	eor	r1, r1
    2804:	ff 27       	eor	r31, r31
    2806:	59 1b       	sub	r21, r25
    2808:	99 f0       	breq	.+38     	; 0x2830 <__addsf3x+0x5c>
    280a:	59 3f       	cpi	r21, 0xF9	; 249
    280c:	50 f4       	brcc	.+20     	; 0x2822 <__addsf3x+0x4e>
    280e:	50 3e       	cpi	r21, 0xE0	; 224
    2810:	68 f1       	brcs	.+90     	; 0x286c <__addsf3x+0x98>
    2812:	1a 16       	cp	r1, r26
    2814:	f0 40       	sbci	r31, 0x00	; 0
    2816:	a2 2f       	mov	r26, r18
    2818:	23 2f       	mov	r18, r19
    281a:	34 2f       	mov	r19, r20
    281c:	44 27       	eor	r20, r20
    281e:	58 5f       	subi	r21, 0xF8	; 248
    2820:	f3 cf       	rjmp	.-26     	; 0x2808 <__addsf3x+0x34>
    2822:	46 95       	lsr	r20
    2824:	37 95       	ror	r19
    2826:	27 95       	ror	r18
    2828:	a7 95       	ror	r26
    282a:	f0 40       	sbci	r31, 0x00	; 0
    282c:	53 95       	inc	r21
    282e:	c9 f7       	brne	.-14     	; 0x2822 <__addsf3x+0x4e>
    2830:	7e f4       	brtc	.+30     	; 0x2850 <__addsf3x+0x7c>
    2832:	1f 16       	cp	r1, r31
    2834:	ba 0b       	sbc	r27, r26
    2836:	62 0b       	sbc	r22, r18
    2838:	73 0b       	sbc	r23, r19
    283a:	84 0b       	sbc	r24, r20
    283c:	ba f0       	brmi	.+46     	; 0x286c <__addsf3x+0x98>
    283e:	91 50       	subi	r25, 0x01	; 1
    2840:	a1 f0       	breq	.+40     	; 0x286a <__addsf3x+0x96>
    2842:	ff 0f       	add	r31, r31
    2844:	bb 1f       	adc	r27, r27
    2846:	66 1f       	adc	r22, r22
    2848:	77 1f       	adc	r23, r23
    284a:	88 1f       	adc	r24, r24
    284c:	c2 f7       	brpl	.-16     	; 0x283e <__addsf3x+0x6a>
    284e:	0e c0       	rjmp	.+28     	; 0x286c <__addsf3x+0x98>
    2850:	ba 0f       	add	r27, r26
    2852:	62 1f       	adc	r22, r18
    2854:	73 1f       	adc	r23, r19
    2856:	84 1f       	adc	r24, r20
    2858:	48 f4       	brcc	.+18     	; 0x286c <__addsf3x+0x98>
    285a:	87 95       	ror	r24
    285c:	77 95       	ror	r23
    285e:	67 95       	ror	r22
    2860:	b7 95       	ror	r27
    2862:	f7 95       	ror	r31
    2864:	9e 3f       	cpi	r25, 0xFE	; 254
    2866:	08 f0       	brcs	.+2      	; 0x286a <__addsf3x+0x96>
    2868:	b3 cf       	rjmp	.-154    	; 0x27d0 <__addsf3+0x1e>
    286a:	93 95       	inc	r25
    286c:	88 0f       	add	r24, r24
    286e:	08 f0       	brcs	.+2      	; 0x2872 <__addsf3x+0x9e>
    2870:	99 27       	eor	r25, r25
    2872:	ee 0f       	add	r30, r30
    2874:	97 95       	ror	r25
    2876:	87 95       	ror	r24
    2878:	08 95       	ret

0000287a <__divsf3>:
    287a:	0c d0       	rcall	.+24     	; 0x2894 <__divsf3x>
    287c:	e6 c0       	rjmp	.+460    	; 0x2a4a <__fp_round>
    287e:	de d0       	rcall	.+444    	; 0x2a3c <__fp_pscB>
    2880:	40 f0       	brcs	.+16     	; 0x2892 <__divsf3+0x18>
    2882:	d5 d0       	rcall	.+426    	; 0x2a2e <__fp_pscA>
    2884:	30 f0       	brcs	.+12     	; 0x2892 <__divsf3+0x18>
    2886:	21 f4       	brne	.+8      	; 0x2890 <__divsf3+0x16>
    2888:	5f 3f       	cpi	r21, 0xFF	; 255
    288a:	19 f0       	breq	.+6      	; 0x2892 <__divsf3+0x18>
    288c:	c7 c0       	rjmp	.+398    	; 0x2a1c <__fp_inf>
    288e:	51 11       	cpse	r21, r1
    2890:	10 c1       	rjmp	.+544    	; 0x2ab2 <__fp_szero>
    2892:	ca c0       	rjmp	.+404    	; 0x2a28 <__fp_nan>

00002894 <__divsf3x>:
    2894:	eb d0       	rcall	.+470    	; 0x2a6c <__fp_split3>
    2896:	98 f3       	brcs	.-26     	; 0x287e <__divsf3+0x4>

00002898 <__divsf3_pse>:
    2898:	99 23       	and	r25, r25
    289a:	c9 f3       	breq	.-14     	; 0x288e <__divsf3+0x14>
    289c:	55 23       	and	r21, r21
    289e:	b1 f3       	breq	.-20     	; 0x288c <__divsf3+0x12>
    28a0:	95 1b       	sub	r25, r21
    28a2:	55 0b       	sbc	r21, r21
    28a4:	bb 27       	eor	r27, r27
    28a6:	aa 27       	eor	r26, r26
    28a8:	62 17       	cp	r22, r18
    28aa:	73 07       	cpc	r23, r19
    28ac:	84 07       	cpc	r24, r20
    28ae:	38 f0       	brcs	.+14     	; 0x28be <__divsf3_pse+0x26>
    28b0:	9f 5f       	subi	r25, 0xFF	; 255
    28b2:	5f 4f       	sbci	r21, 0xFF	; 255
    28b4:	22 0f       	add	r18, r18
    28b6:	33 1f       	adc	r19, r19
    28b8:	44 1f       	adc	r20, r20
    28ba:	aa 1f       	adc	r26, r26
    28bc:	a9 f3       	breq	.-22     	; 0x28a8 <__divsf3_pse+0x10>
    28be:	33 d0       	rcall	.+102    	; 0x2926 <__divsf3_pse+0x8e>
    28c0:	0e 2e       	mov	r0, r30
    28c2:	3a f0       	brmi	.+14     	; 0x28d2 <__divsf3_pse+0x3a>
    28c4:	e0 e8       	ldi	r30, 0x80	; 128
    28c6:	30 d0       	rcall	.+96     	; 0x2928 <__divsf3_pse+0x90>
    28c8:	91 50       	subi	r25, 0x01	; 1
    28ca:	50 40       	sbci	r21, 0x00	; 0
    28cc:	e6 95       	lsr	r30
    28ce:	00 1c       	adc	r0, r0
    28d0:	ca f7       	brpl	.-14     	; 0x28c4 <__divsf3_pse+0x2c>
    28d2:	29 d0       	rcall	.+82     	; 0x2926 <__divsf3_pse+0x8e>
    28d4:	fe 2f       	mov	r31, r30
    28d6:	27 d0       	rcall	.+78     	; 0x2926 <__divsf3_pse+0x8e>
    28d8:	66 0f       	add	r22, r22
    28da:	77 1f       	adc	r23, r23
    28dc:	88 1f       	adc	r24, r24
    28de:	bb 1f       	adc	r27, r27
    28e0:	26 17       	cp	r18, r22
    28e2:	37 07       	cpc	r19, r23
    28e4:	48 07       	cpc	r20, r24
    28e6:	ab 07       	cpc	r26, r27
    28e8:	b0 e8       	ldi	r27, 0x80	; 128
    28ea:	09 f0       	breq	.+2      	; 0x28ee <__divsf3_pse+0x56>
    28ec:	bb 0b       	sbc	r27, r27
    28ee:	80 2d       	mov	r24, r0
    28f0:	bf 01       	movw	r22, r30
    28f2:	ff 27       	eor	r31, r31
    28f4:	93 58       	subi	r25, 0x83	; 131
    28f6:	5f 4f       	sbci	r21, 0xFF	; 255
    28f8:	2a f0       	brmi	.+10     	; 0x2904 <__divsf3_pse+0x6c>
    28fa:	9e 3f       	cpi	r25, 0xFE	; 254
    28fc:	51 05       	cpc	r21, r1
    28fe:	68 f0       	brcs	.+26     	; 0x291a <__divsf3_pse+0x82>
    2900:	8d c0       	rjmp	.+282    	; 0x2a1c <__fp_inf>
    2902:	d7 c0       	rjmp	.+430    	; 0x2ab2 <__fp_szero>
    2904:	5f 3f       	cpi	r21, 0xFF	; 255
    2906:	ec f3       	brlt	.-6      	; 0x2902 <__divsf3_pse+0x6a>
    2908:	98 3e       	cpi	r25, 0xE8	; 232
    290a:	dc f3       	brlt	.-10     	; 0x2902 <__divsf3_pse+0x6a>
    290c:	86 95       	lsr	r24
    290e:	77 95       	ror	r23
    2910:	67 95       	ror	r22
    2912:	b7 95       	ror	r27
    2914:	f7 95       	ror	r31
    2916:	9f 5f       	subi	r25, 0xFF	; 255
    2918:	c9 f7       	brne	.-14     	; 0x290c <__divsf3_pse+0x74>
    291a:	88 0f       	add	r24, r24
    291c:	91 1d       	adc	r25, r1
    291e:	96 95       	lsr	r25
    2920:	87 95       	ror	r24
    2922:	97 f9       	bld	r25, 7
    2924:	08 95       	ret
    2926:	e1 e0       	ldi	r30, 0x01	; 1
    2928:	66 0f       	add	r22, r22
    292a:	77 1f       	adc	r23, r23
    292c:	88 1f       	adc	r24, r24
    292e:	bb 1f       	adc	r27, r27
    2930:	62 17       	cp	r22, r18
    2932:	73 07       	cpc	r23, r19
    2934:	84 07       	cpc	r24, r20
    2936:	ba 07       	cpc	r27, r26
    2938:	20 f0       	brcs	.+8      	; 0x2942 <__divsf3_pse+0xaa>
    293a:	62 1b       	sub	r22, r18
    293c:	73 0b       	sbc	r23, r19
    293e:	84 0b       	sbc	r24, r20
    2940:	ba 0b       	sbc	r27, r26
    2942:	ee 1f       	adc	r30, r30
    2944:	88 f7       	brcc	.-30     	; 0x2928 <__divsf3_pse+0x90>
    2946:	e0 95       	com	r30
    2948:	08 95       	ret

0000294a <__fixunssfsi>:
    294a:	98 d0       	rcall	.+304    	; 0x2a7c <__fp_splitA>
    294c:	88 f0       	brcs	.+34     	; 0x2970 <__fixunssfsi+0x26>
    294e:	9f 57       	subi	r25, 0x7F	; 127
    2950:	90 f0       	brcs	.+36     	; 0x2976 <__fixunssfsi+0x2c>
    2952:	b9 2f       	mov	r27, r25
    2954:	99 27       	eor	r25, r25
    2956:	b7 51       	subi	r27, 0x17	; 23
    2958:	a0 f0       	brcs	.+40     	; 0x2982 <__fixunssfsi+0x38>
    295a:	d1 f0       	breq	.+52     	; 0x2990 <__fixunssfsi+0x46>
    295c:	66 0f       	add	r22, r22
    295e:	77 1f       	adc	r23, r23
    2960:	88 1f       	adc	r24, r24
    2962:	99 1f       	adc	r25, r25
    2964:	1a f0       	brmi	.+6      	; 0x296c <__fixunssfsi+0x22>
    2966:	ba 95       	dec	r27
    2968:	c9 f7       	brne	.-14     	; 0x295c <__fixunssfsi+0x12>
    296a:	12 c0       	rjmp	.+36     	; 0x2990 <__fixunssfsi+0x46>
    296c:	b1 30       	cpi	r27, 0x01	; 1
    296e:	81 f0       	breq	.+32     	; 0x2990 <__fixunssfsi+0x46>
    2970:	9f d0       	rcall	.+318    	; 0x2ab0 <__fp_zero>
    2972:	b1 e0       	ldi	r27, 0x01	; 1
    2974:	08 95       	ret
    2976:	9c c0       	rjmp	.+312    	; 0x2ab0 <__fp_zero>
    2978:	67 2f       	mov	r22, r23
    297a:	78 2f       	mov	r23, r24
    297c:	88 27       	eor	r24, r24
    297e:	b8 5f       	subi	r27, 0xF8	; 248
    2980:	39 f0       	breq	.+14     	; 0x2990 <__fixunssfsi+0x46>
    2982:	b9 3f       	cpi	r27, 0xF9	; 249
    2984:	cc f3       	brlt	.-14     	; 0x2978 <__fixunssfsi+0x2e>
    2986:	86 95       	lsr	r24
    2988:	77 95       	ror	r23
    298a:	67 95       	ror	r22
    298c:	b3 95       	inc	r27
    298e:	d9 f7       	brne	.-10     	; 0x2986 <__fixunssfsi+0x3c>
    2990:	3e f4       	brtc	.+14     	; 0x29a0 <__fixunssfsi+0x56>
    2992:	90 95       	com	r25
    2994:	80 95       	com	r24
    2996:	70 95       	com	r23
    2998:	61 95       	neg	r22
    299a:	7f 4f       	sbci	r23, 0xFF	; 255
    299c:	8f 4f       	sbci	r24, 0xFF	; 255
    299e:	9f 4f       	sbci	r25, 0xFF	; 255
    29a0:	08 95       	ret

000029a2 <__floatunsisf>:
    29a2:	e8 94       	clt
    29a4:	09 c0       	rjmp	.+18     	; 0x29b8 <__floatsisf+0x12>

000029a6 <__floatsisf>:
    29a6:	97 fb       	bst	r25, 7
    29a8:	3e f4       	brtc	.+14     	; 0x29b8 <__floatsisf+0x12>
    29aa:	90 95       	com	r25
    29ac:	80 95       	com	r24
    29ae:	70 95       	com	r23
    29b0:	61 95       	neg	r22
    29b2:	7f 4f       	sbci	r23, 0xFF	; 255
    29b4:	8f 4f       	sbci	r24, 0xFF	; 255
    29b6:	9f 4f       	sbci	r25, 0xFF	; 255
    29b8:	99 23       	and	r25, r25
    29ba:	a9 f0       	breq	.+42     	; 0x29e6 <__floatsisf+0x40>
    29bc:	f9 2f       	mov	r31, r25
    29be:	96 e9       	ldi	r25, 0x96	; 150
    29c0:	bb 27       	eor	r27, r27
    29c2:	93 95       	inc	r25
    29c4:	f6 95       	lsr	r31
    29c6:	87 95       	ror	r24
    29c8:	77 95       	ror	r23
    29ca:	67 95       	ror	r22
    29cc:	b7 95       	ror	r27
    29ce:	f1 11       	cpse	r31, r1
    29d0:	f8 cf       	rjmp	.-16     	; 0x29c2 <__floatsisf+0x1c>
    29d2:	fa f4       	brpl	.+62     	; 0x2a12 <__floatsisf+0x6c>
    29d4:	bb 0f       	add	r27, r27
    29d6:	11 f4       	brne	.+4      	; 0x29dc <__floatsisf+0x36>
    29d8:	60 ff       	sbrs	r22, 0
    29da:	1b c0       	rjmp	.+54     	; 0x2a12 <__floatsisf+0x6c>
    29dc:	6f 5f       	subi	r22, 0xFF	; 255
    29de:	7f 4f       	sbci	r23, 0xFF	; 255
    29e0:	8f 4f       	sbci	r24, 0xFF	; 255
    29e2:	9f 4f       	sbci	r25, 0xFF	; 255
    29e4:	16 c0       	rjmp	.+44     	; 0x2a12 <__floatsisf+0x6c>
    29e6:	88 23       	and	r24, r24
    29e8:	11 f0       	breq	.+4      	; 0x29ee <__floatsisf+0x48>
    29ea:	96 e9       	ldi	r25, 0x96	; 150
    29ec:	11 c0       	rjmp	.+34     	; 0x2a10 <__floatsisf+0x6a>
    29ee:	77 23       	and	r23, r23
    29f0:	21 f0       	breq	.+8      	; 0x29fa <__floatsisf+0x54>
    29f2:	9e e8       	ldi	r25, 0x8E	; 142
    29f4:	87 2f       	mov	r24, r23
    29f6:	76 2f       	mov	r23, r22
    29f8:	05 c0       	rjmp	.+10     	; 0x2a04 <__floatsisf+0x5e>
    29fa:	66 23       	and	r22, r22
    29fc:	71 f0       	breq	.+28     	; 0x2a1a <__floatsisf+0x74>
    29fe:	96 e8       	ldi	r25, 0x86	; 134
    2a00:	86 2f       	mov	r24, r22
    2a02:	70 e0       	ldi	r23, 0x00	; 0
    2a04:	60 e0       	ldi	r22, 0x00	; 0
    2a06:	2a f0       	brmi	.+10     	; 0x2a12 <__floatsisf+0x6c>
    2a08:	9a 95       	dec	r25
    2a0a:	66 0f       	add	r22, r22
    2a0c:	77 1f       	adc	r23, r23
    2a0e:	88 1f       	adc	r24, r24
    2a10:	da f7       	brpl	.-10     	; 0x2a08 <__floatsisf+0x62>
    2a12:	88 0f       	add	r24, r24
    2a14:	96 95       	lsr	r25
    2a16:	87 95       	ror	r24
    2a18:	97 f9       	bld	r25, 7
    2a1a:	08 95       	ret

00002a1c <__fp_inf>:
    2a1c:	97 f9       	bld	r25, 7
    2a1e:	9f 67       	ori	r25, 0x7F	; 127
    2a20:	80 e8       	ldi	r24, 0x80	; 128
    2a22:	70 e0       	ldi	r23, 0x00	; 0
    2a24:	60 e0       	ldi	r22, 0x00	; 0
    2a26:	08 95       	ret

00002a28 <__fp_nan>:
    2a28:	9f ef       	ldi	r25, 0xFF	; 255
    2a2a:	80 ec       	ldi	r24, 0xC0	; 192
    2a2c:	08 95       	ret

00002a2e <__fp_pscA>:
    2a2e:	00 24       	eor	r0, r0
    2a30:	0a 94       	dec	r0
    2a32:	16 16       	cp	r1, r22
    2a34:	17 06       	cpc	r1, r23
    2a36:	18 06       	cpc	r1, r24
    2a38:	09 06       	cpc	r0, r25
    2a3a:	08 95       	ret

00002a3c <__fp_pscB>:
    2a3c:	00 24       	eor	r0, r0
    2a3e:	0a 94       	dec	r0
    2a40:	12 16       	cp	r1, r18
    2a42:	13 06       	cpc	r1, r19
    2a44:	14 06       	cpc	r1, r20
    2a46:	05 06       	cpc	r0, r21
    2a48:	08 95       	ret

00002a4a <__fp_round>:
    2a4a:	09 2e       	mov	r0, r25
    2a4c:	03 94       	inc	r0
    2a4e:	00 0c       	add	r0, r0
    2a50:	11 f4       	brne	.+4      	; 0x2a56 <__fp_round+0xc>
    2a52:	88 23       	and	r24, r24
    2a54:	52 f0       	brmi	.+20     	; 0x2a6a <__fp_round+0x20>
    2a56:	bb 0f       	add	r27, r27
    2a58:	40 f4       	brcc	.+16     	; 0x2a6a <__fp_round+0x20>
    2a5a:	bf 2b       	or	r27, r31
    2a5c:	11 f4       	brne	.+4      	; 0x2a62 <__fp_round+0x18>
    2a5e:	60 ff       	sbrs	r22, 0
    2a60:	04 c0       	rjmp	.+8      	; 0x2a6a <__fp_round+0x20>
    2a62:	6f 5f       	subi	r22, 0xFF	; 255
    2a64:	7f 4f       	sbci	r23, 0xFF	; 255
    2a66:	8f 4f       	sbci	r24, 0xFF	; 255
    2a68:	9f 4f       	sbci	r25, 0xFF	; 255
    2a6a:	08 95       	ret

00002a6c <__fp_split3>:
    2a6c:	57 fd       	sbrc	r21, 7
    2a6e:	90 58       	subi	r25, 0x80	; 128
    2a70:	44 0f       	add	r20, r20
    2a72:	55 1f       	adc	r21, r21
    2a74:	59 f0       	breq	.+22     	; 0x2a8c <__fp_splitA+0x10>
    2a76:	5f 3f       	cpi	r21, 0xFF	; 255
    2a78:	71 f0       	breq	.+28     	; 0x2a96 <__fp_splitA+0x1a>
    2a7a:	47 95       	ror	r20

00002a7c <__fp_splitA>:
    2a7c:	88 0f       	add	r24, r24
    2a7e:	97 fb       	bst	r25, 7
    2a80:	99 1f       	adc	r25, r25
    2a82:	61 f0       	breq	.+24     	; 0x2a9c <__fp_splitA+0x20>
    2a84:	9f 3f       	cpi	r25, 0xFF	; 255
    2a86:	79 f0       	breq	.+30     	; 0x2aa6 <__fp_splitA+0x2a>
    2a88:	87 95       	ror	r24
    2a8a:	08 95       	ret
    2a8c:	12 16       	cp	r1, r18
    2a8e:	13 06       	cpc	r1, r19
    2a90:	14 06       	cpc	r1, r20
    2a92:	55 1f       	adc	r21, r21
    2a94:	f2 cf       	rjmp	.-28     	; 0x2a7a <__fp_split3+0xe>
    2a96:	46 95       	lsr	r20
    2a98:	f1 df       	rcall	.-30     	; 0x2a7c <__fp_splitA>
    2a9a:	08 c0       	rjmp	.+16     	; 0x2aac <__fp_splitA+0x30>
    2a9c:	16 16       	cp	r1, r22
    2a9e:	17 06       	cpc	r1, r23
    2aa0:	18 06       	cpc	r1, r24
    2aa2:	99 1f       	adc	r25, r25
    2aa4:	f1 cf       	rjmp	.-30     	; 0x2a88 <__fp_splitA+0xc>
    2aa6:	86 95       	lsr	r24
    2aa8:	71 05       	cpc	r23, r1
    2aaa:	61 05       	cpc	r22, r1
    2aac:	08 94       	sec
    2aae:	08 95       	ret

00002ab0 <__fp_zero>:
    2ab0:	e8 94       	clt

00002ab2 <__fp_szero>:
    2ab2:	bb 27       	eor	r27, r27
    2ab4:	66 27       	eor	r22, r22
    2ab6:	77 27       	eor	r23, r23
    2ab8:	cb 01       	movw	r24, r22
    2aba:	97 f9       	bld	r25, 7
    2abc:	08 95       	ret

00002abe <__divmodhi4>:
    2abe:	97 fb       	bst	r25, 7
    2ac0:	07 2e       	mov	r0, r23
    2ac2:	16 f4       	brtc	.+4      	; 0x2ac8 <__divmodhi4+0xa>
    2ac4:	00 94       	com	r0
    2ac6:	06 d0       	rcall	.+12     	; 0x2ad4 <__divmodhi4_neg1>
    2ac8:	77 fd       	sbrc	r23, 7
    2aca:	08 d0       	rcall	.+16     	; 0x2adc <__divmodhi4_neg2>
    2acc:	1a d0       	rcall	.+52     	; 0x2b02 <__udivmodhi4>
    2ace:	07 fc       	sbrc	r0, 7
    2ad0:	05 d0       	rcall	.+10     	; 0x2adc <__divmodhi4_neg2>
    2ad2:	3e f4       	brtc	.+14     	; 0x2ae2 <__divmodhi4_exit>

00002ad4 <__divmodhi4_neg1>:
    2ad4:	90 95       	com	r25
    2ad6:	81 95       	neg	r24
    2ad8:	9f 4f       	sbci	r25, 0xFF	; 255
    2ada:	08 95       	ret

00002adc <__divmodhi4_neg2>:
    2adc:	70 95       	com	r23
    2ade:	61 95       	neg	r22
    2ae0:	7f 4f       	sbci	r23, 0xFF	; 255

00002ae2 <__divmodhi4_exit>:
    2ae2:	08 95       	ret

00002ae4 <__umulhisi3>:
    2ae4:	a2 9f       	mul	r26, r18
    2ae6:	b0 01       	movw	r22, r0
    2ae8:	b3 9f       	mul	r27, r19
    2aea:	c0 01       	movw	r24, r0
    2aec:	a3 9f       	mul	r26, r19
    2aee:	70 0d       	add	r23, r0
    2af0:	81 1d       	adc	r24, r1
    2af2:	11 24       	eor	r1, r1
    2af4:	91 1d       	adc	r25, r1
    2af6:	b2 9f       	mul	r27, r18
    2af8:	70 0d       	add	r23, r0
    2afa:	81 1d       	adc	r24, r1
    2afc:	11 24       	eor	r1, r1
    2afe:	91 1d       	adc	r25, r1
    2b00:	08 95       	ret

00002b02 <__udivmodhi4>:
    2b02:	aa 1b       	sub	r26, r26
    2b04:	bb 1b       	sub	r27, r27
    2b06:	51 e1       	ldi	r21, 0x11	; 17
    2b08:	07 c0       	rjmp	.+14     	; 0x2b18 <__udivmodhi4_ep>

00002b0a <__udivmodhi4_loop>:
    2b0a:	aa 1f       	adc	r26, r26
    2b0c:	bb 1f       	adc	r27, r27
    2b0e:	a6 17       	cp	r26, r22
    2b10:	b7 07       	cpc	r27, r23
    2b12:	10 f0       	brcs	.+4      	; 0x2b18 <__udivmodhi4_ep>
    2b14:	a6 1b       	sub	r26, r22
    2b16:	b7 0b       	sbc	r27, r23

00002b18 <__udivmodhi4_ep>:
    2b18:	88 1f       	adc	r24, r24
    2b1a:	99 1f       	adc	r25, r25
    2b1c:	5a 95       	dec	r21
    2b1e:	a9 f7       	brne	.-22     	; 0x2b0a <__udivmodhi4_loop>
    2b20:	80 95       	com	r24
    2b22:	90 95       	com	r25
    2b24:	bc 01       	movw	r22, r24
    2b26:	cd 01       	movw	r24, r26
    2b28:	08 95       	ret

00002b2a <_exit>:
    2b2a:	f8 94       	cli

00002b2c <__stop_program>:
    2b2c:	ff cf       	rjmp	.-2      	; 0x2b2c <__stop_program>
