
Navigation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004e  00800200  00002bf0  00002c84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002bf0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006d  0080024e  0080024e  00002cd2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002cd2  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000380  00000000  00000000  00002d02  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003201  00000000  00000000  00003082  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004cd  00000000  00000000  00006283  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000242e  00000000  00000000  00006750  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000009e4  00000000  00000000  00008b80  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000864  00000000  00000000  00009564  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000021da  00000000  00000000  00009dc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000003d0  00000000  00000000  0000bfa2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	06 c3       	rjmp	.+1548   	; 0x612 <__vector_1>
       6:	00 00       	nop
       8:	8e c0       	rjmp	.+284    	; 0x126 <__bad_interrupt>
       a:	00 00       	nop
       c:	8c c0       	rjmp	.+280    	; 0x126 <__bad_interrupt>
       e:	00 00       	nop
      10:	8a c0       	rjmp	.+276    	; 0x126 <__bad_interrupt>
      12:	00 00       	nop
      14:	08 c4       	rjmp	.+2064   	; 0x826 <__vector_5>
      16:	00 00       	nop
      18:	e1 c3       	rjmp	.+1986   	; 0x7dc <__vector_6>
      1a:	00 00       	nop
      1c:	84 c0       	rjmp	.+264    	; 0x126 <__bad_interrupt>
      1e:	00 00       	nop
      20:	82 c0       	rjmp	.+260    	; 0x126 <__bad_interrupt>
      22:	00 00       	nop
      24:	80 c0       	rjmp	.+256    	; 0x126 <__bad_interrupt>
      26:	00 00       	nop
      28:	7e c0       	rjmp	.+252    	; 0x126 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7c c0       	rjmp	.+248    	; 0x126 <__bad_interrupt>
      2e:	00 00       	nop
      30:	7a c0       	rjmp	.+244    	; 0x126 <__bad_interrupt>
      32:	00 00       	nop
      34:	78 c0       	rjmp	.+240    	; 0x126 <__bad_interrupt>
      36:	00 00       	nop
      38:	76 c0       	rjmp	.+236    	; 0x126 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	74 c0       	rjmp	.+232    	; 0x126 <__bad_interrupt>
      3e:	00 00       	nop
      40:	72 c0       	rjmp	.+228    	; 0x126 <__bad_interrupt>
      42:	00 00       	nop
      44:	70 c0       	rjmp	.+224    	; 0x126 <__bad_interrupt>
      46:	00 00       	nop
      48:	6e c0       	rjmp	.+220    	; 0x126 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6c c0       	rjmp	.+216    	; 0x126 <__bad_interrupt>
      4e:	00 00       	nop
      50:	6a c0       	rjmp	.+212    	; 0x126 <__bad_interrupt>
      52:	00 00       	nop
      54:	68 c0       	rjmp	.+208    	; 0x126 <__bad_interrupt>
      56:	00 00       	nop
      58:	66 c0       	rjmp	.+204    	; 0x126 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	64 c0       	rjmp	.+200    	; 0x126 <__bad_interrupt>
      5e:	00 00       	nop
      60:	62 c0       	rjmp	.+196    	; 0x126 <__bad_interrupt>
      62:	00 00       	nop
      64:	60 c0       	rjmp	.+192    	; 0x126 <__bad_interrupt>
      66:	00 00       	nop
      68:	5e c0       	rjmp	.+188    	; 0x126 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5c c0       	rjmp	.+184    	; 0x126 <__bad_interrupt>
      6e:	00 00       	nop
      70:	5a c0       	rjmp	.+180    	; 0x126 <__bad_interrupt>
      72:	00 00       	nop
      74:	58 c0       	rjmp	.+176    	; 0x126 <__bad_interrupt>
      76:	00 00       	nop
      78:	56 c0       	rjmp	.+172    	; 0x126 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	54 c0       	rjmp	.+168    	; 0x126 <__bad_interrupt>
      7e:	00 00       	nop
      80:	52 c0       	rjmp	.+164    	; 0x126 <__bad_interrupt>
      82:	00 00       	nop
      84:	50 c0       	rjmp	.+160    	; 0x126 <__bad_interrupt>
      86:	00 00       	nop
      88:	4e c0       	rjmp	.+156    	; 0x126 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4c c0       	rjmp	.+152    	; 0x126 <__bad_interrupt>
      8e:	00 00       	nop
      90:	4a c0       	rjmp	.+148    	; 0x126 <__bad_interrupt>
      92:	00 00       	nop
      94:	48 c0       	rjmp	.+144    	; 0x126 <__bad_interrupt>
      96:	00 00       	nop
      98:	46 c0       	rjmp	.+140    	; 0x126 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	44 c0       	rjmp	.+136    	; 0x126 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	42 c0       	rjmp	.+132    	; 0x126 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	40 c0       	rjmp	.+128    	; 0x126 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3e c0       	rjmp	.+124    	; 0x126 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3c c0       	rjmp	.+120    	; 0x126 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	3a c0       	rjmp	.+116    	; 0x126 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	38 c0       	rjmp	.+112    	; 0x126 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	36 c0       	rjmp	.+108    	; 0x126 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	34 c0       	rjmp	.+104    	; 0x126 <__bad_interrupt>
      be:	00 00       	nop
      c0:	32 c0       	rjmp	.+100    	; 0x126 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	30 c0       	rjmp	.+96     	; 0x126 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2e c0       	rjmp	.+92     	; 0x126 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2c c0       	rjmp	.+88     	; 0x126 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	2a c0       	rjmp	.+84     	; 0x126 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	28 c0       	rjmp	.+80     	; 0x126 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	26 c0       	rjmp	.+76     	; 0x126 <__bad_interrupt>
      da:	00 00       	nop
      dc:	24 c0       	rjmp	.+72     	; 0x126 <__bad_interrupt>
      de:	00 00       	nop
      e0:	22 c0       	rjmp	.+68     	; 0x126 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e0 ef       	ldi	r30, 0xF0	; 240
      fc:	fb e2       	ldi	r31, 0x2B	; 43
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ae 34       	cpi	r26, 0x4E	; 78
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	ae e4       	ldi	r26, 0x4E	; 78
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ab 3b       	cpi	r26, 0xBB	; 187
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <main>
     122:	0c 94 f6 15 	jmp	0x2bec	; 0x2bec <_exit>

00000126 <__bad_interrupt>:
     126:	6c cf       	rjmp	.-296    	; 0x0 <__vectors>

00000128 <lcd_set_4bit>:
	lcd_print(2,1,t,5);
	_delay_ms(10000);
	lcd_wr_command(0x01); //Clear the LCD
	lcd((char*)t);
	return t;
}
     128:	86 e6       	ldi	r24, 0x66	; 102
     12a:	9e e0       	ldi	r25, 0x0E	; 14
     12c:	01 97       	sbiw	r24, 0x01	; 1
     12e:	f1 f7       	brne	.-4      	; 0x12c <lcd_set_4bit+0x4>
     130:	00 00       	nop
     132:	40 98       	cbi	0x08, 0	; 8
     134:	41 98       	cbi	0x08, 1	; 8
     136:	80 e3       	ldi	r24, 0x30	; 48
     138:	88 b9       	out	0x08, r24	; 8
     13a:	42 9a       	sbi	0x08, 2	; 8
     13c:	8f ef       	ldi	r24, 0xFF	; 255
     13e:	97 e4       	ldi	r25, 0x47	; 71
     140:	01 97       	sbiw	r24, 0x01	; 1
     142:	f1 f7       	brne	.-4      	; 0x140 <lcd_set_4bit+0x18>
     144:	00 c0       	rjmp	.+0      	; 0x146 <lcd_set_4bit+0x1e>
     146:	00 00       	nop
     148:	42 98       	cbi	0x08, 2	; 8
     14a:	86 e6       	ldi	r24, 0x66	; 102
     14c:	9e e0       	ldi	r25, 0x0E	; 14
     14e:	01 97       	sbiw	r24, 0x01	; 1
     150:	f1 f7       	brne	.-4      	; 0x14e <lcd_set_4bit+0x26>
     152:	00 00       	nop
     154:	40 98       	cbi	0x08, 0	; 8
     156:	41 98       	cbi	0x08, 1	; 8
     158:	80 e3       	ldi	r24, 0x30	; 48
     15a:	88 b9       	out	0x08, r24	; 8
     15c:	42 9a       	sbi	0x08, 2	; 8
     15e:	8f ef       	ldi	r24, 0xFF	; 255
     160:	97 e4       	ldi	r25, 0x47	; 71
     162:	01 97       	sbiw	r24, 0x01	; 1
     164:	f1 f7       	brne	.-4      	; 0x162 <lcd_set_4bit+0x3a>
     166:	00 c0       	rjmp	.+0      	; 0x168 <lcd_set_4bit+0x40>
     168:	00 00       	nop
     16a:	42 98       	cbi	0x08, 2	; 8
     16c:	86 e6       	ldi	r24, 0x66	; 102
     16e:	9e e0       	ldi	r25, 0x0E	; 14
     170:	01 97       	sbiw	r24, 0x01	; 1
     172:	f1 f7       	brne	.-4      	; 0x170 <lcd_set_4bit+0x48>
     174:	00 00       	nop
     176:	40 98       	cbi	0x08, 0	; 8
     178:	41 98       	cbi	0x08, 1	; 8
     17a:	80 e3       	ldi	r24, 0x30	; 48
     17c:	88 b9       	out	0x08, r24	; 8
     17e:	42 9a       	sbi	0x08, 2	; 8
     180:	8f ef       	ldi	r24, 0xFF	; 255
     182:	97 e4       	ldi	r25, 0x47	; 71
     184:	01 97       	sbiw	r24, 0x01	; 1
     186:	f1 f7       	brne	.-4      	; 0x184 <lcd_set_4bit+0x5c>
     188:	00 c0       	rjmp	.+0      	; 0x18a <lcd_set_4bit+0x62>
     18a:	00 00       	nop
     18c:	42 98       	cbi	0x08, 2	; 8
     18e:	86 e6       	ldi	r24, 0x66	; 102
     190:	9e e0       	ldi	r25, 0x0E	; 14
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <lcd_set_4bit+0x6a>
     196:	00 00       	nop
     198:	40 98       	cbi	0x08, 0	; 8
     19a:	41 98       	cbi	0x08, 1	; 8
     19c:	80 e2       	ldi	r24, 0x20	; 32
     19e:	88 b9       	out	0x08, r24	; 8
     1a0:	42 9a       	sbi	0x08, 2	; 8
     1a2:	8f ef       	ldi	r24, 0xFF	; 255
     1a4:	97 e4       	ldi	r25, 0x47	; 71
     1a6:	01 97       	sbiw	r24, 0x01	; 1
     1a8:	f1 f7       	brne	.-4      	; 0x1a6 <lcd_set_4bit+0x7e>
     1aa:	00 c0       	rjmp	.+0      	; 0x1ac <lcd_set_4bit+0x84>
     1ac:	00 00       	nop
     1ae:	42 98       	cbi	0x08, 2	; 8
     1b0:	08 95       	ret

000001b2 <lcd_wr_command>:
     1b2:	98 b1       	in	r25, 0x08	; 8
     1b4:	9f 70       	andi	r25, 0x0F	; 15
     1b6:	98 b9       	out	0x08, r25	; 8
     1b8:	98 b1       	in	r25, 0x08	; 8
     1ba:	28 2f       	mov	r18, r24
     1bc:	20 7f       	andi	r18, 0xF0	; 240
     1be:	92 2b       	or	r25, r18
     1c0:	98 b9       	out	0x08, r25	; 8
     1c2:	40 98       	cbi	0x08, 0	; 8
     1c4:	41 98       	cbi	0x08, 1	; 8
     1c6:	42 9a       	sbi	0x08, 2	; 8
     1c8:	ef ef       	ldi	r30, 0xFF	; 255
     1ca:	f7 e4       	ldi	r31, 0x47	; 71
     1cc:	31 97       	sbiw	r30, 0x01	; 1
     1ce:	f1 f7       	brne	.-4      	; 0x1cc <lcd_wr_command+0x1a>
     1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <lcd_wr_command+0x20>
     1d2:	00 00       	nop
     1d4:	42 98       	cbi	0x08, 2	; 8
     1d6:	98 b1       	in	r25, 0x08	; 8
     1d8:	9f 70       	andi	r25, 0x0F	; 15
     1da:	98 b9       	out	0x08, r25	; 8
     1dc:	98 b1       	in	r25, 0x08	; 8
     1de:	82 95       	swap	r24
     1e0:	80 7f       	andi	r24, 0xF0	; 240
     1e2:	89 2b       	or	r24, r25
     1e4:	88 b9       	out	0x08, r24	; 8
     1e6:	40 98       	cbi	0x08, 0	; 8
     1e8:	41 98       	cbi	0x08, 1	; 8
     1ea:	42 9a       	sbi	0x08, 2	; 8
     1ec:	8f ef       	ldi	r24, 0xFF	; 255
     1ee:	97 e4       	ldi	r25, 0x47	; 71
     1f0:	01 97       	sbiw	r24, 0x01	; 1
     1f2:	f1 f7       	brne	.-4      	; 0x1f0 <lcd_wr_command+0x3e>
     1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <lcd_wr_command+0x44>
     1f6:	00 00       	nop
     1f8:	42 98       	cbi	0x08, 2	; 8
     1fa:	08 95       	ret

000001fc <lcd_init>:
     1fc:	95 df       	rcall	.-214    	; 0x128 <lcd_set_4bit>
     1fe:	86 e6       	ldi	r24, 0x66	; 102
     200:	9e e0       	ldi	r25, 0x0E	; 14
     202:	01 97       	sbiw	r24, 0x01	; 1
     204:	f1 f7       	brne	.-4      	; 0x202 <lcd_init+0x6>
     206:	00 00       	nop
     208:	88 e2       	ldi	r24, 0x28	; 40
     20a:	d3 df       	rcall	.-90     	; 0x1b2 <lcd_wr_command>
     20c:	81 e0       	ldi	r24, 0x01	; 1
     20e:	d1 df       	rcall	.-94     	; 0x1b2 <lcd_wr_command>
     210:	86 e0       	ldi	r24, 0x06	; 6
     212:	cf df       	rcall	.-98     	; 0x1b2 <lcd_wr_command>
     214:	8e e0       	ldi	r24, 0x0E	; 14
     216:	cd df       	rcall	.-102    	; 0x1b2 <lcd_wr_command>
     218:	80 e8       	ldi	r24, 0x80	; 128
     21a:	cb cf       	rjmp	.-106    	; 0x1b2 <lcd_wr_command>
     21c:	08 95       	ret

0000021e <lcd_wr_char>:
     21e:	98 b1       	in	r25, 0x08	; 8
     220:	9f 70       	andi	r25, 0x0F	; 15
     222:	98 b9       	out	0x08, r25	; 8
     224:	98 b1       	in	r25, 0x08	; 8
     226:	28 2f       	mov	r18, r24
     228:	20 7f       	andi	r18, 0xF0	; 240
     22a:	92 2b       	or	r25, r18
     22c:	98 b9       	out	0x08, r25	; 8
     22e:	40 9a       	sbi	0x08, 0	; 8
     230:	41 98       	cbi	0x08, 1	; 8
     232:	42 9a       	sbi	0x08, 2	; 8
     234:	ef ef       	ldi	r30, 0xFF	; 255
     236:	f7 e4       	ldi	r31, 0x47	; 71
     238:	31 97       	sbiw	r30, 0x01	; 1
     23a:	f1 f7       	brne	.-4      	; 0x238 <lcd_wr_char+0x1a>
     23c:	00 c0       	rjmp	.+0      	; 0x23e <lcd_wr_char+0x20>
     23e:	00 00       	nop
     240:	42 98       	cbi	0x08, 2	; 8
     242:	98 b1       	in	r25, 0x08	; 8
     244:	9f 70       	andi	r25, 0x0F	; 15
     246:	98 b9       	out	0x08, r25	; 8
     248:	98 b1       	in	r25, 0x08	; 8
     24a:	82 95       	swap	r24
     24c:	80 7f       	andi	r24, 0xF0	; 240
     24e:	89 2b       	or	r24, r25
     250:	88 b9       	out	0x08, r24	; 8
     252:	40 9a       	sbi	0x08, 0	; 8
     254:	41 98       	cbi	0x08, 1	; 8
     256:	42 9a       	sbi	0x08, 2	; 8
     258:	8f ef       	ldi	r24, 0xFF	; 255
     25a:	97 e4       	ldi	r25, 0x47	; 71
     25c:	01 97       	sbiw	r24, 0x01	; 1
     25e:	f1 f7       	brne	.-4      	; 0x25c <lcd_wr_char+0x3e>
     260:	00 c0       	rjmp	.+0      	; 0x262 <lcd_wr_char+0x44>
     262:	00 00       	nop
     264:	42 98       	cbi	0x08, 2	; 8
     266:	08 95       	ret

00000268 <lcd_home>:
     268:	80 e8       	ldi	r24, 0x80	; 128
     26a:	a3 cf       	rjmp	.-186    	; 0x1b2 <lcd_wr_command>
     26c:	08 95       	ret

0000026e <lcd_string>:
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	ec 01       	movw	r28, r24
     274:	88 81       	ld	r24, Y
     276:	88 23       	and	r24, r24
     278:	29 f0       	breq	.+10     	; 0x284 <lcd_string+0x16>
     27a:	21 96       	adiw	r28, 0x01	; 1
     27c:	d0 df       	rcall	.-96     	; 0x21e <lcd_wr_char>
     27e:	89 91       	ld	r24, Y+
     280:	81 11       	cpse	r24, r1
     282:	fc cf       	rjmp	.-8      	; 0x27c <lcd_string+0xe>
     284:	df 91       	pop	r29
     286:	cf 91       	pop	r28
     288:	08 95       	ret

0000028a <lcd_cursor>:
     28a:	82 30       	cpi	r24, 0x02	; 2
     28c:	69 f0       	breq	.+26     	; 0x2a8 <lcd_cursor+0x1e>
     28e:	18 f4       	brcc	.+6      	; 0x296 <lcd_cursor+0xc>
     290:	81 30       	cpi	r24, 0x01	; 1
     292:	31 f0       	breq	.+12     	; 0x2a0 <lcd_cursor+0x16>
     294:	08 95       	ret
     296:	83 30       	cpi	r24, 0x03	; 3
     298:	59 f0       	breq	.+22     	; 0x2b0 <lcd_cursor+0x26>
     29a:	84 30       	cpi	r24, 0x04	; 4
     29c:	69 f0       	breq	.+26     	; 0x2b8 <lcd_cursor+0x2e>
     29e:	08 95       	ret
     2a0:	8f e7       	ldi	r24, 0x7F	; 127
     2a2:	86 0f       	add	r24, r22
     2a4:	86 cf       	rjmp	.-244    	; 0x1b2 <lcd_wr_command>
     2a6:	08 95       	ret
     2a8:	8f eb       	ldi	r24, 0xBF	; 191
     2aa:	86 0f       	add	r24, r22
     2ac:	82 cf       	rjmp	.-252    	; 0x1b2 <lcd_wr_command>
     2ae:	08 95       	ret
     2b0:	83 e9       	ldi	r24, 0x93	; 147
     2b2:	86 0f       	add	r24, r22
     2b4:	7e cf       	rjmp	.-260    	; 0x1b2 <lcd_wr_command>
     2b6:	08 95       	ret
     2b8:	83 ed       	ldi	r24, 0xD3	; 211
     2ba:	86 0f       	add	r24, r22
     2bc:	7a cf       	rjmp	.-268    	; 0x1b2 <lcd_wr_command>
     2be:	08 95       	ret

000002c0 <lcd_print>:
     2c0:	0f 93       	push	r16
     2c2:	1f 93       	push	r17
     2c4:	cf 93       	push	r28
     2c6:	df 93       	push	r29
     2c8:	8a 01       	movw	r16, r20
     2ca:	e9 01       	movw	r28, r18
     2cc:	88 23       	and	r24, r24
     2ce:	11 f0       	breq	.+4      	; 0x2d4 <lcd_print+0x14>
     2d0:	61 11       	cpse	r22, r1
     2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <lcd_print+0x18>
     2d4:	c9 df       	rcall	.-110    	; 0x268 <lcd_home>
     2d6:	01 c0       	rjmp	.+2      	; 0x2da <lcd_print+0x1a>
     2d8:	d8 df       	rcall	.-80     	; 0x28a <lcd_cursor>
     2da:	c5 30       	cpi	r28, 0x05	; 5
     2dc:	d1 05       	cpc	r29, r1
     2de:	09 f0       	breq	.+2      	; 0x2e2 <lcd_print+0x22>
     2e0:	d5 c0       	rjmp	.+426    	; 0x48c <lcd_print+0x1cc>
     2e2:	98 01       	movw	r18, r16
     2e4:	32 95       	swap	r19
     2e6:	22 95       	swap	r18
     2e8:	2f 70       	andi	r18, 0x0F	; 15
     2ea:	23 27       	eor	r18, r19
     2ec:	3f 70       	andi	r19, 0x0F	; 15
     2ee:	23 27       	eor	r18, r19
     2f0:	a7 e4       	ldi	r26, 0x47	; 71
     2f2:	b3 e0       	ldi	r27, 0x03	; 3
     2f4:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__umulhisi3>
     2f8:	96 95       	lsr	r25
     2fa:	87 95       	ror	r24
     2fc:	96 95       	lsr	r25
     2fe:	87 95       	ror	r24
     300:	96 95       	lsr	r25
     302:	87 95       	ror	r24
     304:	c0 96       	adiw	r24, 0x30	; 48
     306:	90 93 77 02 	sts	0x0277, r25
     30a:	80 93 76 02 	sts	0x0276, r24
     30e:	87 df       	rcall	.-242    	; 0x21e <lcd_wr_char>
     310:	98 01       	movw	r18, r16
     312:	36 95       	lsr	r19
     314:	27 95       	ror	r18
     316:	36 95       	lsr	r19
     318:	27 95       	ror	r18
     31a:	36 95       	lsr	r19
     31c:	27 95       	ror	r18
     31e:	a5 ec       	ldi	r26, 0xC5	; 197
     320:	b0 e2       	ldi	r27, 0x20	; 32
     322:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__umulhisi3>
     326:	ac 01       	movw	r20, r24
     328:	52 95       	swap	r21
     32a:	42 95       	swap	r20
     32c:	4f 70       	andi	r20, 0x0F	; 15
     32e:	45 27       	eor	r20, r21
     330:	5f 70       	andi	r21, 0x0F	; 15
     332:	45 27       	eor	r20, r21
     334:	50 93 7b 02 	sts	0x027B, r21
     338:	40 93 7a 02 	sts	0x027A, r20
     33c:	9a 01       	movw	r18, r20
     33e:	ad ec       	ldi	r26, 0xCD	; 205
     340:	bc ec       	ldi	r27, 0xCC	; 204
     342:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__umulhisi3>
     346:	96 95       	lsr	r25
     348:	87 95       	ror	r24
     34a:	96 95       	lsr	r25
     34c:	87 95       	ror	r24
     34e:	96 95       	lsr	r25
     350:	87 95       	ror	r24
     352:	9c 01       	movw	r18, r24
     354:	22 0f       	add	r18, r18
     356:	33 1f       	adc	r19, r19
     358:	88 0f       	add	r24, r24
     35a:	99 1f       	adc	r25, r25
     35c:	88 0f       	add	r24, r24
     35e:	99 1f       	adc	r25, r25
     360:	88 0f       	add	r24, r24
     362:	99 1f       	adc	r25, r25
     364:	82 0f       	add	r24, r18
     366:	93 1f       	adc	r25, r19
     368:	48 1b       	sub	r20, r24
     36a:	59 0b       	sbc	r21, r25
     36c:	ca 01       	movw	r24, r20
     36e:	c0 96       	adiw	r24, 0x30	; 48
     370:	90 93 ba 02 	sts	0x02BA, r25
     374:	80 93 b9 02 	sts	0x02B9, r24
     378:	52 df       	rcall	.-348    	; 0x21e <lcd_wr_char>
     37a:	04 c0       	rjmp	.+8      	; 0x384 <lcd_print+0xc4>
     37c:	c3 30       	cpi	r28, 0x03	; 3
     37e:	d1 05       	cpc	r29, r1
     380:	09 f0       	breq	.+2      	; 0x384 <lcd_print+0xc4>
     382:	89 c0       	rjmp	.+274    	; 0x496 <lcd_print+0x1d6>
     384:	98 01       	movw	r18, r16
     386:	36 95       	lsr	r19
     388:	27 95       	ror	r18
     38a:	36 95       	lsr	r19
     38c:	27 95       	ror	r18
     38e:	ab e7       	ldi	r26, 0x7B	; 123
     390:	b4 e1       	ldi	r27, 0x14	; 20
     392:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__umulhisi3>
     396:	ac 01       	movw	r20, r24
     398:	56 95       	lsr	r21
     39a:	47 95       	ror	r20
     39c:	50 93 7b 02 	sts	0x027B, r21
     3a0:	40 93 7a 02 	sts	0x027A, r20
     3a4:	9a 01       	movw	r18, r20
     3a6:	ad ec       	ldi	r26, 0xCD	; 205
     3a8:	bc ec       	ldi	r27, 0xCC	; 204
     3aa:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__umulhisi3>
     3ae:	96 95       	lsr	r25
     3b0:	87 95       	ror	r24
     3b2:	96 95       	lsr	r25
     3b4:	87 95       	ror	r24
     3b6:	96 95       	lsr	r25
     3b8:	87 95       	ror	r24
     3ba:	9c 01       	movw	r18, r24
     3bc:	22 0f       	add	r18, r18
     3be:	33 1f       	adc	r19, r19
     3c0:	88 0f       	add	r24, r24
     3c2:	99 1f       	adc	r25, r25
     3c4:	88 0f       	add	r24, r24
     3c6:	99 1f       	adc	r25, r25
     3c8:	88 0f       	add	r24, r24
     3ca:	99 1f       	adc	r25, r25
     3cc:	82 0f       	add	r24, r18
     3ce:	93 1f       	adc	r25, r19
     3d0:	48 1b       	sub	r20, r24
     3d2:	59 0b       	sbc	r21, r25
     3d4:	ca 01       	movw	r24, r20
     3d6:	c0 96       	adiw	r24, 0x30	; 48
     3d8:	90 93 b0 02 	sts	0x02B0, r25
     3dc:	80 93 af 02 	sts	0x02AF, r24
     3e0:	1e df       	rcall	.-452    	; 0x21e <lcd_wr_char>
     3e2:	98 01       	movw	r18, r16
     3e4:	ad ec       	ldi	r26, 0xCD	; 205
     3e6:	bc ec       	ldi	r27, 0xCC	; 204
     3e8:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__umulhisi3>
     3ec:	ac 01       	movw	r20, r24
     3ee:	56 95       	lsr	r21
     3f0:	47 95       	ror	r20
     3f2:	56 95       	lsr	r21
     3f4:	47 95       	ror	r20
     3f6:	56 95       	lsr	r21
     3f8:	47 95       	ror	r20
     3fa:	50 93 7b 02 	sts	0x027B, r21
     3fe:	40 93 7a 02 	sts	0x027A, r20
     402:	9a 01       	movw	r18, r20
     404:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__umulhisi3>
     408:	96 95       	lsr	r25
     40a:	87 95       	ror	r24
     40c:	96 95       	lsr	r25
     40e:	87 95       	ror	r24
     410:	96 95       	lsr	r25
     412:	87 95       	ror	r24
     414:	9c 01       	movw	r18, r24
     416:	22 0f       	add	r18, r18
     418:	33 1f       	adc	r19, r19
     41a:	88 0f       	add	r24, r24
     41c:	99 1f       	adc	r25, r25
     41e:	88 0f       	add	r24, r24
     420:	99 1f       	adc	r25, r25
     422:	88 0f       	add	r24, r24
     424:	99 1f       	adc	r25, r25
     426:	82 0f       	add	r24, r18
     428:	93 1f       	adc	r25, r19
     42a:	48 1b       	sub	r20, r24
     42c:	59 0b       	sbc	r21, r25
     42e:	ca 01       	movw	r24, r20
     430:	c0 96       	adiw	r24, 0x30	; 48
     432:	90 93 8c 02 	sts	0x028C, r25
     436:	80 93 8b 02 	sts	0x028B, r24
     43a:	f1 de       	rcall	.-542    	; 0x21e <lcd_wr_char>
     43c:	03 c0       	rjmp	.+6      	; 0x444 <lcd_print+0x184>
     43e:	c1 30       	cpi	r28, 0x01	; 1
     440:	d1 05       	cpc	r29, r1
     442:	f9 f4       	brne	.+62     	; 0x482 <lcd_print+0x1c2>
     444:	98 01       	movw	r18, r16
     446:	ad ec       	ldi	r26, 0xCD	; 205
     448:	bc ec       	ldi	r27, 0xCC	; 204
     44a:	0e 94 d3 15 	call	0x2ba6	; 0x2ba6 <__umulhisi3>
     44e:	96 95       	lsr	r25
     450:	87 95       	ror	r24
     452:	96 95       	lsr	r25
     454:	87 95       	ror	r24
     456:	96 95       	lsr	r25
     458:	87 95       	ror	r24
     45a:	9c 01       	movw	r18, r24
     45c:	22 0f       	add	r18, r18
     45e:	33 1f       	adc	r19, r19
     460:	88 0f       	add	r24, r24
     462:	99 1f       	adc	r25, r25
     464:	88 0f       	add	r24, r24
     466:	99 1f       	adc	r25, r25
     468:	88 0f       	add	r24, r24
     46a:	99 1f       	adc	r25, r25
     46c:	82 0f       	add	r24, r18
     46e:	93 1f       	adc	r25, r19
     470:	08 1b       	sub	r16, r24
     472:	19 0b       	sbc	r17, r25
     474:	c8 01       	movw	r24, r16
     476:	c0 96       	adiw	r24, 0x30	; 48
     478:	90 93 b8 02 	sts	0x02B8, r25
     47c:	80 93 b7 02 	sts	0x02B7, r24
     480:	ce de       	rcall	.-612    	; 0x21e <lcd_wr_char>
     482:	26 97       	sbiw	r28, 0x06	; 6
     484:	64 f0       	brlt	.+24     	; 0x49e <lcd_print+0x1de>
     486:	85 e4       	ldi	r24, 0x45	; 69
     488:	ca de       	rcall	.-620    	; 0x21e <lcd_wr_char>
     48a:	09 c0       	rjmp	.+18     	; 0x49e <lcd_print+0x1de>
     48c:	c4 30       	cpi	r28, 0x04	; 4
     48e:	d1 05       	cpc	r29, r1
     490:	09 f0       	breq	.+2      	; 0x494 <lcd_print+0x1d4>
     492:	74 cf       	rjmp	.-280    	; 0x37c <lcd_print+0xbc>
     494:	3d cf       	rjmp	.-390    	; 0x310 <lcd_print+0x50>
     496:	c2 30       	cpi	r28, 0x02	; 2
     498:	d1 05       	cpc	r29, r1
     49a:	89 f6       	brne	.-94     	; 0x43e <lcd_print+0x17e>
     49c:	a2 cf       	rjmp	.-188    	; 0x3e2 <lcd_print+0x122>
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	1f 91       	pop	r17
     4a4:	0f 91       	pop	r16
     4a6:	08 95       	ret

000004a8 <timer5_init>:
     4a8:	e1 e2       	ldi	r30, 0x21	; 33
     4aa:	f1 e0       	ldi	r31, 0x01	; 1
     4ac:	10 82       	st	Z, r1
     4ae:	8f ef       	ldi	r24, 0xFF	; 255
     4b0:	80 93 25 01 	sts	0x0125, r24
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	90 93 24 01 	sts	0x0124, r25
     4ba:	10 92 29 01 	sts	0x0129, r1
     4be:	80 93 28 01 	sts	0x0128, r24
     4c2:	10 92 2b 01 	sts	0x012B, r1
     4c6:	80 93 2a 01 	sts	0x012A, r24
     4ca:	10 92 2d 01 	sts	0x012D, r1
     4ce:	80 93 2c 01 	sts	0x012C, r24
     4d2:	89 ea       	ldi	r24, 0xA9	; 169
     4d4:	80 93 20 01 	sts	0x0120, r24
     4d8:	8b e0       	ldi	r24, 0x0B	; 11
     4da:	80 83       	st	Z, r24
     4dc:	08 95       	ret

000004de <motion_pin_config>:
     4de:	81 b1       	in	r24, 0x01	; 1
     4e0:	8f 60       	ori	r24, 0x0F	; 15
     4e2:	81 b9       	out	0x01, r24	; 1
     4e4:	82 b1       	in	r24, 0x02	; 2
     4e6:	80 7f       	andi	r24, 0xF0	; 240
     4e8:	82 b9       	out	0x02, r24	; 2
     4ea:	ea e0       	ldi	r30, 0x0A	; 10
     4ec:	f1 e0       	ldi	r31, 0x01	; 1
     4ee:	80 81       	ld	r24, Z
     4f0:	88 61       	ori	r24, 0x18	; 24
     4f2:	80 83       	st	Z, r24
     4f4:	eb e0       	ldi	r30, 0x0B	; 11
     4f6:	f1 e0       	ldi	r31, 0x01	; 1
     4f8:	80 81       	ld	r24, Z
     4fa:	88 61       	ori	r24, 0x18	; 24
     4fc:	80 83       	st	Z, r24
     4fe:	08 95       	ret

00000500 <motion_set>:
     500:	92 b1       	in	r25, 0x02	; 2
     502:	90 7f       	andi	r25, 0xF0	; 240
     504:	8f 70       	andi	r24, 0x0F	; 15
     506:	98 2b       	or	r25, r24
     508:	92 b9       	out	0x02, r25	; 2
     50a:	08 95       	ret

0000050c <forward>:
     50c:	86 e0       	ldi	r24, 0x06	; 6
     50e:	f8 cf       	rjmp	.-16     	; 0x500 <motion_set>
     510:	08 95       	ret

00000512 <back>:
     512:	89 e0       	ldi	r24, 0x09	; 9
     514:	f5 cf       	rjmp	.-22     	; 0x500 <motion_set>
     516:	08 95       	ret

00000518 <left>:
     518:	85 e0       	ldi	r24, 0x05	; 5
     51a:	f2 cf       	rjmp	.-28     	; 0x500 <motion_set>
     51c:	08 95       	ret

0000051e <right>:
     51e:	8a e0       	ldi	r24, 0x0A	; 10
     520:	ef cf       	rjmp	.-34     	; 0x500 <motion_set>
     522:	08 95       	ret

00000524 <stop>:
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	ec cf       	rjmp	.-40     	; 0x500 <motion_set>
     528:	08 95       	ret

0000052a <lcd_port_config>:
     52a:	87 b1       	in	r24, 0x07	; 7
     52c:	87 6f       	ori	r24, 0xF7	; 247
     52e:	87 b9       	out	0x07, r24	; 7
     530:	88 b1       	in	r24, 0x08	; 8
     532:	80 78       	andi	r24, 0x80	; 128
     534:	88 b9       	out	0x08, r24	; 8
     536:	08 95       	ret

00000538 <color_sensor_pin_config>:
     538:	8a b1       	in	r24, 0x0a	; 10
     53a:	8e 6f       	ori	r24, 0xFE	; 254
     53c:	8a b9       	out	0x0a, r24	; 10
     53e:	58 9a       	sbi	0x0b, 0	; 11
     540:	08 95       	ret

00000542 <adc_pin_config>:
     542:	10 ba       	out	0x10, r1	; 16
     544:	11 ba       	out	0x11, r1	; 17
     546:	10 92 07 01 	sts	0x0107, r1
     54a:	10 92 08 01 	sts	0x0108, r1
     54e:	08 95       	ret

00000550 <servo1_pin_config>:
     550:	25 9a       	sbi	0x04, 5	; 4
     552:	2d 9a       	sbi	0x05, 5	; 5
     554:	08 95       	ret

00000556 <servo2_pin_config>:
     556:	26 9a       	sbi	0x04, 6	; 4
     558:	2e 9a       	sbi	0x05, 6	; 5
     55a:	08 95       	ret

0000055c <servo3_pin_config>:
     55c:	27 9a       	sbi	0x04, 7	; 4
     55e:	2f 9a       	sbi	0x05, 7	; 5
     560:	08 95       	ret

00000562 <timer1_init>:
     562:	e1 e8       	ldi	r30, 0x81	; 129
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	10 82       	st	Z, r1
     568:	8c ef       	ldi	r24, 0xFC	; 252
     56a:	80 93 85 00 	sts	0x0085, r24
     56e:	81 e0       	ldi	r24, 0x01	; 1
     570:	80 93 84 00 	sts	0x0084, r24
     574:	93 e0       	ldi	r25, 0x03	; 3
     576:	90 93 89 00 	sts	0x0089, r25
     57a:	8f ef       	ldi	r24, 0xFF	; 255
     57c:	80 93 88 00 	sts	0x0088, r24
     580:	90 93 8b 00 	sts	0x008B, r25
     584:	80 93 8a 00 	sts	0x008A, r24
     588:	90 93 8d 00 	sts	0x008D, r25
     58c:	80 93 8c 00 	sts	0x008C, r24
     590:	90 93 87 00 	sts	0x0087, r25
     594:	80 93 86 00 	sts	0x0086, r24
     598:	8b ea       	ldi	r24, 0xAB	; 171
     59a:	80 93 80 00 	sts	0x0080, r24
     59e:	10 92 82 00 	sts	0x0082, r1
     5a2:	8c e0       	ldi	r24, 0x0C	; 12
     5a4:	80 83       	st	Z, r24
     5a6:	08 95       	ret

000005a8 <port_init>:
     5a8:	c0 df       	rcall	.-128    	; 0x52a <lcd_port_config>
     5aa:	cb df       	rcall	.-106    	; 0x542 <adc_pin_config>
     5ac:	3b 9a       	sbi	0x07, 3	; 7
     5ae:	43 98       	cbi	0x08, 3	; 8
     5b0:	cf df       	rcall	.-98     	; 0x550 <servo1_pin_config>
     5b2:	d1 df       	rcall	.-94     	; 0x556 <servo2_pin_config>
     5b4:	d3 df       	rcall	.-90     	; 0x55c <servo3_pin_config>
     5b6:	c0 cf       	rjmp	.-128    	; 0x538 <color_sensor_pin_config>
     5b8:	08 95       	ret

000005ba <buzzer_on>:
     5ba:	86 b1       	in	r24, 0x06	; 6
     5bc:	88 60       	ori	r24, 0x08	; 8
     5be:	88 b9       	out	0x08, r24	; 8
     5c0:	08 95       	ret

000005c2 <buzzer_off>:
     5c2:	86 b1       	in	r24, 0x06	; 6
     5c4:	87 7f       	andi	r24, 0xF7	; 247
     5c6:	88 b9       	out	0x08, r24	; 8
     5c8:	08 95       	ret

000005ca <ADC_Conversion>:
     5ca:	88 30       	cpi	r24, 0x08	; 8
     5cc:	18 f0       	brcs	.+6      	; 0x5d4 <ADC_Conversion+0xa>
     5ce:	98 e0       	ldi	r25, 0x08	; 8
     5d0:	90 93 7b 00 	sts	0x007B, r25
     5d4:	87 70       	andi	r24, 0x07	; 7
     5d6:	80 62       	ori	r24, 0x20	; 32
     5d8:	80 93 7c 00 	sts	0x007C, r24
     5dc:	ea e7       	ldi	r30, 0x7A	; 122
     5de:	f0 e0       	ldi	r31, 0x00	; 0
     5e0:	80 81       	ld	r24, Z
     5e2:	80 64       	ori	r24, 0x40	; 64
     5e4:	80 83       	st	Z, r24
     5e6:	80 81       	ld	r24, Z
     5e8:	84 ff       	sbrs	r24, 4
     5ea:	fd cf       	rjmp	.-6      	; 0x5e6 <ADC_Conversion+0x1c>
     5ec:	80 91 79 00 	lds	r24, 0x0079
     5f0:	ea e7       	ldi	r30, 0x7A	; 122
     5f2:	f0 e0       	ldi	r31, 0x00	; 0
     5f4:	90 81       	ld	r25, Z
     5f6:	90 61       	ori	r25, 0x10	; 16
     5f8:	90 83       	st	Z, r25
     5fa:	10 92 7b 00 	sts	0x007B, r1
     5fe:	08 95       	ret

00000600 <color_sensor_pin_interrupt_init>:
     600:	f8 94       	cli
     602:	e9 e6       	ldi	r30, 0x69	; 105
     604:	f0 e0       	ldi	r31, 0x00	; 0
     606:	80 81       	ld	r24, Z
     608:	82 60       	ori	r24, 0x02	; 2
     60a:	80 83       	st	Z, r24
     60c:	e8 9a       	sbi	0x1d, 0	; 29
     60e:	78 94       	sei
     610:	08 95       	ret

00000612 <__vector_1>:
     612:	1f 92       	push	r1
     614:	0f 92       	push	r0
     616:	0f b6       	in	r0, 0x3f	; 63
     618:	0f 92       	push	r0
     61a:	11 24       	eor	r1, r1
     61c:	8f 93       	push	r24
     61e:	9f 93       	push	r25
     620:	af 93       	push	r26
     622:	bf 93       	push	r27
     624:	80 91 5a 02 	lds	r24, 0x025A
     628:	90 91 5b 02 	lds	r25, 0x025B
     62c:	a0 91 5c 02 	lds	r26, 0x025C
     630:	b0 91 5d 02 	lds	r27, 0x025D
     634:	01 96       	adiw	r24, 0x01	; 1
     636:	a1 1d       	adc	r26, r1
     638:	b1 1d       	adc	r27, r1
     63a:	80 93 5a 02 	sts	0x025A, r24
     63e:	90 93 5b 02 	sts	0x025B, r25
     642:	a0 93 5c 02 	sts	0x025C, r26
     646:	b0 93 5d 02 	sts	0x025D, r27
     64a:	bf 91       	pop	r27
     64c:	af 91       	pop	r26
     64e:	9f 91       	pop	r25
     650:	8f 91       	pop	r24
     652:	0f 90       	pop	r0
     654:	0f be       	out	0x3f, r0	; 63
     656:	0f 90       	pop	r0
     658:	1f 90       	pop	r1
     65a:	18 95       	reti

0000065c <adc_init>:
     65c:	ea e7       	ldi	r30, 0x7A	; 122
     65e:	f0 e0       	ldi	r31, 0x00	; 0
     660:	10 82       	st	Z, r1
     662:	10 92 7b 00 	sts	0x007B, r1
     666:	80 e2       	ldi	r24, 0x20	; 32
     668:	80 93 7c 00 	sts	0x007C, r24
     66c:	80 e8       	ldi	r24, 0x80	; 128
     66e:	80 bf       	out	0x30, r24	; 48
     670:	86 e8       	ldi	r24, 0x86	; 134
     672:	80 83       	st	Z, r24
     674:	08 95       	ret

00000676 <servo_1>:
     676:	10 92 89 00 	sts	0x0089, r1
     67a:	68 2f       	mov	r22, r24
     67c:	70 e0       	ldi	r23, 0x00	; 0
     67e:	80 e0       	ldi	r24, 0x00	; 0
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	0e 94 32 15 	call	0x2a64	; 0x2a64 <__floatunsisf>
     686:	2b e7       	ldi	r18, 0x7B	; 123
     688:	34 e1       	ldi	r19, 0x14	; 20
     68a:	4e ee       	ldi	r20, 0xEE	; 238
     68c:	5f e3       	ldi	r21, 0x3F	; 63
     68e:	0e 94 9e 14 	call	0x293c	; 0x293c <__divsf3>
     692:	20 e0       	ldi	r18, 0x00	; 0
     694:	30 e0       	ldi	r19, 0x00	; 0
     696:	4c e0       	ldi	r20, 0x0C	; 12
     698:	52 e4       	ldi	r21, 0x42	; 66
     69a:	0e 94 3a 14 	call	0x2874	; 0x2874 <__addsf3>
     69e:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <__fixunssfsi>
     6a2:	60 93 88 00 	sts	0x0088, r22
     6a6:	08 95       	ret

000006a8 <filter_red>:
     6a8:	5e 98       	cbi	0x0b, 6	; 11
     6aa:	5f 98       	cbi	0x0b, 7	; 11
     6ac:	08 95       	ret

000006ae <filter_green>:
     6ae:	5e 9a       	sbi	0x0b, 6	; 11
     6b0:	5f 9a       	sbi	0x0b, 7	; 11
     6b2:	08 95       	ret

000006b4 <filter_blue>:
     6b4:	5e 98       	cbi	0x0b, 6	; 11
     6b6:	5f 9a       	sbi	0x0b, 7	; 11
     6b8:	08 95       	ret

000006ba <color_sensor_scaling>:
     6ba:	5c 9a       	sbi	0x0b, 4	; 11
     6bc:	5d 9a       	sbi	0x0b, 5	; 11
     6be:	08 95       	ret

000006c0 <red_read>:
     6c0:	f3 df       	rcall	.-26     	; 0x6a8 <filter_red>
     6c2:	10 92 5a 02 	sts	0x025A, r1
     6c6:	10 92 5b 02 	sts	0x025B, r1
     6ca:	10 92 5c 02 	sts	0x025C, r1
     6ce:	10 92 5d 02 	sts	0x025D, r1
     6d2:	2f ef       	ldi	r18, 0xFF	; 255
     6d4:	8f e7       	ldi	r24, 0x7F	; 127
     6d6:	94 e0       	ldi	r25, 0x04	; 4
     6d8:	21 50       	subi	r18, 0x01	; 1
     6da:	80 40       	sbci	r24, 0x00	; 0
     6dc:	90 40       	sbci	r25, 0x00	; 0
     6de:	e1 f7       	brne	.-8      	; 0x6d8 <red_read+0x18>
     6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <red_read+0x22>
     6e2:	00 00       	nop
     6e4:	80 91 5a 02 	lds	r24, 0x025A
     6e8:	90 91 5b 02 	lds	r25, 0x025B
     6ec:	a0 91 5c 02 	lds	r26, 0x025C
     6f0:	b0 91 5d 02 	lds	r27, 0x025D
     6f4:	80 93 80 02 	sts	0x0280, r24
     6f8:	90 93 81 02 	sts	0x0281, r25
     6fc:	a0 93 82 02 	sts	0x0282, r26
     700:	b0 93 83 02 	sts	0x0283, r27
     704:	2f ef       	ldi	r18, 0xFF	; 255
     706:	8f ef       	ldi	r24, 0xFF	; 255
     708:	9c e2       	ldi	r25, 0x2C	; 44
     70a:	21 50       	subi	r18, 0x01	; 1
     70c:	80 40       	sbci	r24, 0x00	; 0
     70e:	90 40       	sbci	r25, 0x00	; 0
     710:	e1 f7       	brne	.-8      	; 0x70a <red_read+0x4a>
     712:	00 c0       	rjmp	.+0      	; 0x714 <red_read+0x54>
     714:	00 00       	nop
     716:	08 95       	ret

00000718 <green_read>:
     718:	ca df       	rcall	.-108    	; 0x6ae <filter_green>
     71a:	10 92 5a 02 	sts	0x025A, r1
     71e:	10 92 5b 02 	sts	0x025B, r1
     722:	10 92 5c 02 	sts	0x025C, r1
     726:	10 92 5d 02 	sts	0x025D, r1
     72a:	2f ef       	ldi	r18, 0xFF	; 255
     72c:	8f e7       	ldi	r24, 0x7F	; 127
     72e:	94 e0       	ldi	r25, 0x04	; 4
     730:	21 50       	subi	r18, 0x01	; 1
     732:	80 40       	sbci	r24, 0x00	; 0
     734:	90 40       	sbci	r25, 0x00	; 0
     736:	e1 f7       	brne	.-8      	; 0x730 <green_read+0x18>
     738:	00 c0       	rjmp	.+0      	; 0x73a <green_read+0x22>
     73a:	00 00       	nop
     73c:	80 91 5a 02 	lds	r24, 0x025A
     740:	90 91 5b 02 	lds	r25, 0x025B
     744:	a0 91 5c 02 	lds	r26, 0x025C
     748:	b0 91 5d 02 	lds	r27, 0x025D
     74c:	80 93 7c 02 	sts	0x027C, r24
     750:	90 93 7d 02 	sts	0x027D, r25
     754:	a0 93 7e 02 	sts	0x027E, r26
     758:	b0 93 7f 02 	sts	0x027F, r27
     75c:	08 95       	ret

0000075e <blue_read>:
     75e:	aa df       	rcall	.-172    	; 0x6b4 <filter_blue>
     760:	10 92 5a 02 	sts	0x025A, r1
     764:	10 92 5b 02 	sts	0x025B, r1
     768:	10 92 5c 02 	sts	0x025C, r1
     76c:	10 92 5d 02 	sts	0x025D, r1
     770:	2f ef       	ldi	r18, 0xFF	; 255
     772:	8f e7       	ldi	r24, 0x7F	; 127
     774:	94 e0       	ldi	r25, 0x04	; 4
     776:	21 50       	subi	r18, 0x01	; 1
     778:	80 40       	sbci	r24, 0x00	; 0
     77a:	90 40       	sbci	r25, 0x00	; 0
     77c:	e1 f7       	brne	.-8      	; 0x776 <blue_read+0x18>
     77e:	00 c0       	rjmp	.+0      	; 0x780 <blue_read+0x22>
     780:	00 00       	nop
     782:	80 91 5a 02 	lds	r24, 0x025A
     786:	90 91 5b 02 	lds	r25, 0x025B
     78a:	a0 91 5c 02 	lds	r26, 0x025C
     78e:	b0 91 5d 02 	lds	r27, 0x025D
     792:	80 93 70 02 	sts	0x0270, r24
     796:	90 93 71 02 	sts	0x0271, r25
     79a:	a0 93 72 02 	sts	0x0272, r26
     79e:	b0 93 73 02 	sts	0x0273, r27
     7a2:	08 95       	ret

000007a4 <left_encoder_pin_config>:
     7a4:	6c 98       	cbi	0x0d, 4	; 13
     7a6:	74 9a       	sbi	0x0e, 4	; 14
     7a8:	08 95       	ret

000007aa <right_encoder_pin_config>:
     7aa:	6d 98       	cbi	0x0d, 5	; 13
     7ac:	75 9a       	sbi	0x0e, 5	; 14
     7ae:	08 95       	ret

000007b0 <port_init_poz>:
     7b0:	96 de       	rcall	.-724    	; 0x4de <motion_pin_config>
     7b2:	f8 df       	rcall	.-16     	; 0x7a4 <left_encoder_pin_config>
     7b4:	fa cf       	rjmp	.-12     	; 0x7aa <right_encoder_pin_config>
     7b6:	08 95       	ret

000007b8 <left_position_encoder_interrupt_init>:
     7b8:	f8 94       	cli
     7ba:	ea e6       	ldi	r30, 0x6A	; 106
     7bc:	f0 e0       	ldi	r31, 0x00	; 0
     7be:	80 81       	ld	r24, Z
     7c0:	82 60       	ori	r24, 0x02	; 2
     7c2:	80 83       	st	Z, r24
     7c4:	ec 9a       	sbi	0x1d, 4	; 29
     7c6:	78 94       	sei
     7c8:	08 95       	ret

000007ca <right_position_encoder_interrupt_init>:
     7ca:	f8 94       	cli
     7cc:	ea e6       	ldi	r30, 0x6A	; 106
     7ce:	f0 e0       	ldi	r31, 0x00	; 0
     7d0:	80 81       	ld	r24, Z
     7d2:	88 60       	ori	r24, 0x08	; 8
     7d4:	80 83       	st	Z, r24
     7d6:	ed 9a       	sbi	0x1d, 5	; 29
     7d8:	78 94       	sei
     7da:	08 95       	ret

000007dc <__vector_6>:
     7dc:	1f 92       	push	r1
     7de:	0f 92       	push	r0
     7e0:	0f b6       	in	r0, 0x3f	; 63
     7e2:	0f 92       	push	r0
     7e4:	11 24       	eor	r1, r1
     7e6:	8f 93       	push	r24
     7e8:	9f 93       	push	r25
     7ea:	af 93       	push	r26
     7ec:	bf 93       	push	r27
     7ee:	80 91 5e 02 	lds	r24, 0x025E
     7f2:	90 91 5f 02 	lds	r25, 0x025F
     7f6:	a0 91 60 02 	lds	r26, 0x0260
     7fa:	b0 91 61 02 	lds	r27, 0x0261
     7fe:	01 96       	adiw	r24, 0x01	; 1
     800:	a1 1d       	adc	r26, r1
     802:	b1 1d       	adc	r27, r1
     804:	80 93 5e 02 	sts	0x025E, r24
     808:	90 93 5f 02 	sts	0x025F, r25
     80c:	a0 93 60 02 	sts	0x0260, r26
     810:	b0 93 61 02 	sts	0x0261, r27
     814:	bf 91       	pop	r27
     816:	af 91       	pop	r26
     818:	9f 91       	pop	r25
     81a:	8f 91       	pop	r24
     81c:	0f 90       	pop	r0
     81e:	0f be       	out	0x3f, r0	; 63
     820:	0f 90       	pop	r0
     822:	1f 90       	pop	r1
     824:	18 95       	reti

00000826 <__vector_5>:
     826:	1f 92       	push	r1
     828:	0f 92       	push	r0
     82a:	0f b6       	in	r0, 0x3f	; 63
     82c:	0f 92       	push	r0
     82e:	11 24       	eor	r1, r1
     830:	8f 93       	push	r24
     832:	9f 93       	push	r25
     834:	af 93       	push	r26
     836:	bf 93       	push	r27
     838:	80 91 62 02 	lds	r24, 0x0262
     83c:	90 91 63 02 	lds	r25, 0x0263
     840:	a0 91 64 02 	lds	r26, 0x0264
     844:	b0 91 65 02 	lds	r27, 0x0265
     848:	01 96       	adiw	r24, 0x01	; 1
     84a:	a1 1d       	adc	r26, r1
     84c:	b1 1d       	adc	r27, r1
     84e:	80 93 62 02 	sts	0x0262, r24
     852:	90 93 63 02 	sts	0x0263, r25
     856:	a0 93 64 02 	sts	0x0264, r26
     85a:	b0 93 65 02 	sts	0x0265, r27
     85e:	bf 91       	pop	r27
     860:	af 91       	pop	r26
     862:	9f 91       	pop	r25
     864:	8f 91       	pop	r24
     866:	0f 90       	pop	r0
     868:	0f be       	out	0x3f, r0	; 63
     86a:	0f 90       	pop	r0
     86c:	1f 90       	pop	r1
     86e:	18 95       	reti

00000870 <angle_rotate>:
     870:	cf 92       	push	r12
     872:	df 92       	push	r13
     874:	ef 92       	push	r14
     876:	ff 92       	push	r15
     878:	0f 93       	push	r16
     87a:	1f 93       	push	r17
     87c:	bc 01       	movw	r22, r24
     87e:	80 e0       	ldi	r24, 0x00	; 0
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	0e 94 32 15 	call	0x2a64	; 0x2a64 <__floatunsisf>
     886:	28 e4       	ldi	r18, 0x48	; 72
     888:	31 ee       	ldi	r19, 0xE1	; 225
     88a:	42 e8       	ldi	r20, 0x82	; 130
     88c:	50 e4       	ldi	r21, 0x40	; 64
     88e:	0e 94 9e 14 	call	0x293c	; 0x293c <__divsf3>
     892:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <__fixunssfsi>
     896:	cb 01       	movw	r24, r22
     898:	a0 e0       	ldi	r26, 0x00	; 0
     89a:	b0 e0       	ldi	r27, 0x00	; 0
     89c:	10 92 5e 02 	sts	0x025E, r1
     8a0:	10 92 5f 02 	sts	0x025F, r1
     8a4:	10 92 60 02 	sts	0x0260, r1
     8a8:	10 92 61 02 	sts	0x0261, r1
     8ac:	10 92 62 02 	sts	0x0262, r1
     8b0:	10 92 63 02 	sts	0x0263, r1
     8b4:	10 92 64 02 	sts	0x0264, r1
     8b8:	10 92 65 02 	sts	0x0265, r1
     8bc:	51 e0       	ldi	r21, 0x01	; 1
     8be:	e0 e0       	ldi	r30, 0x00	; 0
     8c0:	c0 90 5e 02 	lds	r12, 0x025E
     8c4:	d0 90 5f 02 	lds	r13, 0x025F
     8c8:	e0 90 60 02 	lds	r14, 0x0260
     8cc:	f0 90 61 02 	lds	r15, 0x0261
     8d0:	00 91 62 02 	lds	r16, 0x0262
     8d4:	10 91 63 02 	lds	r17, 0x0263
     8d8:	20 91 64 02 	lds	r18, 0x0264
     8dc:	30 91 65 02 	lds	r19, 0x0265
     8e0:	45 2f       	mov	r20, r21
     8e2:	08 17       	cp	r16, r24
     8e4:	19 07       	cpc	r17, r25
     8e6:	2a 07       	cpc	r18, r26
     8e8:	3b 07       	cpc	r19, r27
     8ea:	08 f4       	brcc	.+2      	; 0x8ee <angle_rotate+0x7e>
     8ec:	4e 2f       	mov	r20, r30
     8ee:	41 11       	cpse	r20, r1
     8f0:	09 c0       	rjmp	.+18     	; 0x904 <angle_rotate+0x94>
     8f2:	25 2f       	mov	r18, r21
     8f4:	c8 16       	cp	r12, r24
     8f6:	d9 06       	cpc	r13, r25
     8f8:	ea 06       	cpc	r14, r26
     8fa:	fb 06       	cpc	r15, r27
     8fc:	08 f4       	brcc	.+2      	; 0x900 <angle_rotate+0x90>
     8fe:	2e 2f       	mov	r18, r30
     900:	22 23       	and	r18, r18
     902:	f1 f2       	breq	.-68     	; 0x8c0 <angle_rotate+0x50>
     904:	0f de       	rcall	.-994    	; 0x524 <stop>
     906:	1f 91       	pop	r17
     908:	0f 91       	pop	r16
     90a:	ff 90       	pop	r15
     90c:	ef 90       	pop	r14
     90e:	df 90       	pop	r13
     910:	cf 90       	pop	r12
     912:	08 95       	ret

00000914 <linear_distance_mm>:
     914:	0f 93       	push	r16
     916:	1f 93       	push	r17
     918:	bc 01       	movw	r22, r24
     91a:	80 e0       	ldi	r24, 0x00	; 0
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	0e 94 32 15 	call	0x2a64	; 0x2a64 <__floatunsisf>
     922:	25 ee       	ldi	r18, 0xE5	; 229
     924:	30 ed       	ldi	r19, 0xD0	; 208
     926:	4a ea       	ldi	r20, 0xAA	; 170
     928:	50 e4       	ldi	r21, 0x40	; 64
     92a:	0e 94 9e 14 	call	0x293c	; 0x293c <__divsf3>
     92e:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <__fixunssfsi>
     932:	10 92 5e 02 	sts	0x025E, r1
     936:	10 92 5f 02 	sts	0x025F, r1
     93a:	10 92 60 02 	sts	0x0260, r1
     93e:	10 92 61 02 	sts	0x0261, r1
     942:	00 91 5e 02 	lds	r16, 0x025E
     946:	10 91 5f 02 	lds	r17, 0x025F
     94a:	20 91 60 02 	lds	r18, 0x0260
     94e:	30 91 61 02 	lds	r19, 0x0261
     952:	60 17       	cp	r22, r16
     954:	71 07       	cpc	r23, r17
     956:	82 07       	cpc	r24, r18
     958:	93 07       	cpc	r25, r19
     95a:	98 f7       	brcc	.-26     	; 0x942 <linear_distance_mm+0x2e>
     95c:	e3 dd       	rcall	.-1082   	; 0x524 <stop>
     95e:	1f 91       	pop	r17
     960:	0f 91       	pop	r16
     962:	08 95       	ret

00000964 <forward_mm>:
     964:	cf 93       	push	r28
     966:	df 93       	push	r29
     968:	ec 01       	movw	r28, r24
     96a:	d0 dd       	rcall	.-1120   	; 0x50c <forward>
     96c:	ce 01       	movw	r24, r28
     96e:	d2 df       	rcall	.-92     	; 0x914 <linear_distance_mm>
     970:	df 91       	pop	r29
     972:	cf 91       	pop	r28
     974:	08 95       	ret

00000976 <left_degrees>:
     976:	cf 93       	push	r28
     978:	df 93       	push	r29
     97a:	ec 01       	movw	r28, r24
     97c:	cd dd       	rcall	.-1126   	; 0x518 <left>
     97e:	ce 01       	movw	r24, r28
     980:	77 df       	rcall	.-274    	; 0x870 <angle_rotate>
     982:	df 91       	pop	r29
     984:	cf 91       	pop	r28
     986:	08 95       	ret

00000988 <right_degrees>:
     988:	cf 93       	push	r28
     98a:	df 93       	push	r29
     98c:	ec 01       	movw	r28, r24
     98e:	c7 dd       	rcall	.-1138   	; 0x51e <right>
     990:	ce 01       	movw	r24, r28
     992:	6e df       	rcall	.-292    	; 0x870 <angle_rotate>
     994:	df 91       	pop	r29
     996:	cf 91       	pop	r28
     998:	08 95       	ret

0000099a <init_devices>:
     99a:	f8 94       	cli
     99c:	09 df       	rcall	.-494    	; 0x7b0 <port_init_poz>
     99e:	0c df       	rcall	.-488    	; 0x7b8 <left_position_encoder_interrupt_init>
     9a0:	14 df       	rcall	.-472    	; 0x7ca <right_position_encoder_interrupt_init>
     9a2:	02 de       	rcall	.-1020   	; 0x5a8 <port_init>
     9a4:	2d de       	rcall	.-934    	; 0x600 <color_sensor_pin_interrupt_init>
     9a6:	5a de       	rcall	.-844    	; 0x65c <adc_init>
     9a8:	9a dd       	rcall	.-1228   	; 0x4de <motion_pin_config>
     9aa:	7e dd       	rcall	.-1284   	; 0x4a8 <timer5_init>
     9ac:	da dd       	rcall	.-1100   	; 0x562 <timer1_init>
     9ae:	78 94       	sei
     9b0:	08 95       	ret

000009b2 <Uturn>:
     9b2:	8f ef       	ldi	r24, 0xFF	; 255
     9b4:	80 93 28 01 	sts	0x0128, r24
     9b8:	80 93 2a 01 	sts	0x012A, r24
     9bc:	84 eb       	ldi	r24, 0xB4	; 180
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	da cf       	rjmp	.-76     	; 0x976 <left_degrees>
     9c2:	08 95       	ret

000009c4 <turnRight>:
     9c4:	8f ef       	ldi	r24, 0xFF	; 255
     9c6:	80 93 28 01 	sts	0x0128, r24
     9ca:	80 93 2a 01 	sts	0x012A, r24
     9ce:	85 e5       	ldi	r24, 0x55	; 85
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	c8 df       	rcall	.-112    	; 0x964 <forward_mm>
     9d4:	8a e5       	ldi	r24, 0x5A	; 90
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	d7 df       	rcall	.-82     	; 0x988 <right_degrees>
     9da:	80 91 52 02 	lds	r24, 0x0252
     9de:	90 91 53 02 	lds	r25, 0x0253
     9e2:	01 96       	adiw	r24, 0x01	; 1
     9e4:	83 70       	andi	r24, 0x03	; 3
     9e6:	90 78       	andi	r25, 0x80	; 128
     9e8:	99 23       	and	r25, r25
     9ea:	24 f4       	brge	.+8      	; 0x9f4 <turnRight+0x30>
     9ec:	01 97       	sbiw	r24, 0x01	; 1
     9ee:	8c 6f       	ori	r24, 0xFC	; 252
     9f0:	9f 6f       	ori	r25, 0xFF	; 255
     9f2:	01 96       	adiw	r24, 0x01	; 1
     9f4:	90 93 53 02 	sts	0x0253, r25
     9f8:	80 93 52 02 	sts	0x0252, r24
     9fc:	08 95       	ret

000009fe <turnLeft>:
     9fe:	8f ef       	ldi	r24, 0xFF	; 255
     a00:	80 93 28 01 	sts	0x0128, r24
     a04:	80 93 2a 01 	sts	0x012A, r24
     a08:	85 e5       	ldi	r24, 0x55	; 85
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	ab df       	rcall	.-170    	; 0x964 <forward_mm>
     a0e:	8a e5       	ldi	r24, 0x5A	; 90
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	ba df       	rcall	.-140    	; 0x988 <right_degrees>
     a14:	80 91 52 02 	lds	r24, 0x0252
     a18:	90 91 53 02 	lds	r25, 0x0253
     a1c:	03 96       	adiw	r24, 0x03	; 3
     a1e:	83 70       	andi	r24, 0x03	; 3
     a20:	90 78       	andi	r25, 0x80	; 128
     a22:	99 23       	and	r25, r25
     a24:	24 f4       	brge	.+8      	; 0xa2e <turnLeft+0x30>
     a26:	01 97       	sbiw	r24, 0x01	; 1
     a28:	8c 6f       	ori	r24, 0xFC	; 252
     a2a:	9f 6f       	ori	r25, 0xFF	; 255
     a2c:	01 96       	adiw	r24, 0x01	; 1
     a2e:	90 93 53 02 	sts	0x0253, r25
     a32:	80 93 52 02 	sts	0x0252, r24
     a36:	08 95       	ret

00000a38 <turn>:
     a38:	bc df       	rcall	.-136    	; 0x9b2 <Uturn>
     a3a:	80 91 52 02 	lds	r24, 0x0252
     a3e:	90 91 53 02 	lds	r25, 0x0253
     a42:	02 96       	adiw	r24, 0x02	; 2
     a44:	83 70       	andi	r24, 0x03	; 3
     a46:	90 78       	andi	r25, 0x80	; 128
     a48:	99 23       	and	r25, r25
     a4a:	24 f4       	brge	.+8      	; 0xa54 <turn+0x1c>
     a4c:	01 97       	sbiw	r24, 0x01	; 1
     a4e:	8c 6f       	ori	r24, 0xFC	; 252
     a50:	9f 6f       	ori	r25, 0xFF	; 255
     a52:	01 96       	adiw	r24, 0x01	; 1
     a54:	90 93 53 02 	sts	0x0253, r25
     a58:	80 93 52 02 	sts	0x0252, r24
     a5c:	08 95       	ret

00000a5e <Delay>:
     a5e:	0f 93       	push	r16
     a60:	1f 93       	push	r17
     a62:	cf 93       	push	r28
     a64:	df 93       	push	r29
     a66:	8c 01       	movw	r16, r24
     a68:	18 16       	cp	r1, r24
     a6a:	19 06       	cpc	r1, r25
     a6c:	8c f4       	brge	.+34     	; 0xa90 <Delay+0x32>
     a6e:	c0 e0       	ldi	r28, 0x00	; 0
     a70:	d0 e0       	ldi	r29, 0x00	; 0
     a72:	09 c0       	rjmp	.+18     	; 0xa86 <Delay+0x28>
     a74:	86 e6       	ldi	r24, 0x66	; 102
     a76:	9e e0       	ldi	r25, 0x0E	; 14
     a78:	01 97       	sbiw	r24, 0x01	; 1
     a7a:	f1 f7       	brne	.-4      	; 0xa78 <Delay+0x1a>
     a7c:	00 00       	nop
     a7e:	21 96       	adiw	r28, 0x01	; 1
     a80:	c0 17       	cp	r28, r16
     a82:	d1 07       	cpc	r29, r17
     a84:	39 f0       	breq	.+14     	; 0xa94 <Delay+0x36>
     a86:	82 e0       	ldi	r24, 0x02	; 2
     a88:	a0 dd       	rcall	.-1216   	; 0x5ca <ADC_Conversion>
     a8a:	89 32       	cpi	r24, 0x29	; 41
     a8c:	98 f3       	brcs	.-26     	; 0xa74 <Delay+0x16>
     a8e:	02 c0       	rjmp	.+4      	; 0xa94 <Delay+0x36>
     a90:	c0 e0       	ldi	r28, 0x00	; 0
     a92:	d0 e0       	ldi	r29, 0x00	; 0
     a94:	47 dd       	rcall	.-1394   	; 0x524 <stop>
     a96:	81 e0       	ldi	r24, 0x01	; 1
     a98:	c0 17       	cp	r28, r16
     a9a:	d1 07       	cpc	r29, r17
     a9c:	0c f0       	brlt	.+2      	; 0xaa0 <Delay+0x42>
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	df 91       	pop	r29
     aa2:	cf 91       	pop	r28
     aa4:	1f 91       	pop	r17
     aa6:	0f 91       	pop	r16
     aa8:	08 95       	ret

00000aaa <scan>:
     aaa:	0f 93       	push	r16
     aac:	1f 93       	push	r17
     aae:	08 de       	rcall	.-1008   	; 0x6c0 <red_read>
     ab0:	56 de       	rcall	.-852    	; 0x75e <blue_read>
     ab2:	32 de       	rcall	.-924    	; 0x718 <green_read>
     ab4:	80 91 6e 02 	lds	r24, 0x026E
     ab8:	90 91 6f 02 	lds	r25, 0x026F
     abc:	aa 27       	eor	r26, r26
     abe:	97 fd       	sbrc	r25, 7
     ac0:	a0 95       	com	r26
     ac2:	ba 2f       	mov	r27, r26
     ac4:	40 91 80 02 	lds	r20, 0x0280
     ac8:	50 91 81 02 	lds	r21, 0x0281
     acc:	60 91 82 02 	lds	r22, 0x0282
     ad0:	70 91 83 02 	lds	r23, 0x0283
     ad4:	48 17       	cp	r20, r24
     ad6:	59 07       	cpc	r21, r25
     ad8:	6a 07       	cpc	r22, r26
     ada:	7b 07       	cpc	r23, r27
     adc:	d8 f4       	brcc	.+54     	; 0xb14 <scan+0x6a>
     ade:	40 91 7c 02 	lds	r20, 0x027C
     ae2:	50 91 7d 02 	lds	r21, 0x027D
     ae6:	60 91 7e 02 	lds	r22, 0x027E
     aea:	70 91 7f 02 	lds	r23, 0x027F
     aee:	48 17       	cp	r20, r24
     af0:	59 07       	cpc	r21, r25
     af2:	6a 07       	cpc	r22, r26
     af4:	7b 07       	cpc	r23, r27
     af6:	70 f4       	brcc	.+28     	; 0xb14 <scan+0x6a>
     af8:	40 91 70 02 	lds	r20, 0x0270
     afc:	50 91 71 02 	lds	r21, 0x0271
     b00:	60 91 72 02 	lds	r22, 0x0272
     b04:	70 91 73 02 	lds	r23, 0x0273
     b08:	48 17       	cp	r20, r24
     b0a:	59 07       	cpc	r21, r25
     b0c:	6a 07       	cpc	r22, r26
     b0e:	7b 07       	cpc	r23, r27
     b10:	08 f4       	brcc	.+2      	; 0xb14 <scan+0x6a>
     b12:	46 c0       	rjmp	.+140    	; 0xba0 <scan+0xf6>
     b14:	40 91 80 02 	lds	r20, 0x0280
     b18:	50 91 81 02 	lds	r21, 0x0281
     b1c:	60 91 82 02 	lds	r22, 0x0282
     b20:	70 91 83 02 	lds	r23, 0x0283
     b24:	80 91 70 02 	lds	r24, 0x0270
     b28:	90 91 71 02 	lds	r25, 0x0271
     b2c:	a0 91 72 02 	lds	r26, 0x0272
     b30:	b0 91 73 02 	lds	r27, 0x0273
     b34:	84 17       	cp	r24, r20
     b36:	95 07       	cpc	r25, r21
     b38:	a6 07       	cpc	r26, r22
     b3a:	b7 07       	cpc	r27, r23
     b3c:	c8 f4       	brcc	.+50     	; 0xb70 <scan+0xc6>
     b3e:	00 91 80 02 	lds	r16, 0x0280
     b42:	10 91 81 02 	lds	r17, 0x0281
     b46:	20 91 82 02 	lds	r18, 0x0282
     b4a:	30 91 83 02 	lds	r19, 0x0283
     b4e:	40 91 7c 02 	lds	r20, 0x027C
     b52:	50 91 7d 02 	lds	r21, 0x027D
     b56:	60 91 7e 02 	lds	r22, 0x027E
     b5a:	70 91 7f 02 	lds	r23, 0x027F
     b5e:	81 e0       	ldi	r24, 0x01	; 1
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	40 17       	cp	r20, r16
     b64:	51 07       	cpc	r21, r17
     b66:	62 07       	cpc	r22, r18
     b68:	73 07       	cpc	r23, r19
     b6a:	f8 f4       	brcc	.+62     	; 0xbaa <scan+0x100>
     b6c:	80 e0       	ldi	r24, 0x00	; 0
     b6e:	1d c0       	rjmp	.+58     	; 0xbaa <scan+0x100>
     b70:	40 91 70 02 	lds	r20, 0x0270
     b74:	50 91 71 02 	lds	r21, 0x0271
     b78:	60 91 72 02 	lds	r22, 0x0272
     b7c:	70 91 73 02 	lds	r23, 0x0273
     b80:	80 91 7c 02 	lds	r24, 0x027C
     b84:	90 91 7d 02 	lds	r25, 0x027D
     b88:	a0 91 7e 02 	lds	r26, 0x027E
     b8c:	b0 91 7f 02 	lds	r27, 0x027F
     b90:	84 17       	cp	r24, r20
     b92:	95 07       	cpc	r25, r21
     b94:	a6 07       	cpc	r26, r22
     b96:	b7 07       	cpc	r27, r23
     b98:	30 f4       	brcc	.+12     	; 0xba6 <scan+0xfc>
     b9a:	82 e0       	ldi	r24, 0x02	; 2
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	05 c0       	rjmp	.+10     	; 0xbaa <scan+0x100>
     ba0:	83 e0       	ldi	r24, 0x03	; 3
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	02 c0       	rjmp	.+4      	; 0xbaa <scan+0x100>
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	1f 91       	pop	r17
     bac:	0f 91       	pop	r16
     bae:	08 95       	ret

00000bb0 <setIndicatorAndColor>:
     bb0:	cf 93       	push	r28
     bb2:	df 93       	push	r29
     bb4:	cd e9       	ldi	r28, 0x9D	; 157
     bb6:	d2 e0       	ldi	r29, 0x02	; 2
     bb8:	ed e8       	ldi	r30, 0x8D	; 141
     bba:	f2 e0       	ldi	r31, 0x02	; 2
     bbc:	a6 e6       	ldi	r26, 0x66	; 102
     bbe:	b2 e0       	ldi	r27, 0x02	; 2
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	2e ef       	ldi	r18, 0xFE	; 254
     bc6:	3f ef       	ldi	r19, 0xFF	; 255
     bc8:	89 93       	st	Y+, r24
     bca:	99 93       	st	Y+, r25
     bcc:	33 83       	std	Z+3, r19	; 0x03
     bce:	22 83       	std	Z+2, r18	; 0x02
     bd0:	31 83       	std	Z+1, r19	; 0x01
     bd2:	20 83       	st	Z, r18
     bd4:	1d 92       	st	X+, r1
     bd6:	1d 92       	st	X+, r1
     bd8:	01 96       	adiw	r24, 0x01	; 1
     bda:	34 96       	adiw	r30, 0x04	; 4
     bdc:	84 30       	cpi	r24, 0x04	; 4
     bde:	91 05       	cpc	r25, r1
     be0:	99 f7       	brne	.-26     	; 0xbc8 <setIndicatorAndColor+0x18>
     be2:	e0 91 9d 02 	lds	r30, 0x029D
     be6:	f0 91 9e 02 	lds	r31, 0x029E
     bea:	ee 0f       	add	r30, r30
     bec:	ff 1f       	adc	r31, r31
     bee:	eb 55       	subi	r30, 0x5B	; 91
     bf0:	fd 4f       	sbci	r31, 0xFD	; 253
     bf2:	11 82       	std	Z+1, r1	; 0x01
     bf4:	10 82       	st	Z, r1
     bf6:	e0 91 9f 02 	lds	r30, 0x029F
     bfa:	f0 91 a0 02 	lds	r31, 0x02A0
     bfe:	ee 0f       	add	r30, r30
     c00:	ff 1f       	adc	r31, r31
     c02:	eb 55       	subi	r30, 0x5B	; 91
     c04:	fd 4f       	sbci	r31, 0xFD	; 253
     c06:	81 e0       	ldi	r24, 0x01	; 1
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	91 83       	std	Z+1, r25	; 0x01
     c0c:	80 83       	st	Z, r24
     c0e:	e0 91 a1 02 	lds	r30, 0x02A1
     c12:	f0 91 a2 02 	lds	r31, 0x02A2
     c16:	ee 0f       	add	r30, r30
     c18:	ff 1f       	adc	r31, r31
     c1a:	eb 55       	subi	r30, 0x5B	; 91
     c1c:	fd 4f       	sbci	r31, 0xFD	; 253
     c1e:	82 e0       	ldi	r24, 0x02	; 2
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	91 83       	std	Z+1, r25	; 0x01
     c24:	80 83       	st	Z, r24
     c26:	e0 91 a3 02 	lds	r30, 0x02A3
     c2a:	f0 91 a4 02 	lds	r31, 0x02A4
     c2e:	ee 0f       	add	r30, r30
     c30:	ff 1f       	adc	r31, r31
     c32:	eb 55       	subi	r30, 0x5B	; 91
     c34:	fd 4f       	sbci	r31, 0xFD	; 253
     c36:	83 e0       	ldi	r24, 0x03	; 3
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	91 83       	std	Z+1, r25	; 0x01
     c3c:	80 83       	st	Z, r24
     c3e:	8f ef       	ldi	r24, 0xFF	; 255
     c40:	9f ef       	ldi	r25, 0xFF	; 255
     c42:	90 93 88 02 	sts	0x0288, r25
     c46:	80 93 87 02 	sts	0x0287, r24
     c4a:	90 93 86 02 	sts	0x0286, r25
     c4e:	80 93 85 02 	sts	0x0285, r24
     c52:	90 93 b4 02 	sts	0x02B4, r25
     c56:	80 93 b3 02 	sts	0x02B3, r24
     c5a:	90 93 b2 02 	sts	0x02B2, r25
     c5e:	80 93 b1 02 	sts	0x02B1, r24
     c62:	df 91       	pop	r29
     c64:	cf 91       	pop	r28
     c66:	08 95       	ret

00000c68 <set_color>:
     c68:	83 e0       	ldi	r24, 0x03	; 3
     c6a:	af dc       	rcall	.-1698   	; 0x5ca <ADC_Conversion>
     c6c:	80 93 51 02 	sts	0x0251, r24
     c70:	82 e0       	ldi	r24, 0x02	; 2
     c72:	ab dc       	rcall	.-1706   	; 0x5ca <ADC_Conversion>
     c74:	80 93 50 02 	sts	0x0250, r24
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	a7 dc       	rcall	.-1714   	; 0x5ca <ADC_Conversion>
     c7c:	80 93 4f 02 	sts	0x024F, r24
     c80:	08 95       	ret

00000c82 <node>:
     c82:	88 ec       	ldi	r24, 0xC8	; 200
     c84:	80 93 28 01 	sts	0x0128, r24
     c88:	80 93 2a 01 	sts	0x012A, r24
     c8c:	80 91 50 02 	lds	r24, 0x0250
     c90:	89 32       	cpi	r24, 0x29	; 41
     c92:	38 f4       	brcc	.+14     	; 0xca2 <node+0x20>
     c94:	0e c0       	rjmp	.+28     	; 0xcb2 <node+0x30>
     c96:	3a dc       	rcall	.-1932   	; 0x50c <forward>
     c98:	e7 df       	rcall	.-50     	; 0xc68 <set_color>
     c9a:	80 91 50 02 	lds	r24, 0x0250
     c9e:	89 32       	cpi	r24, 0x29	; 41
     ca0:	40 f0       	brcs	.+16     	; 0xcb2 <node+0x30>
     ca2:	80 91 51 02 	lds	r24, 0x0251
     ca6:	89 32       	cpi	r24, 0x29	; 41
     ca8:	b0 f7       	brcc	.-20     	; 0xc96 <node+0x14>
     caa:	80 91 4f 02 	lds	r24, 0x024F
     cae:	89 32       	cpi	r24, 0x29	; 41
     cb0:	90 f7       	brcc	.-28     	; 0xc96 <node+0x14>
     cb2:	2f ef       	ldi	r18, 0xFF	; 255
     cb4:	8f ef       	ldi	r24, 0xFF	; 255
     cb6:	9a e1       	ldi	r25, 0x1A	; 26
     cb8:	21 50       	subi	r18, 0x01	; 1
     cba:	80 40       	sbci	r24, 0x00	; 0
     cbc:	90 40       	sbci	r25, 0x00	; 0
     cbe:	e1 f7       	brne	.-8      	; 0xcb8 <node+0x36>
     cc0:	00 c0       	rjmp	.+0      	; 0xcc2 <node+0x40>
     cc2:	00 00       	nop
     cc4:	2f cc       	rjmp	.-1954   	; 0x524 <stop>
     cc6:	08 95       	ret

00000cc8 <semiCorrect>:
     cc8:	80 91 50 02 	lds	r24, 0x0250
     ccc:	88 32       	cpi	r24, 0x28	; 40
     cce:	58 f5       	brcc	.+86     	; 0xd26 <semiCorrect+0x5e>
     cd0:	80 91 51 02 	lds	r24, 0x0251
     cd4:	89 32       	cpi	r24, 0x29	; 41
     cd6:	98 f0       	brcs	.+38     	; 0xcfe <semiCorrect+0x36>
     cd8:	90 91 4f 02 	lds	r25, 0x024F
     cdc:	98 32       	cpi	r25, 0x28	; 40
     cde:	78 f4       	brcc	.+30     	; 0xcfe <semiCorrect+0x36>
     ce0:	1b dc       	rcall	.-1994   	; 0x518 <left>
     ce2:	c2 df       	rcall	.-124    	; 0xc68 <set_color>
     ce4:	80 91 50 02 	lds	r24, 0x0250
     ce8:	88 32       	cpi	r24, 0x28	; 40
     cea:	e8 f4       	brcc	.+58     	; 0xd26 <semiCorrect+0x5e>
     cec:	80 91 51 02 	lds	r24, 0x0251
     cf0:	89 32       	cpi	r24, 0x29	; 41
     cf2:	c8 f0       	brcs	.+50     	; 0xd26 <semiCorrect+0x5e>
     cf4:	80 91 4f 02 	lds	r24, 0x024F
     cf8:	88 32       	cpi	r24, 0x28	; 40
     cfa:	90 f3       	brcs	.-28     	; 0xce0 <semiCorrect+0x18>
     cfc:	08 95       	ret
     cfe:	90 91 4f 02 	lds	r25, 0x024F
     d02:	99 32       	cpi	r25, 0x29	; 41
     d04:	80 f0       	brcs	.+32     	; 0xd26 <semiCorrect+0x5e>
     d06:	88 32       	cpi	r24, 0x28	; 40
     d08:	70 f4       	brcc	.+28     	; 0xd26 <semiCorrect+0x5e>
     d0a:	09 dc       	rcall	.-2030   	; 0x51e <right>
     d0c:	ad df       	rcall	.-166    	; 0xc68 <set_color>
     d0e:	80 91 50 02 	lds	r24, 0x0250
     d12:	88 32       	cpi	r24, 0x28	; 40
     d14:	40 f4       	brcc	.+16     	; 0xd26 <semiCorrect+0x5e>
     d16:	80 91 51 02 	lds	r24, 0x0251
     d1a:	88 32       	cpi	r24, 0x28	; 40
     d1c:	20 f4       	brcc	.+8      	; 0xd26 <semiCorrect+0x5e>
     d1e:	80 91 4f 02 	lds	r24, 0x024F
     d22:	89 32       	cpi	r24, 0x29	; 41
     d24:	90 f7       	brcc	.-28     	; 0xd0a <semiCorrect+0x42>
     d26:	08 95       	ret

00000d28 <correct>:
     d28:	0f 93       	push	r16
     d2a:	1f 93       	push	r17
     d2c:	cf 93       	push	r28
     d2e:	df 93       	push	r29
     d30:	85 e0       	ldi	r24, 0x05	; 5
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	90 93 75 02 	sts	0x0275, r25
     d38:	80 93 74 02 	sts	0x0274, r24
     d3c:	f3 db       	rcall	.-2074   	; 0x524 <stop>
     d3e:	80 91 4e 02 	lds	r24, 0x024E
     d42:	81 30       	cpi	r24, 0x01	; 1
     d44:	09 f0       	breq	.+2      	; 0xd48 <correct+0x20>
     d46:	34 c0       	rjmp	.+104    	; 0xdb0 <correct+0x88>
     d48:	10 92 4e 02 	sts	0x024E, r1
     d4c:	ce e3       	ldi	r28, 0x3E	; 62
     d4e:	d0 e0       	ldi	r29, 0x00	; 0
     d50:	02 e0       	ldi	r16, 0x02	; 2
     d52:	10 e0       	ldi	r17, 0x00	; 0
     d54:	e4 db       	rcall	.-2104   	; 0x51e <right>
     d56:	02 30       	cpi	r16, 0x02	; 2
     d58:	11 05       	cpc	r17, r1
     d5a:	31 f4       	brne	.+12     	; 0xd68 <correct+0x40>
     d5c:	8e e1       	ldi	r24, 0x1E	; 30
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	7e de       	rcall	.-772    	; 0xa5e <Delay>
     d62:	88 23       	and	r24, r24
     d64:	29 f0       	breq	.+10     	; 0xd70 <correct+0x48>
     d66:	58 c0       	rjmp	.+176    	; 0xe18 <correct+0xf0>
     d68:	ce 01       	movw	r24, r28
     d6a:	79 de       	rcall	.-782    	; 0xa5e <Delay>
     d6c:	81 11       	cpse	r24, r1
     d6e:	54 c0       	rjmp	.+168    	; 0xe18 <correct+0xf0>
     d70:	d9 db       	rcall	.-2126   	; 0x524 <stop>
     d72:	82 e0       	ldi	r24, 0x02	; 2
     d74:	2a dc       	rcall	.-1964   	; 0x5ca <ADC_Conversion>
     d76:	89 32       	cpi	r24, 0x29	; 41
     d78:	08 f0       	brcs	.+2      	; 0xd7c <correct+0x54>
     d7a:	4d c0       	rjmp	.+154    	; 0xe16 <correct+0xee>
     d7c:	a5 df       	rcall	.-182    	; 0xcc8 <semiCorrect>
     d7e:	cc db       	rcall	.-2152   	; 0x518 <left>
     d80:	02 30       	cpi	r16, 0x02	; 2
     d82:	11 05       	cpc	r17, r1
     d84:	31 f4       	brne	.+12     	; 0xd92 <correct+0x6a>
     d86:	8c e3       	ldi	r24, 0x3C	; 60
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	69 de       	rcall	.-814    	; 0xa5e <Delay>
     d8c:	88 23       	and	r24, r24
     d8e:	29 f0       	breq	.+10     	; 0xd9a <correct+0x72>
     d90:	43 c0       	rjmp	.+134    	; 0xe18 <correct+0xf0>
     d92:	ce 01       	movw	r24, r28
     d94:	64 de       	rcall	.-824    	; 0xa5e <Delay>
     d96:	81 11       	cpse	r24, r1
     d98:	3f c0       	rjmp	.+126    	; 0xe18 <correct+0xf0>
     d9a:	c4 db       	rcall	.-2168   	; 0x524 <stop>
     d9c:	82 e0       	ldi	r24, 0x02	; 2
     d9e:	15 dc       	rcall	.-2006   	; 0x5ca <ADC_Conversion>
     da0:	64 96       	adiw	r28, 0x14	; 20
     da2:	88 32       	cpi	r24, 0x28	; 40
     da4:	08 f4       	brcc	.+2      	; 0xda8 <correct+0x80>
     da6:	37 c0       	rjmp	.+110    	; 0xe16 <correct+0xee>
     da8:	8f df       	rcall	.-226    	; 0xcc8 <semiCorrect>
     daa:	0c 5e       	subi	r16, 0xEC	; 236
     dac:	1f 4f       	sbci	r17, 0xFF	; 255
     dae:	d2 cf       	rjmp	.-92     	; 0xd54 <correct+0x2c>
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	80 93 4e 02 	sts	0x024E, r24
     db6:	ce e3       	ldi	r28, 0x3E	; 62
     db8:	d0 e0       	ldi	r29, 0x00	; 0
     dba:	02 e0       	ldi	r16, 0x02	; 2
     dbc:	10 e0       	ldi	r17, 0x00	; 0
     dbe:	ac db       	rcall	.-2216   	; 0x518 <left>
     dc0:	02 30       	cpi	r16, 0x02	; 2
     dc2:	11 05       	cpc	r17, r1
     dc4:	31 f4       	brne	.+12     	; 0xdd2 <correct+0xaa>
     dc6:	8e e1       	ldi	r24, 0x1E	; 30
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	49 de       	rcall	.-878    	; 0xa5e <Delay>
     dcc:	88 23       	and	r24, r24
     dce:	29 f0       	breq	.+10     	; 0xdda <correct+0xb2>
     dd0:	23 c0       	rjmp	.+70     	; 0xe18 <correct+0xf0>
     dd2:	ce 01       	movw	r24, r28
     dd4:	44 de       	rcall	.-888    	; 0xa5e <Delay>
     dd6:	81 11       	cpse	r24, r1
     dd8:	1f c0       	rjmp	.+62     	; 0xe18 <correct+0xf0>
     dda:	a4 db       	rcall	.-2232   	; 0x524 <stop>
     ddc:	82 e0       	ldi	r24, 0x02	; 2
     dde:	f5 db       	rcall	.-2070   	; 0x5ca <ADC_Conversion>
     de0:	89 32       	cpi	r24, 0x29	; 41
     de2:	c8 f4       	brcc	.+50     	; 0xe16 <correct+0xee>
     de4:	71 df       	rcall	.-286    	; 0xcc8 <semiCorrect>
     de6:	9b db       	rcall	.-2250   	; 0x51e <right>
     de8:	02 30       	cpi	r16, 0x02	; 2
     dea:	11 05       	cpc	r17, r1
     dec:	31 f4       	brne	.+12     	; 0xdfa <correct+0xd2>
     dee:	8c e3       	ldi	r24, 0x3C	; 60
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	35 de       	rcall	.-918    	; 0xa5e <Delay>
     df4:	88 23       	and	r24, r24
     df6:	29 f0       	breq	.+10     	; 0xe02 <correct+0xda>
     df8:	0f c0       	rjmp	.+30     	; 0xe18 <correct+0xf0>
     dfa:	ce 01       	movw	r24, r28
     dfc:	30 de       	rcall	.-928    	; 0xa5e <Delay>
     dfe:	81 11       	cpse	r24, r1
     e00:	0b c0       	rjmp	.+22     	; 0xe18 <correct+0xf0>
     e02:	90 db       	rcall	.-2272   	; 0x524 <stop>
     e04:	82 e0       	ldi	r24, 0x02	; 2
     e06:	e1 db       	rcall	.-2110   	; 0x5ca <ADC_Conversion>
     e08:	64 96       	adiw	r28, 0x14	; 20
     e0a:	88 32       	cpi	r24, 0x28	; 40
     e0c:	20 f0       	brcs	.+8      	; 0xe16 <correct+0xee>
     e0e:	5c df       	rcall	.-328    	; 0xcc8 <semiCorrect>
     e10:	0c 5e       	subi	r16, 0xEC	; 236
     e12:	1f 4f       	sbci	r17, 0xFF	; 255
     e14:	d4 cf       	rjmp	.-88     	; 0xdbe <correct+0x96>
     e16:	86 db       	rcall	.-2292   	; 0x524 <stop>
     e18:	df 91       	pop	r29
     e1a:	cf 91       	pop	r28
     e1c:	1f 91       	pop	r17
     e1e:	0f 91       	pop	r16
     e20:	08 95       	ret

00000e22 <noNatak>:
     e22:	86 e9       	ldi	r24, 0x96	; 150
     e24:	80 93 28 01 	sts	0x0128, r24
     e28:	80 93 2a 01 	sts	0x012A, r24
     e2c:	80 91 50 02 	lds	r24, 0x0250
     e30:	88 32       	cpi	r24, 0x28	; 40
     e32:	70 f5       	brcc	.+92     	; 0xe90 <noNatak+0x6e>
     e34:	80 91 51 02 	lds	r24, 0x0251
     e38:	89 32       	cpi	r24, 0x29	; 41
     e3a:	98 f0       	brcs	.+38     	; 0xe62 <noNatak+0x40>
     e3c:	90 91 4f 02 	lds	r25, 0x024F
     e40:	98 32       	cpi	r25, 0x28	; 40
     e42:	78 f4       	brcc	.+30     	; 0xe62 <noNatak+0x40>
     e44:	69 db       	rcall	.-2350   	; 0x518 <left>
     e46:	10 df       	rcall	.-480    	; 0xc68 <set_color>
     e48:	80 91 50 02 	lds	r24, 0x0250
     e4c:	88 32       	cpi	r24, 0x28	; 40
     e4e:	78 f5       	brcc	.+94     	; 0xeae <noNatak+0x8c>
     e50:	80 91 51 02 	lds	r24, 0x0251
     e54:	89 32       	cpi	r24, 0x29	; 41
     e56:	58 f1       	brcs	.+86     	; 0xeae <noNatak+0x8c>
     e58:	80 91 4f 02 	lds	r24, 0x024F
     e5c:	88 32       	cpi	r24, 0x28	; 40
     e5e:	90 f3       	brcs	.-28     	; 0xe44 <noNatak+0x22>
     e60:	26 c0       	rjmp	.+76     	; 0xeae <noNatak+0x8c>
     e62:	90 91 4f 02 	lds	r25, 0x024F
     e66:	99 32       	cpi	r25, 0x29	; 41
     e68:	88 f0       	brcs	.+34     	; 0xe8c <noNatak+0x6a>
     e6a:	88 32       	cpi	r24, 0x28	; 40
     e6c:	78 f4       	brcc	.+30     	; 0xe8c <noNatak+0x6a>
     e6e:	57 db       	rcall	.-2386   	; 0x51e <right>
     e70:	fb de       	rcall	.-522    	; 0xc68 <set_color>
     e72:	80 91 50 02 	lds	r24, 0x0250
     e76:	88 32       	cpi	r24, 0x28	; 40
     e78:	d0 f4       	brcc	.+52     	; 0xeae <noNatak+0x8c>
     e7a:	80 91 51 02 	lds	r24, 0x0251
     e7e:	88 32       	cpi	r24, 0x28	; 40
     e80:	b0 f4       	brcc	.+44     	; 0xeae <noNatak+0x8c>
     e82:	80 91 4f 02 	lds	r24, 0x024F
     e86:	89 32       	cpi	r24, 0x29	; 41
     e88:	90 f7       	brcc	.-28     	; 0xe6e <noNatak+0x4c>
     e8a:	11 c0       	rjmp	.+34     	; 0xeae <noNatak+0x8c>
     e8c:	4d df       	rcall	.-358    	; 0xd28 <correct>
     e8e:	0f c0       	rjmp	.+30     	; 0xeae <noNatak+0x8c>
     e90:	80 91 51 02 	lds	r24, 0x0251
     e94:	89 32       	cpi	r24, 0x29	; 41
     e96:	20 f0       	brcs	.+8      	; 0xea0 <noNatak+0x7e>
     e98:	90 91 4f 02 	lds	r25, 0x024F
     e9c:	98 32       	cpi	r25, 0x28	; 40
     e9e:	40 f0       	brcs	.+16     	; 0xeb0 <noNatak+0x8e>
     ea0:	88 32       	cpi	r24, 0x28	; 40
     ea2:	20 f4       	brcc	.+8      	; 0xeac <noNatak+0x8a>
     ea4:	80 91 4f 02 	lds	r24, 0x024F
     ea8:	89 32       	cpi	r24, 0x29	; 41
     eaa:	10 f4       	brcc	.+4      	; 0xeb0 <noNatak+0x8e>
     eac:	3d df       	rcall	.-390    	; 0xd28 <correct>
     eae:	3a cb       	rjmp	.-2444   	; 0x524 <stop>
     eb0:	08 95       	ret

00000eb2 <forwardJaa>:
     eb2:	ff 92       	push	r15
     eb4:	0f 93       	push	r16
     eb6:	1f 93       	push	r17
     eb8:	cf 93       	push	r28
     eba:	df 93       	push	r29
     ebc:	08 e2       	ldi	r16, 0x28	; 40
     ebe:	11 e0       	ldi	r17, 0x01	; 1
     ec0:	0f 2e       	mov	r0, r31
     ec2:	f0 ef       	ldi	r31, 0xF0	; 240
     ec4:	ff 2e       	mov	r15, r31
     ec6:	f0 2d       	mov	r31, r0
     ec8:	ca e2       	ldi	r28, 0x2A	; 42
     eca:	d1 e0       	ldi	r29, 0x01	; 1
     ecc:	1f db       	rcall	.-2498   	; 0x50c <forward>
     ece:	cc de       	rcall	.-616    	; 0xc68 <set_color>
     ed0:	80 91 50 02 	lds	r24, 0x0250
     ed4:	89 32       	cpi	r24, 0x29	; 41
     ed6:	50 f0       	brcs	.+20     	; 0xeec <forwardJaa+0x3a>
     ed8:	80 91 51 02 	lds	r24, 0x0251
     edc:	89 32       	cpi	r24, 0x29	; 41
     ede:	20 f4       	brcc	.+8      	; 0xee8 <forwardJaa+0x36>
     ee0:	80 91 4f 02 	lds	r24, 0x024F
     ee4:	89 32       	cpi	r24, 0x29	; 41
     ee6:	10 f0       	brcs	.+4      	; 0xeec <forwardJaa+0x3a>
     ee8:	cc de       	rcall	.-616    	; 0xc82 <node>
     eea:	11 c0       	rjmp	.+34     	; 0xf0e <forwardJaa+0x5c>
     eec:	f8 01       	movw	r30, r16
     eee:	f0 82       	st	Z, r15
     ef0:	f8 82       	st	Y, r15
     ef2:	80 91 50 02 	lds	r24, 0x0250
     ef6:	89 32       	cpi	r24, 0x29	; 41
     ef8:	40 f0       	brcs	.+16     	; 0xf0a <forwardJaa+0x58>
     efa:	80 91 51 02 	lds	r24, 0x0251
     efe:	88 32       	cpi	r24, 0x28	; 40
     f00:	20 f4       	brcc	.+8      	; 0xf0a <forwardJaa+0x58>
     f02:	80 91 4f 02 	lds	r24, 0x024F
     f06:	88 32       	cpi	r24, 0x28	; 40
     f08:	08 f3       	brcs	.-62     	; 0xecc <forwardJaa+0x1a>
     f0a:	8b df       	rcall	.-234    	; 0xe22 <noNatak>
     f0c:	d2 df       	rcall	.-92     	; 0xeb2 <forwardJaa>
     f0e:	df 91       	pop	r29
     f10:	cf 91       	pop	r28
     f12:	1f 91       	pop	r17
     f14:	0f 91       	pop	r16
     f16:	ff 90       	pop	r15
     f18:	08 95       	ret

00000f1a <front>:
     f1a:	cb df       	rcall	.-106    	; 0xeb2 <forwardJaa>
     f1c:	80 91 78 02 	lds	r24, 0x0278
     f20:	90 91 79 02 	lds	r25, 0x0279
     f24:	01 96       	adiw	r24, 0x01	; 1
     f26:	90 93 79 02 	sts	0x0279, r25
     f2a:	80 93 78 02 	sts	0x0278, r24
     f2e:	08 95       	ret

00000f30 <elevate>:
     f30:	61 11       	cpse	r22, r1
     f32:	02 c0       	rjmp	.+4      	; 0xf38 <elevate+0x8>
     f34:	a0 cb       	rjmp	.-2240   	; 0x676 <servo_1>
     f36:	08 95       	ret
     f38:	61 30       	cpi	r22, 0x01	; 1
     f3a:	31 f4       	brne	.+12     	; 0xf48 <elevate+0x18>
     f3c:	8d 32       	cpi	r24, 0x2D	; 45
     f3e:	11 f4       	brne	.+4      	; 0xf44 <elevate+0x14>
     f40:	80 e0       	ldi	r24, 0x00	; 0
     f42:	01 c0       	rjmp	.+2      	; 0xf46 <elevate+0x16>
     f44:	8d e2       	ldi	r24, 0x2D	; 45
     f46:	97 cb       	rjmp	.-2258   	; 0x676 <servo_1>
     f48:	08 95       	ret

00000f4a <open>:
     f4a:	81 11       	cpse	r24, r1
     f4c:	06 c0       	rjmp	.+12     	; 0xf5a <open+0x10>
     f4e:	10 92 8b 00 	sts	0x008B, r1
     f52:	83 e8       	ldi	r24, 0x83	; 131
     f54:	80 93 8a 00 	sts	0x008A, r24
     f58:	08 95       	ret
     f5a:	81 30       	cpi	r24, 0x01	; 1
     f5c:	29 f4       	brne	.+10     	; 0xf68 <open+0x1e>
     f5e:	10 92 8d 00 	sts	0x008D, r1
     f62:	83 e8       	ldi	r24, 0x83	; 131
     f64:	80 93 8c 00 	sts	0x008C, r24
     f68:	08 95       	ret

00000f6a <close>:
     f6a:	81 11       	cpse	r24, r1
     f6c:	06 c0       	rjmp	.+12     	; 0xf7a <close+0x10>
     f6e:	10 92 8b 00 	sts	0x008B, r1
     f72:	83 e2       	ldi	r24, 0x23	; 35
     f74:	80 93 8a 00 	sts	0x008A, r24
     f78:	08 95       	ret
     f7a:	81 30       	cpi	r24, 0x01	; 1
     f7c:	29 f4       	brne	.+10     	; 0xf88 <close+0x1e>
     f7e:	10 92 8d 00 	sts	0x008D, r1
     f82:	83 e2       	ldi	r24, 0x23	; 35
     f84:	80 93 8c 00 	sts	0x008C, r24
     f88:	08 95       	ret

00000f8a <buzzer>:
     f8a:	17 db       	rcall	.-2514   	; 0x5ba <buzzer_on>
     f8c:	2f ef       	ldi	r18, 0xFF	; 255
     f8e:	8f e7       	ldi	r24, 0x7F	; 127
     f90:	94 e0       	ldi	r25, 0x04	; 4
     f92:	21 50       	subi	r18, 0x01	; 1
     f94:	80 40       	sbci	r24, 0x00	; 0
     f96:	90 40       	sbci	r25, 0x00	; 0
     f98:	e1 f7       	brne	.-8      	; 0xf92 <buzzer+0x8>
     f9a:	00 c0       	rjmp	.+0      	; 0xf9c <buzzer+0x12>
     f9c:	00 00       	nop
     f9e:	11 cb       	rjmp	.-2526   	; 0x5c2 <buzzer_off>
     fa0:	08 95       	ret

00000fa2 <traverseToSort>:
     fa2:	cf 93       	push	r28
     fa4:	df 93       	push	r29
     fa6:	ec 01       	movw	r28, r24
     fa8:	04 97       	sbiw	r24, 0x04	; 4
     faa:	02 97       	sbiw	r24, 0x02	; 2
     fac:	88 f5       	brcc	.+98     	; 0x1010 <traverseToSort+0x6e>
     fae:	c4 30       	cpi	r28, 0x04	; 4
     fb0:	d1 05       	cpc	r29, r1
     fb2:	39 f4       	brne	.+14     	; 0xfc2 <traverseToSort+0x20>
     fb4:	80 91 52 02 	lds	r24, 0x0252
     fb8:	90 91 53 02 	lds	r25, 0x0253
     fbc:	89 2b       	or	r24, r25
     fbe:	51 f0       	breq	.+20     	; 0xfd4 <traverseToSort+0x32>
     fc0:	0b c0       	rjmp	.+22     	; 0xfd8 <traverseToSort+0x36>
     fc2:	c5 30       	cpi	r28, 0x05	; 5
     fc4:	d1 05       	cpc	r29, r1
     fc6:	41 f4       	brne	.+16     	; 0xfd8 <traverseToSort+0x36>
     fc8:	80 91 52 02 	lds	r24, 0x0252
     fcc:	90 91 53 02 	lds	r25, 0x0253
     fd0:	02 97       	sbiw	r24, 0x02	; 2
     fd2:	11 f4       	brne	.+4      	; 0xfd8 <traverseToSort+0x36>
     fd4:	f7 dc       	rcall	.-1554   	; 0x9c4 <turnRight>
     fd6:	01 c0       	rjmp	.+2      	; 0xfda <traverseToSort+0x38>
     fd8:	12 dd       	rcall	.-1500   	; 0x9fe <turnLeft>
     fda:	9f df       	rcall	.-194    	; 0xf1a <front>
     fdc:	9e df       	rcall	.-196    	; 0xf1a <front>
     fde:	24 97       	sbiw	r28, 0x04	; 4
     fe0:	39 f4       	brne	.+14     	; 0xff0 <traverseToSort+0x4e>
     fe2:	85 e0       	ldi	r24, 0x05	; 5
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	90 93 55 02 	sts	0x0255, r25
     fea:	80 93 54 02 	sts	0x0254, r24
     fee:	06 c0       	rjmp	.+12     	; 0xffc <traverseToSort+0x5a>
     ff0:	84 e0       	ldi	r24, 0x04	; 4
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	90 93 55 02 	sts	0x0255, r25
     ff8:	80 93 54 02 	sts	0x0254, r24
     ffc:	80 91 78 02 	lds	r24, 0x0278
    1000:	90 91 79 02 	lds	r25, 0x0279
    1004:	02 96       	adiw	r24, 0x02	; 2
    1006:	90 93 79 02 	sts	0x0279, r25
    100a:	80 93 78 02 	sts	0x0278, r24
    100e:	2a c0       	rjmp	.+84     	; 0x1064 <traverseToSort+0xc2>
    1010:	80 91 52 02 	lds	r24, 0x0252
    1014:	90 91 53 02 	lds	r25, 0x0253
    1018:	8d 7f       	andi	r24, 0xFD	; 253
    101a:	01 97       	sbiw	r24, 0x01	; 1
    101c:	09 f4       	brne	.+2      	; 0x1020 <traverseToSort+0x7e>
    101e:	ef dc       	rcall	.-1570   	; 0x9fe <turnLeft>
    1020:	22 97       	sbiw	r28, 0x02	; 2
    1022:	3c f4       	brge	.+14     	; 0x1032 <traverseToSort+0x90>
    1024:	80 91 52 02 	lds	r24, 0x0252
    1028:	90 91 53 02 	lds	r25, 0x0253
    102c:	89 2b       	or	r24, r25
    102e:	39 f0       	breq	.+14     	; 0x103e <traverseToSort+0x9c>
    1030:	07 c0       	rjmp	.+14     	; 0x1040 <traverseToSort+0x9e>
    1032:	80 91 52 02 	lds	r24, 0x0252
    1036:	90 91 53 02 	lds	r25, 0x0253
    103a:	02 97       	sbiw	r24, 0x02	; 2
    103c:	09 f4       	brne	.+2      	; 0x1040 <traverseToSort+0x9e>
    103e:	fc dc       	rcall	.-1544   	; 0xa38 <turn>
    1040:	6c df       	rcall	.-296    	; 0xf1a <front>
    1042:	80 91 89 02 	lds	r24, 0x0289
    1046:	90 91 8a 02 	lds	r25, 0x028A
    104a:	81 70       	andi	r24, 0x01	; 1
    104c:	90 78       	andi	r25, 0x80	; 128
    104e:	99 23       	and	r25, r25
    1050:	24 f4       	brge	.+8      	; 0x105a <traverseToSort+0xb8>
    1052:	01 97       	sbiw	r24, 0x01	; 1
    1054:	8e 6f       	ori	r24, 0xFE	; 254
    1056:	9f 6f       	ori	r25, 0xFF	; 255
    1058:	01 96       	adiw	r24, 0x01	; 1
    105a:	04 96       	adiw	r24, 0x04	; 4
    105c:	90 93 55 02 	sts	0x0255, r25
    1060:	80 93 54 02 	sts	0x0254, r24
    1064:	df 91       	pop	r29
    1066:	cf 91       	pop	r28
    1068:	08 95       	ret

0000106a <terminalCheck2>:
    106a:	cf 93       	push	r28
    106c:	df 93       	push	r29
    106e:	80 91 89 02 	lds	r24, 0x0289
    1072:	90 91 8a 02 	lds	r25, 0x028A
    1076:	82 30       	cpi	r24, 0x02	; 2
    1078:	91 05       	cpc	r25, r1
    107a:	30 f4       	brcc	.+12     	; 0x1088 <terminalCheck2+0x1e>
    107c:	20 91 52 02 	lds	r18, 0x0252
    1080:	30 91 53 02 	lds	r19, 0x0253
    1084:	23 2b       	or	r18, r19
    1086:	69 f0       	breq	.+26     	; 0x10a2 <terminalCheck2+0x38>
    1088:	9c 01       	movw	r18, r24
    108a:	22 50       	subi	r18, 0x02	; 2
    108c:	31 09       	sbc	r19, r1
    108e:	22 30       	cpi	r18, 0x02	; 2
    1090:	31 05       	cpc	r19, r1
    1092:	48 f4       	brcc	.+18     	; 0x10a6 <terminalCheck2+0x3c>
    1094:	40 91 52 02 	lds	r20, 0x0252
    1098:	50 91 53 02 	lds	r21, 0x0253
    109c:	42 30       	cpi	r20, 0x02	; 2
    109e:	51 05       	cpc	r21, r1
    10a0:	11 f4       	brne	.+4      	; 0x10a6 <terminalCheck2+0x3c>
    10a2:	ad dc       	rcall	.-1702   	; 0x9fe <turnLeft>
    10a4:	14 c0       	rjmp	.+40     	; 0x10ce <terminalCheck2+0x64>
    10a6:	02 97       	sbiw	r24, 0x02	; 2
    10a8:	30 f4       	brcc	.+12     	; 0x10b6 <terminalCheck2+0x4c>
    10aa:	80 91 52 02 	lds	r24, 0x0252
    10ae:	90 91 53 02 	lds	r25, 0x0253
    10b2:	02 97       	sbiw	r24, 0x02	; 2
    10b4:	49 f0       	breq	.+18     	; 0x10c8 <terminalCheck2+0x5e>
    10b6:	22 30       	cpi	r18, 0x02	; 2
    10b8:	31 05       	cpc	r19, r1
    10ba:	40 f4       	brcc	.+16     	; 0x10cc <terminalCheck2+0x62>
    10bc:	80 91 52 02 	lds	r24, 0x0252
    10c0:	90 91 53 02 	lds	r25, 0x0253
    10c4:	89 2b       	or	r24, r25
    10c6:	11 f4       	brne	.+4      	; 0x10cc <terminalCheck2+0x62>
    10c8:	7d dc       	rcall	.-1798   	; 0x9c4 <turnRight>
    10ca:	01 c0       	rjmp	.+2      	; 0x10ce <terminalCheck2+0x64>
    10cc:	b5 dc       	rcall	.-1686   	; 0xa38 <turn>
    10ce:	c0 91 89 02 	lds	r28, 0x0289
    10d2:	d0 91 8a 02 	lds	r29, 0x028A
    10d6:	e9 dc       	rcall	.-1582   	; 0xaaa <scan>
    10d8:	cc 0f       	add	r28, r28
    10da:	dd 1f       	adc	r29, r29
    10dc:	cc 0f       	add	r28, r28
    10de:	dd 1f       	adc	r29, r29
    10e0:	c3 57       	subi	r28, 0x73	; 115
    10e2:	dd 4f       	sbci	r29, 0xFD	; 253
    10e4:	9b 83       	std	Y+3, r25	; 0x03
    10e6:	8a 83       	std	Y+2, r24	; 0x02
    10e8:	80 91 89 02 	lds	r24, 0x0289
    10ec:	90 91 8a 02 	lds	r25, 0x028A
    10f0:	fc 01       	movw	r30, r24
    10f2:	ee 0f       	add	r30, r30
    10f4:	ff 1f       	adc	r31, r31
    10f6:	ee 0f       	add	r30, r30
    10f8:	ff 1f       	adc	r31, r31
    10fa:	e3 57       	subi	r30, 0x73	; 115
    10fc:	fd 4f       	sbci	r31, 0xFD	; 253
    10fe:	22 81       	ldd	r18, Z+2	; 0x02
    1100:	33 81       	ldd	r19, Z+3	; 0x03
    1102:	2f 3f       	cpi	r18, 0xFF	; 255
    1104:	4f ef       	ldi	r20, 0xFF	; 255
    1106:	34 07       	cpc	r19, r20
    1108:	51 f0       	breq	.+20     	; 0x111e <terminalCheck2+0xb4>
    110a:	fc 01       	movw	r30, r24
    110c:	ee 0f       	add	r30, r30
    110e:	ff 1f       	adc	r31, r31
    1110:	e3 56       	subi	r30, 0x63	; 99
    1112:	fd 4f       	sbci	r31, 0xFD	; 253
    1114:	40 81       	ld	r20, Z
    1116:	51 81       	ldd	r21, Z+1	; 0x01
    1118:	24 17       	cp	r18, r20
    111a:	35 07       	cpc	r19, r21
    111c:	51 f4       	brne	.+20     	; 0x1132 <terminalCheck2+0xc8>
    111e:	20 91 00 02 	lds	r18, 0x0200
    1122:	30 91 01 02 	lds	r19, 0x0201
    1126:	21 50       	subi	r18, 0x01	; 1
    1128:	31 09       	sbc	r19, r1
    112a:	30 93 01 02 	sts	0x0201, r19
    112e:	20 93 00 02 	sts	0x0200, r18
    1132:	fc 01       	movw	r30, r24
    1134:	ee 0f       	add	r30, r30
    1136:	ff 1f       	adc	r31, r31
    1138:	ea 59       	subi	r30, 0x9A	; 154
    113a:	fd 4f       	sbci	r31, 0xFD	; 253
    113c:	81 e0       	ldi	r24, 0x01	; 1
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	91 83       	std	Z+1, r25	; 0x01
    1142:	80 83       	st	Z, r24
    1144:	80 91 56 02 	lds	r24, 0x0256
    1148:	90 91 57 02 	lds	r25, 0x0257
    114c:	01 96       	adiw	r24, 0x01	; 1
    114e:	90 93 57 02 	sts	0x0257, r25
    1152:	80 93 56 02 	sts	0x0256, r24
    1156:	df 91       	pop	r29
    1158:	cf 91       	pop	r28
    115a:	08 95       	ret

0000115c <position>:
    115c:	0f 93       	push	r16
    115e:	1f 93       	push	r17
    1160:	cf 93       	push	r28
    1162:	df 93       	push	r29
    1164:	8c 01       	movw	r16, r24
    1166:	eb 01       	movw	r28, r22
    1168:	20 91 89 02 	lds	r18, 0x0289
    116c:	30 91 8a 02 	lds	r19, 0x028A
    1170:	40 91 54 02 	lds	r20, 0x0254
    1174:	50 91 55 02 	lds	r21, 0x0255
    1178:	24 17       	cp	r18, r20
    117a:	35 07       	cpc	r19, r21
    117c:	09 f0       	breq	.+2      	; 0x1180 <position+0x24>
    117e:	6a c0       	rjmp	.+212    	; 0x1254 <position+0xf8>
    1180:	c9 01       	movw	r24, r18
    1182:	22 30       	cpi	r18, 0x02	; 2
    1184:	31 05       	cpc	r19, r1
    1186:	30 f4       	brcc	.+12     	; 0x1194 <position+0x38>
    1188:	40 91 52 02 	lds	r20, 0x0252
    118c:	50 91 53 02 	lds	r21, 0x0253
    1190:	45 2b       	or	r20, r21
    1192:	61 f0       	breq	.+24     	; 0x11ac <position+0x50>
    1194:	22 50       	subi	r18, 0x02	; 2
    1196:	31 09       	sbc	r19, r1
    1198:	22 30       	cpi	r18, 0x02	; 2
    119a:	31 05       	cpc	r19, r1
    119c:	68 f4       	brcc	.+26     	; 0x11b8 <position+0x5c>
    119e:	40 91 52 02 	lds	r20, 0x0252
    11a2:	50 91 53 02 	lds	r21, 0x0253
    11a6:	42 30       	cpi	r20, 0x02	; 2
    11a8:	51 05       	cpc	r21, r1
    11aa:	31 f4       	brne	.+12     	; 0x11b8 <position+0x5c>
    11ac:	0c 17       	cp	r16, r28
    11ae:	1d 07       	cpc	r17, r29
    11b0:	09 f4       	brne	.+2      	; 0x11b4 <position+0x58>
    11b2:	8f c0       	rjmp	.+286    	; 0x12d2 <position+0x176>
    11b4:	41 dc       	rcall	.-1918   	; 0xa38 <turn>
    11b6:	8d c0       	rjmp	.+282    	; 0x12d2 <position+0x176>
    11b8:	82 30       	cpi	r24, 0x02	; 2
    11ba:	91 05       	cpc	r25, r1
    11bc:	38 f4       	brcc	.+14     	; 0x11cc <position+0x70>
    11be:	40 91 52 02 	lds	r20, 0x0252
    11c2:	50 91 53 02 	lds	r21, 0x0253
    11c6:	42 30       	cpi	r20, 0x02	; 2
    11c8:	51 05       	cpc	r21, r1
    11ca:	49 f0       	breq	.+18     	; 0x11de <position+0x82>
    11cc:	22 30       	cpi	r18, 0x02	; 2
    11ce:	31 05       	cpc	r19, r1
    11d0:	60 f4       	brcc	.+24     	; 0x11ea <position+0x8e>
    11d2:	40 91 52 02 	lds	r20, 0x0252
    11d6:	50 91 53 02 	lds	r21, 0x0253
    11da:	45 2b       	or	r20, r21
    11dc:	31 f4       	brne	.+12     	; 0x11ea <position+0x8e>
    11de:	0c 17       	cp	r16, r28
    11e0:	1d 07       	cpc	r17, r29
    11e2:	09 f0       	breq	.+2      	; 0x11e6 <position+0x8a>
    11e4:	76 c0       	rjmp	.+236    	; 0x12d2 <position+0x176>
    11e6:	28 dc       	rcall	.-1968   	; 0xa38 <turn>
    11e8:	74 c0       	rjmp	.+232    	; 0x12d2 <position+0x176>
    11ea:	82 30       	cpi	r24, 0x02	; 2
    11ec:	91 05       	cpc	r25, r1
    11ee:	38 f4       	brcc	.+14     	; 0x11fe <position+0xa2>
    11f0:	40 91 52 02 	lds	r20, 0x0252
    11f4:	50 91 53 02 	lds	r21, 0x0253
    11f8:	41 30       	cpi	r20, 0x01	; 1
    11fa:	51 05       	cpc	r21, r1
    11fc:	51 f0       	breq	.+20     	; 0x1212 <position+0xb6>
    11fe:	22 30       	cpi	r18, 0x02	; 2
    1200:	31 05       	cpc	r19, r1
    1202:	70 f4       	brcc	.+28     	; 0x1220 <position+0xc4>
    1204:	40 91 52 02 	lds	r20, 0x0252
    1208:	50 91 53 02 	lds	r21, 0x0253
    120c:	43 30       	cpi	r20, 0x03	; 3
    120e:	51 05       	cpc	r21, r1
    1210:	39 f4       	brne	.+14     	; 0x1220 <position+0xc4>
    1212:	0c 17       	cp	r16, r28
    1214:	1d 07       	cpc	r17, r29
    1216:	11 f0       	breq	.+4      	; 0x121c <position+0xc0>
    1218:	d5 db       	rcall	.-2134   	; 0x9c4 <turnRight>
    121a:	5b c0       	rjmp	.+182    	; 0x12d2 <position+0x176>
    121c:	f0 db       	rcall	.-2080   	; 0x9fe <turnLeft>
    121e:	59 c0       	rjmp	.+178    	; 0x12d2 <position+0x176>
    1220:	02 97       	sbiw	r24, 0x02	; 2
    1222:	30 f4       	brcc	.+12     	; 0x1230 <position+0xd4>
    1224:	80 91 52 02 	lds	r24, 0x0252
    1228:	90 91 53 02 	lds	r25, 0x0253
    122c:	03 97       	sbiw	r24, 0x03	; 3
    122e:	59 f0       	breq	.+22     	; 0x1246 <position+0xea>
    1230:	22 30       	cpi	r18, 0x02	; 2
    1232:	31 05       	cpc	r19, r1
    1234:	08 f0       	brcs	.+2      	; 0x1238 <position+0xdc>
    1236:	4d c0       	rjmp	.+154    	; 0x12d2 <position+0x176>
    1238:	80 91 52 02 	lds	r24, 0x0252
    123c:	90 91 53 02 	lds	r25, 0x0253
    1240:	01 97       	sbiw	r24, 0x01	; 1
    1242:	09 f0       	breq	.+2      	; 0x1246 <position+0xea>
    1244:	46 c0       	rjmp	.+140    	; 0x12d2 <position+0x176>
    1246:	0c 17       	cp	r16, r28
    1248:	1d 07       	cpc	r17, r29
    124a:	11 f4       	brne	.+4      	; 0x1250 <position+0xf4>
    124c:	bb db       	rcall	.-2186   	; 0x9c4 <turnRight>
    124e:	41 c0       	rjmp	.+130    	; 0x12d2 <position+0x176>
    1250:	d6 db       	rcall	.-2132   	; 0x9fe <turnLeft>
    1252:	3f c0       	rjmp	.+126    	; 0x12d2 <position+0x176>
    1254:	e0 91 52 02 	lds	r30, 0x0252
    1258:	f0 91 53 02 	lds	r31, 0x0253
    125c:	30 97       	sbiw	r30, 0x00	; 0
    125e:	19 f0       	breq	.+6      	; 0x1266 <position+0x10a>
    1260:	32 97       	sbiw	r30, 0x02	; 2
    1262:	79 f5       	brne	.+94     	; 0x12c2 <position+0x166>
    1264:	04 c0       	rjmp	.+8      	; 0x126e <position+0x112>
    1266:	22 30       	cpi	r18, 0x02	; 2
    1268:	31 05       	cpc	r19, r1
    126a:	a8 f4       	brcc	.+42     	; 0x1296 <position+0x13a>
    126c:	05 c0       	rjmp	.+10     	; 0x1278 <position+0x11c>
    126e:	22 50       	subi	r18, 0x02	; 2
    1270:	31 09       	sbc	r19, r1
    1272:	22 30       	cpi	r18, 0x02	; 2
    1274:	31 05       	cpc	r19, r1
    1276:	78 f4       	brcc	.+30     	; 0x1296 <position+0x13a>
    1278:	44 50       	subi	r20, 0x04	; 4
    127a:	51 09       	sbc	r21, r1
    127c:	42 30       	cpi	r20, 0x02	; 2
    127e:	51 05       	cpc	r21, r1
    1280:	10 f0       	brcs	.+4      	; 0x1286 <position+0x12a>
    1282:	bd db       	rcall	.-2182   	; 0x9fe <turnLeft>
    1284:	4a de       	rcall	.-876    	; 0xf1a <front>
    1286:	0c 17       	cp	r16, r28
    1288:	1d 07       	cpc	r17, r29
    128a:	11 f4       	brne	.+4      	; 0x1290 <position+0x134>
    128c:	46 de       	rcall	.-884    	; 0xf1a <front>
    128e:	19 c0       	rjmp	.+50     	; 0x12c2 <position+0x166>
    1290:	44 de       	rcall	.-888    	; 0xf1a <front>
    1292:	d2 db       	rcall	.-2140   	; 0xa38 <turn>
    1294:	16 c0       	rjmp	.+44     	; 0x12c2 <position+0x166>
    1296:	0c 17       	cp	r16, r28
    1298:	1d 07       	cpc	r17, r29
    129a:	59 f4       	brne	.+22     	; 0x12b2 <position+0x156>
    129c:	44 50       	subi	r20, 0x04	; 4
    129e:	51 09       	sbc	r21, r1
    12a0:	42 30       	cpi	r20, 0x02	; 2
    12a2:	51 05       	cpc	r21, r1
    12a4:	18 f0       	brcs	.+6      	; 0x12ac <position+0x150>
    12a6:	ab db       	rcall	.-2218   	; 0x9fe <turnLeft>
    12a8:	38 de       	rcall	.-912    	; 0xf1a <front>
    12aa:	01 c0       	rjmp	.+2      	; 0x12ae <position+0x152>
    12ac:	c5 db       	rcall	.-2166   	; 0xa38 <turn>
    12ae:	35 de       	rcall	.-918    	; 0xf1a <front>
    12b0:	08 c0       	rjmp	.+16     	; 0x12c2 <position+0x166>
    12b2:	44 50       	subi	r20, 0x04	; 4
    12b4:	51 09       	sbc	r21, r1
    12b6:	42 30       	cpi	r20, 0x02	; 2
    12b8:	51 05       	cpc	r21, r1
    12ba:	10 f0       	brcs	.+4      	; 0x12c0 <position+0x164>
    12bc:	a0 db       	rcall	.-2240   	; 0x9fe <turnLeft>
    12be:	2d de       	rcall	.-934    	; 0xf1a <front>
    12c0:	2c de       	rcall	.-936    	; 0xf1a <front>
    12c2:	80 91 89 02 	lds	r24, 0x0289
    12c6:	90 91 8a 02 	lds	r25, 0x028A
    12ca:	90 93 55 02 	sts	0x0255, r25
    12ce:	80 93 54 02 	sts	0x0254, r24
    12d2:	df 91       	pop	r29
    12d4:	cf 91       	pop	r28
    12d6:	1f 91       	pop	r17
    12d8:	0f 91       	pop	r16
    12da:	08 95       	ret

000012dc <predict>:
    12dc:	80 91 8d 02 	lds	r24, 0x028D
    12e0:	90 91 8e 02 	lds	r25, 0x028E
    12e4:	20 91 9d 02 	lds	r18, 0x029D
    12e8:	30 91 9e 02 	lds	r19, 0x029E
    12ec:	82 17       	cp	r24, r18
    12ee:	93 07       	cpc	r25, r19
    12f0:	09 f0       	breq	.+2      	; 0x12f4 <predict+0x18>
    12f2:	5f c0       	rjmp	.+190    	; 0x13b2 <predict+0xd6>
    12f4:	20 91 8f 02 	lds	r18, 0x028F
    12f8:	30 91 90 02 	lds	r19, 0x0290
    12fc:	82 17       	cp	r24, r18
    12fe:	93 07       	cpc	r25, r19
    1300:	09 f0       	breq	.+2      	; 0x1304 <predict+0x28>
    1302:	57 c0       	rjmp	.+174    	; 0x13b2 <predict+0xd6>
    1304:	80 91 91 02 	lds	r24, 0x0291
    1308:	90 91 92 02 	lds	r25, 0x0292
    130c:	20 91 9f 02 	lds	r18, 0x029F
    1310:	30 91 a0 02 	lds	r19, 0x02A0
    1314:	82 17       	cp	r24, r18
    1316:	93 07       	cpc	r25, r19
    1318:	09 f0       	breq	.+2      	; 0x131c <predict+0x40>
    131a:	4b c0       	rjmp	.+150    	; 0x13b2 <predict+0xd6>
    131c:	20 91 93 02 	lds	r18, 0x0293
    1320:	30 91 94 02 	lds	r19, 0x0294
    1324:	82 17       	cp	r24, r18
    1326:	93 07       	cpc	r25, r19
    1328:	09 f0       	breq	.+2      	; 0x132c <predict+0x50>
    132a:	43 c0       	rjmp	.+134    	; 0x13b2 <predict+0xd6>
    132c:	80 91 89 02 	lds	r24, 0x0289
    1330:	90 91 8a 02 	lds	r25, 0x028A
    1334:	fc 01       	movw	r30, r24
    1336:	ee 0f       	add	r30, r30
    1338:	ff 1f       	adc	r31, r31
    133a:	ee 0f       	add	r30, r30
    133c:	ff 1f       	adc	r31, r31
    133e:	e3 57       	subi	r30, 0x73	; 115
    1340:	fd 4f       	sbci	r31, 0xFD	; 253
    1342:	20 81       	ld	r18, Z
    1344:	31 81       	ldd	r19, Z+1	; 0x01
    1346:	fc 01       	movw	r30, r24
    1348:	ee 0f       	add	r30, r30
    134a:	ff 1f       	adc	r31, r31
    134c:	e3 56       	subi	r30, 0x63	; 99
    134e:	fd 4f       	sbci	r31, 0xFD	; 253
    1350:	40 81       	ld	r20, Z
    1352:	51 81       	ldd	r21, Z+1	; 0x01
    1354:	24 17       	cp	r18, r20
    1356:	35 07       	cpc	r19, r21
    1358:	61 f5       	brne	.+88     	; 0x13b2 <predict+0xd6>
    135a:	fc 01       	movw	r30, r24
    135c:	ee 0f       	add	r30, r30
    135e:	ff 1f       	adc	r31, r31
    1360:	ee 0f       	add	r30, r30
    1362:	ff 1f       	adc	r31, r31
    1364:	e3 57       	subi	r30, 0x73	; 115
    1366:	fd 4f       	sbci	r31, 0xFD	; 253
    1368:	82 81       	ldd	r24, Z+2	; 0x02
    136a:	93 81       	ldd	r25, Z+3	; 0x03
    136c:	28 17       	cp	r18, r24
    136e:	39 07       	cpc	r19, r25
    1370:	01 f5       	brne	.+64     	; 0x13b2 <predict+0xd6>
    1372:	80 91 85 02 	lds	r24, 0x0285
    1376:	90 91 86 02 	lds	r25, 0x0286
    137a:	01 96       	adiw	r24, 0x01	; 1
    137c:	d1 f4       	brne	.+52     	; 0x13b2 <predict+0xd6>
    137e:	80 91 87 02 	lds	r24, 0x0287
    1382:	90 91 88 02 	lds	r25, 0x0288
    1386:	01 96       	adiw	r24, 0x01	; 1
    1388:	a1 f4       	brne	.+40     	; 0x13b2 <predict+0xd6>
    138a:	80 91 b1 02 	lds	r24, 0x02B1
    138e:	90 91 b2 02 	lds	r25, 0x02B2
    1392:	01 96       	adiw	r24, 0x01	; 1
    1394:	71 f4       	brne	.+28     	; 0x13b2 <predict+0xd6>
    1396:	80 91 b3 02 	lds	r24, 0x02B3
    139a:	90 91 b4 02 	lds	r25, 0x02B4
    139e:	01 96       	adiw	r24, 0x01	; 1
    13a0:	41 f4       	brne	.+16     	; 0x13b2 <predict+0xd6>
    13a2:	80 91 00 02 	lds	r24, 0x0200
    13a6:	90 91 01 02 	lds	r25, 0x0201
    13aa:	90 93 59 02 	sts	0x0259, r25
    13ae:	80 93 58 02 	sts	0x0258, r24
    13b2:	08 95       	ret

000013b4 <lcd>:
    13b4:	cf 93       	push	r28
    13b6:	df 93       	push	r29
    13b8:	ec 01       	movw	r28, r24
    13ba:	81 e0       	ldi	r24, 0x01	; 1
    13bc:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <lcd_wr_command>
    13c0:	61 e0       	ldi	r22, 0x01	; 1
    13c2:	81 e0       	ldi	r24, 0x01	; 1
    13c4:	0e 94 45 01 	call	0x28a	; 0x28a <lcd_cursor>
    13c8:	ce 01       	movw	r24, r28
    13ca:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_string>
    13ce:	dd dd       	rcall	.-1094   	; 0xf8a <buzzer>
    13d0:	2f ef       	ldi	r18, 0xFF	; 255
    13d2:	8f ef       	ldi	r24, 0xFF	; 255
    13d4:	9c e2       	ldi	r25, 0x2C	; 44
    13d6:	21 50       	subi	r18, 0x01	; 1
    13d8:	80 40       	sbci	r24, 0x00	; 0
    13da:	90 40       	sbci	r25, 0x00	; 0
    13dc:	e1 f7       	brne	.-8      	; 0x13d6 <lcd+0x22>
    13de:	00 c0       	rjmp	.+0      	; 0x13e0 <lcd+0x2c>
    13e0:	00 00       	nop
    13e2:	df 91       	pop	r29
    13e4:	cf 91       	pop	r28
    13e6:	08 95       	ret

000013e8 <pick>:
	servo_2(0);
	else if (side == 1)
	servo_3(0);
}
void pick(int side)	//TODO delay
{
    13e8:	cf 93       	push	r28
    13ea:	df 93       	push	r29
    13ec:	ec 01       	movw	r28, r24
	if(side==0)
    13ee:	00 97       	sbiw	r24, 0x00	; 0
    13f0:	21 f4       	brne	.+8      	; 0x13fa <pick+0x12>
		lcd("pickRight");
    13f2:	8e e0       	ldi	r24, 0x0E	; 14
    13f4:	92 e0       	ldi	r25, 0x02	; 2
    13f6:	de df       	rcall	.-68     	; 0x13b4 <lcd>
    13f8:	03 c0       	rjmp	.+6      	; 0x1400 <pick+0x18>
	else
		lcd("pickLeft");
    13fa:	88 e1       	ldi	r24, 0x18	; 24
    13fc:	92 e0       	ldi	r25, 0x02	; 2
    13fe:	da df       	rcall	.-76     	; 0x13b4 <lcd>
	elevate(0, side);//lower
    1400:	6c 2f       	mov	r22, r28
    1402:	80 e0       	ldi	r24, 0x00	; 0
    1404:	95 dd       	rcall	.-1238   	; 0xf30 <elevate>
	open(side);
    1406:	8c 2f       	mov	r24, r28
    1408:	a0 dd       	rcall	.-1216   	; 0xf4a <open>
	close(side);
    140a:	8c 2f       	mov	r24, r28
    140c:	ae dd       	rcall	.-1188   	; 0xf6a <close>
	elevate(45, side);//mid
    140e:	6c 2f       	mov	r22, r28
    1410:	8d e2       	ldi	r24, 0x2D	; 45
    1412:	8e dd       	rcall	.-1252   	; 0xf30 <elevate>
	armCount--;
    1414:	80 91 02 02 	lds	r24, 0x0202
    1418:	90 91 03 02 	lds	r25, 0x0203
    141c:	01 97       	sbiw	r24, 0x01	; 1
    141e:	90 93 03 02 	sts	0x0203, r25
    1422:	80 93 02 02 	sts	0x0202, r24
}
    1426:	df 91       	pop	r29
    1428:	cf 91       	pop	r28
    142a:	08 95       	ret

0000142c <pickNode>:
void pickNode(int armNo, int side)
{
    142c:	0f 93       	push	r16
    142e:	1f 93       	push	r17
    1430:	cf 93       	push	r28
    1432:	df 93       	push	r29
    1434:	8c 01       	movw	r16, r24
    1436:	eb 01       	movw	r28, r22
	arm[armNo] = term[ct][side];
    1438:	fc 01       	movw	r30, r24
    143a:	ee 0f       	add	r30, r30
    143c:	ff 1f       	adc	r31, r31
    143e:	ef 54       	subi	r30, 0x4F	; 79
    1440:	fd 4f       	sbci	r31, 0xFD	; 253
    1442:	a0 91 89 02 	lds	r26, 0x0289
    1446:	b0 91 8a 02 	lds	r27, 0x028A
    144a:	aa 0f       	add	r26, r26
    144c:	bb 1f       	adc	r27, r27
    144e:	a6 0f       	add	r26, r22
    1450:	b7 1f       	adc	r27, r23
    1452:	aa 0f       	add	r26, r26
    1454:	bb 1f       	adc	r27, r27
    1456:	a3 57       	subi	r26, 0x73	; 115
    1458:	bd 4f       	sbci	r27, 0xFD	; 253
    145a:	8d 91       	ld	r24, X+
    145c:	9c 91       	ld	r25, X
    145e:	91 83       	std	Z+1, r25	; 0x01
    1460:	80 83       	st	Z, r24
	position(armNo,side);
    1462:	c8 01       	movw	r24, r16
    1464:	7b de       	rcall	.-778    	; 0x115c <position>
	pick(armNo);
    1466:	c8 01       	movw	r24, r16
    1468:	bf df       	rcall	.-130    	; 0x13e8 <pick>
	term[ct][side] = -1;
    146a:	80 91 89 02 	lds	r24, 0x0289
    146e:	90 91 8a 02 	lds	r25, 0x028A
    1472:	88 0f       	add	r24, r24
    1474:	99 1f       	adc	r25, r25
    1476:	c8 0f       	add	r28, r24
    1478:	d9 1f       	adc	r29, r25
    147a:	cc 0f       	add	r28, r28
    147c:	dd 1f       	adc	r29, r29
    147e:	c3 57       	subi	r28, 0x73	; 115
    1480:	dd 4f       	sbci	r29, 0xFD	; 253
    1482:	8f ef       	ldi	r24, 0xFF	; 255
    1484:	9f ef       	ldi	r25, 0xFF	; 255
    1486:	99 83       	std	Y+1, r25	; 0x01
    1488:	88 83       	st	Y, r24
	//..printf("Arm %d picked %d from term[%d][%d]\n", armNo, arm[armNo], ct, side);
}
    148a:	df 91       	pop	r29
    148c:	cf 91       	pop	r28
    148e:	1f 91       	pop	r17
    1490:	0f 91       	pop	r16
    1492:	08 95       	ret

00001494 <dropPickup>:
	arm[armNo] = -1;
	//..printf("Arm %d dropped %d on sort[%d]\n", armNo, sort[sortNo], sortNo);
}

void dropPickup(int a1)
{
    1494:	cf 93       	push	r28
    1496:	df 93       	push	r29
	int a2 = (a1 + 1) % 2;
    1498:	9c 01       	movw	r18, r24
    149a:	2f 5f       	subi	r18, 0xFF	; 255
    149c:	3f 4f       	sbci	r19, 0xFF	; 255
    149e:	21 70       	andi	r18, 0x01	; 1
    14a0:	30 78       	andi	r19, 0x80	; 128
    14a2:	33 23       	and	r19, r19
    14a4:	34 f4       	brge	.+12     	; 0x14b2 <dropPickup+0x1e>
    14a6:	21 50       	subi	r18, 0x01	; 1
    14a8:	31 09       	sbc	r19, r1
    14aa:	2e 6f       	ori	r18, 0xFE	; 254
    14ac:	3f 6f       	ori	r19, 0xFF	; 255
    14ae:	2f 5f       	subi	r18, 0xFF	; 255
    14b0:	3f 4f       	sbci	r19, 0xFF	; 255
    14b2:	d2 2f       	mov	r29, r18
    14b4:	c3 2f       	mov	r28, r19
	if ((term[ct][a2] == color[ct] || term[ct][a2] != color[adj]) && (term[ct][a1] != color[ct] && term[ct][a1] != -1))
    14b6:	e0 91 89 02 	lds	r30, 0x0289
    14ba:	f0 91 8a 02 	lds	r31, 0x028A
    14be:	af 01       	movw	r20, r30
    14c0:	44 0f       	add	r20, r20
    14c2:	55 1f       	adc	r21, r21
    14c4:	24 0f       	add	r18, r20
    14c6:	35 1f       	adc	r19, r21
    14c8:	d9 01       	movw	r26, r18
    14ca:	aa 0f       	add	r26, r26
    14cc:	bb 1f       	adc	r27, r27
    14ce:	a3 57       	subi	r26, 0x73	; 115
    14d0:	bd 4f       	sbci	r27, 0xFD	; 253
    14d2:	2d 91       	ld	r18, X+
    14d4:	3c 91       	ld	r19, X
    14d6:	da 01       	movw	r26, r20
    14d8:	a3 56       	subi	r26, 0x63	; 99
    14da:	bd 4f       	sbci	r27, 0xFD	; 253
    14dc:	4d 91       	ld	r20, X+
    14de:	5c 91       	ld	r21, X
    14e0:	24 17       	cp	r18, r20
    14e2:	35 07       	cpc	r19, r21
    14e4:	69 f0       	breq	.+26     	; 0x1500 <dropPickup+0x6c>
    14e6:	a0 91 ad 02 	lds	r26, 0x02AD
    14ea:	b0 91 ae 02 	lds	r27, 0x02AE
    14ee:	aa 0f       	add	r26, r26
    14f0:	bb 1f       	adc	r27, r27
    14f2:	a3 56       	subi	r26, 0x63	; 99
    14f4:	bd 4f       	sbci	r27, 0xFD	; 253
    14f6:	6d 91       	ld	r22, X+
    14f8:	7c 91       	ld	r23, X
    14fa:	26 17       	cp	r18, r22
    14fc:	37 07       	cpc	r19, r23
    14fe:	a9 f0       	breq	.+42     	; 0x152a <dropPickup+0x96>
    1500:	ee 0f       	add	r30, r30
    1502:	ff 1f       	adc	r31, r31
    1504:	e8 0f       	add	r30, r24
    1506:	f9 1f       	adc	r31, r25
    1508:	ee 0f       	add	r30, r30
    150a:	ff 1f       	adc	r31, r31
    150c:	e3 57       	subi	r30, 0x73	; 115
    150e:	fd 4f       	sbci	r31, 0xFD	; 253
    1510:	01 90       	ld	r0, Z+
    1512:	f0 81       	ld	r31, Z
    1514:	e0 2d       	mov	r30, r0
    1516:	4e 17       	cp	r20, r30
    1518:	5f 07       	cpc	r21, r31
    151a:	39 f0       	breq	.+14     	; 0x152a <dropPickup+0x96>
    151c:	31 96       	adiw	r30, 0x01	; 1
    151e:	29 f0       	breq	.+10     	; 0x152a <dropPickup+0x96>
	pickNode(a2, a1);
    1520:	bc 01       	movw	r22, r24
    1522:	8d 2f       	mov	r24, r29
    1524:	9c 2f       	mov	r25, r28
    1526:	82 df       	rcall	.-252    	; 0x142c <pickNode>
    1528:	0b c0       	rjmp	.+22     	; 0x1540 <dropPickup+0xac>
	else		if (term[ct][a2] != color[ct] && term[ct][a2] != -1)
    152a:	24 17       	cp	r18, r20
    152c:	35 07       	cpc	r19, r21
    152e:	41 f0       	breq	.+16     	; 0x1540 <dropPickup+0xac>
    1530:	2f 3f       	cpi	r18, 0xFF	; 255
    1532:	3f 4f       	sbci	r19, 0xFF	; 255
    1534:	29 f0       	breq	.+10     	; 0x1540 <dropPickup+0xac>
	pickNode(a2, a2);
    1536:	6d 2f       	mov	r22, r29
    1538:	7c 2f       	mov	r23, r28
    153a:	8d 2f       	mov	r24, r29
    153c:	9c 2f       	mov	r25, r28
    153e:	76 df       	rcall	.-276    	; 0x142c <pickNode>
}
    1540:	df 91       	pop	r29
    1542:	cf 91       	pop	r28
    1544:	08 95       	ret

00001546 <pickSort>:
	buzzer_off();	
}


void pickSort(int armNo, int sortNo)
{
    1546:	0f 93       	push	r16
    1548:	1f 93       	push	r17
    154a:	cf 93       	push	r28
    154c:	df 93       	push	r29
    154e:	ec 01       	movw	r28, r24
    1550:	8b 01       	movw	r16, r22
	lcd_print(2,10,armNo,1);
    1552:	21 e0       	ldi	r18, 0x01	; 1
    1554:	30 e0       	ldi	r19, 0x00	; 0
    1556:	ac 01       	movw	r20, r24
    1558:	6a e0       	ldi	r22, 0x0A	; 10
    155a:	82 e0       	ldi	r24, 0x02	; 2
    155c:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
	lcd_print(2,12,sortNo,1);
    1560:	21 e0       	ldi	r18, 0x01	; 1
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	a8 01       	movw	r20, r16
    1566:	6c e0       	ldi	r22, 0x0C	; 12
    1568:	82 e0       	ldi	r24, 0x02	; 2
    156a:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
	buzzer();
    156e:	0d dd       	rcall	.-1510   	; 0xf8a <buzzer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1570:	2f ef       	ldi	r18, 0xFF	; 255
    1572:	8f ef       	ldi	r24, 0xFF	; 255
    1574:	9c e2       	ldi	r25, 0x2C	; 44
    1576:	21 50       	subi	r18, 0x01	; 1
    1578:	80 40       	sbci	r24, 0x00	; 0
    157a:	90 40       	sbci	r25, 0x00	; 0
    157c:	e1 f7       	brne	.-8      	; 0x1576 <pickSort+0x30>
    157e:	00 c0       	rjmp	.+0      	; 0x1580 <pickSort+0x3a>
    1580:	00 00       	nop
	_delay_ms(1000);
	arm[armNo] = sort[sortNo];
    1582:	fe 01       	movw	r30, r28
    1584:	ee 0f       	add	r30, r30
    1586:	ff 1f       	adc	r31, r31
    1588:	ef 54       	subi	r30, 0x4F	; 79
    158a:	fd 4f       	sbci	r31, 0xFD	; 253
    158c:	d8 01       	movw	r26, r16
    158e:	aa 0f       	add	r26, r26
    1590:	bb 1f       	adc	r27, r27
    1592:	ab 57       	subi	r26, 0x7B	; 123
    1594:	bd 4f       	sbci	r27, 0xFD	; 253
    1596:	8d 91       	ld	r24, X+
    1598:	9c 91       	ld	r25, X
    159a:	91 83       	std	Z+1, r25	; 0x01
    159c:	80 83       	st	Z, r24
	if (((armNo == sortNo) && dir == 0) || ((armNo != sortNo) && dir == 2))
    159e:	c0 17       	cp	r28, r16
    15a0:	d1 07       	cpc	r29, r17
    15a2:	39 f4       	brne	.+14     	; 0x15b2 <pickSort+0x6c>
    15a4:	80 91 52 02 	lds	r24, 0x0252
    15a8:	90 91 53 02 	lds	r25, 0x0253
    15ac:	89 2b       	or	r24, r25
    15ae:	49 f4       	brne	.+18     	; 0x15c2 <pickSort+0x7c>
    15b0:	06 c0       	rjmp	.+12     	; 0x15be <pickSort+0x78>
    15b2:	80 91 52 02 	lds	r24, 0x0252
    15b6:	90 91 53 02 	lds	r25, 0x0253
    15ba:	02 97       	sbiw	r24, 0x02	; 2
    15bc:	11 f4       	brne	.+4      	; 0x15c2 <pickSort+0x7c>
	turn();
    15be:	3c da       	rcall	.-2952   	; 0xa38 <turn>
    15c0:	0c c0       	rjmp	.+24     	; 0x15da <pickSort+0x94>
	else
	{
		if (dir == 1 || dir == 3)
    15c2:	80 91 52 02 	lds	r24, 0x0252
    15c6:	90 91 53 02 	lds	r25, 0x0253
    15ca:	8d 7f       	andi	r24, 0xFD	; 253
    15cc:	01 97       	sbiw	r24, 0x01	; 1
    15ce:	29 f4       	brne	.+10     	; 0x15da <pickSort+0x94>
		{
			if (armNo == 0)
    15d0:	20 97       	sbiw	r28, 0x00	; 0
    15d2:	11 f4       	brne	.+4      	; 0x15d8 <pickSort+0x92>
			turnLeft();
    15d4:	14 da       	rcall	.-3032   	; 0x9fe <turnLeft>
    15d6:	01 c0       	rjmp	.+2      	; 0x15da <pickSort+0x94>
			else turnRight();
    15d8:	f5 d9       	rcall	.-3094   	; 0x9c4 <turnRight>
		}
	}
	pick(armNo);
    15da:	ce 01       	movw	r24, r28
    15dc:	05 df       	rcall	.-502    	; 0x13e8 <pick>
	sort[sortNo] = -1;
    15de:	f8 01       	movw	r30, r16
    15e0:	ee 0f       	add	r30, r30
    15e2:	ff 1f       	adc	r31, r31
    15e4:	eb 57       	subi	r30, 0x7B	; 123
    15e6:	fd 4f       	sbci	r31, 0xFD	; 253
    15e8:	8f ef       	ldi	r24, 0xFF	; 255
    15ea:	9f ef       	ldi	r25, 0xFF	; 255
    15ec:	91 83       	std	Z+1, r25	; 0x01
    15ee:	80 83       	st	Z, r24
	//..printf("Arm %d picked %d from sort[%d]\n", armNo, arm[armNo], sortNo);
	lcd("exit picksort");
    15f0:	81 e2       	ldi	r24, 0x21	; 33
    15f2:	92 e0       	ldi	r25, 0x02	; 2
    15f4:	df de       	rcall	.-578    	; 0x13b4 <lcd>
}
    15f6:	df 91       	pop	r29
    15f8:	cf 91       	pop	r28
    15fa:	1f 91       	pop	r17
    15fc:	0f 91       	pop	r16
    15fe:	08 95       	ret

00001600 <drop>:
		}
	}
}

void drop(int side)	//TODO delay
{
    1600:	cf 93       	push	r28
    1602:	df 93       	push	r29
    1604:	ec 01       	movw	r28, r24
	if(side==0)
    1606:	00 97       	sbiw	r24, 0x00	; 0
    1608:	21 f4       	brne	.+8      	; 0x1612 <drop+0x12>
	lcd("dropRight");
    160a:	8f e2       	ldi	r24, 0x2F	; 47
    160c:	92 e0       	ldi	r25, 0x02	; 2
    160e:	d2 de       	rcall	.-604    	; 0x13b4 <lcd>
    1610:	03 c0       	rjmp	.+6      	; 0x1618 <drop+0x18>
	else
	lcd("dropLeft");
    1612:	89 e3       	ldi	r24, 0x39	; 57
    1614:	92 e0       	ldi	r25, 0x02	; 2
    1616:	ce de       	rcall	.-612    	; 0x13b4 <lcd>
	elevate(0, side);//lower
    1618:	6c 2f       	mov	r22, r28
    161a:	80 e0       	ldi	r24, 0x00	; 0
    161c:	89 dc       	rcall	.-1774   	; 0xf30 <elevate>
	open(side);
    161e:	8c 2f       	mov	r24, r28
    1620:	94 dc       	rcall	.-1752   	; 0xf4a <open>
	elevate(45, side);//mid
    1622:	6c 2f       	mov	r22, r28
    1624:	8d e2       	ldi	r24, 0x2D	; 45
    1626:	84 dc       	rcall	.-1784   	; 0xf30 <elevate>
	close(side);
    1628:	8c 2f       	mov	r24, r28
    162a:	9f dc       	rcall	.-1730   	; 0xf6a <close>
	armCount++;
    162c:	80 91 02 02 	lds	r24, 0x0202
    1630:	90 91 03 02 	lds	r25, 0x0203
    1634:	01 96       	adiw	r24, 0x01	; 1
    1636:	90 93 03 02 	sts	0x0203, r25
    163a:	80 93 02 02 	sts	0x0202, r24
}
    163e:	df 91       	pop	r29
    1640:	cf 91       	pop	r28
    1642:	08 95       	ret

00001644 <nodeDrop>:
void nodeDrop(int armNo, int side)
{
    1644:	0f 93       	push	r16
    1646:	1f 93       	push	r17
    1648:	cf 93       	push	r28
    164a:	df 93       	push	r29
    164c:	ec 01       	movw	r28, r24
	term[ct][side] = arm[armNo];
    164e:	e0 91 89 02 	lds	r30, 0x0289
    1652:	f0 91 8a 02 	lds	r31, 0x028A
    1656:	ee 0f       	add	r30, r30
    1658:	ff 1f       	adc	r31, r31
    165a:	e6 0f       	add	r30, r22
    165c:	f7 1f       	adc	r31, r23
    165e:	ee 0f       	add	r30, r30
    1660:	ff 1f       	adc	r31, r31
    1662:	e3 57       	subi	r30, 0x73	; 115
    1664:	fd 4f       	sbci	r31, 0xFD	; 253
    1666:	8c 01       	movw	r16, r24
    1668:	00 0f       	add	r16, r16
    166a:	11 1f       	adc	r17, r17
    166c:	0f 54       	subi	r16, 0x4F	; 79
    166e:	1d 4f       	sbci	r17, 0xFD	; 253
    1670:	d8 01       	movw	r26, r16
    1672:	8d 91       	ld	r24, X+
    1674:	9c 91       	ld	r25, X
    1676:	91 83       	std	Z+1, r25	; 0x01
    1678:	80 83       	st	Z, r24
	position(armNo,side);
    167a:	ce 01       	movw	r24, r28
    167c:	6f dd       	rcall	.-1314   	; 0x115c <position>
	drop(armNo);
    167e:	ce 01       	movw	r24, r28
    1680:	bf df       	rcall	.-130    	; 0x1600 <drop>
	arm[armNo] = -1;
    1682:	8f ef       	ldi	r24, 0xFF	; 255
    1684:	9f ef       	ldi	r25, 0xFF	; 255
    1686:	f8 01       	movw	r30, r16
    1688:	91 83       	std	Z+1, r25	; 0x01
    168a:	80 83       	st	Z, r24
	//printf("Arm %d dropped %d on term[%d][%d]\n", armNo, term[ct][side], ct, side);
	sorted++;
    168c:	80 91 58 02 	lds	r24, 0x0258
    1690:	90 91 59 02 	lds	r25, 0x0259
    1694:	01 96       	adiw	r24, 0x01	; 1
    1696:	90 93 59 02 	sts	0x0259, r25
    169a:	80 93 58 02 	sts	0x0258, r24
}
    169e:	df 91       	pop	r29
    16a0:	cf 91       	pop	r28
    16a2:	1f 91       	pop	r17
    16a4:	0f 91       	pop	r16
    16a6:	08 95       	ret

000016a8 <sortDrop>:
void sortDrop(int armNo, int sortNo)
{
    16a8:	cf 93       	push	r28
    16aa:	df 93       	push	r29
    16ac:	ec 01       	movw	r28, r24
	sort[sortNo] = arm[armNo];
    16ae:	fb 01       	movw	r30, r22
    16b0:	ee 0f       	add	r30, r30
    16b2:	ff 1f       	adc	r31, r31
    16b4:	eb 57       	subi	r30, 0x7B	; 123
    16b6:	fd 4f       	sbci	r31, 0xFD	; 253
    16b8:	dc 01       	movw	r26, r24
    16ba:	aa 0f       	add	r26, r26
    16bc:	bb 1f       	adc	r27, r27
    16be:	af 54       	subi	r26, 0x4F	; 79
    16c0:	bd 4f       	sbci	r27, 0xFD	; 253
    16c2:	8d 91       	ld	r24, X+
    16c4:	9c 91       	ld	r25, X
    16c6:	91 83       	std	Z+1, r25	; 0x01
    16c8:	80 83       	st	Z, r24
	if (((armNo == sortNo) && dir == 0) || ((armNo != sortNo) && dir == 2))
    16ca:	c6 17       	cp	r28, r22
    16cc:	d7 07       	cpc	r29, r23
    16ce:	39 f4       	brne	.+14     	; 0x16de <sortDrop+0x36>
    16d0:	80 91 52 02 	lds	r24, 0x0252
    16d4:	90 91 53 02 	lds	r25, 0x0253
    16d8:	89 2b       	or	r24, r25
    16da:	49 f4       	brne	.+18     	; 0x16ee <sortDrop+0x46>
    16dc:	06 c0       	rjmp	.+12     	; 0x16ea <sortDrop+0x42>
    16de:	80 91 52 02 	lds	r24, 0x0252
    16e2:	90 91 53 02 	lds	r25, 0x0253
    16e6:	02 97       	sbiw	r24, 0x02	; 2
    16e8:	11 f4       	brne	.+4      	; 0x16ee <sortDrop+0x46>
	turn();
    16ea:	a6 d9       	rcall	.-3252   	; 0xa38 <turn>
    16ec:	0c c0       	rjmp	.+24     	; 0x1706 <sortDrop+0x5e>
	else
	{
		if (dir == 1 || dir == 3)
    16ee:	80 91 52 02 	lds	r24, 0x0252
    16f2:	90 91 53 02 	lds	r25, 0x0253
    16f6:	8d 7f       	andi	r24, 0xFD	; 253
    16f8:	01 97       	sbiw	r24, 0x01	; 1
    16fa:	29 f4       	brne	.+10     	; 0x1706 <sortDrop+0x5e>
		{
			if (armNo == 0)
    16fc:	20 97       	sbiw	r28, 0x00	; 0
    16fe:	11 f4       	brne	.+4      	; 0x1704 <sortDrop+0x5c>
			turnLeft();
    1700:	7e d9       	rcall	.-3332   	; 0x9fe <turnLeft>
    1702:	01 c0       	rjmp	.+2      	; 0x1706 <sortDrop+0x5e>
			else turnRight();
    1704:	5f d9       	rcall	.-3394   	; 0x9c4 <turnRight>
		}
	}
	drop(armNo);
    1706:	ce 01       	movw	r24, r28
    1708:	7b df       	rcall	.-266    	; 0x1600 <drop>
	arm[armNo] = -1;
    170a:	cc 0f       	add	r28, r28
    170c:	dd 1f       	adc	r29, r29
    170e:	cf 54       	subi	r28, 0x4F	; 79
    1710:	dd 4f       	sbci	r29, 0xFD	; 253
    1712:	8f ef       	ldi	r24, 0xFF	; 255
    1714:	9f ef       	ldi	r25, 0xFF	; 255
    1716:	99 83       	std	Y+1, r25	; 0x01
    1718:	88 83       	st	Y, r24
	//..printf("Arm %d dropped %d on sort[%d]\n", armNo, sort[sortNo], sortNo);
}
    171a:	df 91       	pop	r29
    171c:	cf 91       	pop	r28
    171e:	08 95       	ret

00001720 <terminalCheck1>:
		front();
		ot = ct % 2 + 4;
	}
}
void terminalCheck1()
{
    1720:	cf 93       	push	r28
    1722:	df 93       	push	r29
	if (ct != ot)
    1724:	80 91 89 02 	lds	r24, 0x0289
    1728:	90 91 8a 02 	lds	r25, 0x028A
    172c:	20 91 54 02 	lds	r18, 0x0254
    1730:	30 91 55 02 	lds	r19, 0x0255
    1734:	82 17       	cp	r24, r18
    1736:	93 07       	cpc	r25, r19
    1738:	f9 f0       	breq	.+62     	; 0x1778 <terminalCheck1+0x58>





		if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    173a:	82 30       	cpi	r24, 0x02	; 2
    173c:	91 05       	cpc	r25, r1
    173e:	38 f4       	brcc	.+14     	; 0x174e <terminalCheck1+0x2e>
    1740:	20 91 52 02 	lds	r18, 0x0252
    1744:	30 91 53 02 	lds	r19, 0x0253
    1748:	22 30       	cpi	r18, 0x02	; 2
    174a:	31 05       	cpc	r19, r1
    174c:	49 f0       	breq	.+18     	; 0x1760 <terminalCheck1+0x40>
    174e:	02 97       	sbiw	r24, 0x02	; 2
    1750:	02 97       	sbiw	r24, 0x02	; 2
    1752:	48 f4       	brcc	.+18     	; 0x1766 <terminalCheck1+0x46>
    1754:	80 91 52 02 	lds	r24, 0x0252
    1758:	90 91 53 02 	lds	r25, 0x0253
    175c:	89 2b       	or	r24, r25
    175e:	19 f4       	brne	.+6      	; 0x1766 <terminalCheck1+0x46>

			back();
    1760:	0e 94 89 02 	call	0x512	; 0x512 <back>
    1764:	01 c0       	rjmp	.+2      	; 0x1768 <terminalCheck1+0x48>
		else front();
    1766:	d9 db       	rcall	.-2126   	; 0xf1a <front>
		ot = ct;
    1768:	80 91 89 02 	lds	r24, 0x0289
    176c:	90 91 8a 02 	lds	r25, 0x028A
    1770:	90 93 55 02 	sts	0x0255, r25
    1774:	80 93 54 02 	sts	0x0254, r24
	}


	turnRight();
    1778:	25 d9       	rcall	.-3510   	; 0x9c4 <turnRight>
	term[ct][0]=scan();
    177a:	c0 91 89 02 	lds	r28, 0x0289
    177e:	d0 91 8a 02 	lds	r29, 0x028A
    1782:	93 d9       	rcall	.-3290   	; 0xaaa <scan>
    1784:	cc 0f       	add	r28, r28
    1786:	dd 1f       	adc	r29, r29
    1788:	cc 0f       	add	r28, r28
    178a:	dd 1f       	adc	r29, r29
    178c:	c3 57       	subi	r28, 0x73	; 115
    178e:	dd 4f       	sbci	r29, 0xFD	; 253
    1790:	99 83       	std	Y+1, r25	; 0x01
    1792:	88 83       	st	Y, r24
	lcd_print(1,1,1111,4);
    1794:	24 e0       	ldi	r18, 0x04	; 4
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	47 e5       	ldi	r20, 0x57	; 87
    179a:	54 e0       	ldi	r21, 0x04	; 4
    179c:	61 e0       	ldi	r22, 0x01	; 1
    179e:	81 e0       	ldi	r24, 0x01	; 1
    17a0:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
	//printf("Enter term[%d][%d]\n", ct, 0);
	//scanf("%d", &term[ct][0]);


	
	lcd((char*)term[ct][0]);
    17a4:	e0 91 89 02 	lds	r30, 0x0289
    17a8:	f0 91 8a 02 	lds	r31, 0x028A
    17ac:	ee 0f       	add	r30, r30
    17ae:	ff 1f       	adc	r31, r31
    17b0:	ee 0f       	add	r30, r30
    17b2:	ff 1f       	adc	r31, r31
    17b4:	e3 57       	subi	r30, 0x73	; 115
    17b6:	fd 4f       	sbci	r31, 0xFD	; 253
    17b8:	80 81       	ld	r24, Z
    17ba:	91 81       	ldd	r25, Z+1	; 0x01
    17bc:	fb dd       	rcall	.-1034   	; 0x13b4 <lcd>
	if (term[ct][0] == -1 || term[ct][0] == color[ct])
    17be:	20 91 89 02 	lds	r18, 0x0289
    17c2:	30 91 8a 02 	lds	r19, 0x028A
    17c6:	f9 01       	movw	r30, r18
    17c8:	ee 0f       	add	r30, r30
    17ca:	ff 1f       	adc	r31, r31
    17cc:	ee 0f       	add	r30, r30
    17ce:	ff 1f       	adc	r31, r31
    17d0:	e3 57       	subi	r30, 0x73	; 115
    17d2:	fd 4f       	sbci	r31, 0xFD	; 253
    17d4:	80 81       	ld	r24, Z
    17d6:	91 81       	ldd	r25, Z+1	; 0x01
    17d8:	8f 3f       	cpi	r24, 0xFF	; 255
    17da:	4f ef       	ldi	r20, 0xFF	; 255
    17dc:	94 07       	cpc	r25, r20
    17de:	51 f0       	breq	.+20     	; 0x17f4 <terminalCheck1+0xd4>
    17e0:	f9 01       	movw	r30, r18
    17e2:	ee 0f       	add	r30, r30
    17e4:	ff 1f       	adc	r31, r31
    17e6:	e3 56       	subi	r30, 0x63	; 99
    17e8:	fd 4f       	sbci	r31, 0xFD	; 253
    17ea:	20 81       	ld	r18, Z
    17ec:	31 81       	ldd	r19, Z+1	; 0x01
    17ee:	82 17       	cp	r24, r18
    17f0:	93 07       	cpc	r25, r19
    17f2:	49 f4       	brne	.+18     	; 0x1806 <terminalCheck1+0xe6>
	total--;
    17f4:	80 91 00 02 	lds	r24, 0x0200
    17f8:	90 91 01 02 	lds	r25, 0x0201
    17fc:	01 97       	sbiw	r24, 0x01	; 1
    17fe:	90 93 01 02 	sts	0x0201, r25
    1802:	80 93 00 02 	sts	0x0200, r24
}
    1806:	df 91       	pop	r29
    1808:	cf 91       	pop	r28
    180a:	08 95       	ret

0000180c <pickup>:
	sort[sortNo] = -1;
	//..printf("Arm %d picked %d from sort[%d]\n", armNo, arm[armNo], sortNo);
	lcd("exit picksort");
}
void pickup()
{
    180c:	ef 92       	push	r14
    180e:	ff 92       	push	r15
    1810:	0f 93       	push	r16
    1812:	1f 93       	push	r17
    1814:	cf 93       	push	r28
    1816:	df 93       	push	r29
	
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    1818:	20 91 89 02 	lds	r18, 0x0289
    181c:	30 91 8a 02 	lds	r19, 0x028A
    1820:	22 30       	cpi	r18, 0x02	; 2
    1822:	31 05       	cpc	r19, r1
    1824:	30 f4       	brcc	.+12     	; 0x1832 <pickup+0x26>
    1826:	80 91 52 02 	lds	r24, 0x0252
    182a:	90 91 53 02 	lds	r25, 0x0253
    182e:	02 97       	sbiw	r24, 0x02	; 2
    1830:	79 f0       	breq	.+30     	; 0x1850 <pickup+0x44>
    1832:	c9 01       	movw	r24, r18
    1834:	02 97       	sbiw	r24, 0x02	; 2
    1836:	02 97       	sbiw	r24, 0x02	; 2
    1838:	80 f4       	brcc	.+32     	; 0x185a <pickup+0x4e>
    183a:	80 91 52 02 	lds	r24, 0x0252
    183e:	90 91 53 02 	lds	r25, 0x0253
    1842:	89 2b       	or	r24, r25
    1844:	79 f0       	breq	.+30     	; 0x1864 <pickup+0x58>
	lcd("exit picksort");
}
void pickup()
{
	
	int arm0 = 0, arm1 = 1;
    1846:	c1 e0       	ldi	r28, 0x01	; 1
    1848:	d0 e0       	ldi	r29, 0x00	; 0
    184a:	00 e0       	ldi	r16, 0x00	; 0
    184c:	10 e0       	ldi	r17, 0x00	; 0
    184e:	0e c0       	rjmp	.+28     	; 0x186c <pickup+0x60>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    1850:	c0 e0       	ldi	r28, 0x00	; 0
    1852:	d0 e0       	ldi	r29, 0x00	; 0
{
	
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    1854:	01 e0       	ldi	r16, 0x01	; 1
    1856:	10 e0       	ldi	r17, 0x00	; 0
    1858:	09 c0       	rjmp	.+18     	; 0x186c <pickup+0x60>
	lcd("exit picksort");
}
void pickup()
{
	
	int arm0 = 0, arm1 = 1;
    185a:	c1 e0       	ldi	r28, 0x01	; 1
    185c:	d0 e0       	ldi	r29, 0x00	; 0
    185e:	00 e0       	ldi	r16, 0x00	; 0
    1860:	10 e0       	ldi	r17, 0x00	; 0
    1862:	04 c0       	rjmp	.+8      	; 0x186c <pickup+0x60>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    1864:	c0 e0       	ldi	r28, 0x00	; 0
    1866:	d0 e0       	ldi	r29, 0x00	; 0
{
	
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    1868:	01 e0       	ldi	r16, 0x01	; 1
    186a:	10 e0       	ldi	r17, 0x00	; 0
		arm1 = 0;
	}
	if (visited[ct] == 0)
    186c:	f9 01       	movw	r30, r18
    186e:	ee 0f       	add	r30, r30
    1870:	ff 1f       	adc	r31, r31
    1872:	ea 59       	subi	r30, 0x9A	; 154
    1874:	fd 4f       	sbci	r31, 0xFD	; 253
    1876:	40 81       	ld	r20, Z
    1878:	51 81       	ldd	r21, Z+1	; 0x01
    187a:	45 2b       	or	r20, r21
    187c:	09 f0       	breq	.+2      	; 0x1880 <pickup+0x74>
    187e:	24 c2       	rjmp	.+1096   	; 0x1cc8 <pickup+0x4bc>
	{
		if (term[ct][0] == -2)
    1880:	f9 01       	movw	r30, r18
    1882:	ee 0f       	add	r30, r30
    1884:	ff 1f       	adc	r31, r31
    1886:	ee 0f       	add	r30, r30
    1888:	ff 1f       	adc	r31, r31
    188a:	e3 57       	subi	r30, 0x73	; 115
    188c:	fd 4f       	sbci	r31, 0xFD	; 253
    188e:	80 81       	ld	r24, Z
    1890:	91 81       	ldd	r25, Z+1	; 0x01
    1892:	02 96       	adiw	r24, 0x02	; 2
    1894:	19 f4       	brne	.+6      	; 0x189c <pickup+0x90>
		{
			terminalCheck1();
    1896:	44 df       	rcall	.-376    	; 0x1720 <terminalCheck1>
			terminalCheck2();
    1898:	e8 db       	rcall	.-2096   	; 0x106a <terminalCheck2>
    189a:	01 c0       	rjmp	.+2      	; 0x189e <pickup+0x92>
		}
		else
		terminalCheck2();
    189c:	e6 db       	rcall	.-2100   	; 0x106a <terminalCheck2>
		if ((term[ct][0] != color[ct] && term[ct][0] != -1) || (term[ct][1] != color[ct] && term[ct][1] != -1))
    189e:	20 91 89 02 	lds	r18, 0x0289
    18a2:	30 91 8a 02 	lds	r19, 0x028A
    18a6:	f9 01       	movw	r30, r18
    18a8:	ee 0f       	add	r30, r30
    18aa:	ff 1f       	adc	r31, r31
    18ac:	ee 0f       	add	r30, r30
    18ae:	ff 1f       	adc	r31, r31
    18b0:	e3 57       	subi	r30, 0x73	; 115
    18b2:	fd 4f       	sbci	r31, 0xFD	; 253
    18b4:	80 81       	ld	r24, Z
    18b6:	91 81       	ldd	r25, Z+1	; 0x01
    18b8:	f9 01       	movw	r30, r18
    18ba:	ee 0f       	add	r30, r30
    18bc:	ff 1f       	adc	r31, r31
    18be:	e3 56       	subi	r30, 0x63	; 99
    18c0:	fd 4f       	sbci	r31, 0xFD	; 253
    18c2:	40 81       	ld	r20, Z
    18c4:	51 81       	ldd	r21, Z+1	; 0x01
    18c6:	84 17       	cp	r24, r20
    18c8:	95 07       	cpc	r25, r21
    18ca:	21 f0       	breq	.+8      	; 0x18d4 <pickup+0xc8>
    18cc:	8f 3f       	cpi	r24, 0xFF	; 255
    18ce:	6f ef       	ldi	r22, 0xFF	; 255
    18d0:	96 07       	cpc	r25, r22
    18d2:	89 f4       	brne	.+34     	; 0x18f6 <pickup+0xea>
    18d4:	f9 01       	movw	r30, r18
    18d6:	ee 0f       	add	r30, r30
    18d8:	ff 1f       	adc	r31, r31
    18da:	ee 0f       	add	r30, r30
    18dc:	ff 1f       	adc	r31, r31
    18de:	e3 57       	subi	r30, 0x73	; 115
    18e0:	fd 4f       	sbci	r31, 0xFD	; 253
    18e2:	62 81       	ldd	r22, Z+2	; 0x02
    18e4:	73 81       	ldd	r23, Z+3	; 0x03
    18e6:	46 17       	cp	r20, r22
    18e8:	57 07       	cpc	r21, r23
    18ea:	09 f4       	brne	.+2      	; 0x18ee <pickup+0xe2>
    18ec:	ed c1       	rjmp	.+986    	; 0x1cc8 <pickup+0x4bc>
    18ee:	6f 3f       	cpi	r22, 0xFF	; 255
    18f0:	7f 4f       	sbci	r23, 0xFF	; 255
    18f2:	09 f4       	brne	.+2      	; 0x18f6 <pickup+0xea>
    18f4:	e9 c1       	rjmp	.+978    	; 0x1cc8 <pickup+0x4bc>
		{
			if (armCount == 2)
    18f6:	60 91 02 02 	lds	r22, 0x0202
    18fa:	70 91 03 02 	lds	r23, 0x0203
    18fe:	62 30       	cpi	r22, 0x02	; 2
    1900:	71 05       	cpc	r23, r1
    1902:	09 f0       	breq	.+2      	; 0x1906 <pickup+0xfa>
    1904:	af c0       	rjmp	.+350    	; 0x1a64 <pickup+0x258>
			{
				if (term[ct][0] == color[adj] || term[ct][1] == color[adj])
    1906:	e0 91 ad 02 	lds	r30, 0x02AD
    190a:	f0 91 ae 02 	lds	r31, 0x02AE
    190e:	df 01       	movw	r26, r30
    1910:	aa 0f       	add	r26, r26
    1912:	bb 1f       	adc	r27, r27
    1914:	a3 56       	subi	r26, 0x63	; 99
    1916:	bd 4f       	sbci	r27, 0xFD	; 253
    1918:	6d 91       	ld	r22, X+
    191a:	7c 91       	ld	r23, X
    191c:	86 17       	cp	r24, r22
    191e:	97 07       	cpc	r25, r23
    1920:	79 f0       	breq	.+30     	; 0x1940 <pickup+0x134>
    1922:	d9 01       	movw	r26, r18
    1924:	aa 0f       	add	r26, r26
    1926:	bb 1f       	adc	r27, r27
    1928:	aa 0f       	add	r26, r26
    192a:	bb 1f       	adc	r27, r27
    192c:	a3 57       	subi	r26, 0x73	; 115
    192e:	bd 4f       	sbci	r27, 0xFD	; 253
    1930:	12 96       	adiw	r26, 0x02	; 2
    1932:	ed 90       	ld	r14, X+
    1934:	fc 90       	ld	r15, X
    1936:	13 97       	sbiw	r26, 0x03	; 3
    1938:	6e 15       	cp	r22, r14
    193a:	7f 05       	cpc	r23, r15
    193c:	59 f4       	brne	.+22     	; 0x1954 <pickup+0x148>
    193e:	05 c0       	rjmp	.+10     	; 0x194a <pickup+0x13e>
				{
					if (term[ct][0] == color[adj])
					pickNode(arm0, 0);
    1940:	60 e0       	ldi	r22, 0x00	; 0
    1942:	70 e0       	ldi	r23, 0x00	; 0
    1944:	c8 01       	movw	r24, r16
    1946:	72 dd       	rcall	.-1308   	; 0x142c <pickNode>
    1948:	8d c0       	rjmp	.+282    	; 0x1a64 <pickup+0x258>
					else	pickNode(arm1, 1);
    194a:	61 e0       	ldi	r22, 0x01	; 1
    194c:	70 e0       	ldi	r23, 0x00	; 0
    194e:	ce 01       	movw	r24, r28
    1950:	6d dd       	rcall	.-1318   	; 0x142c <pickNode>
    1952:	88 c0       	rjmp	.+272    	; 0x1a64 <pickup+0x258>
				}
				else	if ((term[ct][1] != color[ct]) && term[ct][1] != -1)
    1954:	4e 15       	cp	r20, r14
    1956:	5f 05       	cpc	r21, r15
    1958:	09 f4       	brne	.+2      	; 0x195c <pickup+0x150>
    195a:	4e c0       	rjmp	.+156    	; 0x19f8 <pickup+0x1ec>
    195c:	ef 20       	and	r14, r15
    195e:	e0 94       	com	r14
    1960:	09 f4       	brne	.+2      	; 0x1964 <pickup+0x158>
    1962:	4a c0       	rjmp	.+148    	; 0x19f8 <pickup+0x1ec>
				{
					if (term[ct][0] != color[ct] && term[ct][0] != -1)
    1964:	84 17       	cp	r24, r20
    1966:	95 07       	cpc	r25, r21
    1968:	69 f0       	breq	.+26     	; 0x1984 <pickup+0x178>
    196a:	8f 3f       	cpi	r24, 0xFF	; 255
    196c:	af ef       	ldi	r26, 0xFF	; 255
    196e:	9a 07       	cpc	r25, r26
    1970:	49 f0       	breq	.+18     	; 0x1984 <pickup+0x178>
					{
						pickNode(arm1, 1);
    1972:	61 e0       	ldi	r22, 0x01	; 1
    1974:	70 e0       	ldi	r23, 0x00	; 0
    1976:	ce 01       	movw	r24, r28
    1978:	59 dd       	rcall	.-1358   	; 0x142c <pickNode>
						pickNode(arm0, 0);
    197a:	60 e0       	ldi	r22, 0x00	; 0
    197c:	70 e0       	ldi	r23, 0x00	; 0
    197e:	c8 01       	movw	r24, r16
    1980:	55 dd       	rcall	.-1366   	; 0x142c <pickNode>
    1982:	70 c0       	rjmp	.+224    	; 0x1a64 <pickup+0x258>
					}
					else if (sort[ct % 2] == -1 || ((term[adj][0] == color[adj] || term[adj][0] == -1) || (term[adj][1] == color[adj] || term[adj][1] == -1)) || (term[ct][0] == color[ct] || term[ct][1] == color[ct]))
    1984:	21 70       	andi	r18, 0x01	; 1
    1986:	30 78       	andi	r19, 0x80	; 128
    1988:	33 23       	and	r19, r19
    198a:	34 f4       	brge	.+12     	; 0x1998 <pickup+0x18c>
    198c:	21 50       	subi	r18, 0x01	; 1
    198e:	31 09       	sbc	r19, r1
    1990:	2e 6f       	ori	r18, 0xFE	; 254
    1992:	3f 6f       	ori	r19, 0xFF	; 255
    1994:	2f 5f       	subi	r18, 0xFF	; 255
    1996:	3f 4f       	sbci	r19, 0xFF	; 255
    1998:	d9 01       	movw	r26, r18
    199a:	aa 0f       	add	r26, r26
    199c:	bb 1f       	adc	r27, r27
    199e:	ab 57       	subi	r26, 0x7B	; 123
    19a0:	bd 4f       	sbci	r27, 0xFD	; 253
    19a2:	2d 91       	ld	r18, X+
    19a4:	3c 91       	ld	r19, X
    19a6:	2f 3f       	cpi	r18, 0xFF	; 255
    19a8:	3f 4f       	sbci	r19, 0xFF	; 255
    19aa:	09 f1       	breq	.+66     	; 0x19ee <pickup+0x1e2>
    19ac:	df 01       	movw	r26, r30
    19ae:	aa 0f       	add	r26, r26
    19b0:	bb 1f       	adc	r27, r27
    19b2:	aa 0f       	add	r26, r26
    19b4:	bb 1f       	adc	r27, r27
    19b6:	a3 57       	subi	r26, 0x73	; 115
    19b8:	bd 4f       	sbci	r27, 0xFD	; 253
    19ba:	2d 91       	ld	r18, X+
    19bc:	3c 91       	ld	r19, X
    19be:	62 17       	cp	r22, r18
    19c0:	73 07       	cpc	r23, r19
    19c2:	a9 f0       	breq	.+42     	; 0x19ee <pickup+0x1e2>
    19c4:	2f 3f       	cpi	r18, 0xFF	; 255
    19c6:	3f 4f       	sbci	r19, 0xFF	; 255
    19c8:	91 f0       	breq	.+36     	; 0x19ee <pickup+0x1e2>
    19ca:	ee 0f       	add	r30, r30
    19cc:	ff 1f       	adc	r31, r31
    19ce:	ee 0f       	add	r30, r30
    19d0:	ff 1f       	adc	r31, r31
    19d2:	e3 57       	subi	r30, 0x73	; 115
    19d4:	fd 4f       	sbci	r31, 0xFD	; 253
    19d6:	22 81       	ldd	r18, Z+2	; 0x02
    19d8:	33 81       	ldd	r19, Z+3	; 0x03
    19da:	62 17       	cp	r22, r18
    19dc:	73 07       	cpc	r23, r19
    19de:	39 f0       	breq	.+14     	; 0x19ee <pickup+0x1e2>
    19e0:	2f 3f       	cpi	r18, 0xFF	; 255
    19e2:	3f 4f       	sbci	r19, 0xFF	; 255
    19e4:	21 f0       	breq	.+8      	; 0x19ee <pickup+0x1e2>
    19e6:	84 17       	cp	r24, r20
    19e8:	95 07       	cpc	r25, r21
    19ea:	09 f0       	breq	.+2      	; 0x19ee <pickup+0x1e2>
    19ec:	6d c1       	rjmp	.+730    	; 0x1cc8 <pickup+0x4bc>
					pickNode(arm1, 1);
    19ee:	61 e0       	ldi	r22, 0x01	; 1
    19f0:	70 e0       	ldi	r23, 0x00	; 0
    19f2:	ce 01       	movw	r24, r28
    19f4:	1b dd       	rcall	.-1482   	; 0x142c <pickNode>
    19f6:	36 c0       	rjmp	.+108    	; 0x1a64 <pickup+0x258>
				}
				else	if (term[ct][0] != color[ct] && term[ct][0] != -1)
    19f8:	84 17       	cp	r24, r20
    19fa:	95 07       	cpc	r25, r21
    19fc:	09 f4       	brne	.+2      	; 0x1a00 <pickup+0x1f4>
    19fe:	64 c1       	rjmp	.+712    	; 0x1cc8 <pickup+0x4bc>
    1a00:	01 96       	adiw	r24, 0x01	; 1
    1a02:	09 f4       	brne	.+2      	; 0x1a06 <pickup+0x1fa>
    1a04:	61 c1       	rjmp	.+706    	; 0x1cc8 <pickup+0x4bc>
				{
					if (sort[ct % 2] == -1 || ((term[adj][0] == color[adj] || term[adj][0] == -1) || (term[adj][1] == color[adj] || term[adj][1] == -1)))
    1a06:	21 70       	andi	r18, 0x01	; 1
    1a08:	30 78       	andi	r19, 0x80	; 128
    1a0a:	33 23       	and	r19, r19
    1a0c:	34 f4       	brge	.+12     	; 0x1a1a <pickup+0x20e>
    1a0e:	21 50       	subi	r18, 0x01	; 1
    1a10:	31 09       	sbc	r19, r1
    1a12:	2e 6f       	ori	r18, 0xFE	; 254
    1a14:	3f 6f       	ori	r19, 0xFF	; 255
    1a16:	2f 5f       	subi	r18, 0xFF	; 255
    1a18:	3f 4f       	sbci	r19, 0xFF	; 255
    1a1a:	d9 01       	movw	r26, r18
    1a1c:	aa 0f       	add	r26, r26
    1a1e:	bb 1f       	adc	r27, r27
    1a20:	ab 57       	subi	r26, 0x7B	; 123
    1a22:	bd 4f       	sbci	r27, 0xFD	; 253
    1a24:	8d 91       	ld	r24, X+
    1a26:	9c 91       	ld	r25, X
    1a28:	01 96       	adiw	r24, 0x01	; 1
    1a2a:	c1 f0       	breq	.+48     	; 0x1a5c <pickup+0x250>
    1a2c:	df 01       	movw	r26, r30
    1a2e:	aa 0f       	add	r26, r26
    1a30:	bb 1f       	adc	r27, r27
    1a32:	aa 0f       	add	r26, r26
    1a34:	bb 1f       	adc	r27, r27
    1a36:	a3 57       	subi	r26, 0x73	; 115
    1a38:	bd 4f       	sbci	r27, 0xFD	; 253
    1a3a:	8d 91       	ld	r24, X+
    1a3c:	9c 91       	ld	r25, X
    1a3e:	11 97       	sbiw	r26, 0x01	; 1
    1a40:	68 17       	cp	r22, r24
    1a42:	79 07       	cpc	r23, r25
    1a44:	59 f0       	breq	.+22     	; 0x1a5c <pickup+0x250>
    1a46:	01 96       	adiw	r24, 0x01	; 1
    1a48:	49 f0       	breq	.+18     	; 0x1a5c <pickup+0x250>
    1a4a:	fd 01       	movw	r30, r26
    1a4c:	82 81       	ldd	r24, Z+2	; 0x02
    1a4e:	93 81       	ldd	r25, Z+3	; 0x03
    1a50:	68 17       	cp	r22, r24
    1a52:	79 07       	cpc	r23, r25
    1a54:	19 f0       	breq	.+6      	; 0x1a5c <pickup+0x250>
    1a56:	01 96       	adiw	r24, 0x01	; 1
    1a58:	09 f0       	breq	.+2      	; 0x1a5c <pickup+0x250>
    1a5a:	36 c1       	rjmp	.+620    	; 0x1cc8 <pickup+0x4bc>
					pickNode(arm0, 0);
    1a5c:	60 e0       	ldi	r22, 0x00	; 0
    1a5e:	70 e0       	ldi	r23, 0x00	; 0
    1a60:	c8 01       	movw	r24, r16
    1a62:	e4 dc       	rcall	.-1592   	; 0x142c <pickNode>
				}
				else	if (term[ct][0] != color[ct] && term[ct][0] != -1)
				pickNode(arm0, 0);

			}
			if (armCount == 1)
    1a64:	80 91 02 02 	lds	r24, 0x0202
    1a68:	90 91 03 02 	lds	r25, 0x0203
    1a6c:	01 97       	sbiw	r24, 0x01	; 1
    1a6e:	09 f0       	breq	.+2      	; 0x1a72 <pickup+0x266>
    1a70:	2b c1       	rjmp	.+598    	; 0x1cc8 <pickup+0x4bc>
			{
				int a1, a2;
				if (arm[arm0] == -1)
    1a72:	f8 01       	movw	r30, r16
    1a74:	ee 0f       	add	r30, r30
    1a76:	ff 1f       	adc	r31, r31
    1a78:	ef 54       	subi	r30, 0x4F	; 79
    1a7a:	fd 4f       	sbci	r31, 0xFD	; 253
    1a7c:	80 81       	ld	r24, Z
    1a7e:	91 81       	ldd	r25, Z+1	; 0x01
    1a80:	01 96       	adiw	r24, 0x01	; 1
    1a82:	09 f4       	brne	.+2      	; 0x1a86 <pickup+0x27a>
				a1 = arm0;
    1a84:	e8 01       	movw	r28, r16
				else a1 = arm1;
				a2 = (a1 + 1) % 2;
    1a86:	be 01       	movw	r22, r28
    1a88:	6f 5f       	subi	r22, 0xFF	; 255
    1a8a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a8c:	61 70       	andi	r22, 0x01	; 1
    1a8e:	70 78       	andi	r23, 0x80	; 128
    1a90:	77 23       	and	r23, r23
    1a92:	34 f4       	brge	.+12     	; 0x1aa0 <pickup+0x294>
    1a94:	61 50       	subi	r22, 0x01	; 1
    1a96:	71 09       	sbc	r23, r1
    1a98:	6e 6f       	ori	r22, 0xFE	; 254
    1a9a:	7f 6f       	ori	r23, 0xFF	; 255
    1a9c:	6f 5f       	subi	r22, 0xFF	; 255
    1a9e:	7f 4f       	sbci	r23, 0xFF	; 255

				if (sort[ct % 2] == -1)
    1aa0:	80 91 89 02 	lds	r24, 0x0289
    1aa4:	90 91 8a 02 	lds	r25, 0x028A
    1aa8:	9c 01       	movw	r18, r24
    1aaa:	21 70       	andi	r18, 0x01	; 1
    1aac:	30 78       	andi	r19, 0x80	; 128
    1aae:	33 23       	and	r19, r19
    1ab0:	34 f4       	brge	.+12     	; 0x1abe <pickup+0x2b2>
    1ab2:	21 50       	subi	r18, 0x01	; 1
    1ab4:	31 09       	sbc	r19, r1
    1ab6:	2e 6f       	ori	r18, 0xFE	; 254
    1ab8:	3f 6f       	ori	r19, 0xFF	; 255
    1aba:	2f 5f       	subi	r18, 0xFF	; 255
    1abc:	3f 4f       	sbci	r19, 0xFF	; 255
    1abe:	f9 01       	movw	r30, r18
    1ac0:	ee 0f       	add	r30, r30
    1ac2:	ff 1f       	adc	r31, r31
    1ac4:	eb 57       	subi	r30, 0x7B	; 123
    1ac6:	fd 4f       	sbci	r31, 0xFD	; 253
    1ac8:	20 81       	ld	r18, Z
    1aca:	31 81       	ldd	r19, Z+1	; 0x01
    1acc:	2f 3f       	cpi	r18, 0xFF	; 255
    1ace:	af ef       	ldi	r26, 0xFF	; 255
    1ad0:	3a 07       	cpc	r19, r26
    1ad2:	d9 f5       	brne	.+118    	; 0x1b4a <pickup+0x33e>
				{
					if (term[ct][a1] != -1 && term[ct][a1] != color[ct])
    1ad4:	fc 01       	movw	r30, r24
    1ad6:	ee 0f       	add	r30, r30
    1ad8:	ff 1f       	adc	r31, r31
    1ada:	ec 0f       	add	r30, r28
    1adc:	fd 1f       	adc	r31, r29
    1ade:	ee 0f       	add	r30, r30
    1ae0:	ff 1f       	adc	r31, r31
    1ae2:	e3 57       	subi	r30, 0x73	; 115
    1ae4:	fd 4f       	sbci	r31, 0xFD	; 253
    1ae6:	20 81       	ld	r18, Z
    1ae8:	31 81       	ldd	r19, Z+1	; 0x01
    1aea:	2f 3f       	cpi	r18, 0xFF	; 255
    1aec:	ef ef       	ldi	r30, 0xFF	; 255
    1aee:	3e 07       	cpc	r19, r30
    1af0:	71 f0       	breq	.+28     	; 0x1b0e <pickup+0x302>
    1af2:	fc 01       	movw	r30, r24
    1af4:	ee 0f       	add	r30, r30
    1af6:	ff 1f       	adc	r31, r31
    1af8:	e3 56       	subi	r30, 0x63	; 99
    1afa:	fd 4f       	sbci	r31, 0xFD	; 253
    1afc:	40 81       	ld	r20, Z
    1afe:	51 81       	ldd	r21, Z+1	; 0x01
    1b00:	24 17       	cp	r18, r20
    1b02:	35 07       	cpc	r19, r21
    1b04:	21 f0       	breq	.+8      	; 0x1b0e <pickup+0x302>
					pickNode(a1, a1);
    1b06:	be 01       	movw	r22, r28
    1b08:	ce 01       	movw	r24, r28
    1b0a:	90 dc       	rcall	.-1760   	; 0x142c <pickNode>
    1b0c:	dd c0       	rjmp	.+442    	; 0x1cc8 <pickup+0x4bc>
					else if (term[ct][a2] != -1 && term[ct][a2] != color[ct])
    1b0e:	fc 01       	movw	r30, r24
    1b10:	ee 0f       	add	r30, r30
    1b12:	ff 1f       	adc	r31, r31
    1b14:	e6 0f       	add	r30, r22
    1b16:	f7 1f       	adc	r31, r23
    1b18:	ee 0f       	add	r30, r30
    1b1a:	ff 1f       	adc	r31, r31
    1b1c:	e3 57       	subi	r30, 0x73	; 115
    1b1e:	fd 4f       	sbci	r31, 0xFD	; 253
    1b20:	20 81       	ld	r18, Z
    1b22:	31 81       	ldd	r19, Z+1	; 0x01
    1b24:	2f 3f       	cpi	r18, 0xFF	; 255
    1b26:	4f ef       	ldi	r20, 0xFF	; 255
    1b28:	34 07       	cpc	r19, r20
    1b2a:	09 f4       	brne	.+2      	; 0x1b2e <pickup+0x322>
    1b2c:	cd c0       	rjmp	.+410    	; 0x1cc8 <pickup+0x4bc>
    1b2e:	fc 01       	movw	r30, r24
    1b30:	ee 0f       	add	r30, r30
    1b32:	ff 1f       	adc	r31, r31
    1b34:	e3 56       	subi	r30, 0x63	; 99
    1b36:	fd 4f       	sbci	r31, 0xFD	; 253
    1b38:	80 81       	ld	r24, Z
    1b3a:	91 81       	ldd	r25, Z+1	; 0x01
    1b3c:	28 17       	cp	r18, r24
    1b3e:	39 07       	cpc	r19, r25
    1b40:	09 f4       	brne	.+2      	; 0x1b44 <pickup+0x338>
    1b42:	c2 c0       	rjmp	.+388    	; 0x1cc8 <pickup+0x4bc>
					pickNode(a1, a2);
    1b44:	ce 01       	movw	r24, r28
    1b46:	72 dc       	rcall	.-1820   	; 0x142c <pickNode>
    1b48:	bf c0       	rjmp	.+382    	; 0x1cc8 <pickup+0x4bc>
				}
				else
				{
					if (term[ct][0] == color[adj] || term[ct][1] == color[adj])
    1b4a:	40 91 ad 02 	lds	r20, 0x02AD
    1b4e:	50 91 ae 02 	lds	r21, 0x02AE
    1b52:	fa 01       	movw	r30, r20
    1b54:	ee 0f       	add	r30, r30
    1b56:	ff 1f       	adc	r31, r31
    1b58:	e3 56       	subi	r30, 0x63	; 99
    1b5a:	fd 4f       	sbci	r31, 0xFD	; 253
    1b5c:	01 90       	ld	r0, Z+
    1b5e:	f0 81       	ld	r31, Z
    1b60:	e0 2d       	mov	r30, r0
    1b62:	dc 01       	movw	r26, r24
    1b64:	aa 0f       	add	r26, r26
    1b66:	bb 1f       	adc	r27, r27
    1b68:	aa 0f       	add	r26, r26
    1b6a:	bb 1f       	adc	r27, r27
    1b6c:	a3 57       	subi	r26, 0x73	; 115
    1b6e:	bd 4f       	sbci	r27, 0xFD	; 253
    1b70:	0d 90       	ld	r0, X+
    1b72:	bc 91       	ld	r27, X
    1b74:	a0 2d       	mov	r26, r0
    1b76:	ae 17       	cp	r26, r30
    1b78:	bf 07       	cpc	r27, r31
    1b7a:	71 f0       	breq	.+28     	; 0x1b98 <pickup+0x38c>
    1b7c:	dc 01       	movw	r26, r24
    1b7e:	aa 0f       	add	r26, r26
    1b80:	bb 1f       	adc	r27, r27
    1b82:	aa 0f       	add	r26, r26
    1b84:	bb 1f       	adc	r27, r27
    1b86:	a3 57       	subi	r26, 0x73	; 115
    1b88:	bd 4f       	sbci	r27, 0xFD	; 253
    1b8a:	12 96       	adiw	r26, 0x02	; 2
    1b8c:	0d 90       	ld	r0, X+
    1b8e:	bc 91       	ld	r27, X
    1b90:	a0 2d       	mov	r26, r0
    1b92:	ea 17       	cp	r30, r26
    1b94:	fb 07       	cpc	r31, r27
    1b96:	d9 f5       	brne	.+118    	; 0x1c0e <pickup+0x402>
					{
						if ((visited[adj] == 1 && (term[adj][0] == -1 || term[adj][1] == -1)))
    1b98:	da 01       	movw	r26, r20
    1b9a:	aa 0f       	add	r26, r26
    1b9c:	bb 1f       	adc	r27, r27
    1b9e:	aa 59       	subi	r26, 0x9A	; 154
    1ba0:	bd 4f       	sbci	r27, 0xFD	; 253
    1ba2:	2d 91       	ld	r18, X+
    1ba4:	3c 91       	ld	r19, X
    1ba6:	21 30       	cpi	r18, 0x01	; 1
    1ba8:	31 05       	cpc	r19, r1
    1baa:	09 f0       	breq	.+2      	; 0x1bae <pickup+0x3a2>
    1bac:	8d c0       	rjmp	.+282    	; 0x1cc8 <pickup+0x4bc>
    1bae:	da 01       	movw	r26, r20
    1bb0:	aa 0f       	add	r26, r26
    1bb2:	bb 1f       	adc	r27, r27
    1bb4:	aa 0f       	add	r26, r26
    1bb6:	bb 1f       	adc	r27, r27
    1bb8:	a3 57       	subi	r26, 0x73	; 115
    1bba:	bd 4f       	sbci	r27, 0xFD	; 253
    1bbc:	2d 91       	ld	r18, X+
    1bbe:	3c 91       	ld	r19, X
    1bc0:	2f 3f       	cpi	r18, 0xFF	; 255
    1bc2:	3f 4f       	sbci	r19, 0xFF	; 255
    1bc4:	79 f0       	breq	.+30     	; 0x1be4 <pickup+0x3d8>
    1bc6:	da 01       	movw	r26, r20
    1bc8:	aa 0f       	add	r26, r26
    1bca:	bb 1f       	adc	r27, r27
    1bcc:	aa 0f       	add	r26, r26
    1bce:	bb 1f       	adc	r27, r27
    1bd0:	a3 57       	subi	r26, 0x73	; 115
    1bd2:	bd 4f       	sbci	r27, 0xFD	; 253
    1bd4:	12 96       	adiw	r26, 0x02	; 2
    1bd6:	2d 91       	ld	r18, X+
    1bd8:	3c 91       	ld	r19, X
    1bda:	13 97       	sbiw	r26, 0x03	; 3
    1bdc:	2f 3f       	cpi	r18, 0xFF	; 255
    1bde:	3f 4f       	sbci	r19, 0xFF	; 255
    1be0:	09 f0       	breq	.+2      	; 0x1be4 <pickup+0x3d8>
    1be2:	72 c0       	rjmp	.+228    	; 0x1cc8 <pickup+0x4bc>
						{
							if (term[ct][a1] == color[adj])
    1be4:	88 0f       	add	r24, r24
    1be6:	99 1f       	adc	r25, r25
    1be8:	8c 0f       	add	r24, r28
    1bea:	9d 1f       	adc	r25, r29
    1bec:	dc 01       	movw	r26, r24
    1bee:	aa 0f       	add	r26, r26
    1bf0:	bb 1f       	adc	r27, r27
    1bf2:	a3 57       	subi	r26, 0x73	; 115
    1bf4:	bd 4f       	sbci	r27, 0xFD	; 253
    1bf6:	8d 91       	ld	r24, X+
    1bf8:	9c 91       	ld	r25, X
    1bfa:	e8 17       	cp	r30, r24
    1bfc:	f9 07       	cpc	r31, r25
    1bfe:	21 f4       	brne	.+8      	; 0x1c08 <pickup+0x3fc>
							pickNode(a1, a1);
    1c00:	be 01       	movw	r22, r28
    1c02:	ce 01       	movw	r24, r28
    1c04:	13 dc       	rcall	.-2010   	; 0x142c <pickNode>
    1c06:	60 c0       	rjmp	.+192    	; 0x1cc8 <pickup+0x4bc>
							else pickNode(a1, a2);
    1c08:	ce 01       	movw	r24, r28
    1c0a:	10 dc       	rcall	.-2016   	; 0x142c <pickNode>
    1c0c:	5d c0       	rjmp	.+186    	; 0x1cc8 <pickup+0x4bc>
						}
					}
					else
					{
						if (sort[ct % 2] != color[ct] && sort[ct % 2] != color[adj])
    1c0e:	dc 01       	movw	r26, r24
    1c10:	aa 0f       	add	r26, r26
    1c12:	bb 1f       	adc	r27, r27
    1c14:	a3 56       	subi	r26, 0x63	; 99
    1c16:	bd 4f       	sbci	r27, 0xFD	; 253
    1c18:	0d 90       	ld	r0, X+
    1c1a:	bc 91       	ld	r27, X
    1c1c:	a0 2d       	mov	r26, r0
    1c1e:	2a 17       	cp	r18, r26
    1c20:	3b 07       	cpc	r19, r27
    1c22:	09 f4       	brne	.+2      	; 0x1c26 <pickup+0x41a>
    1c24:	51 c0       	rjmp	.+162    	; 0x1cc8 <pickup+0x4bc>
    1c26:	2e 17       	cp	r18, r30
    1c28:	3f 07       	cpc	r19, r31
    1c2a:	09 f4       	brne	.+2      	; 0x1c2e <pickup+0x422>
    1c2c:	4d c0       	rjmp	.+154    	; 0x1cc8 <pickup+0x4bc>
						{
							if ((visited[adj] == 1 && ((term[adj][0] != color[ct]) && (term[adj][1] != color[ct]))))
    1c2e:	fa 01       	movw	r30, r20
    1c30:	ee 0f       	add	r30, r30
    1c32:	ff 1f       	adc	r31, r31
    1c34:	ea 59       	subi	r30, 0x9A	; 154
    1c36:	fd 4f       	sbci	r31, 0xFD	; 253
    1c38:	20 81       	ld	r18, Z
    1c3a:	31 81       	ldd	r19, Z+1	; 0x01
    1c3c:	21 30       	cpi	r18, 0x01	; 1
    1c3e:	31 05       	cpc	r19, r1
    1c40:	09 f0       	breq	.+2      	; 0x1c44 <pickup+0x438>
    1c42:	42 c0       	rjmp	.+132    	; 0x1cc8 <pickup+0x4bc>
    1c44:	fa 01       	movw	r30, r20
    1c46:	ee 0f       	add	r30, r30
    1c48:	ff 1f       	adc	r31, r31
    1c4a:	ee 0f       	add	r30, r30
    1c4c:	ff 1f       	adc	r31, r31
    1c4e:	e3 57       	subi	r30, 0x73	; 115
    1c50:	fd 4f       	sbci	r31, 0xFD	; 253
    1c52:	20 81       	ld	r18, Z
    1c54:	31 81       	ldd	r19, Z+1	; 0x01
    1c56:	a2 17       	cp	r26, r18
    1c58:	b3 07       	cpc	r27, r19
    1c5a:	b1 f1       	breq	.+108    	; 0x1cc8 <pickup+0x4bc>
    1c5c:	fa 01       	movw	r30, r20
    1c5e:	ee 0f       	add	r30, r30
    1c60:	ff 1f       	adc	r31, r31
    1c62:	ee 0f       	add	r30, r30
    1c64:	ff 1f       	adc	r31, r31
    1c66:	e3 57       	subi	r30, 0x73	; 115
    1c68:	fd 4f       	sbci	r31, 0xFD	; 253
    1c6a:	22 81       	ldd	r18, Z+2	; 0x02
    1c6c:	33 81       	ldd	r19, Z+3	; 0x03
    1c6e:	a2 17       	cp	r26, r18
    1c70:	b3 07       	cpc	r27, r19
    1c72:	51 f1       	breq	.+84     	; 0x1cc8 <pickup+0x4bc>
							{
								if (term[ct][a1] != -1 && term[ct][a1] != color[ct])
    1c74:	fc 01       	movw	r30, r24
    1c76:	ee 0f       	add	r30, r30
    1c78:	ff 1f       	adc	r31, r31
    1c7a:	ec 0f       	add	r30, r28
    1c7c:	fd 1f       	adc	r31, r29
    1c7e:	ee 0f       	add	r30, r30
    1c80:	ff 1f       	adc	r31, r31
    1c82:	e3 57       	subi	r30, 0x73	; 115
    1c84:	fd 4f       	sbci	r31, 0xFD	; 253
    1c86:	20 81       	ld	r18, Z
    1c88:	31 81       	ldd	r19, Z+1	; 0x01
    1c8a:	2f 3f       	cpi	r18, 0xFF	; 255
    1c8c:	ef ef       	ldi	r30, 0xFF	; 255
    1c8e:	3e 07       	cpc	r19, r30
    1c90:	39 f0       	breq	.+14     	; 0x1ca0 <pickup+0x494>
    1c92:	a2 17       	cp	r26, r18
    1c94:	b3 07       	cpc	r27, r19
    1c96:	21 f0       	breq	.+8      	; 0x1ca0 <pickup+0x494>
								pickNode(a1, a1);
    1c98:	be 01       	movw	r22, r28
    1c9a:	ce 01       	movw	r24, r28
    1c9c:	c7 db       	rcall	.-2162   	; 0x142c <pickNode>
    1c9e:	14 c0       	rjmp	.+40     	; 0x1cc8 <pickup+0x4bc>
								else	if (term[ct][a2] != -1 && term[ct][a2] != color[ct])
    1ca0:	88 0f       	add	r24, r24
    1ca2:	99 1f       	adc	r25, r25
    1ca4:	86 0f       	add	r24, r22
    1ca6:	97 1f       	adc	r25, r23
    1ca8:	fc 01       	movw	r30, r24
    1caa:	ee 0f       	add	r30, r30
    1cac:	ff 1f       	adc	r31, r31
    1cae:	e3 57       	subi	r30, 0x73	; 115
    1cb0:	fd 4f       	sbci	r31, 0xFD	; 253
    1cb2:	80 81       	ld	r24, Z
    1cb4:	91 81       	ldd	r25, Z+1	; 0x01
    1cb6:	8f 3f       	cpi	r24, 0xFF	; 255
    1cb8:	2f ef       	ldi	r18, 0xFF	; 255
    1cba:	92 07       	cpc	r25, r18
    1cbc:	29 f0       	breq	.+10     	; 0x1cc8 <pickup+0x4bc>
    1cbe:	a8 17       	cp	r26, r24
    1cc0:	b9 07       	cpc	r27, r25
    1cc2:	11 f0       	breq	.+4      	; 0x1cc8 <pickup+0x4bc>
								pickNode(a1, a2);
    1cc4:	ce 01       	movw	r24, r28
    1cc6:	b2 db       	rcall	.-2204   	; 0x142c <pickNode>
					}
				}
			}
		}
	}
}
    1cc8:	df 91       	pop	r29
    1cca:	cf 91       	pop	r28
    1ccc:	1f 91       	pop	r17
    1cce:	0f 91       	pop	r16
    1cd0:	ff 90       	pop	r15
    1cd2:	ef 90       	pop	r14
    1cd4:	08 95       	ret

00001cd6 <canDrop>:
	else		if (term[ct][a2] != color[ct] && term[ct][a2] != -1)
	pickNode(a2, a2);
}

void canDrop()
{
    1cd6:	0f 93       	push	r16
    1cd8:	1f 93       	push	r17
    1cda:	cf 93       	push	r28
    1cdc:	df 93       	push	r29
	int arm0 = 0, arm1 = 1;

	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    1cde:	20 91 89 02 	lds	r18, 0x0289
    1ce2:	30 91 8a 02 	lds	r19, 0x028A
    1ce6:	22 30       	cpi	r18, 0x02	; 2
    1ce8:	31 05       	cpc	r19, r1
    1cea:	30 f4       	brcc	.+12     	; 0x1cf8 <canDrop+0x22>
    1cec:	80 91 52 02 	lds	r24, 0x0252
    1cf0:	90 91 53 02 	lds	r25, 0x0253
    1cf4:	02 97       	sbiw	r24, 0x02	; 2
    1cf6:	79 f0       	breq	.+30     	; 0x1d16 <canDrop+0x40>
    1cf8:	c9 01       	movw	r24, r18
    1cfa:	02 97       	sbiw	r24, 0x02	; 2
    1cfc:	02 97       	sbiw	r24, 0x02	; 2
    1cfe:	80 f4       	brcc	.+32     	; 0x1d20 <canDrop+0x4a>
    1d00:	80 91 52 02 	lds	r24, 0x0252
    1d04:	90 91 53 02 	lds	r25, 0x0253
    1d08:	89 2b       	or	r24, r25
    1d0a:	79 f0       	breq	.+30     	; 0x1d2a <canDrop+0x54>
	pickNode(a2, a2);
}

void canDrop()
{
	int arm0 = 0, arm1 = 1;
    1d0c:	01 e0       	ldi	r16, 0x01	; 1
    1d0e:	10 e0       	ldi	r17, 0x00	; 0
    1d10:	c0 e0       	ldi	r28, 0x00	; 0
    1d12:	d0 e0       	ldi	r29, 0x00	; 0
    1d14:	0e c0       	rjmp	.+28     	; 0x1d32 <canDrop+0x5c>

	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    1d16:	00 e0       	ldi	r16, 0x00	; 0
    1d18:	10 e0       	ldi	r17, 0x00	; 0
{
	int arm0 = 0, arm1 = 1;

	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    1d1a:	c1 e0       	ldi	r28, 0x01	; 1
    1d1c:	d0 e0       	ldi	r29, 0x00	; 0
    1d1e:	09 c0       	rjmp	.+18     	; 0x1d32 <canDrop+0x5c>
	pickNode(a2, a2);
}

void canDrop()
{
	int arm0 = 0, arm1 = 1;
    1d20:	01 e0       	ldi	r16, 0x01	; 1
    1d22:	10 e0       	ldi	r17, 0x00	; 0
    1d24:	c0 e0       	ldi	r28, 0x00	; 0
    1d26:	d0 e0       	ldi	r29, 0x00	; 0
    1d28:	04 c0       	rjmp	.+8      	; 0x1d32 <canDrop+0x5c>

	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    1d2a:	00 e0       	ldi	r16, 0x00	; 0
    1d2c:	10 e0       	ldi	r17, 0x00	; 0
{
	int arm0 = 0, arm1 = 1;

	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    1d2e:	c1 e0       	ldi	r28, 0x01	; 1
    1d30:	d0 e0       	ldi	r29, 0x00	; 0
		arm1 = 0;
	}

	if (armCount == 2 || (arm[0] != color[ct] && arm[1] != color[ct]))
    1d32:	40 91 02 02 	lds	r20, 0x0202
    1d36:	50 91 03 02 	lds	r21, 0x0203
    1d3a:	42 30       	cpi	r20, 0x02	; 2
    1d3c:	51 05       	cpc	r21, r1
    1d3e:	09 f4       	brne	.+2      	; 0x1d42 <canDrop+0x6c>
    1d40:	3b c1       	rjmp	.+630    	; 0x1fb8 <canDrop+0x2e2>
    1d42:	f9 01       	movw	r30, r18
    1d44:	ee 0f       	add	r30, r30
    1d46:	ff 1f       	adc	r31, r31
    1d48:	e3 56       	subi	r30, 0x63	; 99
    1d4a:	fd 4f       	sbci	r31, 0xFD	; 253
    1d4c:	40 81       	ld	r20, Z
    1d4e:	51 81       	ldd	r21, Z+1	; 0x01
    1d50:	80 91 b1 02 	lds	r24, 0x02B1
    1d54:	90 91 b2 02 	lds	r25, 0x02B2
    1d58:	84 17       	cp	r24, r20
    1d5a:	95 07       	cpc	r25, r21
    1d5c:	41 f0       	breq	.+16     	; 0x1d6e <canDrop+0x98>
    1d5e:	80 91 b3 02 	lds	r24, 0x02B3
    1d62:	90 91 b4 02 	lds	r25, 0x02B4
    1d66:	48 17       	cp	r20, r24
    1d68:	59 07       	cpc	r21, r25
    1d6a:	09 f0       	breq	.+2      	; 0x1d6e <canDrop+0x98>
    1d6c:	25 c1       	rjmp	.+586    	; 0x1fb8 <canDrop+0x2e2>
		return;
	else
	{
		if (visited[ct] == 0)
    1d6e:	f9 01       	movw	r30, r18
    1d70:	ee 0f       	add	r30, r30
    1d72:	ff 1f       	adc	r31, r31
    1d74:	ea 59       	subi	r30, 0x9A	; 154
    1d76:	fd 4f       	sbci	r31, 0xFD	; 253
    1d78:	80 81       	ld	r24, Z
    1d7a:	91 81       	ldd	r25, Z+1	; 0x01
    1d7c:	89 2b       	or	r24, r25
    1d7e:	09 f4       	brne	.+2      	; 0x1d82 <canDrop+0xac>

			terminalCheck1();
    1d80:	cf dc       	rcall	.-1634   	; 0x1720 <terminalCheck1>


		if (armCount == 0)
    1d82:	80 91 02 02 	lds	r24, 0x0202
    1d86:	90 91 03 02 	lds	r25, 0x0203
    1d8a:	89 2b       	or	r24, r25
    1d8c:	09 f0       	breq	.+2      	; 0x1d90 <canDrop+0xba>
    1d8e:	48 c0       	rjmp	.+144    	; 0x1e20 <canDrop+0x14a>
		{
			if (arm[arm0] == color[ct])
    1d90:	20 91 89 02 	lds	r18, 0x0289
    1d94:	30 91 8a 02 	lds	r19, 0x028A
    1d98:	f9 01       	movw	r30, r18
    1d9a:	ee 0f       	add	r30, r30
    1d9c:	ff 1f       	adc	r31, r31
    1d9e:	e3 56       	subi	r30, 0x63	; 99
    1da0:	fd 4f       	sbci	r31, 0xFD	; 253
    1da2:	80 81       	ld	r24, Z
    1da4:	91 81       	ldd	r25, Z+1	; 0x01
    1da6:	fe 01       	movw	r30, r28
    1da8:	ee 0f       	add	r30, r30
    1daa:	ff 1f       	adc	r31, r31
    1dac:	ef 54       	subi	r30, 0x4F	; 79
    1dae:	fd 4f       	sbci	r31, 0xFD	; 253
    1db0:	40 81       	ld	r20, Z
    1db2:	51 81       	ldd	r21, Z+1	; 0x01
    1db4:	48 17       	cp	r20, r24
    1db6:	59 07       	cpc	r21, r25
    1db8:	a9 f4       	brne	.+42     	; 0x1de4 <canDrop+0x10e>

				if (term[ct][0] == -1)
    1dba:	f9 01       	movw	r30, r18
    1dbc:	ee 0f       	add	r30, r30
    1dbe:	ff 1f       	adc	r31, r31
    1dc0:	ee 0f       	add	r30, r30
    1dc2:	ff 1f       	adc	r31, r31
    1dc4:	e3 57       	subi	r30, 0x73	; 115
    1dc6:	fd 4f       	sbci	r31, 0xFD	; 253
    1dc8:	80 81       	ld	r24, Z
    1dca:	91 81       	ldd	r25, Z+1	; 0x01
    1dcc:	01 96       	adiw	r24, 0x01	; 1
    1dce:	29 f4       	brne	.+10     	; 0x1dda <canDrop+0x104>

					nodeDrop(arm0, 0);
    1dd0:	60 e0       	ldi	r22, 0x00	; 0
    1dd2:	70 e0       	ldi	r23, 0x00	; 0
    1dd4:	ce 01       	movw	r24, r28
    1dd6:	36 dc       	rcall	.-1940   	; 0x1644 <nodeDrop>
    1dd8:	23 c0       	rjmp	.+70     	; 0x1e20 <canDrop+0x14a>
				else nodeDrop(arm0, 1);
    1dda:	61 e0       	ldi	r22, 0x01	; 1
    1ddc:	70 e0       	ldi	r23, 0x00	; 0
    1dde:	ce 01       	movw	r24, r28
    1de0:	31 dc       	rcall	.-1950   	; 0x1644 <nodeDrop>
    1de2:	1e c0       	rjmp	.+60     	; 0x1e20 <canDrop+0x14a>

			else if (arm[arm1] == color[ct])
    1de4:	f8 01       	movw	r30, r16
    1de6:	ee 0f       	add	r30, r30
    1de8:	ff 1f       	adc	r31, r31
    1dea:	ef 54       	subi	r30, 0x4F	; 79
    1dec:	fd 4f       	sbci	r31, 0xFD	; 253
    1dee:	40 81       	ld	r20, Z
    1df0:	51 81       	ldd	r21, Z+1	; 0x01
    1df2:	84 17       	cp	r24, r20
    1df4:	95 07       	cpc	r25, r21
    1df6:	a1 f4       	brne	.+40     	; 0x1e20 <canDrop+0x14a>

				if (term[ct][0] != -1)
    1df8:	f9 01       	movw	r30, r18
    1dfa:	ee 0f       	add	r30, r30
    1dfc:	ff 1f       	adc	r31, r31
    1dfe:	ee 0f       	add	r30, r30
    1e00:	ff 1f       	adc	r31, r31
    1e02:	e3 57       	subi	r30, 0x73	; 115
    1e04:	fd 4f       	sbci	r31, 0xFD	; 253
    1e06:	80 81       	ld	r24, Z
    1e08:	91 81       	ldd	r25, Z+1	; 0x01
    1e0a:	01 96       	adiw	r24, 0x01	; 1
    1e0c:	29 f0       	breq	.+10     	; 0x1e18 <canDrop+0x142>

					nodeDrop(arm1, 1);
    1e0e:	61 e0       	ldi	r22, 0x01	; 1
    1e10:	70 e0       	ldi	r23, 0x00	; 0
    1e12:	c8 01       	movw	r24, r16
    1e14:	17 dc       	rcall	.-2002   	; 0x1644 <nodeDrop>
    1e16:	04 c0       	rjmp	.+8      	; 0x1e20 <canDrop+0x14a>
				else nodeDrop(arm1, 0);
    1e18:	60 e0       	ldi	r22, 0x00	; 0
    1e1a:	70 e0       	ldi	r23, 0x00	; 0
    1e1c:	c8 01       	movw	r24, r16
    1e1e:	12 dc       	rcall	.-2012   	; 0x1644 <nodeDrop>

		}
		if (arm[0] == color[ct] || arm[1] == color[ct])
    1e20:	20 91 89 02 	lds	r18, 0x0289
    1e24:	30 91 8a 02 	lds	r19, 0x028A
    1e28:	f9 01       	movw	r30, r18
    1e2a:	ee 0f       	add	r30, r30
    1e2c:	ff 1f       	adc	r31, r31
    1e2e:	e3 56       	subi	r30, 0x63	; 99
    1e30:	fd 4f       	sbci	r31, 0xFD	; 253
    1e32:	80 81       	ld	r24, Z
    1e34:	91 81       	ldd	r25, Z+1	; 0x01
    1e36:	40 91 b1 02 	lds	r20, 0x02B1
    1e3a:	50 91 b2 02 	lds	r21, 0x02B2
    1e3e:	48 17       	cp	r20, r24
    1e40:	59 07       	cpc	r21, r25
    1e42:	41 f0       	breq	.+16     	; 0x1e54 <canDrop+0x17e>
    1e44:	40 91 b3 02 	lds	r20, 0x02B3
    1e48:	50 91 b4 02 	lds	r21, 0x02B4
    1e4c:	84 17       	cp	r24, r20
    1e4e:	95 07       	cpc	r25, r21
    1e50:	09 f0       	breq	.+2      	; 0x1e54 <canDrop+0x17e>
    1e52:	b2 c0       	rjmp	.+356    	; 0x1fb8 <canDrop+0x2e2>
		{
			if (term[ct][0] != -1 && term[ct][1] != -1)
    1e54:	f9 01       	movw	r30, r18
    1e56:	ee 0f       	add	r30, r30
    1e58:	ff 1f       	adc	r31, r31
    1e5a:	ee 0f       	add	r30, r30
    1e5c:	ff 1f       	adc	r31, r31
    1e5e:	e3 57       	subi	r30, 0x73	; 115
    1e60:	fd 4f       	sbci	r31, 0xFD	; 253
    1e62:	80 81       	ld	r24, Z
    1e64:	91 81       	ldd	r25, Z+1	; 0x01
    1e66:	01 96       	adiw	r24, 0x01	; 1
    1e68:	09 f4       	brne	.+2      	; 0x1e6c <canDrop+0x196>
    1e6a:	45 c0       	rjmp	.+138    	; 0x1ef6 <canDrop+0x220>
    1e6c:	f9 01       	movw	r30, r18
    1e6e:	ee 0f       	add	r30, r30
    1e70:	ff 1f       	adc	r31, r31
    1e72:	ee 0f       	add	r30, r30
    1e74:	ff 1f       	adc	r31, r31
    1e76:	e3 57       	subi	r30, 0x73	; 115
    1e78:	fd 4f       	sbci	r31, 0xFD	; 253
    1e7a:	82 81       	ldd	r24, Z+2	; 0x02
    1e7c:	93 81       	ldd	r25, Z+3	; 0x03
    1e7e:	01 96       	adiw	r24, 0x01	; 1
    1e80:	c9 f0       	breq	.+50     	; 0x1eb4 <canDrop+0x1de>
				if (visited[ct] == 0)
    1e82:	f9 01       	movw	r30, r18
    1e84:	ee 0f       	add	r30, r30
    1e86:	ff 1f       	adc	r31, r31
    1e88:	ea 59       	subi	r30, 0x9A	; 154
    1e8a:	fd 4f       	sbci	r31, 0xFD	; 253
    1e8c:	80 81       	ld	r24, Z
    1e8e:	91 81       	ldd	r25, Z+1	; 0x01
    1e90:	89 2b       	or	r24, r25
    1e92:	81 f4       	brne	.+32     	; 0x1eb4 <canDrop+0x1de>
					terminalCheck2();
    1e94:	ea d8       	rcall	.-3628   	; 0x106a <terminalCheck2>
			if (term[ct][0] != -1 && term[ct][1] != -1)
    1e96:	20 91 89 02 	lds	r18, 0x0289
    1e9a:	30 91 8a 02 	lds	r19, 0x028A
    1e9e:	f9 01       	movw	r30, r18
    1ea0:	ee 0f       	add	r30, r30
    1ea2:	ff 1f       	adc	r31, r31
    1ea4:	ee 0f       	add	r30, r30
    1ea6:	ff 1f       	adc	r31, r31
    1ea8:	e3 57       	subi	r30, 0x73	; 115
    1eaa:	fd 4f       	sbci	r31, 0xFD	; 253
    1eac:	80 81       	ld	r24, Z
    1eae:	91 81       	ldd	r25, Z+1	; 0x01
    1eb0:	01 96       	adiw	r24, 0x01	; 1
    1eb2:	09 f1       	breq	.+66     	; 0x1ef6 <canDrop+0x220>
    1eb4:	f9 01       	movw	r30, r18
    1eb6:	ee 0f       	add	r30, r30
    1eb8:	ff 1f       	adc	r31, r31
    1eba:	ee 0f       	add	r30, r30
    1ebc:	ff 1f       	adc	r31, r31
    1ebe:	e3 57       	subi	r30, 0x73	; 115
    1ec0:	fd 4f       	sbci	r31, 0xFD	; 253
    1ec2:	82 81       	ldd	r24, Z+2	; 0x02
    1ec4:	93 81       	ldd	r25, Z+3	; 0x03
    1ec6:	01 96       	adiw	r24, 0x01	; 1
    1ec8:	b1 f0       	breq	.+44     	; 0x1ef6 <canDrop+0x220>
			{
				if (arm[arm0] == color[ct])
    1eca:	de 01       	movw	r26, r28
    1ecc:	aa 0f       	add	r26, r26
    1ece:	bb 1f       	adc	r27, r27
    1ed0:	af 54       	subi	r26, 0x4F	; 79
    1ed2:	bd 4f       	sbci	r27, 0xFD	; 253
    1ed4:	f9 01       	movw	r30, r18
    1ed6:	ee 0f       	add	r30, r30
    1ed8:	ff 1f       	adc	r31, r31
    1eda:	e3 56       	subi	r30, 0x63	; 99
    1edc:	fd 4f       	sbci	r31, 0xFD	; 253
    1ede:	4d 91       	ld	r20, X+
    1ee0:	5c 91       	ld	r21, X
    1ee2:	80 81       	ld	r24, Z
    1ee4:	91 81       	ldd	r25, Z+1	; 0x01
    1ee6:	48 17       	cp	r20, r24
    1ee8:	59 07       	cpc	r21, r25
    1eea:	19 f4       	brne	.+6      	; 0x1ef2 <canDrop+0x21c>
					dropPickup(arm0);
    1eec:	ce 01       	movw	r24, r28
    1eee:	d2 da       	rcall	.-2652   	; 0x1494 <dropPickup>
    1ef0:	02 c0       	rjmp	.+4      	; 0x1ef6 <canDrop+0x220>
				else dropPickup(arm1);
    1ef2:	c8 01       	movw	r24, r16
    1ef4:	cf da       	rcall	.-2658   	; 0x1494 <dropPickup>
			}

			if (arm[arm0] == color[ct] && term[ct][0] == -1)
    1ef6:	80 91 89 02 	lds	r24, 0x0289
    1efa:	90 91 8a 02 	lds	r25, 0x028A
    1efe:	fc 01       	movw	r30, r24
    1f00:	ee 0f       	add	r30, r30
    1f02:	ff 1f       	adc	r31, r31
    1f04:	e3 56       	subi	r30, 0x63	; 99
    1f06:	fd 4f       	sbci	r31, 0xFD	; 253
    1f08:	20 81       	ld	r18, Z
    1f0a:	31 81       	ldd	r19, Z+1	; 0x01
    1f0c:	fe 01       	movw	r30, r28
    1f0e:	ee 0f       	add	r30, r30
    1f10:	ff 1f       	adc	r31, r31
    1f12:	ef 54       	subi	r30, 0x4F	; 79
    1f14:	fd 4f       	sbci	r31, 0xFD	; 253
    1f16:	40 81       	ld	r20, Z
    1f18:	51 81       	ldd	r21, Z+1	; 0x01
    1f1a:	42 17       	cp	r20, r18
    1f1c:	53 07       	cpc	r21, r19
    1f1e:	11 f5       	brne	.+68     	; 0x1f64 <canDrop+0x28e>
    1f20:	fc 01       	movw	r30, r24
    1f22:	ee 0f       	add	r30, r30
    1f24:	ff 1f       	adc	r31, r31
    1f26:	ee 0f       	add	r30, r30
    1f28:	ff 1f       	adc	r31, r31
    1f2a:	e3 57       	subi	r30, 0x73	; 115
    1f2c:	fd 4f       	sbci	r31, 0xFD	; 253
    1f2e:	40 81       	ld	r20, Z
    1f30:	51 81       	ldd	r21, Z+1	; 0x01
    1f32:	4f 3f       	cpi	r20, 0xFF	; 255
    1f34:	5f 4f       	sbci	r21, 0xFF	; 255
    1f36:	29 f4       	brne	.+10     	; 0x1f42 <canDrop+0x26c>

				nodeDrop(arm0, 0);
    1f38:	60 e0       	ldi	r22, 0x00	; 0
    1f3a:	70 e0       	ldi	r23, 0x00	; 0
    1f3c:	ce 01       	movw	r24, r28
    1f3e:	82 db       	rcall	.-2300   	; 0x1644 <nodeDrop>
    1f40:	3b c0       	rjmp	.+118    	; 0x1fb8 <canDrop+0x2e2>
			else if (arm[arm0] == color[ct] && term[ct][1] == -1)
    1f42:	fc 01       	movw	r30, r24
    1f44:	ee 0f       	add	r30, r30
    1f46:	ff 1f       	adc	r31, r31
    1f48:	ee 0f       	add	r30, r30
    1f4a:	ff 1f       	adc	r31, r31
    1f4c:	e3 57       	subi	r30, 0x73	; 115
    1f4e:	fd 4f       	sbci	r31, 0xFD	; 253
    1f50:	42 81       	ldd	r20, Z+2	; 0x02
    1f52:	53 81       	ldd	r21, Z+3	; 0x03
    1f54:	4f 3f       	cpi	r20, 0xFF	; 255
    1f56:	5f 4f       	sbci	r21, 0xFF	; 255
    1f58:	29 f4       	brne	.+10     	; 0x1f64 <canDrop+0x28e>
				nodeDrop(arm0, 1);
    1f5a:	61 e0       	ldi	r22, 0x01	; 1
    1f5c:	70 e0       	ldi	r23, 0x00	; 0
    1f5e:	ce 01       	movw	r24, r28
    1f60:	71 db       	rcall	.-2334   	; 0x1644 <nodeDrop>
    1f62:	2a c0       	rjmp	.+84     	; 0x1fb8 <canDrop+0x2e2>
			else if (arm[arm1] == color[ct] && term[ct][0] == -1)
    1f64:	f8 01       	movw	r30, r16
    1f66:	ee 0f       	add	r30, r30
    1f68:	ff 1f       	adc	r31, r31
    1f6a:	ef 54       	subi	r30, 0x4F	; 79
    1f6c:	fd 4f       	sbci	r31, 0xFD	; 253
    1f6e:	40 81       	ld	r20, Z
    1f70:	51 81       	ldd	r21, Z+1	; 0x01
    1f72:	24 17       	cp	r18, r20
    1f74:	35 07       	cpc	r19, r21
    1f76:	01 f5       	brne	.+64     	; 0x1fb8 <canDrop+0x2e2>
    1f78:	fc 01       	movw	r30, r24
    1f7a:	ee 0f       	add	r30, r30
    1f7c:	ff 1f       	adc	r31, r31
    1f7e:	ee 0f       	add	r30, r30
    1f80:	ff 1f       	adc	r31, r31
    1f82:	e3 57       	subi	r30, 0x73	; 115
    1f84:	fd 4f       	sbci	r31, 0xFD	; 253
    1f86:	20 81       	ld	r18, Z
    1f88:	31 81       	ldd	r19, Z+1	; 0x01
    1f8a:	2f 3f       	cpi	r18, 0xFF	; 255
    1f8c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f8e:	29 f4       	brne	.+10     	; 0x1f9a <canDrop+0x2c4>
				nodeDrop(arm1, 0);
    1f90:	60 e0       	ldi	r22, 0x00	; 0
    1f92:	70 e0       	ldi	r23, 0x00	; 0
    1f94:	c8 01       	movw	r24, r16
    1f96:	56 db       	rcall	.-2388   	; 0x1644 <nodeDrop>
    1f98:	0f c0       	rjmp	.+30     	; 0x1fb8 <canDrop+0x2e2>
			else if (arm[arm1] == color[ct] && term[ct][1] == -1)
    1f9a:	fc 01       	movw	r30, r24
    1f9c:	ee 0f       	add	r30, r30
    1f9e:	ff 1f       	adc	r31, r31
    1fa0:	ee 0f       	add	r30, r30
    1fa2:	ff 1f       	adc	r31, r31
    1fa4:	e3 57       	subi	r30, 0x73	; 115
    1fa6:	fd 4f       	sbci	r31, 0xFD	; 253
    1fa8:	82 81       	ldd	r24, Z+2	; 0x02
    1faa:	93 81       	ldd	r25, Z+3	; 0x03
    1fac:	01 96       	adiw	r24, 0x01	; 1
    1fae:	21 f4       	brne	.+8      	; 0x1fb8 <canDrop+0x2e2>

				nodeDrop(arm1, 1);
    1fb0:	61 e0       	ldi	r22, 0x01	; 1
    1fb2:	70 e0       	ldi	r23, 0x00	; 0
    1fb4:	c8 01       	movw	r24, r16
    1fb6:	46 db       	rcall	.-2420   	; 0x1644 <nodeDrop>

		}
	}
}
    1fb8:	df 91       	pop	r29
    1fba:	cf 91       	pop	r28
    1fbc:	1f 91       	pop	r17
    1fbe:	0f 91       	pop	r16
    1fc0:	08 95       	ret

00001fc2 <newSort>:
		ot = ct;
	}
}

void newSort()
{
    1fc2:	ef 92       	push	r14
    1fc4:	ff 92       	push	r15
    1fc6:	0f 93       	push	r16
    1fc8:	1f 93       	push	r17
    1fca:	cf 93       	push	r28
    1fcc:	df 93       	push	r29
	lcd("other sort");
    1fce:	82 e4       	ldi	r24, 0x42	; 66
    1fd0:	92 e0       	ldi	r25, 0x02	; 2
    1fd2:	f0 d9       	rcall	.-3104   	; 0x13b4 <lcd>
	int t1, t2, a1, a2;
	if (arm[0] != -1)
    1fd4:	20 91 b1 02 	lds	r18, 0x02B1
    1fd8:	30 91 b2 02 	lds	r19, 0x02B2
    1fdc:	2f 3f       	cpi	r18, 0xFF	; 255
    1fde:	4f ef       	ldi	r20, 0xFF	; 255
    1fe0:	34 07       	cpc	r19, r20
    1fe2:	39 f0       	breq	.+14     	; 0x1ff2 <newSort+0x30>
	a1 = indicator[arm[0]];
    1fe4:	f9 01       	movw	r30, r18
    1fe6:	ee 0f       	add	r30, r30
    1fe8:	ff 1f       	adc	r31, r31
    1fea:	eb 55       	subi	r30, 0x5B	; 91
    1fec:	fd 4f       	sbci	r31, 0xFD	; 253
    1fee:	c0 81       	ld	r28, Z
    1ff0:	d1 81       	ldd	r29, Z+1	; 0x01
	if (arm[1] != -1)
    1ff2:	e0 91 b3 02 	lds	r30, 0x02B3
    1ff6:	f0 91 b4 02 	lds	r31, 0x02B4
    1ffa:	ef 3f       	cpi	r30, 0xFF	; 255
    1ffc:	6f ef       	ldi	r22, 0xFF	; 255
    1ffe:	f6 07       	cpc	r31, r22
    2000:	09 f4       	brne	.+2      	; 0x2004 <newSort+0x42>
    2002:	5d c1       	rjmp	.+698    	; 0x22be <__stack+0xbf>
	a2 = indicator[arm[1]];
    2004:	df 01       	movw	r26, r30
    2006:	aa 0f       	add	r26, r26
    2008:	bb 1f       	adc	r27, r27
    200a:	ab 55       	subi	r26, 0x5B	; 91
    200c:	bd 4f       	sbci	r27, 0xFD	; 253
    200e:	0d 91       	ld	r16, X+
    2010:	1c 91       	ld	r17, X

	t1 = (ct + 1) % 2;
    2012:	80 91 89 02 	lds	r24, 0x0289
    2016:	90 91 8a 02 	lds	r25, 0x028A
    201a:	01 96       	adiw	r24, 0x01	; 1
    201c:	81 70       	andi	r24, 0x01	; 1
    201e:	90 78       	andi	r25, 0x80	; 128
    2020:	99 23       	and	r25, r25
    2022:	24 f4       	brge	.+8      	; 0x202c <newSort+0x6a>
    2024:	01 97       	sbiw	r24, 0x01	; 1
    2026:	8e 6f       	ori	r24, 0xFE	; 254
    2028:	9f 6f       	ori	r25, 0xFF	; 255
    202a:	01 96       	adiw	r24, 0x01	; 1
    202c:	bc 01       	movw	r22, r24
	t2 = t1 + 2;
    202e:	02 96       	adiw	r24, 0x02	; 2
	if (arm[0] != -1 || arm[1] != -1)
	{
		ct = a1;
    2030:	d0 93 8a 02 	sts	0x028A, r29
    2034:	c0 93 89 02 	sts	0x0289, r28
		if (arm[0] != -1 && (term[a1][0] == -1 || term[a1][1] == -1))
    2038:	2f 3f       	cpi	r18, 0xFF	; 255
    203a:	af ef       	ldi	r26, 0xFF	; 255
    203c:	3a 07       	cpc	r19, r26
    203e:	e1 f1       	breq	.+120    	; 0x20b8 <newSort+0xf6>
    2040:	de 01       	movw	r26, r28
    2042:	aa 0f       	add	r26, r26
    2044:	bb 1f       	adc	r27, r27
    2046:	aa 0f       	add	r26, r26
    2048:	bb 1f       	adc	r27, r27
    204a:	a3 57       	subi	r26, 0x73	; 115
    204c:	bd 4f       	sbci	r27, 0xFD	; 253
    204e:	4d 91       	ld	r20, X+
    2050:	5c 91       	ld	r21, X
    2052:	4f 3f       	cpi	r20, 0xFF	; 255
    2054:	5f 4f       	sbci	r21, 0xFF	; 255
    2056:	71 f0       	breq	.+28     	; 0x2074 <newSort+0xb2>
    2058:	de 01       	movw	r26, r28
    205a:	aa 0f       	add	r26, r26
    205c:	bb 1f       	adc	r27, r27
    205e:	aa 0f       	add	r26, r26
    2060:	bb 1f       	adc	r27, r27
    2062:	a3 57       	subi	r26, 0x73	; 115
    2064:	bd 4f       	sbci	r27, 0xFD	; 253
    2066:	12 96       	adiw	r26, 0x02	; 2
    2068:	4d 91       	ld	r20, X+
    206a:	5c 91       	ld	r21, X
    206c:	13 97       	sbiw	r26, 0x03	; 3
    206e:	4f 3f       	cpi	r20, 0xFF	; 255
    2070:	5f 4f       	sbci	r21, 0xFF	; 255
    2072:	11 f5       	brne	.+68     	; 0x20b8 <newSort+0xf6>
		{
			if (arm[1] == -1)
    2074:	31 96       	adiw	r30, 0x01	; 1
    2076:	09 f0       	breq	.+2      	; 0x207a <newSort+0xb8>
    2078:	10 c1       	rjmp	.+544    	; 0x229a <__stack+0x9b>
			{
				if (sort[t1] == color[t1] || sort[t1] == color[t2])
    207a:	66 0f       	add	r22, r22
    207c:	77 1f       	adc	r23, r23
    207e:	fb 01       	movw	r30, r22
    2080:	eb 57       	subi	r30, 0x7B	; 123
    2082:	fd 4f       	sbci	r31, 0xFD	; 253
    2084:	20 81       	ld	r18, Z
    2086:	31 81       	ldd	r19, Z+1	; 0x01
    2088:	fb 01       	movw	r30, r22
    208a:	e3 56       	subi	r30, 0x63	; 99
    208c:	fd 4f       	sbci	r31, 0xFD	; 253
    208e:	40 81       	ld	r20, Z
    2090:	51 81       	ldd	r21, Z+1	; 0x01
    2092:	24 17       	cp	r18, r20
    2094:	35 07       	cpc	r19, r21
    2096:	59 f0       	breq	.+22     	; 0x20ae <newSort+0xec>
    2098:	fc 01       	movw	r30, r24
    209a:	ee 0f       	add	r30, r30
    209c:	ff 1f       	adc	r31, r31
    209e:	e3 56       	subi	r30, 0x63	; 99
    20a0:	fd 4f       	sbci	r31, 0xFD	; 253
    20a2:	80 81       	ld	r24, Z
    20a4:	91 81       	ldd	r25, Z+1	; 0x01
    20a6:	28 17       	cp	r18, r24
    20a8:	39 07       	cpc	r19, r25
    20aa:	09 f0       	breq	.+2      	; 0x20ae <newSort+0xec>
    20ac:	f6 c0       	rjmp	.+492    	; 0x229a <__stack+0x9b>
				pickSort(1, a1);
    20ae:	be 01       	movw	r22, r28
    20b0:	81 e0       	ldi	r24, 0x01	; 1
    20b2:	90 e0       	ldi	r25, 0x00	; 0
    20b4:	48 da       	rcall	.-2928   	; 0x1546 <pickSort>
    20b6:	f1 c0       	rjmp	.+482    	; 0x229a <__stack+0x9b>
			}
		}
		else if (arm[1] != -1 && (term[a2][0] == -1 || term[a2][1] == -1))
    20b8:	ef 3f       	cpi	r30, 0xFF	; 255
    20ba:	4f ef       	ldi	r20, 0xFF	; 255
    20bc:	f4 07       	cpc	r31, r20
    20be:	09 f4       	brne	.+2      	; 0x20c2 <newSort+0x100>
    20c0:	52 c0       	rjmp	.+164    	; 0x2166 <newSort+0x1a4>
    20c2:	d8 01       	movw	r26, r16
    20c4:	aa 0f       	add	r26, r26
    20c6:	bb 1f       	adc	r27, r27
    20c8:	aa 0f       	add	r26, r26
    20ca:	bb 1f       	adc	r27, r27
    20cc:	a3 57       	subi	r26, 0x73	; 115
    20ce:	bd 4f       	sbci	r27, 0xFD	; 253
    20d0:	4d 91       	ld	r20, X+
    20d2:	5c 91       	ld	r21, X
    20d4:	4f 3f       	cpi	r20, 0xFF	; 255
    20d6:	5f 4f       	sbci	r21, 0xFF	; 255
    20d8:	09 f4       	brne	.+2      	; 0x20dc <newSort+0x11a>
    20da:	13 c1       	rjmp	.+550    	; 0x2302 <__stack+0x103>
    20dc:	d8 01       	movw	r26, r16
    20de:	aa 0f       	add	r26, r26
    20e0:	bb 1f       	adc	r27, r27
    20e2:	aa 0f       	add	r26, r26
    20e4:	bb 1f       	adc	r27, r27
    20e6:	a3 57       	subi	r26, 0x73	; 115
    20e8:	bd 4f       	sbci	r27, 0xFD	; 253
    20ea:	12 96       	adiw	r26, 0x02	; 2
    20ec:	4d 91       	ld	r20, X+
    20ee:	5c 91       	ld	r21, X
    20f0:	13 97       	sbiw	r26, 0x03	; 3
    20f2:	4f 3f       	cpi	r20, 0xFF	; 255
    20f4:	5f 4f       	sbci	r21, 0xFF	; 255
    20f6:	b9 f5       	brne	.+110    	; 0x2166 <newSort+0x1a4>
    20f8:	f2 c0       	rjmp	.+484    	; 0x22de <__stack+0xdf>
		{
			ct = a2;
			if (term[a2][0] == -1 || term[a2][1] == -1)
			{
				if (arm[0] == -1)
    20fa:	2f 3f       	cpi	r18, 0xFF	; 255
    20fc:	3f 4f       	sbci	r19, 0xFF	; 255
    20fe:	09 f0       	breq	.+2      	; 0x2102 <newSort+0x140>
    2100:	cc c0       	rjmp	.+408    	; 0x229a <__stack+0x9b>
				{
					if (sort[t1] == color[t1] && sort[t1] == color[t2])
    2102:	9b 01       	movw	r18, r22
    2104:	22 0f       	add	r18, r18
    2106:	33 1f       	adc	r19, r19
    2108:	f9 01       	movw	r30, r18
    210a:	eb 57       	subi	r30, 0x7B	; 123
    210c:	fd 4f       	sbci	r31, 0xFD	; 253
    210e:	40 81       	ld	r20, Z
    2110:	51 81       	ldd	r21, Z+1	; 0x01
    2112:	f9 01       	movw	r30, r18
    2114:	e3 56       	subi	r30, 0x63	; 99
    2116:	fd 4f       	sbci	r31, 0xFD	; 253
    2118:	20 81       	ld	r18, Z
    211a:	31 81       	ldd	r19, Z+1	; 0x01
    211c:	42 17       	cp	r20, r18
    211e:	53 07       	cpc	r21, r19
    2120:	09 f0       	breq	.+2      	; 0x2124 <newSort+0x162>
    2122:	bb c0       	rjmp	.+374    	; 0x229a <__stack+0x9b>
    2124:	fc 01       	movw	r30, r24
    2126:	ee 0f       	add	r30, r30
    2128:	ff 1f       	adc	r31, r31
    212a:	e3 56       	subi	r30, 0x63	; 99
    212c:	fd 4f       	sbci	r31, 0xFD	; 253
    212e:	80 81       	ld	r24, Z
    2130:	91 81       	ldd	r25, Z+1	; 0x01
    2132:	48 17       	cp	r20, r24
    2134:	59 07       	cpc	r21, r25
    2136:	09 f0       	breq	.+2      	; 0x213a <newSort+0x178>
    2138:	b0 c0       	rjmp	.+352    	; 0x229a <__stack+0x9b>
					pickSort(1, t1);
    213a:	81 e0       	ldi	r24, 0x01	; 1
    213c:	90 e0       	ldi	r25, 0x00	; 0
    213e:	03 da       	rcall	.-3066   	; 0x1546 <pickSort>
    2140:	ac c0       	rjmp	.+344    	; 0x229a <__stack+0x9b>
				}
			}
			else	if (sort[t1] == -1 && arm[0] != -1)
    2142:	fb 01       	movw	r30, r22
    2144:	ee 0f       	add	r30, r30
    2146:	ff 1f       	adc	r31, r31
    2148:	eb 57       	subi	r30, 0x7B	; 123
    214a:	fd 4f       	sbci	r31, 0xFD	; 253
    214c:	80 81       	ld	r24, Z
    214e:	91 81       	ldd	r25, Z+1	; 0x01
    2150:	01 96       	adiw	r24, 0x01	; 1
    2152:	09 f0       	breq	.+2      	; 0x2156 <newSort+0x194>
    2154:	a2 c0       	rjmp	.+324    	; 0x229a <__stack+0x9b>
    2156:	2f 3f       	cpi	r18, 0xFF	; 255
    2158:	3f 4f       	sbci	r19, 0xFF	; 255
    215a:	09 f4       	brne	.+2      	; 0x215e <newSort+0x19c>
    215c:	9e c0       	rjmp	.+316    	; 0x229a <__stack+0x9b>
			sortDrop(1, t1);
    215e:	81 e0       	ldi	r24, 0x01	; 1
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	a2 da       	rcall	.-2748   	; 0x16a8 <sortDrop>
    2164:	9a c0       	rjmp	.+308    	; 0x229a <__stack+0x9b>
		}
		else	if (arm[0] != -1 && (sort[t1] == -1 && arm[1] != -1))
    2166:	2f 3f       	cpi	r18, 0xFF	; 255
    2168:	af ef       	ldi	r26, 0xFF	; 255
    216a:	3a 07       	cpc	r19, r26
    216c:	a1 f0       	breq	.+40     	; 0x2196 <newSort+0x1d4>
    216e:	db 01       	movw	r26, r22
    2170:	aa 0f       	add	r26, r26
    2172:	bb 1f       	adc	r27, r27
    2174:	ab 57       	subi	r26, 0x7B	; 123
    2176:	bd 4f       	sbci	r27, 0xFD	; 253
    2178:	8d 91       	ld	r24, X+
    217a:	9c 91       	ld	r25, X
    217c:	01 96       	adiw	r24, 0x01	; 1
    217e:	31 f4       	brne	.+12     	; 0x218c <newSort+0x1ca>
    2180:	31 96       	adiw	r30, 0x01	; 1
    2182:	21 f0       	breq	.+8      	; 0x218c <newSort+0x1ca>
		sortDrop(1, t1);
    2184:	81 e0       	ldi	r24, 0x01	; 1
    2186:	90 e0       	ldi	r25, 0x00	; 0
    2188:	8f da       	rcall	.-2786   	; 0x16a8 <sortDrop>
    218a:	87 c0       	rjmp	.+270    	; 0x229a <__stack+0x9b>
		else if (arm[0] != -1)
		ct = arm[0];
    218c:	30 93 8a 02 	sts	0x028A, r19
    2190:	20 93 89 02 	sts	0x0289, r18
    2194:	82 c0       	rjmp	.+260    	; 0x229a <__stack+0x9b>
		else ct = arm[1];
    2196:	f0 93 8a 02 	sts	0x028A, r31
    219a:	e0 93 89 02 	sts	0x0289, r30
    219e:	7d c0       	rjmp	.+250    	; 0x229a <__stack+0x9b>
	}
	else
	{
		if ((sort[t1] == color[t1] || sort[t1] == color[t2]) && sort[t1] != -1)
    21a0:	a7 01       	movw	r20, r14
    21a2:	44 0f       	add	r20, r20
    21a4:	55 1f       	adc	r21, r21
    21a6:	fa 01       	movw	r30, r20
    21a8:	eb 57       	subi	r30, 0x7B	; 123
    21aa:	fd 4f       	sbci	r31, 0xFD	; 253
    21ac:	20 81       	ld	r18, Z
    21ae:	31 81       	ldd	r19, Z+1	; 0x01
    21b0:	fa 01       	movw	r30, r20
    21b2:	e3 56       	subi	r30, 0x63	; 99
    21b4:	fd 4f       	sbci	r31, 0xFD	; 253
    21b6:	40 81       	ld	r20, Z
    21b8:	51 81       	ldd	r21, Z+1	; 0x01
    21ba:	24 17       	cp	r18, r20
    21bc:	35 07       	cpc	r19, r21
    21be:	51 f0       	breq	.+20     	; 0x21d4 <newSort+0x212>
    21c0:	fc 01       	movw	r30, r24
    21c2:	ee 0f       	add	r30, r30
    21c4:	ff 1f       	adc	r31, r31
    21c6:	e3 56       	subi	r30, 0x63	; 99
    21c8:	fd 4f       	sbci	r31, 0xFD	; 253
    21ca:	60 81       	ld	r22, Z
    21cc:	71 81       	ldd	r23, Z+1	; 0x01
    21ce:	26 17       	cp	r18, r22
    21d0:	37 07       	cpc	r19, r23
    21d2:	81 f4       	brne	.+32     	; 0x21f4 <newSort+0x232>
    21d4:	2f 3f       	cpi	r18, 0xFF	; 255
    21d6:	af ef       	ldi	r26, 0xFF	; 255
    21d8:	3a 07       	cpc	r19, r26
    21da:	71 f1       	breq	.+92     	; 0x2238 <__stack+0x39>
		ct = indicator[sort[t1]];
    21dc:	f9 01       	movw	r30, r18
    21de:	ee 0f       	add	r30, r30
    21e0:	ff 1f       	adc	r31, r31
    21e2:	eb 55       	subi	r30, 0x5B	; 91
    21e4:	fd 4f       	sbci	r31, 0xFD	; 253
    21e6:	80 81       	ld	r24, Z
    21e8:	91 81       	ldd	r25, Z+1	; 0x01
    21ea:	90 93 8a 02 	sts	0x028A, r25
    21ee:	80 93 89 02 	sts	0x0289, r24
    21f2:	53 c0       	rjmp	.+166    	; 0x229a <__stack+0x9b>
		else if (sort[t1] != -1)
    21f4:	2f 3f       	cpi	r18, 0xFF	; 255
    21f6:	3f 4f       	sbci	r19, 0xFF	; 255
    21f8:	f9 f0       	breq	.+62     	; 0x2238 <__stack+0x39>
		{
			pickSort(0, t1);
    21fa:	b7 01       	movw	r22, r14
    21fc:	80 e0       	ldi	r24, 0x00	; 0
    21fe:	90 e0       	ldi	r25, 0x00	; 0
    2200:	a2 d9       	rcall	.-3260   	; 0x1546 <pickSort>
			ct = (t1 + 1) % 2 + 4;
    2202:	2f ef       	ldi	r18, 0xFF	; 255
    2204:	e2 1a       	sub	r14, r18
    2206:	f2 0a       	sbc	r15, r18
    2208:	41 e0       	ldi	r20, 0x01	; 1
    220a:	e4 22       	and	r14, r20
    220c:	40 e8       	ldi	r20, 0x80	; 128
    220e:	f4 22       	and	r15, r20
    2210:	ff 20       	and	r15, r15
    2212:	54 f4       	brge	.+20     	; 0x2228 <__stack+0x29>
    2214:	61 e0       	ldi	r22, 0x01	; 1
    2216:	e6 1a       	sub	r14, r22
    2218:	f1 08       	sbc	r15, r1
    221a:	8e ef       	ldi	r24, 0xFE	; 254
    221c:	e8 2a       	or	r14, r24
    221e:	ff 24       	eor	r15, r15
    2220:	fa 94       	dec	r15
    2222:	af ef       	ldi	r26, 0xFF	; 255
    2224:	ea 1a       	sub	r14, r26
    2226:	fa 0a       	sbc	r15, r26
    2228:	e4 e0       	ldi	r30, 0x04	; 4
    222a:	ee 0e       	add	r14, r30
    222c:	f1 1c       	adc	r15, r1
    222e:	f0 92 8a 02 	sts	0x028A, r15
    2232:	e0 92 89 02 	sts	0x0289, r14
    2236:	31 c0       	rjmp	.+98     	; 0x229a <__stack+0x9b>
		}
		else if (visited[t1] == 1 && (term[t1][0] == color[t1] || term[t1][0] == -1) && (term[t1][1] == color[t1] || term[t1][1] == -1))
    2238:	f7 01       	movw	r30, r14
    223a:	ee 0f       	add	r30, r30
    223c:	ff 1f       	adc	r31, r31
    223e:	ea 59       	subi	r30, 0x9A	; 154
    2240:	fd 4f       	sbci	r31, 0xFD	; 253
    2242:	20 81       	ld	r18, Z
    2244:	31 81       	ldd	r19, Z+1	; 0x01
    2246:	21 30       	cpi	r18, 0x01	; 1
    2248:	31 05       	cpc	r19, r1
    224a:	19 f5       	brne	.+70     	; 0x2292 <__stack+0x93>
    224c:	f7 01       	movw	r30, r14
    224e:	ee 0f       	add	r30, r30
    2250:	ff 1f       	adc	r31, r31
    2252:	ee 0f       	add	r30, r30
    2254:	ff 1f       	adc	r31, r31
    2256:	e3 57       	subi	r30, 0x73	; 115
    2258:	fd 4f       	sbci	r31, 0xFD	; 253
    225a:	20 81       	ld	r18, Z
    225c:	31 81       	ldd	r19, Z+1	; 0x01
    225e:	42 17       	cp	r20, r18
    2260:	53 07       	cpc	r21, r19
    2262:	19 f0       	breq	.+6      	; 0x226a <__stack+0x6b>
    2264:	2f 3f       	cpi	r18, 0xFF	; 255
    2266:	3f 4f       	sbci	r19, 0xFF	; 255
    2268:	a1 f4       	brne	.+40     	; 0x2292 <__stack+0x93>
    226a:	f7 01       	movw	r30, r14
    226c:	ee 0f       	add	r30, r30
    226e:	ff 1f       	adc	r31, r31
    2270:	ee 0f       	add	r30, r30
    2272:	ff 1f       	adc	r31, r31
    2274:	e3 57       	subi	r30, 0x73	; 115
    2276:	fd 4f       	sbci	r31, 0xFD	; 253
    2278:	22 81       	ldd	r18, Z+2	; 0x02
    227a:	33 81       	ldd	r19, Z+3	; 0x03
    227c:	42 17       	cp	r20, r18
    227e:	53 07       	cpc	r21, r19
    2280:	19 f0       	breq	.+6      	; 0x2288 <__stack+0x89>
    2282:	2f 3f       	cpi	r18, 0xFF	; 255
    2284:	3f 4f       	sbci	r19, 0xFF	; 255
    2286:	29 f4       	brne	.+10     	; 0x2292 <__stack+0x93>
		ct = t2;
    2288:	90 93 8a 02 	sts	0x028A, r25
    228c:	80 93 89 02 	sts	0x0289, r24
    2290:	04 c0       	rjmp	.+8      	; 0x229a <__stack+0x9b>
		else ct = t1;
    2292:	f0 92 8a 02 	sts	0x028A, r15
    2296:	e0 92 89 02 	sts	0x0289, r14
/**************************************************
******************SORT*****************************
**************************************************/
int adjCount(int ct)
{
	return (ct + 2) % 4;
    229a:	80 91 89 02 	lds	r24, 0x0289
    229e:	90 91 8a 02 	lds	r25, 0x028A
    22a2:	02 96       	adiw	r24, 0x02	; 2
    22a4:	83 70       	andi	r24, 0x03	; 3
    22a6:	90 78       	andi	r25, 0x80	; 128
    22a8:	99 23       	and	r25, r25
    22aa:	24 f4       	brge	.+8      	; 0x22b4 <__stack+0xb5>
    22ac:	01 97       	sbiw	r24, 0x01	; 1
    22ae:	8c 6f       	ori	r24, 0xFC	; 252
    22b0:	9f 6f       	ori	r25, 0xFF	; 255
    22b2:	01 96       	adiw	r24, 0x01	; 1
		else if (visited[t1] == 1 && (term[t1][0] == color[t1] || term[t1][0] == -1) && (term[t1][1] == color[t1] || term[t1][1] == -1))
		ct = t2;
		else ct = t1;

	}
	adj = adjCount(ct);
    22b4:	90 93 ae 02 	sts	0x02AE, r25
    22b8:	80 93 ad 02 	sts	0x02AD, r24
    22bc:	2c c0       	rjmp	.+88     	; 0x2316 <__stack+0x117>
	if (arm[0] != -1)
	a1 = indicator[arm[0]];
	if (arm[1] != -1)
	a2 = indicator[arm[1]];

	t1 = (ct + 1) % 2;
    22be:	80 91 89 02 	lds	r24, 0x0289
    22c2:	90 91 8a 02 	lds	r25, 0x028A
    22c6:	01 96       	adiw	r24, 0x01	; 1
    22c8:	62 e0       	ldi	r22, 0x02	; 2
    22ca:	70 e0       	ldi	r23, 0x00	; 0
    22cc:	59 d4       	rcall	.+2226   	; 0x2b80 <__divmodhi4>
    22ce:	7c 01       	movw	r14, r24
    22d0:	bc 01       	movw	r22, r24
	t2 = t1 + 2;
    22d2:	02 96       	adiw	r24, 0x02	; 2
	if (arm[0] != -1 || arm[1] != -1)
    22d4:	2f 3f       	cpi	r18, 0xFF	; 255
    22d6:	4f ef       	ldi	r20, 0xFF	; 255
    22d8:	34 07       	cpc	r19, r20
    22da:	c1 f4       	brne	.+48     	; 0x230c <__stack+0x10d>
    22dc:	61 cf       	rjmp	.-318    	; 0x21a0 <newSort+0x1de>
				pickSort(1, a1);
			}
		}
		else if (arm[1] != -1 && (term[a2][0] == -1 || term[a2][1] == -1))
		{
			ct = a2;
    22de:	10 93 8a 02 	sts	0x028A, r17
    22e2:	00 93 89 02 	sts	0x0289, r16
			if (term[a2][0] == -1 || term[a2][1] == -1)
    22e6:	f8 01       	movw	r30, r16
    22e8:	ee 0f       	add	r30, r30
    22ea:	ff 1f       	adc	r31, r31
    22ec:	ee 0f       	add	r30, r30
    22ee:	ff 1f       	adc	r31, r31
    22f0:	e3 57       	subi	r30, 0x73	; 115
    22f2:	fd 4f       	sbci	r31, 0xFD	; 253
    22f4:	42 81       	ldd	r20, Z+2	; 0x02
    22f6:	53 81       	ldd	r21, Z+3	; 0x03
    22f8:	4f 3f       	cpi	r20, 0xFF	; 255
    22fa:	5f 4f       	sbci	r21, 0xFF	; 255
    22fc:	09 f0       	breq	.+2      	; 0x2300 <__stack+0x101>
    22fe:	21 cf       	rjmp	.-446    	; 0x2142 <newSort+0x180>
    2300:	fc ce       	rjmp	.-520    	; 0x20fa <newSort+0x138>
				pickSort(1, a1);
			}
		}
		else if (arm[1] != -1 && (term[a2][0] == -1 || term[a2][1] == -1))
		{
			ct = a2;
    2302:	10 93 8a 02 	sts	0x028A, r17
    2306:	00 93 89 02 	sts	0x0289, r16
    230a:	f7 ce       	rjmp	.-530    	; 0x20fa <newSort+0x138>

	t1 = (ct + 1) % 2;
	t2 = t1 + 2;
	if (arm[0] != -1 || arm[1] != -1)
	{
		ct = a1;
    230c:	d0 93 8a 02 	sts	0x028A, r29
    2310:	c0 93 89 02 	sts	0x0289, r28
    2314:	95 ce       	rjmp	.-726    	; 0x2040 <newSort+0x7e>
		ct = t2;
		else ct = t1;

	}
	adj = adjCount(ct);
}
    2316:	df 91       	pop	r29
    2318:	cf 91       	pop	r28
    231a:	1f 91       	pop	r17
    231c:	0f 91       	pop	r16
    231e:	ff 90       	pop	r15
    2320:	ef 90       	pop	r14
    2322:	08 95       	ret

00002324 <sortCheck>:
void sortCheck()
{
    2324:	8f 92       	push	r8
    2326:	9f 92       	push	r9
    2328:	af 92       	push	r10
    232a:	bf 92       	push	r11
    232c:	cf 92       	push	r12
    232e:	df 92       	push	r13
    2330:	ef 92       	push	r14
    2332:	ff 92       	push	r15
    2334:	0f 93       	push	r16
    2336:	1f 93       	push	r17
    2338:	cf 93       	push	r28
    233a:	df 93       	push	r29
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    233c:	40 91 89 02 	lds	r20, 0x0289
    2340:	50 91 8a 02 	lds	r21, 0x028A
    2344:	42 30       	cpi	r20, 0x02	; 2
    2346:	51 05       	cpc	r21, r1
    2348:	30 f4       	brcc	.+12     	; 0x2356 <sortCheck+0x32>
    234a:	80 91 52 02 	lds	r24, 0x0252
    234e:	90 91 53 02 	lds	r25, 0x0253
    2352:	02 97       	sbiw	r24, 0x02	; 2
    2354:	79 f0       	breq	.+30     	; 0x2374 <sortCheck+0x50>
    2356:	ca 01       	movw	r24, r20
    2358:	02 97       	sbiw	r24, 0x02	; 2
    235a:	02 97       	sbiw	r24, 0x02	; 2
    235c:	80 f4       	brcc	.+32     	; 0x237e <sortCheck+0x5a>
    235e:	80 91 52 02 	lds	r24, 0x0252
    2362:	90 91 53 02 	lds	r25, 0x0253
    2366:	89 2b       	or	r24, r25
    2368:	79 f0       	breq	.+30     	; 0x2388 <sortCheck+0x64>
	adj = adjCount(ct);
}
void sortCheck()
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
    236a:	01 e0       	ldi	r16, 0x01	; 1
    236c:	10 e0       	ldi	r17, 0x00	; 0
    236e:	c0 e0       	ldi	r28, 0x00	; 0
    2370:	d0 e0       	ldi	r29, 0x00	; 0
    2372:	0e c0       	rjmp	.+28     	; 0x2390 <sortCheck+0x6c>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    2374:	00 e0       	ldi	r16, 0x00	; 0
    2376:	10 e0       	ldi	r17, 0x00	; 0
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    2378:	c1 e0       	ldi	r28, 0x01	; 1
    237a:	d0 e0       	ldi	r29, 0x00	; 0
    237c:	09 c0       	rjmp	.+18     	; 0x2390 <sortCheck+0x6c>
	adj = adjCount(ct);
}
void sortCheck()
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
    237e:	01 e0       	ldi	r16, 0x01	; 1
    2380:	10 e0       	ldi	r17, 0x00	; 0
    2382:	c0 e0       	ldi	r28, 0x00	; 0
    2384:	d0 e0       	ldi	r29, 0x00	; 0
    2386:	04 c0       	rjmp	.+8      	; 0x2390 <sortCheck+0x6c>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    2388:	00 e0       	ldi	r16, 0x00	; 0
    238a:	10 e0       	ldi	r17, 0x00	; 0
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    238c:	c1 e0       	ldi	r28, 0x01	; 1
    238e:	d0 e0       	ldi	r29, 0x00	; 0
		arm1 = 0;
	}
	if ((sort[ct % 2] == color[ct] || sort[ct % 2] == color[adj]))
    2390:	9a 01       	movw	r18, r20
    2392:	21 70       	andi	r18, 0x01	; 1
    2394:	30 78       	andi	r19, 0x80	; 128
    2396:	33 23       	and	r19, r19
    2398:	34 f4       	brge	.+12     	; 0x23a6 <sortCheck+0x82>
    239a:	21 50       	subi	r18, 0x01	; 1
    239c:	31 09       	sbc	r19, r1
    239e:	2e 6f       	ori	r18, 0xFE	; 254
    23a0:	3f 6f       	ori	r19, 0xFF	; 255
    23a2:	2f 5f       	subi	r18, 0xFF	; 255
    23a4:	3f 4f       	sbci	r19, 0xFF	; 255
    23a6:	b2 2e       	mov	r11, r18
    23a8:	a3 2e       	mov	r10, r19
    23aa:	f9 01       	movw	r30, r18
    23ac:	ee 0f       	add	r30, r30
    23ae:	ff 1f       	adc	r31, r31
    23b0:	eb 57       	subi	r30, 0x7B	; 123
    23b2:	fd 4f       	sbci	r31, 0xFD	; 253
    23b4:	20 81       	ld	r18, Z
    23b6:	31 81       	ldd	r19, Z+1	; 0x01
    23b8:	fa 01       	movw	r30, r20
    23ba:	ee 0f       	add	r30, r30
    23bc:	ff 1f       	adc	r31, r31
    23be:	e3 56       	subi	r30, 0x63	; 99
    23c0:	fd 4f       	sbci	r31, 0xFD	; 253
    23c2:	80 81       	ld	r24, Z
    23c4:	91 81       	ldd	r25, Z+1	; 0x01
    23c6:	28 17       	cp	r18, r24
    23c8:	39 07       	cpc	r19, r25
    23ca:	79 f0       	breq	.+30     	; 0x23ea <sortCheck+0xc6>
    23cc:	80 91 ad 02 	lds	r24, 0x02AD
    23d0:	90 91 ae 02 	lds	r25, 0x02AE
    23d4:	fc 01       	movw	r30, r24
    23d6:	ee 0f       	add	r30, r30
    23d8:	ff 1f       	adc	r31, r31
    23da:	e3 56       	subi	r30, 0x63	; 99
    23dc:	fd 4f       	sbci	r31, 0xFD	; 253
    23de:	40 81       	ld	r20, Z
    23e0:	51 81       	ldd	r21, Z+1	; 0x01
    23e2:	24 17       	cp	r18, r20
    23e4:	35 07       	cpc	r19, r21
    23e6:	09 f0       	breq	.+2      	; 0x23ea <sortCheck+0xc6>
    23e8:	a6 c0       	rjmp	.+332    	; 0x2536 <sortCheck+0x212>
	{
		if (armCount>0)
    23ea:	80 91 02 02 	lds	r24, 0x0202
    23ee:	90 91 03 02 	lds	r25, 0x0203
    23f2:	18 16       	cp	r1, r24
    23f4:	19 06       	cpc	r1, r25
    23f6:	0c f0       	brlt	.+2      	; 0x23fa <sortCheck+0xd6>
    23f8:	95 c0       	rjmp	.+298    	; 0x2524 <sortCheck+0x200>
		{
			ct = indicator[sort[ct % 2]];
    23fa:	f9 01       	movw	r30, r18
    23fc:	ee 0f       	add	r30, r30
    23fe:	ff 1f       	adc	r31, r31
    2400:	eb 55       	subi	r30, 0x5B	; 91
    2402:	fd 4f       	sbci	r31, 0xFD	; 253
    2404:	60 81       	ld	r22, Z
    2406:	71 81       	ldd	r23, Z+1	; 0x01
    2408:	70 93 8a 02 	sts	0x028A, r23
    240c:	60 93 89 02 	sts	0x0289, r22
			if (arm[arm0] == -1)
    2410:	fe 01       	movw	r30, r28
    2412:	ee 0f       	add	r30, r30
    2414:	ff 1f       	adc	r31, r31
    2416:	ef 54       	subi	r30, 0x4F	; 79
    2418:	fd 4f       	sbci	r31, 0xFD	; 253
    241a:	80 81       	ld	r24, Z
    241c:	91 81       	ldd	r25, Z+1	; 0x01
    241e:	01 96       	adiw	r24, 0x01	; 1
    2420:	69 f4       	brne	.+26     	; 0x243c <sortCheck+0x118>
			pickSort(arm0, ct % 2);
    2422:	61 70       	andi	r22, 0x01	; 1
    2424:	70 78       	andi	r23, 0x80	; 128
    2426:	77 23       	and	r23, r23
    2428:	34 f4       	brge	.+12     	; 0x2436 <sortCheck+0x112>
    242a:	61 50       	subi	r22, 0x01	; 1
    242c:	71 09       	sbc	r23, r1
    242e:	6e 6f       	ori	r22, 0xFE	; 254
    2430:	7f 6f       	ori	r23, 0xFF	; 255
    2432:	6f 5f       	subi	r22, 0xFF	; 255
    2434:	7f 4f       	sbci	r23, 0xFF	; 255
    2436:	ce 01       	movw	r24, r28
    2438:	86 d8       	rcall	.-3828   	; 0x1546 <pickSort>
    243a:	15 c0       	rjmp	.+42     	; 0x2466 <sortCheck+0x142>
			else if (arm[arm1] == -1)
    243c:	f8 01       	movw	r30, r16
    243e:	ee 0f       	add	r30, r30
    2440:	ff 1f       	adc	r31, r31
    2442:	ef 54       	subi	r30, 0x4F	; 79
    2444:	fd 4f       	sbci	r31, 0xFD	; 253
    2446:	80 81       	ld	r24, Z
    2448:	91 81       	ldd	r25, Z+1	; 0x01
    244a:	01 96       	adiw	r24, 0x01	; 1
    244c:	61 f4       	brne	.+24     	; 0x2466 <sortCheck+0x142>
			pickSort(arm1, ct % 2);
    244e:	61 70       	andi	r22, 0x01	; 1
    2450:	70 78       	andi	r23, 0x80	; 128
    2452:	77 23       	and	r23, r23
    2454:	34 f4       	brge	.+12     	; 0x2462 <sortCheck+0x13e>
    2456:	61 50       	subi	r22, 0x01	; 1
    2458:	71 09       	sbc	r23, r1
    245a:	6e 6f       	ori	r22, 0xFE	; 254
    245c:	7f 6f       	ori	r23, 0xFF	; 255
    245e:	6f 5f       	subi	r22, 0xFF	; 255
    2460:	7f 4f       	sbci	r23, 0xFF	; 255
    2462:	c8 01       	movw	r24, r16
    2464:	70 d8       	rcall	.-3872   	; 0x1546 <pickSort>
			if (armCount != 1 && term[ct][0] != -1 && term[ct][1] != -1 && sort[ct % 2] == -1)
    2466:	80 91 02 02 	lds	r24, 0x0202
    246a:	90 91 03 02 	lds	r25, 0x0203
    246e:	01 97       	sbiw	r24, 0x01	; 1
    2470:	09 f4       	brne	.+2      	; 0x2474 <sortCheck+0x150>
    2472:	6f c1       	rjmp	.+734    	; 0x2752 <sortCheck+0x42e>
    2474:	80 91 89 02 	lds	r24, 0x0289
    2478:	90 91 8a 02 	lds	r25, 0x028A
    247c:	fc 01       	movw	r30, r24
    247e:	ee 0f       	add	r30, r30
    2480:	ff 1f       	adc	r31, r31
    2482:	ee 0f       	add	r30, r30
    2484:	ff 1f       	adc	r31, r31
    2486:	e3 57       	subi	r30, 0x73	; 115
    2488:	fd 4f       	sbci	r31, 0xFD	; 253
    248a:	20 81       	ld	r18, Z
    248c:	31 81       	ldd	r19, Z+1	; 0x01
    248e:	2f 3f       	cpi	r18, 0xFF	; 255
    2490:	3f 4f       	sbci	r19, 0xFF	; 255
    2492:	09 f4       	brne	.+2      	; 0x2496 <sortCheck+0x172>
    2494:	5e c1       	rjmp	.+700    	; 0x2752 <sortCheck+0x42e>
    2496:	fc 01       	movw	r30, r24
    2498:	ee 0f       	add	r30, r30
    249a:	ff 1f       	adc	r31, r31
    249c:	ee 0f       	add	r30, r30
    249e:	ff 1f       	adc	r31, r31
    24a0:	e3 57       	subi	r30, 0x73	; 115
    24a2:	fd 4f       	sbci	r31, 0xFD	; 253
    24a4:	22 81       	ldd	r18, Z+2	; 0x02
    24a6:	33 81       	ldd	r19, Z+3	; 0x03
    24a8:	2f 3f       	cpi	r18, 0xFF	; 255
    24aa:	3f 4f       	sbci	r19, 0xFF	; 255
    24ac:	09 f4       	brne	.+2      	; 0x24b0 <sortCheck+0x18c>
    24ae:	51 c1       	rjmp	.+674    	; 0x2752 <sortCheck+0x42e>
    24b0:	9c 01       	movw	r18, r24
    24b2:	21 70       	andi	r18, 0x01	; 1
    24b4:	30 78       	andi	r19, 0x80	; 128
    24b6:	33 23       	and	r19, r19
    24b8:	34 f4       	brge	.+12     	; 0x24c6 <sortCheck+0x1a2>
    24ba:	21 50       	subi	r18, 0x01	; 1
    24bc:	31 09       	sbc	r19, r1
    24be:	2e 6f       	ori	r18, 0xFE	; 254
    24c0:	3f 6f       	ori	r19, 0xFF	; 255
    24c2:	2f 5f       	subi	r18, 0xFF	; 255
    24c4:	3f 4f       	sbci	r19, 0xFF	; 255
    24c6:	62 2f       	mov	r22, r18
    24c8:	73 2f       	mov	r23, r19
    24ca:	f9 01       	movw	r30, r18
    24cc:	ee 0f       	add	r30, r30
    24ce:	ff 1f       	adc	r31, r31
    24d0:	eb 57       	subi	r30, 0x7B	; 123
    24d2:	fd 4f       	sbci	r31, 0xFD	; 253
    24d4:	20 81       	ld	r18, Z
    24d6:	31 81       	ldd	r19, Z+1	; 0x01
    24d8:	2f 3f       	cpi	r18, 0xFF	; 255
    24da:	3f 4f       	sbci	r19, 0xFF	; 255
    24dc:	09 f0       	breq	.+2      	; 0x24e0 <sortCheck+0x1bc>
    24de:	39 c1       	rjmp	.+626    	; 0x2752 <sortCheck+0x42e>
			{
				if (arm[arm0] == color[ct])
    24e0:	fc 01       	movw	r30, r24
    24e2:	ee 0f       	add	r30, r30
    24e4:	ff 1f       	adc	r31, r31
    24e6:	e3 56       	subi	r30, 0x63	; 99
    24e8:	fd 4f       	sbci	r31, 0xFD	; 253
    24ea:	80 81       	ld	r24, Z
    24ec:	91 81       	ldd	r25, Z+1	; 0x01
    24ee:	fe 01       	movw	r30, r28
    24f0:	ee 0f       	add	r30, r30
    24f2:	ff 1f       	adc	r31, r31
    24f4:	ef 54       	subi	r30, 0x4F	; 79
    24f6:	fd 4f       	sbci	r31, 0xFD	; 253
    24f8:	20 81       	ld	r18, Z
    24fa:	31 81       	ldd	r19, Z+1	; 0x01
    24fc:	28 17       	cp	r18, r24
    24fe:	39 07       	cpc	r19, r25
    2500:	19 f4       	brne	.+6      	; 0x2508 <sortCheck+0x1e4>
				sortDrop(arm1, ct % 2);
    2502:	c8 01       	movw	r24, r16
    2504:	d1 d8       	rcall	.-3678   	; 0x16a8 <sortDrop>
    2506:	25 c1       	rjmp	.+586    	; 0x2752 <sortCheck+0x42e>
				else if (arm[arm1] == color[ct])
    2508:	f8 01       	movw	r30, r16
    250a:	ee 0f       	add	r30, r30
    250c:	ff 1f       	adc	r31, r31
    250e:	ef 54       	subi	r30, 0x4F	; 79
    2510:	fd 4f       	sbci	r31, 0xFD	; 253
    2512:	20 81       	ld	r18, Z
    2514:	31 81       	ldd	r19, Z+1	; 0x01
    2516:	82 17       	cp	r24, r18
    2518:	93 07       	cpc	r25, r19
    251a:	09 f0       	breq	.+2      	; 0x251e <sortCheck+0x1fa>
    251c:	1a c1       	rjmp	.+564    	; 0x2752 <sortCheck+0x42e>
				sortDrop(arm0, ct % 2);
    251e:	ce 01       	movw	r24, r28
    2520:	c3 d8       	rcall	.-3706   	; 0x16a8 <sortDrop>
    2522:	17 c1       	rjmp	.+558    	; 0x2752 <sortCheck+0x42e>
			}
		}
		else ct = adj;
    2524:	80 91 ad 02 	lds	r24, 0x02AD
    2528:	90 91 ae 02 	lds	r25, 0x02AE
    252c:	90 93 8a 02 	sts	0x028A, r25
    2530:	80 93 89 02 	sts	0x0289, r24
    2534:	0e c1       	rjmp	.+540    	; 0x2752 <sortCheck+0x42e>
	}
	else if (arm[arm0] != color[adj] && arm[arm1] != color[adj])
    2536:	fe 01       	movw	r30, r28
    2538:	ee 0f       	add	r30, r30
    253a:	ff 1f       	adc	r31, r31
    253c:	ef 54       	subi	r30, 0x4F	; 79
    253e:	fd 4f       	sbci	r31, 0xFD	; 253
    2540:	01 90       	ld	r0, Z+
    2542:	f0 81       	ld	r31, Z
    2544:	e0 2d       	mov	r30, r0
    2546:	4e 17       	cp	r20, r30
    2548:	5f 07       	cpc	r21, r31
    254a:	09 f4       	brne	.+2      	; 0x254e <sortCheck+0x22a>
    254c:	8f c0       	rjmp	.+286    	; 0x266c <sortCheck+0x348>
    254e:	d8 01       	movw	r26, r16
    2550:	aa 0f       	add	r26, r26
    2552:	bb 1f       	adc	r27, r27
    2554:	af 54       	subi	r26, 0x4F	; 79
    2556:	bd 4f       	sbci	r27, 0xFD	; 253
    2558:	8d 90       	ld	r8, X+
    255a:	9c 90       	ld	r9, X
    255c:	48 15       	cp	r20, r8
    255e:	59 05       	cpc	r21, r9
    2560:	09 f4       	brne	.+2      	; 0x2564 <sortCheck+0x240>
    2562:	84 c0       	rjmp	.+264    	; 0x266c <sortCheck+0x348>
	{
		if (armCount == 0 || (armCount == 1 && sort[ct % 2] != -1) || ((armCount == 2 || armCount == 1) && (term[adj][0] == color[adj] || term[adj][0] == -1) && (term[adj][1] == color[adj] || term[adj][1] == -1)))
    2564:	e0 90 02 02 	lds	r14, 0x0202
    2568:	f0 90 03 02 	lds	r15, 0x0203
    256c:	e1 14       	cp	r14, r1
    256e:	f1 04       	cpc	r15, r1
    2570:	09 f4       	brne	.+2      	; 0x2574 <sortCheck+0x250>
    2572:	4e c0       	rjmp	.+156    	; 0x2610 <sortCheck+0x2ec>
    2574:	b1 e0       	ldi	r27, 0x01	; 1
    2576:	eb 16       	cp	r14, r27
    2578:	f1 04       	cpc	r15, r1
    257a:	29 f4       	brne	.+10     	; 0x2586 <sortCheck+0x262>
    257c:	2f 3f       	cpi	r18, 0xFF	; 255
    257e:	6f ef       	ldi	r22, 0xFF	; 255
    2580:	36 07       	cpc	r19, r22
    2582:	b1 f5       	brne	.+108    	; 0x25f0 <sortCheck+0x2cc>
    2584:	09 c0       	rjmp	.+18     	; 0x2598 <sortCheck+0x274>
    2586:	67 01       	movw	r12, r14
    2588:	71 e0       	ldi	r23, 0x01	; 1
    258a:	c7 1a       	sub	r12, r23
    258c:	d1 08       	sbc	r13, r1
    258e:	a2 e0       	ldi	r26, 0x02	; 2
    2590:	ca 16       	cp	r12, r26
    2592:	d1 04       	cpc	r13, r1
    2594:	08 f0       	brcs	.+2      	; 0x2598 <sortCheck+0x274>
    2596:	65 c0       	rjmp	.+202    	; 0x2662 <sortCheck+0x33e>
    2598:	6c 01       	movw	r12, r24
    259a:	cc 0c       	add	r12, r12
    259c:	dd 1c       	adc	r13, r13
    259e:	cc 0c       	add	r12, r12
    25a0:	dd 1c       	adc	r13, r13
    25a2:	b6 01       	movw	r22, r12
    25a4:	63 57       	subi	r22, 0x73	; 115
    25a6:	7d 4f       	sbci	r23, 0xFD	; 253
    25a8:	db 01       	movw	r26, r22
    25aa:	cd 90       	ld	r12, X+
    25ac:	dc 90       	ld	r13, X
    25ae:	4c 15       	cp	r20, r12
    25b0:	5d 05       	cpc	r21, r13
    25b2:	21 f0       	breq	.+8      	; 0x25bc <sortCheck+0x298>
    25b4:	cd 20       	and	r12, r13
    25b6:	c0 94       	com	r12
    25b8:	09 f0       	breq	.+2      	; 0x25bc <sortCheck+0x298>
    25ba:	53 c0       	rjmp	.+166    	; 0x2662 <sortCheck+0x33e>
    25bc:	6c 01       	movw	r12, r24
    25be:	cc 0c       	add	r12, r12
    25c0:	dd 1c       	adc	r13, r13
    25c2:	cc 0c       	add	r12, r12
    25c4:	dd 1c       	adc	r13, r13
    25c6:	b6 01       	movw	r22, r12
    25c8:	63 57       	subi	r22, 0x73	; 115
    25ca:	7d 4f       	sbci	r23, 0xFD	; 253
    25cc:	db 01       	movw	r26, r22
    25ce:	12 96       	adiw	r26, 0x02	; 2
    25d0:	cd 90       	ld	r12, X+
    25d2:	dc 90       	ld	r13, X
    25d4:	13 97       	sbiw	r26, 0x03	; 3
    25d6:	4c 15       	cp	r20, r12
    25d8:	5d 05       	cpc	r21, r13
    25da:	21 f0       	breq	.+8      	; 0x25e4 <sortCheck+0x2c0>
    25dc:	cd 20       	and	r12, r13
    25de:	c0 94       	com	r12
    25e0:	09 f0       	breq	.+2      	; 0x25e4 <sortCheck+0x2c0>
    25e2:	3f c0       	rjmp	.+126    	; 0x2662 <sortCheck+0x33e>
		{
			if (armCount>0)
    25e4:	1e 14       	cp	r1, r14
    25e6:	1f 04       	cpc	r1, r15
    25e8:	9c f4       	brge	.+38     	; 0x2610 <sortCheck+0x2ec>
			{
				if(sort[ct % 2] != -1)
    25ea:	2f 3f       	cpi	r18, 0xFF	; 255
    25ec:	3f 4f       	sbci	r19, 0xFF	; 255
    25ee:	81 f0       	breq	.+32     	; 0x2610 <sortCheck+0x2ec>
				{
					
					if (arm[arm0] == -1)
    25f0:	31 96       	adiw	r30, 0x01	; 1
    25f2:	31 f4       	brne	.+12     	; 0x2600 <sortCheck+0x2dc>
					pickSort(arm0, ct % 2);
    25f4:	6b 2d       	mov	r22, r11
    25f6:	7a 2d       	mov	r23, r10
    25f8:	ce 01       	movw	r24, r28
    25fa:	0e 94 a3 0a 	call	0x1546	; 0x1546 <pickSort>
    25fe:	08 c0       	rjmp	.+16     	; 0x2610 <sortCheck+0x2ec>
					else if (arm[arm1] == -1)
    2600:	89 20       	and	r8, r9
    2602:	80 94       	com	r8
    2604:	29 f4       	brne	.+10     	; 0x2610 <sortCheck+0x2ec>
					pickSort(arm1, ct % 2);
    2606:	6b 2d       	mov	r22, r11
    2608:	7a 2d       	mov	r23, r10
    260a:	c8 01       	movw	r24, r16
    260c:	0e 94 a3 0a 	call	0x1546	; 0x1546 <pickSort>
				}
			}
			traverseToSort(ct % 2 + 4, (ct + 1) % 2 + 4);
    2610:	80 91 89 02 	lds	r24, 0x0289
    2614:	90 91 8a 02 	lds	r25, 0x028A
    2618:	bc 01       	movw	r22, r24
    261a:	6f 5f       	subi	r22, 0xFF	; 255
    261c:	7f 4f       	sbci	r23, 0xFF	; 255
    261e:	61 70       	andi	r22, 0x01	; 1
    2620:	70 78       	andi	r23, 0x80	; 128
    2622:	77 23       	and	r23, r23
    2624:	34 f4       	brge	.+12     	; 0x2632 <sortCheck+0x30e>
    2626:	61 50       	subi	r22, 0x01	; 1
    2628:	71 09       	sbc	r23, r1
    262a:	6e 6f       	ori	r22, 0xFE	; 254
    262c:	7f 6f       	ori	r23, 0xFF	; 255
    262e:	6f 5f       	subi	r22, 0xFF	; 255
    2630:	7f 4f       	sbci	r23, 0xFF	; 255
    2632:	6c 5f       	subi	r22, 0xFC	; 252
    2634:	7f 4f       	sbci	r23, 0xFF	; 255
    2636:	81 70       	andi	r24, 0x01	; 1
    2638:	90 78       	andi	r25, 0x80	; 128
    263a:	99 23       	and	r25, r25
    263c:	24 f4       	brge	.+8      	; 0x2646 <sortCheck+0x322>
    263e:	01 97       	sbiw	r24, 0x01	; 1
    2640:	8e 6f       	ori	r24, 0xFE	; 254
    2642:	9f 6f       	ori	r25, 0xFF	; 255
    2644:	01 96       	adiw	r24, 0x01	; 1
    2646:	04 96       	adiw	r24, 0x04	; 4
    2648:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <traverseToSort>
			newSort();
    264c:	ba dc       	rcall	.-1676   	; 0x1fc2 <newSort>
			if (ct == 4 || ct == 5)
    264e:	80 91 89 02 	lds	r24, 0x0289
    2652:	90 91 8a 02 	lds	r25, 0x028A
    2656:	04 97       	sbiw	r24, 0x04	; 4
    2658:	02 97       	sbiw	r24, 0x02	; 2
    265a:	08 f0       	brcs	.+2      	; 0x265e <sortCheck+0x33a>
    265c:	a0 c0       	rjmp	.+320    	; 0x279e <sortCheck+0x47a>
			newSort();
    265e:	b1 dc       	rcall	.-1694   	; 0x1fc2 <newSort>
    2660:	9e c0       	rjmp	.+316    	; 0x279e <sortCheck+0x47a>
			return;
		}
		else ct = adj;
    2662:	90 93 8a 02 	sts	0x028A, r25
    2666:	80 93 89 02 	sts	0x0289, r24
		}
		else ct = adj;
	}
	else if (arm[arm0] != color[adj] && arm[arm1] != color[adj])
	{
		if (armCount == 0 || (armCount == 1 && sort[ct % 2] != -1) || ((armCount == 2 || armCount == 1) && (term[adj][0] == color[adj] || term[adj][0] == -1) && (term[adj][1] == color[adj] || term[adj][1] == -1)))
    266a:	73 c0       	rjmp	.+230    	; 0x2752 <sortCheck+0x42e>
		}
		else ct = adj;
	}
	else
	{
		if (armCount == 0 && ((visited[adj] == 1 && (term[adj][0] != -1 && term[adj][1] != -1)) || visited[adj] == 0) && sort[ct % 2] == -1)
    266c:	a0 91 02 02 	lds	r26, 0x0202
    2670:	b0 91 03 02 	lds	r27, 0x0203
    2674:	10 97       	sbiw	r26, 0x00	; 0
    2676:	d1 f5       	brne	.+116    	; 0x26ec <sortCheck+0x3c8>
    2678:	dc 01       	movw	r26, r24
    267a:	aa 0f       	add	r26, r26
    267c:	bb 1f       	adc	r27, r27
    267e:	aa 59       	subi	r26, 0x9A	; 154
    2680:	bd 4f       	sbci	r27, 0xFD	; 253
    2682:	0d 90       	ld	r0, X+
    2684:	bc 91       	ld	r27, X
    2686:	a0 2d       	mov	r26, r0
    2688:	a1 30       	cpi	r26, 0x01	; 1
    268a:	b1 05       	cpc	r27, r1
    268c:	d9 f4       	brne	.+54     	; 0x26c4 <sortCheck+0x3a0>
    268e:	dc 01       	movw	r26, r24
    2690:	aa 0f       	add	r26, r26
    2692:	bb 1f       	adc	r27, r27
    2694:	aa 0f       	add	r26, r26
    2696:	bb 1f       	adc	r27, r27
    2698:	a3 57       	subi	r26, 0x73	; 115
    269a:	bd 4f       	sbci	r27, 0xFD	; 253
    269c:	0d 90       	ld	r0, X+
    269e:	bc 91       	ld	r27, X
    26a0:	a0 2d       	mov	r26, r0
    26a2:	11 96       	adiw	r26, 0x01	; 1
    26a4:	09 f4       	brne	.+2      	; 0x26a8 <sortCheck+0x384>
    26a6:	4d c0       	rjmp	.+154    	; 0x2742 <sortCheck+0x41e>
    26a8:	dc 01       	movw	r26, r24
    26aa:	aa 0f       	add	r26, r26
    26ac:	bb 1f       	adc	r27, r27
    26ae:	aa 0f       	add	r26, r26
    26b0:	bb 1f       	adc	r27, r27
    26b2:	a3 57       	subi	r26, 0x73	; 115
    26b4:	bd 4f       	sbci	r27, 0xFD	; 253
    26b6:	12 96       	adiw	r26, 0x02	; 2
    26b8:	8d 91       	ld	r24, X+
    26ba:	9c 91       	ld	r25, X
    26bc:	13 97       	sbiw	r26, 0x03	; 3
    26be:	01 96       	adiw	r24, 0x01	; 1
    26c0:	19 f4       	brne	.+6      	; 0x26c8 <sortCheck+0x3a4>
    26c2:	3f c0       	rjmp	.+126    	; 0x2742 <sortCheck+0x41e>
    26c4:	ab 2b       	or	r26, r27
    26c6:	e9 f5       	brne	.+122    	; 0x2742 <sortCheck+0x41e>
    26c8:	2f 3f       	cpi	r18, 0xFF	; 255
    26ca:	3f 4f       	sbci	r19, 0xFF	; 255
    26cc:	d1 f5       	brne	.+116    	; 0x2742 <sortCheck+0x41e>
		if (arm[arm0] == color[adj])
    26ce:	4e 17       	cp	r20, r30
    26d0:	5f 07       	cpc	r21, r31
    26d2:	31 f4       	brne	.+12     	; 0x26e0 <sortCheck+0x3bc>
		sortDrop(arm1, ct % 2);
    26d4:	6b 2d       	mov	r22, r11
    26d6:	7a 2d       	mov	r23, r10
    26d8:	c8 01       	movw	r24, r16
    26da:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <sortDrop>
    26de:	31 c0       	rjmp	.+98     	; 0x2742 <sortCheck+0x41e>
		else sortDrop(arm0, ct % 2);
    26e0:	6b 2d       	mov	r22, r11
    26e2:	7a 2d       	mov	r23, r10
    26e4:	ce 01       	movw	r24, r28
    26e6:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <sortDrop>
    26ea:	2b c0       	rjmp	.+86     	; 0x2742 <sortCheck+0x41e>
		else if (armCount == 1 && (term[adj][0] == -1 || term[adj][1] == -1) && sort[ct % 2] != -1)
    26ec:	11 97       	sbiw	r26, 0x01	; 1
    26ee:	49 f5       	brne	.+82     	; 0x2742 <sortCheck+0x41e>
    26f0:	dc 01       	movw	r26, r24
    26f2:	aa 0f       	add	r26, r26
    26f4:	bb 1f       	adc	r27, r27
    26f6:	aa 0f       	add	r26, r26
    26f8:	bb 1f       	adc	r27, r27
    26fa:	a3 57       	subi	r26, 0x73	; 115
    26fc:	bd 4f       	sbci	r27, 0xFD	; 253
    26fe:	4d 91       	ld	r20, X+
    2700:	5c 91       	ld	r21, X
    2702:	4f 3f       	cpi	r20, 0xFF	; 255
    2704:	5f 4f       	sbci	r21, 0xFF	; 255
    2706:	69 f0       	breq	.+26     	; 0x2722 <sortCheck+0x3fe>
    2708:	dc 01       	movw	r26, r24
    270a:	aa 0f       	add	r26, r26
    270c:	bb 1f       	adc	r27, r27
    270e:	aa 0f       	add	r26, r26
    2710:	bb 1f       	adc	r27, r27
    2712:	a3 57       	subi	r26, 0x73	; 115
    2714:	bd 4f       	sbci	r27, 0xFD	; 253
    2716:	12 96       	adiw	r26, 0x02	; 2
    2718:	8d 91       	ld	r24, X+
    271a:	9c 91       	ld	r25, X
    271c:	13 97       	sbiw	r26, 0x03	; 3
    271e:	01 96       	adiw	r24, 0x01	; 1
    2720:	81 f4       	brne	.+32     	; 0x2742 <sortCheck+0x41e>
    2722:	2f 3f       	cpi	r18, 0xFF	; 255
    2724:	3f 4f       	sbci	r19, 0xFF	; 255
    2726:	69 f0       	breq	.+26     	; 0x2742 <sortCheck+0x41e>
		if (arm[arm0] == -1)
    2728:	31 96       	adiw	r30, 0x01	; 1
    272a:	31 f4       	brne	.+12     	; 0x2738 <sortCheck+0x414>
		pickSort(arm0, ct % 2);
    272c:	6b 2d       	mov	r22, r11
    272e:	7a 2d       	mov	r23, r10
    2730:	ce 01       	movw	r24, r28
    2732:	0e 94 a3 0a 	call	0x1546	; 0x1546 <pickSort>
    2736:	05 c0       	rjmp	.+10     	; 0x2742 <sortCheck+0x41e>
		else	pickSort(arm1, ct % 2);
    2738:	6b 2d       	mov	r22, r11
    273a:	7a 2d       	mov	r23, r10
    273c:	c8 01       	movw	r24, r16
    273e:	0e 94 a3 0a 	call	0x1546	; 0x1546 <pickSort>
		ct = adj;
    2742:	80 91 ad 02 	lds	r24, 0x02AD
    2746:	90 91 ae 02 	lds	r25, 0x02AE
    274a:	90 93 8a 02 	sts	0x028A, r25
    274e:	80 93 89 02 	sts	0x0289, r24
	}
	lcd_print(2,15,ct,1);
    2752:	40 91 89 02 	lds	r20, 0x0289
    2756:	50 91 8a 02 	lds	r21, 0x028A
    275a:	21 e0       	ldi	r18, 0x01	; 1
    275c:	30 e0       	ldi	r19, 0x00	; 0
    275e:	6f e0       	ldi	r22, 0x0F	; 15
    2760:	82 e0       	ldi	r24, 0x02	; 2
    2762:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
	buzzer();
    2766:	0e 94 c5 07 	call	0xf8a	; 0xf8a <buzzer>
    276a:	7f ef       	ldi	r23, 0xFF	; 255
    276c:	8f ef       	ldi	r24, 0xFF	; 255
    276e:	9c e2       	ldi	r25, 0x2C	; 44
    2770:	71 50       	subi	r23, 0x01	; 1
    2772:	80 40       	sbci	r24, 0x00	; 0
    2774:	90 40       	sbci	r25, 0x00	; 0
    2776:	e1 f7       	brne	.-8      	; 0x2770 <sortCheck+0x44c>
    2778:	00 c0       	rjmp	.+0      	; 0x277a <sortCheck+0x456>
    277a:	00 00       	nop
/**************************************************
******************SORT*****************************
**************************************************/
int adjCount(int ct)
{
	return (ct + 2) % 4;
    277c:	80 91 89 02 	lds	r24, 0x0289
    2780:	90 91 8a 02 	lds	r25, 0x028A
    2784:	02 96       	adiw	r24, 0x02	; 2
    2786:	83 70       	andi	r24, 0x03	; 3
    2788:	90 78       	andi	r25, 0x80	; 128
    278a:	99 23       	and	r25, r25
    278c:	24 f4       	brge	.+8      	; 0x2796 <sortCheck+0x472>
    278e:	01 97       	sbiw	r24, 0x01	; 1
    2790:	8c 6f       	ori	r24, 0xFC	; 252
    2792:	9f 6f       	ori	r25, 0xFF	; 255
    2794:	01 96       	adiw	r24, 0x01	; 1
		ct = adj;
	}
	lcd_print(2,15,ct,1);
	buzzer();
	_delay_ms(1000);
	adj = adjCount(ct);
    2796:	90 93 ae 02 	sts	0x02AE, r25
    279a:	80 93 ad 02 	sts	0x02AD, r24
}
    279e:	df 91       	pop	r29
    27a0:	cf 91       	pop	r28
    27a2:	1f 91       	pop	r17
    27a4:	0f 91       	pop	r16
    27a6:	ff 90       	pop	r15
    27a8:	ef 90       	pop	r14
    27aa:	df 90       	pop	r13
    27ac:	cf 90       	pop	r12
    27ae:	bf 90       	pop	r11
    27b0:	af 90       	pop	r10
    27b2:	9f 90       	pop	r9
    27b4:	8f 90       	pop	r8
    27b6:	08 95       	ret

000027b8 <main>:
	_delay_ms(1000);
}
int main()
{
	int i=0;
	init_devices();
    27b8:	0e 94 cd 04 	call	0x99a	; 0x99a <init_devices>
	lcd_set_4bit();
    27bc:	0e 94 94 00 	call	0x128	; 0x128 <lcd_set_4bit>
	lcd_init();
    27c0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <lcd_init>
	color_sensor_scaling();
    27c4:	0e 94 5d 03 	call	0x6ba	; 0x6ba <color_sensor_scaling>
	stop();
	lcd_print(2,11,scan(),1);
	stop();
	while(1);
	*/
	setIndicatorAndColor();
    27c8:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <setIndicatorAndColor>
	threshold=6000;
    27cc:	80 e7       	ldi	r24, 0x70	; 112
    27ce:	97 e1       	ldi	r25, 0x17	; 23
    27d0:	90 93 6f 02 	sts	0x026F, r25
    27d4:	80 93 6e 02 	sts	0x026E, r24
	ct = 0; adj = 2;
    27d8:	10 92 8a 02 	sts	0x028A, r1
    27dc:	10 92 89 02 	sts	0x0289, r1
    27e0:	82 e0       	ldi	r24, 0x02	; 2
    27e2:	90 e0       	ldi	r25, 0x00	; 0
    27e4:	90 93 ae 02 	sts	0x02AE, r25
    27e8:	80 93 ad 02 	sts	0x02AD, r24
	//lcd("Begin");
	while (sorted<total)
    27ec:	20 91 58 02 	lds	r18, 0x0258
    27f0:	30 91 59 02 	lds	r19, 0x0259
    27f4:	80 91 00 02 	lds	r24, 0x0200
    27f8:	90 91 01 02 	lds	r25, 0x0201
    27fc:	28 17       	cp	r18, r24
    27fe:	39 07       	cpc	r19, r25
    2800:	ac f5       	brge	.+106    	; 0x286c <main+0xb4>
	{
		canDrop();
    2802:	69 da       	rcall	.-2862   	; 0x1cd6 <canDrop>
		//buzzer_on();
		//_delay_ms(500);
		//buzzer_off();
		if (visitedCount == 3)
    2804:	80 91 56 02 	lds	r24, 0x0256
    2808:	90 91 57 02 	lds	r25, 0x0257
    280c:	03 97       	sbiw	r24, 0x03	; 3
    280e:	11 f4       	brne	.+4      	; 0x2814 <main+0x5c>
			predict();
    2810:	0e 94 6e 09 	call	0x12dc	; 0x12dc <predict>
		if (sorted == total)
    2814:	20 91 58 02 	lds	r18, 0x0258
    2818:	30 91 59 02 	lds	r19, 0x0259
    281c:	80 91 00 02 	lds	r24, 0x0200
    2820:	90 91 01 02 	lds	r25, 0x0201
    2824:	28 17       	cp	r18, r24
    2826:	39 07       	cpc	r19, r25
    2828:	09 f1       	breq	.+66     	; 0x286c <main+0xb4>
			break;
		pickup();
    282a:	0e 94 06 0c 	call	0x180c	; 0x180c <pickup>
		traverseToSort(ct, ct % 2 + 4);
    282e:	80 91 89 02 	lds	r24, 0x0289
    2832:	90 91 8a 02 	lds	r25, 0x028A
    2836:	bc 01       	movw	r22, r24
    2838:	61 70       	andi	r22, 0x01	; 1
    283a:	70 78       	andi	r23, 0x80	; 128
    283c:	77 23       	and	r23, r23
    283e:	34 f4       	brge	.+12     	; 0x284c <main+0x94>
    2840:	61 50       	subi	r22, 0x01	; 1
    2842:	71 09       	sbc	r23, r1
    2844:	6e 6f       	ori	r22, 0xFE	; 254
    2846:	7f 6f       	ori	r23, 0xFF	; 255
    2848:	6f 5f       	subi	r22, 0xFF	; 255
    284a:	7f 4f       	sbci	r23, 0xFF	; 255
    284c:	6c 5f       	subi	r22, 0xFC	; 252
    284e:	7f 4f       	sbci	r23, 0xFF	; 255
    2850:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <traverseToSort>
		sortCheck();
    2854:	67 dd       	rcall	.-1330   	; 0x2324 <sortCheck>
	*/
	setIndicatorAndColor();
	threshold=6000;
	ct = 0; adj = 2;
	//lcd("Begin");
	while (sorted<total)
    2856:	20 91 58 02 	lds	r18, 0x0258
    285a:	30 91 59 02 	lds	r19, 0x0259
    285e:	80 91 00 02 	lds	r24, 0x0200
    2862:	90 91 01 02 	lds	r25, 0x0201
    2866:	28 17       	cp	r18, r24
    2868:	39 07       	cpc	r19, r25
    286a:	5c f2       	brlt	.-106    	; 0x2802 <main+0x4a>
		//..printf("%d %d\n", term[i][0], term[i][1]);
	//..printf("Sort 0=%dSort 1=%d\nArm 0=%dArm 1=%d\n", sort[0], sort[1], arm[0], arm[1]);
	//..printf("Cost=%d\nSORTED!!!!!\n", cost + 7);
	//getch();
	return 0;
    286c:	80 e0       	ldi	r24, 0x00	; 0
    286e:	90 e0       	ldi	r25, 0x00	; 0
    2870:	08 95       	ret

00002872 <__subsf3>:
    2872:	50 58       	subi	r21, 0x80	; 128

00002874 <__addsf3>:
    2874:	bb 27       	eor	r27, r27
    2876:	aa 27       	eor	r26, r26
    2878:	0e d0       	rcall	.+28     	; 0x2896 <__addsf3x>
    287a:	48 c1       	rjmp	.+656    	; 0x2b0c <__fp_round>
    287c:	39 d1       	rcall	.+626    	; 0x2af0 <__fp_pscA>
    287e:	30 f0       	brcs	.+12     	; 0x288c <__addsf3+0x18>
    2880:	3e d1       	rcall	.+636    	; 0x2afe <__fp_pscB>
    2882:	20 f0       	brcs	.+8      	; 0x288c <__addsf3+0x18>
    2884:	31 f4       	brne	.+12     	; 0x2892 <__addsf3+0x1e>
    2886:	9f 3f       	cpi	r25, 0xFF	; 255
    2888:	11 f4       	brne	.+4      	; 0x288e <__addsf3+0x1a>
    288a:	1e f4       	brtc	.+6      	; 0x2892 <__addsf3+0x1e>
    288c:	2e c1       	rjmp	.+604    	; 0x2aea <__fp_nan>
    288e:	0e f4       	brtc	.+2      	; 0x2892 <__addsf3+0x1e>
    2890:	e0 95       	com	r30
    2892:	e7 fb       	bst	r30, 7
    2894:	24 c1       	rjmp	.+584    	; 0x2ade <__fp_inf>

00002896 <__addsf3x>:
    2896:	e9 2f       	mov	r30, r25
    2898:	4a d1       	rcall	.+660    	; 0x2b2e <__fp_split3>
    289a:	80 f3       	brcs	.-32     	; 0x287c <__addsf3+0x8>
    289c:	ba 17       	cp	r27, r26
    289e:	62 07       	cpc	r22, r18
    28a0:	73 07       	cpc	r23, r19
    28a2:	84 07       	cpc	r24, r20
    28a4:	95 07       	cpc	r25, r21
    28a6:	18 f0       	brcs	.+6      	; 0x28ae <__addsf3x+0x18>
    28a8:	71 f4       	brne	.+28     	; 0x28c6 <__addsf3x+0x30>
    28aa:	9e f5       	brtc	.+102    	; 0x2912 <__addsf3x+0x7c>
    28ac:	62 c1       	rjmp	.+708    	; 0x2b72 <__fp_zero>
    28ae:	0e f4       	brtc	.+2      	; 0x28b2 <__addsf3x+0x1c>
    28b0:	e0 95       	com	r30
    28b2:	0b 2e       	mov	r0, r27
    28b4:	ba 2f       	mov	r27, r26
    28b6:	a0 2d       	mov	r26, r0
    28b8:	0b 01       	movw	r0, r22
    28ba:	b9 01       	movw	r22, r18
    28bc:	90 01       	movw	r18, r0
    28be:	0c 01       	movw	r0, r24
    28c0:	ca 01       	movw	r24, r20
    28c2:	a0 01       	movw	r20, r0
    28c4:	11 24       	eor	r1, r1
    28c6:	ff 27       	eor	r31, r31
    28c8:	59 1b       	sub	r21, r25
    28ca:	99 f0       	breq	.+38     	; 0x28f2 <__addsf3x+0x5c>
    28cc:	59 3f       	cpi	r21, 0xF9	; 249
    28ce:	50 f4       	brcc	.+20     	; 0x28e4 <__addsf3x+0x4e>
    28d0:	50 3e       	cpi	r21, 0xE0	; 224
    28d2:	68 f1       	brcs	.+90     	; 0x292e <__addsf3x+0x98>
    28d4:	1a 16       	cp	r1, r26
    28d6:	f0 40       	sbci	r31, 0x00	; 0
    28d8:	a2 2f       	mov	r26, r18
    28da:	23 2f       	mov	r18, r19
    28dc:	34 2f       	mov	r19, r20
    28de:	44 27       	eor	r20, r20
    28e0:	58 5f       	subi	r21, 0xF8	; 248
    28e2:	f3 cf       	rjmp	.-26     	; 0x28ca <__addsf3x+0x34>
    28e4:	46 95       	lsr	r20
    28e6:	37 95       	ror	r19
    28e8:	27 95       	ror	r18
    28ea:	a7 95       	ror	r26
    28ec:	f0 40       	sbci	r31, 0x00	; 0
    28ee:	53 95       	inc	r21
    28f0:	c9 f7       	brne	.-14     	; 0x28e4 <__addsf3x+0x4e>
    28f2:	7e f4       	brtc	.+30     	; 0x2912 <__addsf3x+0x7c>
    28f4:	1f 16       	cp	r1, r31
    28f6:	ba 0b       	sbc	r27, r26
    28f8:	62 0b       	sbc	r22, r18
    28fa:	73 0b       	sbc	r23, r19
    28fc:	84 0b       	sbc	r24, r20
    28fe:	ba f0       	brmi	.+46     	; 0x292e <__addsf3x+0x98>
    2900:	91 50       	subi	r25, 0x01	; 1
    2902:	a1 f0       	breq	.+40     	; 0x292c <__addsf3x+0x96>
    2904:	ff 0f       	add	r31, r31
    2906:	bb 1f       	adc	r27, r27
    2908:	66 1f       	adc	r22, r22
    290a:	77 1f       	adc	r23, r23
    290c:	88 1f       	adc	r24, r24
    290e:	c2 f7       	brpl	.-16     	; 0x2900 <__addsf3x+0x6a>
    2910:	0e c0       	rjmp	.+28     	; 0x292e <__addsf3x+0x98>
    2912:	ba 0f       	add	r27, r26
    2914:	62 1f       	adc	r22, r18
    2916:	73 1f       	adc	r23, r19
    2918:	84 1f       	adc	r24, r20
    291a:	48 f4       	brcc	.+18     	; 0x292e <__addsf3x+0x98>
    291c:	87 95       	ror	r24
    291e:	77 95       	ror	r23
    2920:	67 95       	ror	r22
    2922:	b7 95       	ror	r27
    2924:	f7 95       	ror	r31
    2926:	9e 3f       	cpi	r25, 0xFE	; 254
    2928:	08 f0       	brcs	.+2      	; 0x292c <__addsf3x+0x96>
    292a:	b3 cf       	rjmp	.-154    	; 0x2892 <__addsf3+0x1e>
    292c:	93 95       	inc	r25
    292e:	88 0f       	add	r24, r24
    2930:	08 f0       	brcs	.+2      	; 0x2934 <__addsf3x+0x9e>
    2932:	99 27       	eor	r25, r25
    2934:	ee 0f       	add	r30, r30
    2936:	97 95       	ror	r25
    2938:	87 95       	ror	r24
    293a:	08 95       	ret

0000293c <__divsf3>:
    293c:	0c d0       	rcall	.+24     	; 0x2956 <__divsf3x>
    293e:	e6 c0       	rjmp	.+460    	; 0x2b0c <__fp_round>
    2940:	de d0       	rcall	.+444    	; 0x2afe <__fp_pscB>
    2942:	40 f0       	brcs	.+16     	; 0x2954 <__divsf3+0x18>
    2944:	d5 d0       	rcall	.+426    	; 0x2af0 <__fp_pscA>
    2946:	30 f0       	brcs	.+12     	; 0x2954 <__divsf3+0x18>
    2948:	21 f4       	brne	.+8      	; 0x2952 <__divsf3+0x16>
    294a:	5f 3f       	cpi	r21, 0xFF	; 255
    294c:	19 f0       	breq	.+6      	; 0x2954 <__divsf3+0x18>
    294e:	c7 c0       	rjmp	.+398    	; 0x2ade <__fp_inf>
    2950:	51 11       	cpse	r21, r1
    2952:	10 c1       	rjmp	.+544    	; 0x2b74 <__fp_szero>
    2954:	ca c0       	rjmp	.+404    	; 0x2aea <__fp_nan>

00002956 <__divsf3x>:
    2956:	eb d0       	rcall	.+470    	; 0x2b2e <__fp_split3>
    2958:	98 f3       	brcs	.-26     	; 0x2940 <__divsf3+0x4>

0000295a <__divsf3_pse>:
    295a:	99 23       	and	r25, r25
    295c:	c9 f3       	breq	.-14     	; 0x2950 <__divsf3+0x14>
    295e:	55 23       	and	r21, r21
    2960:	b1 f3       	breq	.-20     	; 0x294e <__divsf3+0x12>
    2962:	95 1b       	sub	r25, r21
    2964:	55 0b       	sbc	r21, r21
    2966:	bb 27       	eor	r27, r27
    2968:	aa 27       	eor	r26, r26
    296a:	62 17       	cp	r22, r18
    296c:	73 07       	cpc	r23, r19
    296e:	84 07       	cpc	r24, r20
    2970:	38 f0       	brcs	.+14     	; 0x2980 <__divsf3_pse+0x26>
    2972:	9f 5f       	subi	r25, 0xFF	; 255
    2974:	5f 4f       	sbci	r21, 0xFF	; 255
    2976:	22 0f       	add	r18, r18
    2978:	33 1f       	adc	r19, r19
    297a:	44 1f       	adc	r20, r20
    297c:	aa 1f       	adc	r26, r26
    297e:	a9 f3       	breq	.-22     	; 0x296a <__divsf3_pse+0x10>
    2980:	33 d0       	rcall	.+102    	; 0x29e8 <__divsf3_pse+0x8e>
    2982:	0e 2e       	mov	r0, r30
    2984:	3a f0       	brmi	.+14     	; 0x2994 <__divsf3_pse+0x3a>
    2986:	e0 e8       	ldi	r30, 0x80	; 128
    2988:	30 d0       	rcall	.+96     	; 0x29ea <__divsf3_pse+0x90>
    298a:	91 50       	subi	r25, 0x01	; 1
    298c:	50 40       	sbci	r21, 0x00	; 0
    298e:	e6 95       	lsr	r30
    2990:	00 1c       	adc	r0, r0
    2992:	ca f7       	brpl	.-14     	; 0x2986 <__divsf3_pse+0x2c>
    2994:	29 d0       	rcall	.+82     	; 0x29e8 <__divsf3_pse+0x8e>
    2996:	fe 2f       	mov	r31, r30
    2998:	27 d0       	rcall	.+78     	; 0x29e8 <__divsf3_pse+0x8e>
    299a:	66 0f       	add	r22, r22
    299c:	77 1f       	adc	r23, r23
    299e:	88 1f       	adc	r24, r24
    29a0:	bb 1f       	adc	r27, r27
    29a2:	26 17       	cp	r18, r22
    29a4:	37 07       	cpc	r19, r23
    29a6:	48 07       	cpc	r20, r24
    29a8:	ab 07       	cpc	r26, r27
    29aa:	b0 e8       	ldi	r27, 0x80	; 128
    29ac:	09 f0       	breq	.+2      	; 0x29b0 <__divsf3_pse+0x56>
    29ae:	bb 0b       	sbc	r27, r27
    29b0:	80 2d       	mov	r24, r0
    29b2:	bf 01       	movw	r22, r30
    29b4:	ff 27       	eor	r31, r31
    29b6:	93 58       	subi	r25, 0x83	; 131
    29b8:	5f 4f       	sbci	r21, 0xFF	; 255
    29ba:	2a f0       	brmi	.+10     	; 0x29c6 <__divsf3_pse+0x6c>
    29bc:	9e 3f       	cpi	r25, 0xFE	; 254
    29be:	51 05       	cpc	r21, r1
    29c0:	68 f0       	brcs	.+26     	; 0x29dc <__divsf3_pse+0x82>
    29c2:	8d c0       	rjmp	.+282    	; 0x2ade <__fp_inf>
    29c4:	d7 c0       	rjmp	.+430    	; 0x2b74 <__fp_szero>
    29c6:	5f 3f       	cpi	r21, 0xFF	; 255
    29c8:	ec f3       	brlt	.-6      	; 0x29c4 <__divsf3_pse+0x6a>
    29ca:	98 3e       	cpi	r25, 0xE8	; 232
    29cc:	dc f3       	brlt	.-10     	; 0x29c4 <__divsf3_pse+0x6a>
    29ce:	86 95       	lsr	r24
    29d0:	77 95       	ror	r23
    29d2:	67 95       	ror	r22
    29d4:	b7 95       	ror	r27
    29d6:	f7 95       	ror	r31
    29d8:	9f 5f       	subi	r25, 0xFF	; 255
    29da:	c9 f7       	brne	.-14     	; 0x29ce <__divsf3_pse+0x74>
    29dc:	88 0f       	add	r24, r24
    29de:	91 1d       	adc	r25, r1
    29e0:	96 95       	lsr	r25
    29e2:	87 95       	ror	r24
    29e4:	97 f9       	bld	r25, 7
    29e6:	08 95       	ret
    29e8:	e1 e0       	ldi	r30, 0x01	; 1
    29ea:	66 0f       	add	r22, r22
    29ec:	77 1f       	adc	r23, r23
    29ee:	88 1f       	adc	r24, r24
    29f0:	bb 1f       	adc	r27, r27
    29f2:	62 17       	cp	r22, r18
    29f4:	73 07       	cpc	r23, r19
    29f6:	84 07       	cpc	r24, r20
    29f8:	ba 07       	cpc	r27, r26
    29fa:	20 f0       	brcs	.+8      	; 0x2a04 <__divsf3_pse+0xaa>
    29fc:	62 1b       	sub	r22, r18
    29fe:	73 0b       	sbc	r23, r19
    2a00:	84 0b       	sbc	r24, r20
    2a02:	ba 0b       	sbc	r27, r26
    2a04:	ee 1f       	adc	r30, r30
    2a06:	88 f7       	brcc	.-30     	; 0x29ea <__divsf3_pse+0x90>
    2a08:	e0 95       	com	r30
    2a0a:	08 95       	ret

00002a0c <__fixunssfsi>:
    2a0c:	98 d0       	rcall	.+304    	; 0x2b3e <__fp_splitA>
    2a0e:	88 f0       	brcs	.+34     	; 0x2a32 <__fixunssfsi+0x26>
    2a10:	9f 57       	subi	r25, 0x7F	; 127
    2a12:	90 f0       	brcs	.+36     	; 0x2a38 <__fixunssfsi+0x2c>
    2a14:	b9 2f       	mov	r27, r25
    2a16:	99 27       	eor	r25, r25
    2a18:	b7 51       	subi	r27, 0x17	; 23
    2a1a:	a0 f0       	brcs	.+40     	; 0x2a44 <__fixunssfsi+0x38>
    2a1c:	d1 f0       	breq	.+52     	; 0x2a52 <__fixunssfsi+0x46>
    2a1e:	66 0f       	add	r22, r22
    2a20:	77 1f       	adc	r23, r23
    2a22:	88 1f       	adc	r24, r24
    2a24:	99 1f       	adc	r25, r25
    2a26:	1a f0       	brmi	.+6      	; 0x2a2e <__fixunssfsi+0x22>
    2a28:	ba 95       	dec	r27
    2a2a:	c9 f7       	brne	.-14     	; 0x2a1e <__fixunssfsi+0x12>
    2a2c:	12 c0       	rjmp	.+36     	; 0x2a52 <__fixunssfsi+0x46>
    2a2e:	b1 30       	cpi	r27, 0x01	; 1
    2a30:	81 f0       	breq	.+32     	; 0x2a52 <__fixunssfsi+0x46>
    2a32:	9f d0       	rcall	.+318    	; 0x2b72 <__fp_zero>
    2a34:	b1 e0       	ldi	r27, 0x01	; 1
    2a36:	08 95       	ret
    2a38:	9c c0       	rjmp	.+312    	; 0x2b72 <__fp_zero>
    2a3a:	67 2f       	mov	r22, r23
    2a3c:	78 2f       	mov	r23, r24
    2a3e:	88 27       	eor	r24, r24
    2a40:	b8 5f       	subi	r27, 0xF8	; 248
    2a42:	39 f0       	breq	.+14     	; 0x2a52 <__fixunssfsi+0x46>
    2a44:	b9 3f       	cpi	r27, 0xF9	; 249
    2a46:	cc f3       	brlt	.-14     	; 0x2a3a <__fixunssfsi+0x2e>
    2a48:	86 95       	lsr	r24
    2a4a:	77 95       	ror	r23
    2a4c:	67 95       	ror	r22
    2a4e:	b3 95       	inc	r27
    2a50:	d9 f7       	brne	.-10     	; 0x2a48 <__fixunssfsi+0x3c>
    2a52:	3e f4       	brtc	.+14     	; 0x2a62 <__fixunssfsi+0x56>
    2a54:	90 95       	com	r25
    2a56:	80 95       	com	r24
    2a58:	70 95       	com	r23
    2a5a:	61 95       	neg	r22
    2a5c:	7f 4f       	sbci	r23, 0xFF	; 255
    2a5e:	8f 4f       	sbci	r24, 0xFF	; 255
    2a60:	9f 4f       	sbci	r25, 0xFF	; 255
    2a62:	08 95       	ret

00002a64 <__floatunsisf>:
    2a64:	e8 94       	clt
    2a66:	09 c0       	rjmp	.+18     	; 0x2a7a <__floatsisf+0x12>

00002a68 <__floatsisf>:
    2a68:	97 fb       	bst	r25, 7
    2a6a:	3e f4       	brtc	.+14     	; 0x2a7a <__floatsisf+0x12>
    2a6c:	90 95       	com	r25
    2a6e:	80 95       	com	r24
    2a70:	70 95       	com	r23
    2a72:	61 95       	neg	r22
    2a74:	7f 4f       	sbci	r23, 0xFF	; 255
    2a76:	8f 4f       	sbci	r24, 0xFF	; 255
    2a78:	9f 4f       	sbci	r25, 0xFF	; 255
    2a7a:	99 23       	and	r25, r25
    2a7c:	a9 f0       	breq	.+42     	; 0x2aa8 <__floatsisf+0x40>
    2a7e:	f9 2f       	mov	r31, r25
    2a80:	96 e9       	ldi	r25, 0x96	; 150
    2a82:	bb 27       	eor	r27, r27
    2a84:	93 95       	inc	r25
    2a86:	f6 95       	lsr	r31
    2a88:	87 95       	ror	r24
    2a8a:	77 95       	ror	r23
    2a8c:	67 95       	ror	r22
    2a8e:	b7 95       	ror	r27
    2a90:	f1 11       	cpse	r31, r1
    2a92:	f8 cf       	rjmp	.-16     	; 0x2a84 <__floatsisf+0x1c>
    2a94:	fa f4       	brpl	.+62     	; 0x2ad4 <__floatsisf+0x6c>
    2a96:	bb 0f       	add	r27, r27
    2a98:	11 f4       	brne	.+4      	; 0x2a9e <__floatsisf+0x36>
    2a9a:	60 ff       	sbrs	r22, 0
    2a9c:	1b c0       	rjmp	.+54     	; 0x2ad4 <__floatsisf+0x6c>
    2a9e:	6f 5f       	subi	r22, 0xFF	; 255
    2aa0:	7f 4f       	sbci	r23, 0xFF	; 255
    2aa2:	8f 4f       	sbci	r24, 0xFF	; 255
    2aa4:	9f 4f       	sbci	r25, 0xFF	; 255
    2aa6:	16 c0       	rjmp	.+44     	; 0x2ad4 <__floatsisf+0x6c>
    2aa8:	88 23       	and	r24, r24
    2aaa:	11 f0       	breq	.+4      	; 0x2ab0 <__floatsisf+0x48>
    2aac:	96 e9       	ldi	r25, 0x96	; 150
    2aae:	11 c0       	rjmp	.+34     	; 0x2ad2 <__floatsisf+0x6a>
    2ab0:	77 23       	and	r23, r23
    2ab2:	21 f0       	breq	.+8      	; 0x2abc <__floatsisf+0x54>
    2ab4:	9e e8       	ldi	r25, 0x8E	; 142
    2ab6:	87 2f       	mov	r24, r23
    2ab8:	76 2f       	mov	r23, r22
    2aba:	05 c0       	rjmp	.+10     	; 0x2ac6 <__floatsisf+0x5e>
    2abc:	66 23       	and	r22, r22
    2abe:	71 f0       	breq	.+28     	; 0x2adc <__floatsisf+0x74>
    2ac0:	96 e8       	ldi	r25, 0x86	; 134
    2ac2:	86 2f       	mov	r24, r22
    2ac4:	70 e0       	ldi	r23, 0x00	; 0
    2ac6:	60 e0       	ldi	r22, 0x00	; 0
    2ac8:	2a f0       	brmi	.+10     	; 0x2ad4 <__floatsisf+0x6c>
    2aca:	9a 95       	dec	r25
    2acc:	66 0f       	add	r22, r22
    2ace:	77 1f       	adc	r23, r23
    2ad0:	88 1f       	adc	r24, r24
    2ad2:	da f7       	brpl	.-10     	; 0x2aca <__floatsisf+0x62>
    2ad4:	88 0f       	add	r24, r24
    2ad6:	96 95       	lsr	r25
    2ad8:	87 95       	ror	r24
    2ada:	97 f9       	bld	r25, 7
    2adc:	08 95       	ret

00002ade <__fp_inf>:
    2ade:	97 f9       	bld	r25, 7
    2ae0:	9f 67       	ori	r25, 0x7F	; 127
    2ae2:	80 e8       	ldi	r24, 0x80	; 128
    2ae4:	70 e0       	ldi	r23, 0x00	; 0
    2ae6:	60 e0       	ldi	r22, 0x00	; 0
    2ae8:	08 95       	ret

00002aea <__fp_nan>:
    2aea:	9f ef       	ldi	r25, 0xFF	; 255
    2aec:	80 ec       	ldi	r24, 0xC0	; 192
    2aee:	08 95       	ret

00002af0 <__fp_pscA>:
    2af0:	00 24       	eor	r0, r0
    2af2:	0a 94       	dec	r0
    2af4:	16 16       	cp	r1, r22
    2af6:	17 06       	cpc	r1, r23
    2af8:	18 06       	cpc	r1, r24
    2afa:	09 06       	cpc	r0, r25
    2afc:	08 95       	ret

00002afe <__fp_pscB>:
    2afe:	00 24       	eor	r0, r0
    2b00:	0a 94       	dec	r0
    2b02:	12 16       	cp	r1, r18
    2b04:	13 06       	cpc	r1, r19
    2b06:	14 06       	cpc	r1, r20
    2b08:	05 06       	cpc	r0, r21
    2b0a:	08 95       	ret

00002b0c <__fp_round>:
    2b0c:	09 2e       	mov	r0, r25
    2b0e:	03 94       	inc	r0
    2b10:	00 0c       	add	r0, r0
    2b12:	11 f4       	brne	.+4      	; 0x2b18 <__fp_round+0xc>
    2b14:	88 23       	and	r24, r24
    2b16:	52 f0       	brmi	.+20     	; 0x2b2c <__fp_round+0x20>
    2b18:	bb 0f       	add	r27, r27
    2b1a:	40 f4       	brcc	.+16     	; 0x2b2c <__fp_round+0x20>
    2b1c:	bf 2b       	or	r27, r31
    2b1e:	11 f4       	brne	.+4      	; 0x2b24 <__fp_round+0x18>
    2b20:	60 ff       	sbrs	r22, 0
    2b22:	04 c0       	rjmp	.+8      	; 0x2b2c <__fp_round+0x20>
    2b24:	6f 5f       	subi	r22, 0xFF	; 255
    2b26:	7f 4f       	sbci	r23, 0xFF	; 255
    2b28:	8f 4f       	sbci	r24, 0xFF	; 255
    2b2a:	9f 4f       	sbci	r25, 0xFF	; 255
    2b2c:	08 95       	ret

00002b2e <__fp_split3>:
    2b2e:	57 fd       	sbrc	r21, 7
    2b30:	90 58       	subi	r25, 0x80	; 128
    2b32:	44 0f       	add	r20, r20
    2b34:	55 1f       	adc	r21, r21
    2b36:	59 f0       	breq	.+22     	; 0x2b4e <__fp_splitA+0x10>
    2b38:	5f 3f       	cpi	r21, 0xFF	; 255
    2b3a:	71 f0       	breq	.+28     	; 0x2b58 <__fp_splitA+0x1a>
    2b3c:	47 95       	ror	r20

00002b3e <__fp_splitA>:
    2b3e:	88 0f       	add	r24, r24
    2b40:	97 fb       	bst	r25, 7
    2b42:	99 1f       	adc	r25, r25
    2b44:	61 f0       	breq	.+24     	; 0x2b5e <__fp_splitA+0x20>
    2b46:	9f 3f       	cpi	r25, 0xFF	; 255
    2b48:	79 f0       	breq	.+30     	; 0x2b68 <__fp_splitA+0x2a>
    2b4a:	87 95       	ror	r24
    2b4c:	08 95       	ret
    2b4e:	12 16       	cp	r1, r18
    2b50:	13 06       	cpc	r1, r19
    2b52:	14 06       	cpc	r1, r20
    2b54:	55 1f       	adc	r21, r21
    2b56:	f2 cf       	rjmp	.-28     	; 0x2b3c <__fp_split3+0xe>
    2b58:	46 95       	lsr	r20
    2b5a:	f1 df       	rcall	.-30     	; 0x2b3e <__fp_splitA>
    2b5c:	08 c0       	rjmp	.+16     	; 0x2b6e <__fp_splitA+0x30>
    2b5e:	16 16       	cp	r1, r22
    2b60:	17 06       	cpc	r1, r23
    2b62:	18 06       	cpc	r1, r24
    2b64:	99 1f       	adc	r25, r25
    2b66:	f1 cf       	rjmp	.-30     	; 0x2b4a <__fp_splitA+0xc>
    2b68:	86 95       	lsr	r24
    2b6a:	71 05       	cpc	r23, r1
    2b6c:	61 05       	cpc	r22, r1
    2b6e:	08 94       	sec
    2b70:	08 95       	ret

00002b72 <__fp_zero>:
    2b72:	e8 94       	clt

00002b74 <__fp_szero>:
    2b74:	bb 27       	eor	r27, r27
    2b76:	66 27       	eor	r22, r22
    2b78:	77 27       	eor	r23, r23
    2b7a:	cb 01       	movw	r24, r22
    2b7c:	97 f9       	bld	r25, 7
    2b7e:	08 95       	ret

00002b80 <__divmodhi4>:
    2b80:	97 fb       	bst	r25, 7
    2b82:	07 2e       	mov	r0, r23
    2b84:	16 f4       	brtc	.+4      	; 0x2b8a <__divmodhi4+0xa>
    2b86:	00 94       	com	r0
    2b88:	06 d0       	rcall	.+12     	; 0x2b96 <__divmodhi4_neg1>
    2b8a:	77 fd       	sbrc	r23, 7
    2b8c:	08 d0       	rcall	.+16     	; 0x2b9e <__divmodhi4_neg2>
    2b8e:	1a d0       	rcall	.+52     	; 0x2bc4 <__udivmodhi4>
    2b90:	07 fc       	sbrc	r0, 7
    2b92:	05 d0       	rcall	.+10     	; 0x2b9e <__divmodhi4_neg2>
    2b94:	3e f4       	brtc	.+14     	; 0x2ba4 <__divmodhi4_exit>

00002b96 <__divmodhi4_neg1>:
    2b96:	90 95       	com	r25
    2b98:	81 95       	neg	r24
    2b9a:	9f 4f       	sbci	r25, 0xFF	; 255
    2b9c:	08 95       	ret

00002b9e <__divmodhi4_neg2>:
    2b9e:	70 95       	com	r23
    2ba0:	61 95       	neg	r22
    2ba2:	7f 4f       	sbci	r23, 0xFF	; 255

00002ba4 <__divmodhi4_exit>:
    2ba4:	08 95       	ret

00002ba6 <__umulhisi3>:
    2ba6:	a2 9f       	mul	r26, r18
    2ba8:	b0 01       	movw	r22, r0
    2baa:	b3 9f       	mul	r27, r19
    2bac:	c0 01       	movw	r24, r0
    2bae:	a3 9f       	mul	r26, r19
    2bb0:	70 0d       	add	r23, r0
    2bb2:	81 1d       	adc	r24, r1
    2bb4:	11 24       	eor	r1, r1
    2bb6:	91 1d       	adc	r25, r1
    2bb8:	b2 9f       	mul	r27, r18
    2bba:	70 0d       	add	r23, r0
    2bbc:	81 1d       	adc	r24, r1
    2bbe:	11 24       	eor	r1, r1
    2bc0:	91 1d       	adc	r25, r1
    2bc2:	08 95       	ret

00002bc4 <__udivmodhi4>:
    2bc4:	aa 1b       	sub	r26, r26
    2bc6:	bb 1b       	sub	r27, r27
    2bc8:	51 e1       	ldi	r21, 0x11	; 17
    2bca:	07 c0       	rjmp	.+14     	; 0x2bda <__udivmodhi4_ep>

00002bcc <__udivmodhi4_loop>:
    2bcc:	aa 1f       	adc	r26, r26
    2bce:	bb 1f       	adc	r27, r27
    2bd0:	a6 17       	cp	r26, r22
    2bd2:	b7 07       	cpc	r27, r23
    2bd4:	10 f0       	brcs	.+4      	; 0x2bda <__udivmodhi4_ep>
    2bd6:	a6 1b       	sub	r26, r22
    2bd8:	b7 0b       	sbc	r27, r23

00002bda <__udivmodhi4_ep>:
    2bda:	88 1f       	adc	r24, r24
    2bdc:	99 1f       	adc	r25, r25
    2bde:	5a 95       	dec	r21
    2be0:	a9 f7       	brne	.-22     	; 0x2bcc <__udivmodhi4_loop>
    2be2:	80 95       	com	r24
    2be4:	90 95       	com	r25
    2be6:	bc 01       	movw	r22, r24
    2be8:	cd 01       	movw	r24, r26
    2bea:	08 95       	ret

00002bec <_exit>:
    2bec:	f8 94       	cli

00002bee <__stop_program>:
    2bee:	ff cf       	rjmp	.-2      	; 0x2bee <__stop_program>
