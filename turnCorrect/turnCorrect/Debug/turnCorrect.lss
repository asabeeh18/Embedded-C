
turnCorrect.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004e  00800200  00002d92  00002e26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002d92  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006f  0080024e  0080024e  00002e74  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002e74  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000380  00000000  00000000  00002ea4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000033be  00000000  00000000  00003224  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004cd  00000000  00000000  000065e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00002585  00000000  00000000  00006aaf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000009f0  00000000  00000000  00009034  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000867  00000000  00000000  00009a24  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002218  00000000  00000000  0000a28b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000003d0  00000000  00000000  0000c4a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	06 c3       	rjmp	.+1548   	; 0x612 <__vector_1>
       6:	00 00       	nop
       8:	8e c0       	rjmp	.+284    	; 0x126 <__bad_interrupt>
       a:	00 00       	nop
       c:	8c c0       	rjmp	.+280    	; 0x126 <__bad_interrupt>
       e:	00 00       	nop
      10:	8a c0       	rjmp	.+276    	; 0x126 <__bad_interrupt>
      12:	00 00       	nop
      14:	08 c4       	rjmp	.+2064   	; 0x826 <__vector_5>
      16:	00 00       	nop
      18:	e1 c3       	rjmp	.+1986   	; 0x7dc <__vector_6>
      1a:	00 00       	nop
      1c:	84 c0       	rjmp	.+264    	; 0x126 <__bad_interrupt>
      1e:	00 00       	nop
      20:	82 c0       	rjmp	.+260    	; 0x126 <__bad_interrupt>
      22:	00 00       	nop
      24:	80 c0       	rjmp	.+256    	; 0x126 <__bad_interrupt>
      26:	00 00       	nop
      28:	7e c0       	rjmp	.+252    	; 0x126 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7c c0       	rjmp	.+248    	; 0x126 <__bad_interrupt>
      2e:	00 00       	nop
      30:	7a c0       	rjmp	.+244    	; 0x126 <__bad_interrupt>
      32:	00 00       	nop
      34:	78 c0       	rjmp	.+240    	; 0x126 <__bad_interrupt>
      36:	00 00       	nop
      38:	76 c0       	rjmp	.+236    	; 0x126 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	74 c0       	rjmp	.+232    	; 0x126 <__bad_interrupt>
      3e:	00 00       	nop
      40:	72 c0       	rjmp	.+228    	; 0x126 <__bad_interrupt>
      42:	00 00       	nop
      44:	70 c0       	rjmp	.+224    	; 0x126 <__bad_interrupt>
      46:	00 00       	nop
      48:	6e c0       	rjmp	.+220    	; 0x126 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6c c0       	rjmp	.+216    	; 0x126 <__bad_interrupt>
      4e:	00 00       	nop
      50:	6a c0       	rjmp	.+212    	; 0x126 <__bad_interrupt>
      52:	00 00       	nop
      54:	68 c0       	rjmp	.+208    	; 0x126 <__bad_interrupt>
      56:	00 00       	nop
      58:	66 c0       	rjmp	.+204    	; 0x126 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	64 c0       	rjmp	.+200    	; 0x126 <__bad_interrupt>
      5e:	00 00       	nop
      60:	62 c0       	rjmp	.+196    	; 0x126 <__bad_interrupt>
      62:	00 00       	nop
      64:	60 c0       	rjmp	.+192    	; 0x126 <__bad_interrupt>
      66:	00 00       	nop
      68:	5e c0       	rjmp	.+188    	; 0x126 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5c c0       	rjmp	.+184    	; 0x126 <__bad_interrupt>
      6e:	00 00       	nop
      70:	5a c0       	rjmp	.+180    	; 0x126 <__bad_interrupt>
      72:	00 00       	nop
      74:	58 c0       	rjmp	.+176    	; 0x126 <__bad_interrupt>
      76:	00 00       	nop
      78:	56 c0       	rjmp	.+172    	; 0x126 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	54 c0       	rjmp	.+168    	; 0x126 <__bad_interrupt>
      7e:	00 00       	nop
      80:	52 c0       	rjmp	.+164    	; 0x126 <__bad_interrupt>
      82:	00 00       	nop
      84:	50 c0       	rjmp	.+160    	; 0x126 <__bad_interrupt>
      86:	00 00       	nop
      88:	4e c0       	rjmp	.+156    	; 0x126 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4c c0       	rjmp	.+152    	; 0x126 <__bad_interrupt>
      8e:	00 00       	nop
      90:	4a c0       	rjmp	.+148    	; 0x126 <__bad_interrupt>
      92:	00 00       	nop
      94:	48 c0       	rjmp	.+144    	; 0x126 <__bad_interrupt>
      96:	00 00       	nop
      98:	46 c0       	rjmp	.+140    	; 0x126 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	44 c0       	rjmp	.+136    	; 0x126 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	42 c0       	rjmp	.+132    	; 0x126 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	40 c0       	rjmp	.+128    	; 0x126 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3e c0       	rjmp	.+124    	; 0x126 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3c c0       	rjmp	.+120    	; 0x126 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	3a c0       	rjmp	.+116    	; 0x126 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	38 c0       	rjmp	.+112    	; 0x126 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	36 c0       	rjmp	.+108    	; 0x126 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	34 c0       	rjmp	.+104    	; 0x126 <__bad_interrupt>
      be:	00 00       	nop
      c0:	32 c0       	rjmp	.+100    	; 0x126 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	30 c0       	rjmp	.+96     	; 0x126 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2e c0       	rjmp	.+92     	; 0x126 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2c c0       	rjmp	.+88     	; 0x126 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	2a c0       	rjmp	.+84     	; 0x126 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	28 c0       	rjmp	.+80     	; 0x126 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	26 c0       	rjmp	.+76     	; 0x126 <__bad_interrupt>
      da:	00 00       	nop
      dc:	24 c0       	rjmp	.+72     	; 0x126 <__bad_interrupt>
      de:	00 00       	nop
      e0:	22 c0       	rjmp	.+68     	; 0x126 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e9       	ldi	r30, 0x92	; 146
      fc:	fd e2       	ldi	r31, 0x2D	; 45
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ae 34       	cpi	r26, 0x4E	; 78
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	ae e4       	ldi	r26, 0x4E	; 78
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ad 3b       	cpi	r26, 0xBD	; 189
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 ad 14 	call	0x295a	; 0x295a <main>
     122:	0c 94 c7 16 	jmp	0x2d8e	; 0x2d8e <_exit>

00000126 <__bad_interrupt>:
     126:	6c cf       	rjmp	.-296    	; 0x0 <__vectors>

00000128 <lcd_set_4bit>:
	lcd_print(2,1,t,5);
	_delay_ms(10000);
	lcd_wr_command(0x01); //Clear the LCD
	lcd((char*)t);
	return t;
}
     128:	86 e6       	ldi	r24, 0x66	; 102
     12a:	9e e0       	ldi	r25, 0x0E	; 14
     12c:	01 97       	sbiw	r24, 0x01	; 1
     12e:	f1 f7       	brne	.-4      	; 0x12c <lcd_set_4bit+0x4>
     130:	00 00       	nop
     132:	40 98       	cbi	0x08, 0	; 8
     134:	41 98       	cbi	0x08, 1	; 8
     136:	80 e3       	ldi	r24, 0x30	; 48
     138:	88 b9       	out	0x08, r24	; 8
     13a:	42 9a       	sbi	0x08, 2	; 8
     13c:	8f ef       	ldi	r24, 0xFF	; 255
     13e:	97 e4       	ldi	r25, 0x47	; 71
     140:	01 97       	sbiw	r24, 0x01	; 1
     142:	f1 f7       	brne	.-4      	; 0x140 <lcd_set_4bit+0x18>
     144:	00 c0       	rjmp	.+0      	; 0x146 <lcd_set_4bit+0x1e>
     146:	00 00       	nop
     148:	42 98       	cbi	0x08, 2	; 8
     14a:	86 e6       	ldi	r24, 0x66	; 102
     14c:	9e e0       	ldi	r25, 0x0E	; 14
     14e:	01 97       	sbiw	r24, 0x01	; 1
     150:	f1 f7       	brne	.-4      	; 0x14e <lcd_set_4bit+0x26>
     152:	00 00       	nop
     154:	40 98       	cbi	0x08, 0	; 8
     156:	41 98       	cbi	0x08, 1	; 8
     158:	80 e3       	ldi	r24, 0x30	; 48
     15a:	88 b9       	out	0x08, r24	; 8
     15c:	42 9a       	sbi	0x08, 2	; 8
     15e:	8f ef       	ldi	r24, 0xFF	; 255
     160:	97 e4       	ldi	r25, 0x47	; 71
     162:	01 97       	sbiw	r24, 0x01	; 1
     164:	f1 f7       	brne	.-4      	; 0x162 <lcd_set_4bit+0x3a>
     166:	00 c0       	rjmp	.+0      	; 0x168 <lcd_set_4bit+0x40>
     168:	00 00       	nop
     16a:	42 98       	cbi	0x08, 2	; 8
     16c:	86 e6       	ldi	r24, 0x66	; 102
     16e:	9e e0       	ldi	r25, 0x0E	; 14
     170:	01 97       	sbiw	r24, 0x01	; 1
     172:	f1 f7       	brne	.-4      	; 0x170 <lcd_set_4bit+0x48>
     174:	00 00       	nop
     176:	40 98       	cbi	0x08, 0	; 8
     178:	41 98       	cbi	0x08, 1	; 8
     17a:	80 e3       	ldi	r24, 0x30	; 48
     17c:	88 b9       	out	0x08, r24	; 8
     17e:	42 9a       	sbi	0x08, 2	; 8
     180:	8f ef       	ldi	r24, 0xFF	; 255
     182:	97 e4       	ldi	r25, 0x47	; 71
     184:	01 97       	sbiw	r24, 0x01	; 1
     186:	f1 f7       	brne	.-4      	; 0x184 <lcd_set_4bit+0x5c>
     188:	00 c0       	rjmp	.+0      	; 0x18a <lcd_set_4bit+0x62>
     18a:	00 00       	nop
     18c:	42 98       	cbi	0x08, 2	; 8
     18e:	86 e6       	ldi	r24, 0x66	; 102
     190:	9e e0       	ldi	r25, 0x0E	; 14
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <lcd_set_4bit+0x6a>
     196:	00 00       	nop
     198:	40 98       	cbi	0x08, 0	; 8
     19a:	41 98       	cbi	0x08, 1	; 8
     19c:	80 e2       	ldi	r24, 0x20	; 32
     19e:	88 b9       	out	0x08, r24	; 8
     1a0:	42 9a       	sbi	0x08, 2	; 8
     1a2:	8f ef       	ldi	r24, 0xFF	; 255
     1a4:	97 e4       	ldi	r25, 0x47	; 71
     1a6:	01 97       	sbiw	r24, 0x01	; 1
     1a8:	f1 f7       	brne	.-4      	; 0x1a6 <lcd_set_4bit+0x7e>
     1aa:	00 c0       	rjmp	.+0      	; 0x1ac <lcd_set_4bit+0x84>
     1ac:	00 00       	nop
     1ae:	42 98       	cbi	0x08, 2	; 8
     1b0:	08 95       	ret

000001b2 <lcd_wr_command>:
     1b2:	98 b1       	in	r25, 0x08	; 8
     1b4:	9f 70       	andi	r25, 0x0F	; 15
     1b6:	98 b9       	out	0x08, r25	; 8
     1b8:	98 b1       	in	r25, 0x08	; 8
     1ba:	28 2f       	mov	r18, r24
     1bc:	20 7f       	andi	r18, 0xF0	; 240
     1be:	92 2b       	or	r25, r18
     1c0:	98 b9       	out	0x08, r25	; 8
     1c2:	40 98       	cbi	0x08, 0	; 8
     1c4:	41 98       	cbi	0x08, 1	; 8
     1c6:	42 9a       	sbi	0x08, 2	; 8
     1c8:	ef ef       	ldi	r30, 0xFF	; 255
     1ca:	f7 e4       	ldi	r31, 0x47	; 71
     1cc:	31 97       	sbiw	r30, 0x01	; 1
     1ce:	f1 f7       	brne	.-4      	; 0x1cc <lcd_wr_command+0x1a>
     1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <lcd_wr_command+0x20>
     1d2:	00 00       	nop
     1d4:	42 98       	cbi	0x08, 2	; 8
     1d6:	98 b1       	in	r25, 0x08	; 8
     1d8:	9f 70       	andi	r25, 0x0F	; 15
     1da:	98 b9       	out	0x08, r25	; 8
     1dc:	98 b1       	in	r25, 0x08	; 8
     1de:	82 95       	swap	r24
     1e0:	80 7f       	andi	r24, 0xF0	; 240
     1e2:	89 2b       	or	r24, r25
     1e4:	88 b9       	out	0x08, r24	; 8
     1e6:	40 98       	cbi	0x08, 0	; 8
     1e8:	41 98       	cbi	0x08, 1	; 8
     1ea:	42 9a       	sbi	0x08, 2	; 8
     1ec:	8f ef       	ldi	r24, 0xFF	; 255
     1ee:	97 e4       	ldi	r25, 0x47	; 71
     1f0:	01 97       	sbiw	r24, 0x01	; 1
     1f2:	f1 f7       	brne	.-4      	; 0x1f0 <lcd_wr_command+0x3e>
     1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <lcd_wr_command+0x44>
     1f6:	00 00       	nop
     1f8:	42 98       	cbi	0x08, 2	; 8
     1fa:	08 95       	ret

000001fc <lcd_init>:
     1fc:	95 df       	rcall	.-214    	; 0x128 <lcd_set_4bit>
     1fe:	86 e6       	ldi	r24, 0x66	; 102
     200:	9e e0       	ldi	r25, 0x0E	; 14
     202:	01 97       	sbiw	r24, 0x01	; 1
     204:	f1 f7       	brne	.-4      	; 0x202 <lcd_init+0x6>
     206:	00 00       	nop
     208:	88 e2       	ldi	r24, 0x28	; 40
     20a:	d3 df       	rcall	.-90     	; 0x1b2 <lcd_wr_command>
     20c:	81 e0       	ldi	r24, 0x01	; 1
     20e:	d1 df       	rcall	.-94     	; 0x1b2 <lcd_wr_command>
     210:	86 e0       	ldi	r24, 0x06	; 6
     212:	cf df       	rcall	.-98     	; 0x1b2 <lcd_wr_command>
     214:	8e e0       	ldi	r24, 0x0E	; 14
     216:	cd df       	rcall	.-102    	; 0x1b2 <lcd_wr_command>
     218:	80 e8       	ldi	r24, 0x80	; 128
     21a:	cb cf       	rjmp	.-106    	; 0x1b2 <lcd_wr_command>
     21c:	08 95       	ret

0000021e <lcd_wr_char>:
     21e:	98 b1       	in	r25, 0x08	; 8
     220:	9f 70       	andi	r25, 0x0F	; 15
     222:	98 b9       	out	0x08, r25	; 8
     224:	98 b1       	in	r25, 0x08	; 8
     226:	28 2f       	mov	r18, r24
     228:	20 7f       	andi	r18, 0xF0	; 240
     22a:	92 2b       	or	r25, r18
     22c:	98 b9       	out	0x08, r25	; 8
     22e:	40 9a       	sbi	0x08, 0	; 8
     230:	41 98       	cbi	0x08, 1	; 8
     232:	42 9a       	sbi	0x08, 2	; 8
     234:	ef ef       	ldi	r30, 0xFF	; 255
     236:	f7 e4       	ldi	r31, 0x47	; 71
     238:	31 97       	sbiw	r30, 0x01	; 1
     23a:	f1 f7       	brne	.-4      	; 0x238 <lcd_wr_char+0x1a>
     23c:	00 c0       	rjmp	.+0      	; 0x23e <lcd_wr_char+0x20>
     23e:	00 00       	nop
     240:	42 98       	cbi	0x08, 2	; 8
     242:	98 b1       	in	r25, 0x08	; 8
     244:	9f 70       	andi	r25, 0x0F	; 15
     246:	98 b9       	out	0x08, r25	; 8
     248:	98 b1       	in	r25, 0x08	; 8
     24a:	82 95       	swap	r24
     24c:	80 7f       	andi	r24, 0xF0	; 240
     24e:	89 2b       	or	r24, r25
     250:	88 b9       	out	0x08, r24	; 8
     252:	40 9a       	sbi	0x08, 0	; 8
     254:	41 98       	cbi	0x08, 1	; 8
     256:	42 9a       	sbi	0x08, 2	; 8
     258:	8f ef       	ldi	r24, 0xFF	; 255
     25a:	97 e4       	ldi	r25, 0x47	; 71
     25c:	01 97       	sbiw	r24, 0x01	; 1
     25e:	f1 f7       	brne	.-4      	; 0x25c <lcd_wr_char+0x3e>
     260:	00 c0       	rjmp	.+0      	; 0x262 <lcd_wr_char+0x44>
     262:	00 00       	nop
     264:	42 98       	cbi	0x08, 2	; 8
     266:	08 95       	ret

00000268 <lcd_home>:
     268:	80 e8       	ldi	r24, 0x80	; 128
     26a:	a3 cf       	rjmp	.-186    	; 0x1b2 <lcd_wr_command>
     26c:	08 95       	ret

0000026e <lcd_string>:
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	ec 01       	movw	r28, r24
     274:	88 81       	ld	r24, Y
     276:	88 23       	and	r24, r24
     278:	29 f0       	breq	.+10     	; 0x284 <lcd_string+0x16>
     27a:	21 96       	adiw	r28, 0x01	; 1
     27c:	d0 df       	rcall	.-96     	; 0x21e <lcd_wr_char>
     27e:	89 91       	ld	r24, Y+
     280:	81 11       	cpse	r24, r1
     282:	fc cf       	rjmp	.-8      	; 0x27c <lcd_string+0xe>
     284:	df 91       	pop	r29
     286:	cf 91       	pop	r28
     288:	08 95       	ret

0000028a <lcd_cursor>:
     28a:	82 30       	cpi	r24, 0x02	; 2
     28c:	69 f0       	breq	.+26     	; 0x2a8 <lcd_cursor+0x1e>
     28e:	18 f4       	brcc	.+6      	; 0x296 <lcd_cursor+0xc>
     290:	81 30       	cpi	r24, 0x01	; 1
     292:	31 f0       	breq	.+12     	; 0x2a0 <lcd_cursor+0x16>
     294:	08 95       	ret
     296:	83 30       	cpi	r24, 0x03	; 3
     298:	59 f0       	breq	.+22     	; 0x2b0 <lcd_cursor+0x26>
     29a:	84 30       	cpi	r24, 0x04	; 4
     29c:	69 f0       	breq	.+26     	; 0x2b8 <lcd_cursor+0x2e>
     29e:	08 95       	ret
     2a0:	8f e7       	ldi	r24, 0x7F	; 127
     2a2:	86 0f       	add	r24, r22
     2a4:	86 cf       	rjmp	.-244    	; 0x1b2 <lcd_wr_command>
     2a6:	08 95       	ret
     2a8:	8f eb       	ldi	r24, 0xBF	; 191
     2aa:	86 0f       	add	r24, r22
     2ac:	82 cf       	rjmp	.-252    	; 0x1b2 <lcd_wr_command>
     2ae:	08 95       	ret
     2b0:	83 e9       	ldi	r24, 0x93	; 147
     2b2:	86 0f       	add	r24, r22
     2b4:	7e cf       	rjmp	.-260    	; 0x1b2 <lcd_wr_command>
     2b6:	08 95       	ret
     2b8:	83 ed       	ldi	r24, 0xD3	; 211
     2ba:	86 0f       	add	r24, r22
     2bc:	7a cf       	rjmp	.-268    	; 0x1b2 <lcd_wr_command>
     2be:	08 95       	ret

000002c0 <lcd_print>:
     2c0:	0f 93       	push	r16
     2c2:	1f 93       	push	r17
     2c4:	cf 93       	push	r28
     2c6:	df 93       	push	r29
     2c8:	8a 01       	movw	r16, r20
     2ca:	e9 01       	movw	r28, r18
     2cc:	88 23       	and	r24, r24
     2ce:	11 f0       	breq	.+4      	; 0x2d4 <lcd_print+0x14>
     2d0:	61 11       	cpse	r22, r1
     2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <lcd_print+0x18>
     2d4:	c9 df       	rcall	.-110    	; 0x268 <lcd_home>
     2d6:	01 c0       	rjmp	.+2      	; 0x2da <lcd_print+0x1a>
     2d8:	d8 df       	rcall	.-80     	; 0x28a <lcd_cursor>
     2da:	c5 30       	cpi	r28, 0x05	; 5
     2dc:	d1 05       	cpc	r29, r1
     2de:	09 f0       	breq	.+2      	; 0x2e2 <lcd_print+0x22>
     2e0:	d5 c0       	rjmp	.+426    	; 0x48c <lcd_print+0x1cc>
     2e2:	98 01       	movw	r18, r16
     2e4:	32 95       	swap	r19
     2e6:	22 95       	swap	r18
     2e8:	2f 70       	andi	r18, 0x0F	; 15
     2ea:	23 27       	eor	r18, r19
     2ec:	3f 70       	andi	r19, 0x0F	; 15
     2ee:	23 27       	eor	r18, r19
     2f0:	a7 e4       	ldi	r26, 0x47	; 71
     2f2:	b3 e0       	ldi	r27, 0x03	; 3
     2f4:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <__umulhisi3>
     2f8:	96 95       	lsr	r25
     2fa:	87 95       	ror	r24
     2fc:	96 95       	lsr	r25
     2fe:	87 95       	ror	r24
     300:	96 95       	lsr	r25
     302:	87 95       	ror	r24
     304:	c0 96       	adiw	r24, 0x30	; 48
     306:	90 93 79 02 	sts	0x0279, r25
     30a:	80 93 78 02 	sts	0x0278, r24
     30e:	87 df       	rcall	.-242    	; 0x21e <lcd_wr_char>
     310:	98 01       	movw	r18, r16
     312:	36 95       	lsr	r19
     314:	27 95       	ror	r18
     316:	36 95       	lsr	r19
     318:	27 95       	ror	r18
     31a:	36 95       	lsr	r19
     31c:	27 95       	ror	r18
     31e:	a5 ec       	ldi	r26, 0xC5	; 197
     320:	b0 e2       	ldi	r27, 0x20	; 32
     322:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <__umulhisi3>
     326:	ac 01       	movw	r20, r24
     328:	52 95       	swap	r21
     32a:	42 95       	swap	r20
     32c:	4f 70       	andi	r20, 0x0F	; 15
     32e:	45 27       	eor	r20, r21
     330:	5f 70       	andi	r21, 0x0F	; 15
     332:	45 27       	eor	r20, r21
     334:	50 93 7d 02 	sts	0x027D, r21
     338:	40 93 7c 02 	sts	0x027C, r20
     33c:	9a 01       	movw	r18, r20
     33e:	ad ec       	ldi	r26, 0xCD	; 205
     340:	bc ec       	ldi	r27, 0xCC	; 204
     342:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <__umulhisi3>
     346:	96 95       	lsr	r25
     348:	87 95       	ror	r24
     34a:	96 95       	lsr	r25
     34c:	87 95       	ror	r24
     34e:	96 95       	lsr	r25
     350:	87 95       	ror	r24
     352:	9c 01       	movw	r18, r24
     354:	22 0f       	add	r18, r18
     356:	33 1f       	adc	r19, r19
     358:	88 0f       	add	r24, r24
     35a:	99 1f       	adc	r25, r25
     35c:	88 0f       	add	r24, r24
     35e:	99 1f       	adc	r25, r25
     360:	88 0f       	add	r24, r24
     362:	99 1f       	adc	r25, r25
     364:	82 0f       	add	r24, r18
     366:	93 1f       	adc	r25, r19
     368:	48 1b       	sub	r20, r24
     36a:	59 0b       	sbc	r21, r25
     36c:	ca 01       	movw	r24, r20
     36e:	c0 96       	adiw	r24, 0x30	; 48
     370:	90 93 bc 02 	sts	0x02BC, r25
     374:	80 93 bb 02 	sts	0x02BB, r24
     378:	52 df       	rcall	.-348    	; 0x21e <lcd_wr_char>
     37a:	04 c0       	rjmp	.+8      	; 0x384 <lcd_print+0xc4>
     37c:	c3 30       	cpi	r28, 0x03	; 3
     37e:	d1 05       	cpc	r29, r1
     380:	09 f0       	breq	.+2      	; 0x384 <lcd_print+0xc4>
     382:	89 c0       	rjmp	.+274    	; 0x496 <lcd_print+0x1d6>
     384:	98 01       	movw	r18, r16
     386:	36 95       	lsr	r19
     388:	27 95       	ror	r18
     38a:	36 95       	lsr	r19
     38c:	27 95       	ror	r18
     38e:	ab e7       	ldi	r26, 0x7B	; 123
     390:	b4 e1       	ldi	r27, 0x14	; 20
     392:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <__umulhisi3>
     396:	ac 01       	movw	r20, r24
     398:	56 95       	lsr	r21
     39a:	47 95       	ror	r20
     39c:	50 93 7d 02 	sts	0x027D, r21
     3a0:	40 93 7c 02 	sts	0x027C, r20
     3a4:	9a 01       	movw	r18, r20
     3a6:	ad ec       	ldi	r26, 0xCD	; 205
     3a8:	bc ec       	ldi	r27, 0xCC	; 204
     3aa:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <__umulhisi3>
     3ae:	96 95       	lsr	r25
     3b0:	87 95       	ror	r24
     3b2:	96 95       	lsr	r25
     3b4:	87 95       	ror	r24
     3b6:	96 95       	lsr	r25
     3b8:	87 95       	ror	r24
     3ba:	9c 01       	movw	r18, r24
     3bc:	22 0f       	add	r18, r18
     3be:	33 1f       	adc	r19, r19
     3c0:	88 0f       	add	r24, r24
     3c2:	99 1f       	adc	r25, r25
     3c4:	88 0f       	add	r24, r24
     3c6:	99 1f       	adc	r25, r25
     3c8:	88 0f       	add	r24, r24
     3ca:	99 1f       	adc	r25, r25
     3cc:	82 0f       	add	r24, r18
     3ce:	93 1f       	adc	r25, r19
     3d0:	48 1b       	sub	r20, r24
     3d2:	59 0b       	sbc	r21, r25
     3d4:	ca 01       	movw	r24, r20
     3d6:	c0 96       	adiw	r24, 0x30	; 48
     3d8:	90 93 b2 02 	sts	0x02B2, r25
     3dc:	80 93 b1 02 	sts	0x02B1, r24
     3e0:	1e df       	rcall	.-452    	; 0x21e <lcd_wr_char>
     3e2:	98 01       	movw	r18, r16
     3e4:	ad ec       	ldi	r26, 0xCD	; 205
     3e6:	bc ec       	ldi	r27, 0xCC	; 204
     3e8:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <__umulhisi3>
     3ec:	ac 01       	movw	r20, r24
     3ee:	56 95       	lsr	r21
     3f0:	47 95       	ror	r20
     3f2:	56 95       	lsr	r21
     3f4:	47 95       	ror	r20
     3f6:	56 95       	lsr	r21
     3f8:	47 95       	ror	r20
     3fa:	50 93 7d 02 	sts	0x027D, r21
     3fe:	40 93 7c 02 	sts	0x027C, r20
     402:	9a 01       	movw	r18, r20
     404:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <__umulhisi3>
     408:	96 95       	lsr	r25
     40a:	87 95       	ror	r24
     40c:	96 95       	lsr	r25
     40e:	87 95       	ror	r24
     410:	96 95       	lsr	r25
     412:	87 95       	ror	r24
     414:	9c 01       	movw	r18, r24
     416:	22 0f       	add	r18, r18
     418:	33 1f       	adc	r19, r19
     41a:	88 0f       	add	r24, r24
     41c:	99 1f       	adc	r25, r25
     41e:	88 0f       	add	r24, r24
     420:	99 1f       	adc	r25, r25
     422:	88 0f       	add	r24, r24
     424:	99 1f       	adc	r25, r25
     426:	82 0f       	add	r24, r18
     428:	93 1f       	adc	r25, r19
     42a:	48 1b       	sub	r20, r24
     42c:	59 0b       	sbc	r21, r25
     42e:	ca 01       	movw	r24, r20
     430:	c0 96       	adiw	r24, 0x30	; 48
     432:	90 93 8e 02 	sts	0x028E, r25
     436:	80 93 8d 02 	sts	0x028D, r24
     43a:	f1 de       	rcall	.-542    	; 0x21e <lcd_wr_char>
     43c:	03 c0       	rjmp	.+6      	; 0x444 <lcd_print+0x184>
     43e:	c1 30       	cpi	r28, 0x01	; 1
     440:	d1 05       	cpc	r29, r1
     442:	f9 f4       	brne	.+62     	; 0x482 <lcd_print+0x1c2>
     444:	98 01       	movw	r18, r16
     446:	ad ec       	ldi	r26, 0xCD	; 205
     448:	bc ec       	ldi	r27, 0xCC	; 204
     44a:	0e 94 a4 16 	call	0x2d48	; 0x2d48 <__umulhisi3>
     44e:	96 95       	lsr	r25
     450:	87 95       	ror	r24
     452:	96 95       	lsr	r25
     454:	87 95       	ror	r24
     456:	96 95       	lsr	r25
     458:	87 95       	ror	r24
     45a:	9c 01       	movw	r18, r24
     45c:	22 0f       	add	r18, r18
     45e:	33 1f       	adc	r19, r19
     460:	88 0f       	add	r24, r24
     462:	99 1f       	adc	r25, r25
     464:	88 0f       	add	r24, r24
     466:	99 1f       	adc	r25, r25
     468:	88 0f       	add	r24, r24
     46a:	99 1f       	adc	r25, r25
     46c:	82 0f       	add	r24, r18
     46e:	93 1f       	adc	r25, r19
     470:	08 1b       	sub	r16, r24
     472:	19 0b       	sbc	r17, r25
     474:	c8 01       	movw	r24, r16
     476:	c0 96       	adiw	r24, 0x30	; 48
     478:	90 93 ba 02 	sts	0x02BA, r25
     47c:	80 93 b9 02 	sts	0x02B9, r24
     480:	ce de       	rcall	.-612    	; 0x21e <lcd_wr_char>
     482:	26 97       	sbiw	r28, 0x06	; 6
     484:	64 f0       	brlt	.+24     	; 0x49e <lcd_print+0x1de>
     486:	85 e4       	ldi	r24, 0x45	; 69
     488:	ca de       	rcall	.-620    	; 0x21e <lcd_wr_char>
     48a:	09 c0       	rjmp	.+18     	; 0x49e <lcd_print+0x1de>
     48c:	c4 30       	cpi	r28, 0x04	; 4
     48e:	d1 05       	cpc	r29, r1
     490:	09 f0       	breq	.+2      	; 0x494 <lcd_print+0x1d4>
     492:	74 cf       	rjmp	.-280    	; 0x37c <lcd_print+0xbc>
     494:	3d cf       	rjmp	.-390    	; 0x310 <lcd_print+0x50>
     496:	c2 30       	cpi	r28, 0x02	; 2
     498:	d1 05       	cpc	r29, r1
     49a:	89 f6       	brne	.-94     	; 0x43e <lcd_print+0x17e>
     49c:	a2 cf       	rjmp	.-188    	; 0x3e2 <lcd_print+0x122>
     49e:	df 91       	pop	r29
     4a0:	cf 91       	pop	r28
     4a2:	1f 91       	pop	r17
     4a4:	0f 91       	pop	r16
     4a6:	08 95       	ret

000004a8 <timer5_init>:
     4a8:	e1 e2       	ldi	r30, 0x21	; 33
     4aa:	f1 e0       	ldi	r31, 0x01	; 1
     4ac:	10 82       	st	Z, r1
     4ae:	8f ef       	ldi	r24, 0xFF	; 255
     4b0:	80 93 25 01 	sts	0x0125, r24
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	90 93 24 01 	sts	0x0124, r25
     4ba:	10 92 29 01 	sts	0x0129, r1
     4be:	80 93 28 01 	sts	0x0128, r24
     4c2:	10 92 2b 01 	sts	0x012B, r1
     4c6:	80 93 2a 01 	sts	0x012A, r24
     4ca:	10 92 2d 01 	sts	0x012D, r1
     4ce:	80 93 2c 01 	sts	0x012C, r24
     4d2:	89 ea       	ldi	r24, 0xA9	; 169
     4d4:	80 93 20 01 	sts	0x0120, r24
     4d8:	8b e0       	ldi	r24, 0x0B	; 11
     4da:	80 83       	st	Z, r24
     4dc:	08 95       	ret

000004de <motion_pin_config>:
     4de:	81 b1       	in	r24, 0x01	; 1
     4e0:	8f 60       	ori	r24, 0x0F	; 15
     4e2:	81 b9       	out	0x01, r24	; 1
     4e4:	82 b1       	in	r24, 0x02	; 2
     4e6:	80 7f       	andi	r24, 0xF0	; 240
     4e8:	82 b9       	out	0x02, r24	; 2
     4ea:	ea e0       	ldi	r30, 0x0A	; 10
     4ec:	f1 e0       	ldi	r31, 0x01	; 1
     4ee:	80 81       	ld	r24, Z
     4f0:	88 61       	ori	r24, 0x18	; 24
     4f2:	80 83       	st	Z, r24
     4f4:	eb e0       	ldi	r30, 0x0B	; 11
     4f6:	f1 e0       	ldi	r31, 0x01	; 1
     4f8:	80 81       	ld	r24, Z
     4fa:	88 61       	ori	r24, 0x18	; 24
     4fc:	80 83       	st	Z, r24
     4fe:	08 95       	ret

00000500 <motion_set>:
     500:	92 b1       	in	r25, 0x02	; 2
     502:	90 7f       	andi	r25, 0xF0	; 240
     504:	8f 70       	andi	r24, 0x0F	; 15
     506:	98 2b       	or	r25, r24
     508:	92 b9       	out	0x02, r25	; 2
     50a:	08 95       	ret

0000050c <forward>:
     50c:	86 e0       	ldi	r24, 0x06	; 6
     50e:	f8 cf       	rjmp	.-16     	; 0x500 <motion_set>
     510:	08 95       	ret

00000512 <back>:
     512:	89 e0       	ldi	r24, 0x09	; 9
     514:	f5 cf       	rjmp	.-22     	; 0x500 <motion_set>
     516:	08 95       	ret

00000518 <left>:
     518:	85 e0       	ldi	r24, 0x05	; 5
     51a:	f2 cf       	rjmp	.-28     	; 0x500 <motion_set>
     51c:	08 95       	ret

0000051e <right>:
     51e:	8a e0       	ldi	r24, 0x0A	; 10
     520:	ef cf       	rjmp	.-34     	; 0x500 <motion_set>
     522:	08 95       	ret

00000524 <stop>:
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	ec cf       	rjmp	.-40     	; 0x500 <motion_set>
     528:	08 95       	ret

0000052a <lcd_port_config>:
     52a:	87 b1       	in	r24, 0x07	; 7
     52c:	87 6f       	ori	r24, 0xF7	; 247
     52e:	87 b9       	out	0x07, r24	; 7
     530:	88 b1       	in	r24, 0x08	; 8
     532:	80 78       	andi	r24, 0x80	; 128
     534:	88 b9       	out	0x08, r24	; 8
     536:	08 95       	ret

00000538 <color_sensor_pin_config>:
     538:	8a b1       	in	r24, 0x0a	; 10
     53a:	8e 6f       	ori	r24, 0xFE	; 254
     53c:	8a b9       	out	0x0a, r24	; 10
     53e:	58 9a       	sbi	0x0b, 0	; 11
     540:	08 95       	ret

00000542 <adc_pin_config>:
     542:	10 ba       	out	0x10, r1	; 16
     544:	11 ba       	out	0x11, r1	; 17
     546:	10 92 07 01 	sts	0x0107, r1
     54a:	10 92 08 01 	sts	0x0108, r1
     54e:	08 95       	ret

00000550 <servo1_pin_config>:
     550:	25 9a       	sbi	0x04, 5	; 4
     552:	2d 9a       	sbi	0x05, 5	; 5
     554:	08 95       	ret

00000556 <servo2_pin_config>:
     556:	26 9a       	sbi	0x04, 6	; 4
     558:	2e 9a       	sbi	0x05, 6	; 5
     55a:	08 95       	ret

0000055c <servo3_pin_config>:
     55c:	27 9a       	sbi	0x04, 7	; 4
     55e:	2f 9a       	sbi	0x05, 7	; 5
     560:	08 95       	ret

00000562 <timer1_init>:
     562:	e1 e8       	ldi	r30, 0x81	; 129
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	10 82       	st	Z, r1
     568:	8c ef       	ldi	r24, 0xFC	; 252
     56a:	80 93 85 00 	sts	0x0085, r24
     56e:	81 e0       	ldi	r24, 0x01	; 1
     570:	80 93 84 00 	sts	0x0084, r24
     574:	93 e0       	ldi	r25, 0x03	; 3
     576:	90 93 89 00 	sts	0x0089, r25
     57a:	8f ef       	ldi	r24, 0xFF	; 255
     57c:	80 93 88 00 	sts	0x0088, r24
     580:	90 93 8b 00 	sts	0x008B, r25
     584:	80 93 8a 00 	sts	0x008A, r24
     588:	90 93 8d 00 	sts	0x008D, r25
     58c:	80 93 8c 00 	sts	0x008C, r24
     590:	90 93 87 00 	sts	0x0087, r25
     594:	80 93 86 00 	sts	0x0086, r24
     598:	8b ea       	ldi	r24, 0xAB	; 171
     59a:	80 93 80 00 	sts	0x0080, r24
     59e:	10 92 82 00 	sts	0x0082, r1
     5a2:	8c e0       	ldi	r24, 0x0C	; 12
     5a4:	80 83       	st	Z, r24
     5a6:	08 95       	ret

000005a8 <port_init>:
     5a8:	c0 df       	rcall	.-128    	; 0x52a <lcd_port_config>
     5aa:	cb df       	rcall	.-106    	; 0x542 <adc_pin_config>
     5ac:	3b 9a       	sbi	0x07, 3	; 7
     5ae:	43 98       	cbi	0x08, 3	; 8
     5b0:	cf df       	rcall	.-98     	; 0x550 <servo1_pin_config>
     5b2:	d1 df       	rcall	.-94     	; 0x556 <servo2_pin_config>
     5b4:	d3 df       	rcall	.-90     	; 0x55c <servo3_pin_config>
     5b6:	c0 cf       	rjmp	.-128    	; 0x538 <color_sensor_pin_config>
     5b8:	08 95       	ret

000005ba <buzzer_on>:
     5ba:	86 b1       	in	r24, 0x06	; 6
     5bc:	88 60       	ori	r24, 0x08	; 8
     5be:	88 b9       	out	0x08, r24	; 8
     5c0:	08 95       	ret

000005c2 <buzzer_off>:
     5c2:	86 b1       	in	r24, 0x06	; 6
     5c4:	87 7f       	andi	r24, 0xF7	; 247
     5c6:	88 b9       	out	0x08, r24	; 8
     5c8:	08 95       	ret

000005ca <ADC_Conversion>:
     5ca:	88 30       	cpi	r24, 0x08	; 8
     5cc:	18 f0       	brcs	.+6      	; 0x5d4 <ADC_Conversion+0xa>
     5ce:	98 e0       	ldi	r25, 0x08	; 8
     5d0:	90 93 7b 00 	sts	0x007B, r25
     5d4:	87 70       	andi	r24, 0x07	; 7
     5d6:	80 62       	ori	r24, 0x20	; 32
     5d8:	80 93 7c 00 	sts	0x007C, r24
     5dc:	ea e7       	ldi	r30, 0x7A	; 122
     5de:	f0 e0       	ldi	r31, 0x00	; 0
     5e0:	80 81       	ld	r24, Z
     5e2:	80 64       	ori	r24, 0x40	; 64
     5e4:	80 83       	st	Z, r24
     5e6:	80 81       	ld	r24, Z
     5e8:	84 ff       	sbrs	r24, 4
     5ea:	fd cf       	rjmp	.-6      	; 0x5e6 <ADC_Conversion+0x1c>
     5ec:	80 91 79 00 	lds	r24, 0x0079
     5f0:	ea e7       	ldi	r30, 0x7A	; 122
     5f2:	f0 e0       	ldi	r31, 0x00	; 0
     5f4:	90 81       	ld	r25, Z
     5f6:	90 61       	ori	r25, 0x10	; 16
     5f8:	90 83       	st	Z, r25
     5fa:	10 92 7b 00 	sts	0x007B, r1
     5fe:	08 95       	ret

00000600 <color_sensor_pin_interrupt_init>:
     600:	f8 94       	cli
     602:	e9 e6       	ldi	r30, 0x69	; 105
     604:	f0 e0       	ldi	r31, 0x00	; 0
     606:	80 81       	ld	r24, Z
     608:	82 60       	ori	r24, 0x02	; 2
     60a:	80 83       	st	Z, r24
     60c:	e8 9a       	sbi	0x1d, 0	; 29
     60e:	78 94       	sei
     610:	08 95       	ret

00000612 <__vector_1>:
     612:	1f 92       	push	r1
     614:	0f 92       	push	r0
     616:	0f b6       	in	r0, 0x3f	; 63
     618:	0f 92       	push	r0
     61a:	11 24       	eor	r1, r1
     61c:	8f 93       	push	r24
     61e:	9f 93       	push	r25
     620:	af 93       	push	r26
     622:	bf 93       	push	r27
     624:	80 91 5c 02 	lds	r24, 0x025C
     628:	90 91 5d 02 	lds	r25, 0x025D
     62c:	a0 91 5e 02 	lds	r26, 0x025E
     630:	b0 91 5f 02 	lds	r27, 0x025F
     634:	01 96       	adiw	r24, 0x01	; 1
     636:	a1 1d       	adc	r26, r1
     638:	b1 1d       	adc	r27, r1
     63a:	80 93 5c 02 	sts	0x025C, r24
     63e:	90 93 5d 02 	sts	0x025D, r25
     642:	a0 93 5e 02 	sts	0x025E, r26
     646:	b0 93 5f 02 	sts	0x025F, r27
     64a:	bf 91       	pop	r27
     64c:	af 91       	pop	r26
     64e:	9f 91       	pop	r25
     650:	8f 91       	pop	r24
     652:	0f 90       	pop	r0
     654:	0f be       	out	0x3f, r0	; 63
     656:	0f 90       	pop	r0
     658:	1f 90       	pop	r1
     65a:	18 95       	reti

0000065c <adc_init>:
     65c:	ea e7       	ldi	r30, 0x7A	; 122
     65e:	f0 e0       	ldi	r31, 0x00	; 0
     660:	10 82       	st	Z, r1
     662:	10 92 7b 00 	sts	0x007B, r1
     666:	80 e2       	ldi	r24, 0x20	; 32
     668:	80 93 7c 00 	sts	0x007C, r24
     66c:	80 e8       	ldi	r24, 0x80	; 128
     66e:	80 bf       	out	0x30, r24	; 48
     670:	86 e8       	ldi	r24, 0x86	; 134
     672:	80 83       	st	Z, r24
     674:	08 95       	ret

00000676 <servo_1>:
     676:	10 92 89 00 	sts	0x0089, r1
     67a:	68 2f       	mov	r22, r24
     67c:	70 e0       	ldi	r23, 0x00	; 0
     67e:	80 e0       	ldi	r24, 0x00	; 0
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__floatunsisf>
     686:	2b e7       	ldi	r18, 0x7B	; 123
     688:	34 e1       	ldi	r19, 0x14	; 20
     68a:	4e ee       	ldi	r20, 0xEE	; 238
     68c:	5f e3       	ldi	r21, 0x3F	; 63
     68e:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__divsf3>
     692:	20 e0       	ldi	r18, 0x00	; 0
     694:	30 e0       	ldi	r19, 0x00	; 0
     696:	4c e0       	ldi	r20, 0x0C	; 12
     698:	52 e4       	ldi	r21, 0x42	; 66
     69a:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <__addsf3>
     69e:	0e 94 d7 15 	call	0x2bae	; 0x2bae <__fixunssfsi>
     6a2:	60 93 88 00 	sts	0x0088, r22
     6a6:	08 95       	ret

000006a8 <filter_red>:
     6a8:	5e 98       	cbi	0x0b, 6	; 11
     6aa:	5f 98       	cbi	0x0b, 7	; 11
     6ac:	08 95       	ret

000006ae <filter_green>:
     6ae:	5e 9a       	sbi	0x0b, 6	; 11
     6b0:	5f 9a       	sbi	0x0b, 7	; 11
     6b2:	08 95       	ret

000006b4 <filter_blue>:
     6b4:	5e 98       	cbi	0x0b, 6	; 11
     6b6:	5f 9a       	sbi	0x0b, 7	; 11
     6b8:	08 95       	ret

000006ba <color_sensor_scaling>:
     6ba:	5c 9a       	sbi	0x0b, 4	; 11
     6bc:	5d 9a       	sbi	0x0b, 5	; 11
     6be:	08 95       	ret

000006c0 <red_read>:
     6c0:	f3 df       	rcall	.-26     	; 0x6a8 <filter_red>
     6c2:	10 92 5c 02 	sts	0x025C, r1
     6c6:	10 92 5d 02 	sts	0x025D, r1
     6ca:	10 92 5e 02 	sts	0x025E, r1
     6ce:	10 92 5f 02 	sts	0x025F, r1
     6d2:	2f ef       	ldi	r18, 0xFF	; 255
     6d4:	8f e7       	ldi	r24, 0x7F	; 127
     6d6:	94 e0       	ldi	r25, 0x04	; 4
     6d8:	21 50       	subi	r18, 0x01	; 1
     6da:	80 40       	sbci	r24, 0x00	; 0
     6dc:	90 40       	sbci	r25, 0x00	; 0
     6de:	e1 f7       	brne	.-8      	; 0x6d8 <red_read+0x18>
     6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <red_read+0x22>
     6e2:	00 00       	nop
     6e4:	80 91 5c 02 	lds	r24, 0x025C
     6e8:	90 91 5d 02 	lds	r25, 0x025D
     6ec:	a0 91 5e 02 	lds	r26, 0x025E
     6f0:	b0 91 5f 02 	lds	r27, 0x025F
     6f4:	80 93 82 02 	sts	0x0282, r24
     6f8:	90 93 83 02 	sts	0x0283, r25
     6fc:	a0 93 84 02 	sts	0x0284, r26
     700:	b0 93 85 02 	sts	0x0285, r27
     704:	2f ef       	ldi	r18, 0xFF	; 255
     706:	8f ef       	ldi	r24, 0xFF	; 255
     708:	9c e2       	ldi	r25, 0x2C	; 44
     70a:	21 50       	subi	r18, 0x01	; 1
     70c:	80 40       	sbci	r24, 0x00	; 0
     70e:	90 40       	sbci	r25, 0x00	; 0
     710:	e1 f7       	brne	.-8      	; 0x70a <red_read+0x4a>
     712:	00 c0       	rjmp	.+0      	; 0x714 <red_read+0x54>
     714:	00 00       	nop
     716:	08 95       	ret

00000718 <green_read>:
     718:	ca df       	rcall	.-108    	; 0x6ae <filter_green>
     71a:	10 92 5c 02 	sts	0x025C, r1
     71e:	10 92 5d 02 	sts	0x025D, r1
     722:	10 92 5e 02 	sts	0x025E, r1
     726:	10 92 5f 02 	sts	0x025F, r1
     72a:	2f ef       	ldi	r18, 0xFF	; 255
     72c:	8f e7       	ldi	r24, 0x7F	; 127
     72e:	94 e0       	ldi	r25, 0x04	; 4
     730:	21 50       	subi	r18, 0x01	; 1
     732:	80 40       	sbci	r24, 0x00	; 0
     734:	90 40       	sbci	r25, 0x00	; 0
     736:	e1 f7       	brne	.-8      	; 0x730 <green_read+0x18>
     738:	00 c0       	rjmp	.+0      	; 0x73a <green_read+0x22>
     73a:	00 00       	nop
     73c:	80 91 5c 02 	lds	r24, 0x025C
     740:	90 91 5d 02 	lds	r25, 0x025D
     744:	a0 91 5e 02 	lds	r26, 0x025E
     748:	b0 91 5f 02 	lds	r27, 0x025F
     74c:	80 93 7e 02 	sts	0x027E, r24
     750:	90 93 7f 02 	sts	0x027F, r25
     754:	a0 93 80 02 	sts	0x0280, r26
     758:	b0 93 81 02 	sts	0x0281, r27
     75c:	08 95       	ret

0000075e <blue_read>:
     75e:	aa df       	rcall	.-172    	; 0x6b4 <filter_blue>
     760:	10 92 5c 02 	sts	0x025C, r1
     764:	10 92 5d 02 	sts	0x025D, r1
     768:	10 92 5e 02 	sts	0x025E, r1
     76c:	10 92 5f 02 	sts	0x025F, r1
     770:	2f ef       	ldi	r18, 0xFF	; 255
     772:	8f e7       	ldi	r24, 0x7F	; 127
     774:	94 e0       	ldi	r25, 0x04	; 4
     776:	21 50       	subi	r18, 0x01	; 1
     778:	80 40       	sbci	r24, 0x00	; 0
     77a:	90 40       	sbci	r25, 0x00	; 0
     77c:	e1 f7       	brne	.-8      	; 0x776 <blue_read+0x18>
     77e:	00 c0       	rjmp	.+0      	; 0x780 <blue_read+0x22>
     780:	00 00       	nop
     782:	80 91 5c 02 	lds	r24, 0x025C
     786:	90 91 5d 02 	lds	r25, 0x025D
     78a:	a0 91 5e 02 	lds	r26, 0x025E
     78e:	b0 91 5f 02 	lds	r27, 0x025F
     792:	80 93 72 02 	sts	0x0272, r24
     796:	90 93 73 02 	sts	0x0273, r25
     79a:	a0 93 74 02 	sts	0x0274, r26
     79e:	b0 93 75 02 	sts	0x0275, r27
     7a2:	08 95       	ret

000007a4 <left_encoder_pin_config>:
     7a4:	6c 98       	cbi	0x0d, 4	; 13
     7a6:	74 9a       	sbi	0x0e, 4	; 14
     7a8:	08 95       	ret

000007aa <right_encoder_pin_config>:
     7aa:	6d 98       	cbi	0x0d, 5	; 13
     7ac:	75 9a       	sbi	0x0e, 5	; 14
     7ae:	08 95       	ret

000007b0 <port_init_poz>:
     7b0:	96 de       	rcall	.-724    	; 0x4de <motion_pin_config>
     7b2:	f8 df       	rcall	.-16     	; 0x7a4 <left_encoder_pin_config>
     7b4:	fa cf       	rjmp	.-12     	; 0x7aa <right_encoder_pin_config>
     7b6:	08 95       	ret

000007b8 <left_position_encoder_interrupt_init>:
     7b8:	f8 94       	cli
     7ba:	ea e6       	ldi	r30, 0x6A	; 106
     7bc:	f0 e0       	ldi	r31, 0x00	; 0
     7be:	80 81       	ld	r24, Z
     7c0:	82 60       	ori	r24, 0x02	; 2
     7c2:	80 83       	st	Z, r24
     7c4:	ec 9a       	sbi	0x1d, 4	; 29
     7c6:	78 94       	sei
     7c8:	08 95       	ret

000007ca <right_position_encoder_interrupt_init>:
     7ca:	f8 94       	cli
     7cc:	ea e6       	ldi	r30, 0x6A	; 106
     7ce:	f0 e0       	ldi	r31, 0x00	; 0
     7d0:	80 81       	ld	r24, Z
     7d2:	88 60       	ori	r24, 0x08	; 8
     7d4:	80 83       	st	Z, r24
     7d6:	ed 9a       	sbi	0x1d, 5	; 29
     7d8:	78 94       	sei
     7da:	08 95       	ret

000007dc <__vector_6>:
     7dc:	1f 92       	push	r1
     7de:	0f 92       	push	r0
     7e0:	0f b6       	in	r0, 0x3f	; 63
     7e2:	0f 92       	push	r0
     7e4:	11 24       	eor	r1, r1
     7e6:	8f 93       	push	r24
     7e8:	9f 93       	push	r25
     7ea:	af 93       	push	r26
     7ec:	bf 93       	push	r27
     7ee:	80 91 60 02 	lds	r24, 0x0260
     7f2:	90 91 61 02 	lds	r25, 0x0261
     7f6:	a0 91 62 02 	lds	r26, 0x0262
     7fa:	b0 91 63 02 	lds	r27, 0x0263
     7fe:	01 96       	adiw	r24, 0x01	; 1
     800:	a1 1d       	adc	r26, r1
     802:	b1 1d       	adc	r27, r1
     804:	80 93 60 02 	sts	0x0260, r24
     808:	90 93 61 02 	sts	0x0261, r25
     80c:	a0 93 62 02 	sts	0x0262, r26
     810:	b0 93 63 02 	sts	0x0263, r27
     814:	bf 91       	pop	r27
     816:	af 91       	pop	r26
     818:	9f 91       	pop	r25
     81a:	8f 91       	pop	r24
     81c:	0f 90       	pop	r0
     81e:	0f be       	out	0x3f, r0	; 63
     820:	0f 90       	pop	r0
     822:	1f 90       	pop	r1
     824:	18 95       	reti

00000826 <__vector_5>:
     826:	1f 92       	push	r1
     828:	0f 92       	push	r0
     82a:	0f b6       	in	r0, 0x3f	; 63
     82c:	0f 92       	push	r0
     82e:	11 24       	eor	r1, r1
     830:	8f 93       	push	r24
     832:	9f 93       	push	r25
     834:	af 93       	push	r26
     836:	bf 93       	push	r27
     838:	80 91 64 02 	lds	r24, 0x0264
     83c:	90 91 65 02 	lds	r25, 0x0265
     840:	a0 91 66 02 	lds	r26, 0x0266
     844:	b0 91 67 02 	lds	r27, 0x0267
     848:	01 96       	adiw	r24, 0x01	; 1
     84a:	a1 1d       	adc	r26, r1
     84c:	b1 1d       	adc	r27, r1
     84e:	80 93 64 02 	sts	0x0264, r24
     852:	90 93 65 02 	sts	0x0265, r25
     856:	a0 93 66 02 	sts	0x0266, r26
     85a:	b0 93 67 02 	sts	0x0267, r27
     85e:	bf 91       	pop	r27
     860:	af 91       	pop	r26
     862:	9f 91       	pop	r25
     864:	8f 91       	pop	r24
     866:	0f 90       	pop	r0
     868:	0f be       	out	0x3f, r0	; 63
     86a:	0f 90       	pop	r0
     86c:	1f 90       	pop	r1
     86e:	18 95       	reti

00000870 <angle_rotate>:
     870:	cf 92       	push	r12
     872:	df 92       	push	r13
     874:	ef 92       	push	r14
     876:	ff 92       	push	r15
     878:	0f 93       	push	r16
     87a:	1f 93       	push	r17
     87c:	bc 01       	movw	r22, r24
     87e:	80 e0       	ldi	r24, 0x00	; 0
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__floatunsisf>
     886:	28 e4       	ldi	r18, 0x48	; 72
     888:	31 ee       	ldi	r19, 0xE1	; 225
     88a:	42 e8       	ldi	r20, 0x82	; 130
     88c:	50 e4       	ldi	r21, 0x40	; 64
     88e:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__divsf3>
     892:	0e 94 d7 15 	call	0x2bae	; 0x2bae <__fixunssfsi>
     896:	cb 01       	movw	r24, r22
     898:	a0 e0       	ldi	r26, 0x00	; 0
     89a:	b0 e0       	ldi	r27, 0x00	; 0
     89c:	10 92 60 02 	sts	0x0260, r1
     8a0:	10 92 61 02 	sts	0x0261, r1
     8a4:	10 92 62 02 	sts	0x0262, r1
     8a8:	10 92 63 02 	sts	0x0263, r1
     8ac:	10 92 64 02 	sts	0x0264, r1
     8b0:	10 92 65 02 	sts	0x0265, r1
     8b4:	10 92 66 02 	sts	0x0266, r1
     8b8:	10 92 67 02 	sts	0x0267, r1
     8bc:	51 e0       	ldi	r21, 0x01	; 1
     8be:	e0 e0       	ldi	r30, 0x00	; 0
     8c0:	c0 90 60 02 	lds	r12, 0x0260
     8c4:	d0 90 61 02 	lds	r13, 0x0261
     8c8:	e0 90 62 02 	lds	r14, 0x0262
     8cc:	f0 90 63 02 	lds	r15, 0x0263
     8d0:	00 91 64 02 	lds	r16, 0x0264
     8d4:	10 91 65 02 	lds	r17, 0x0265
     8d8:	20 91 66 02 	lds	r18, 0x0266
     8dc:	30 91 67 02 	lds	r19, 0x0267
     8e0:	45 2f       	mov	r20, r21
     8e2:	08 17       	cp	r16, r24
     8e4:	19 07       	cpc	r17, r25
     8e6:	2a 07       	cpc	r18, r26
     8e8:	3b 07       	cpc	r19, r27
     8ea:	08 f4       	brcc	.+2      	; 0x8ee <angle_rotate+0x7e>
     8ec:	4e 2f       	mov	r20, r30
     8ee:	41 11       	cpse	r20, r1
     8f0:	09 c0       	rjmp	.+18     	; 0x904 <angle_rotate+0x94>
     8f2:	25 2f       	mov	r18, r21
     8f4:	c8 16       	cp	r12, r24
     8f6:	d9 06       	cpc	r13, r25
     8f8:	ea 06       	cpc	r14, r26
     8fa:	fb 06       	cpc	r15, r27
     8fc:	08 f4       	brcc	.+2      	; 0x900 <angle_rotate+0x90>
     8fe:	2e 2f       	mov	r18, r30
     900:	22 23       	and	r18, r18
     902:	f1 f2       	breq	.-68     	; 0x8c0 <angle_rotate+0x50>
     904:	0f de       	rcall	.-994    	; 0x524 <stop>
     906:	1f 91       	pop	r17
     908:	0f 91       	pop	r16
     90a:	ff 90       	pop	r15
     90c:	ef 90       	pop	r14
     90e:	df 90       	pop	r13
     910:	cf 90       	pop	r12
     912:	08 95       	ret

00000914 <linear_distance_mm>:
     914:	0f 93       	push	r16
     916:	1f 93       	push	r17
     918:	bc 01       	movw	r22, r24
     91a:	80 e0       	ldi	r24, 0x00	; 0
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__floatunsisf>
     922:	25 ee       	ldi	r18, 0xE5	; 229
     924:	30 ed       	ldi	r19, 0xD0	; 208
     926:	4a ea       	ldi	r20, 0xAA	; 170
     928:	50 e4       	ldi	r21, 0x40	; 64
     92a:	0e 94 6f 15 	call	0x2ade	; 0x2ade <__divsf3>
     92e:	0e 94 d7 15 	call	0x2bae	; 0x2bae <__fixunssfsi>
     932:	10 92 60 02 	sts	0x0260, r1
     936:	10 92 61 02 	sts	0x0261, r1
     93a:	10 92 62 02 	sts	0x0262, r1
     93e:	10 92 63 02 	sts	0x0263, r1
     942:	00 91 60 02 	lds	r16, 0x0260
     946:	10 91 61 02 	lds	r17, 0x0261
     94a:	20 91 62 02 	lds	r18, 0x0262
     94e:	30 91 63 02 	lds	r19, 0x0263
     952:	60 17       	cp	r22, r16
     954:	71 07       	cpc	r23, r17
     956:	82 07       	cpc	r24, r18
     958:	93 07       	cpc	r25, r19
     95a:	98 f7       	brcc	.-26     	; 0x942 <linear_distance_mm+0x2e>
     95c:	e3 dd       	rcall	.-1082   	; 0x524 <stop>
     95e:	1f 91       	pop	r17
     960:	0f 91       	pop	r16
     962:	08 95       	ret

00000964 <forward_mm>:
     964:	cf 93       	push	r28
     966:	df 93       	push	r29
     968:	ec 01       	movw	r28, r24
     96a:	d0 dd       	rcall	.-1120   	; 0x50c <forward>
     96c:	ce 01       	movw	r24, r28
     96e:	d2 df       	rcall	.-92     	; 0x914 <linear_distance_mm>
     970:	df 91       	pop	r29
     972:	cf 91       	pop	r28
     974:	08 95       	ret

00000976 <back_mm>:
     976:	cf 93       	push	r28
     978:	df 93       	push	r29
     97a:	ec 01       	movw	r28, r24
     97c:	ca dd       	rcall	.-1132   	; 0x512 <back>
     97e:	ce 01       	movw	r24, r28
     980:	c9 df       	rcall	.-110    	; 0x914 <linear_distance_mm>
     982:	df 91       	pop	r29
     984:	cf 91       	pop	r28
     986:	08 95       	ret

00000988 <left_degrees>:
     988:	cf 93       	push	r28
     98a:	df 93       	push	r29
     98c:	ec 01       	movw	r28, r24
     98e:	c4 dd       	rcall	.-1144   	; 0x518 <left>
     990:	ce 01       	movw	r24, r28
     992:	6e df       	rcall	.-292    	; 0x870 <angle_rotate>
     994:	df 91       	pop	r29
     996:	cf 91       	pop	r28
     998:	08 95       	ret

0000099a <right_degrees>:
     99a:	cf 93       	push	r28
     99c:	df 93       	push	r29
     99e:	ec 01       	movw	r28, r24
     9a0:	be dd       	rcall	.-1156   	; 0x51e <right>
     9a2:	ce 01       	movw	r24, r28
     9a4:	65 df       	rcall	.-310    	; 0x870 <angle_rotate>
     9a6:	df 91       	pop	r29
     9a8:	cf 91       	pop	r28
     9aa:	08 95       	ret

000009ac <init_devices>:
     9ac:	f8 94       	cli
     9ae:	00 df       	rcall	.-512    	; 0x7b0 <port_init_poz>
     9b0:	03 df       	rcall	.-506    	; 0x7b8 <left_position_encoder_interrupt_init>
     9b2:	0b df       	rcall	.-490    	; 0x7ca <right_position_encoder_interrupt_init>
     9b4:	f9 dd       	rcall	.-1038   	; 0x5a8 <port_init>
     9b6:	24 de       	rcall	.-952    	; 0x600 <color_sensor_pin_interrupt_init>
     9b8:	51 de       	rcall	.-862    	; 0x65c <adc_init>
     9ba:	91 dd       	rcall	.-1246   	; 0x4de <motion_pin_config>
     9bc:	75 dd       	rcall	.-1302   	; 0x4a8 <timer5_init>
     9be:	d1 dd       	rcall	.-1118   	; 0x562 <timer1_init>
     9c0:	78 94       	sei
     9c2:	08 95       	ret

000009c4 <turnRight>:
     9c4:	80 91 52 02 	lds	r24, 0x0252
     9c8:	90 91 53 02 	lds	r25, 0x0253
     9cc:	83 30       	cpi	r24, 0x03	; 3
     9ce:	91 05       	cpc	r25, r1
     9d0:	39 f4       	brne	.+14     	; 0x9e0 <turnRight+0x1c>
     9d2:	80 91 54 02 	lds	r24, 0x0254
     9d6:	90 91 55 02 	lds	r25, 0x0255
     9da:	02 97       	sbiw	r24, 0x02	; 2
     9dc:	98 f4       	brcc	.+38     	; 0xa04 <turnRight+0x40>
     9de:	09 c0       	rjmp	.+18     	; 0x9f2 <turnRight+0x2e>
     9e0:	01 97       	sbiw	r24, 0x01	; 1
     9e2:	81 f4       	brne	.+32     	; 0xa04 <turnRight+0x40>
     9e4:	80 91 54 02 	lds	r24, 0x0254
     9e8:	90 91 55 02 	lds	r25, 0x0255
     9ec:	02 97       	sbiw	r24, 0x02	; 2
     9ee:	02 97       	sbiw	r24, 0x02	; 2
     9f0:	48 f4       	brcc	.+18     	; 0xa04 <turnRight+0x40>
     9f2:	8f ef       	ldi	r24, 0xFF	; 255
     9f4:	80 93 28 01 	sts	0x0128, r24
     9f8:	80 93 2a 01 	sts	0x012A, r24
     9fc:	8a e5       	ldi	r24, 0x5A	; 90
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	cc df       	rcall	.-104    	; 0x99a <right_degrees>
     a02:	0f c0       	rjmp	.+30     	; 0xa22 <turnRight+0x5e>
     a04:	8e e1       	ldi	r24, 0x1E	; 30
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	c8 df       	rcall	.-112    	; 0x99a <right_degrees>
     a0a:	88 ec       	ldi	r24, 0xC8	; 200
     a0c:	80 93 28 01 	sts	0x0128, r24
     a10:	80 93 2a 01 	sts	0x012A, r24
     a14:	01 c0       	rjmp	.+2      	; 0xa18 <turnRight+0x54>
     a16:	83 dd       	rcall	.-1274   	; 0x51e <right>
     a18:	82 e0       	ldi	r24, 0x02	; 2
     a1a:	d7 dd       	rcall	.-1106   	; 0x5ca <ADC_Conversion>
     a1c:	88 32       	cpi	r24, 0x28	; 40
     a1e:	d8 f3       	brcs	.-10     	; 0xa16 <turnRight+0x52>
     a20:	81 dd       	rcall	.-1278   	; 0x524 <stop>
     a22:	80 91 52 02 	lds	r24, 0x0252
     a26:	90 91 53 02 	lds	r25, 0x0253
     a2a:	01 96       	adiw	r24, 0x01	; 1
     a2c:	83 70       	andi	r24, 0x03	; 3
     a2e:	90 78       	andi	r25, 0x80	; 128
     a30:	99 23       	and	r25, r25
     a32:	24 f4       	brge	.+8      	; 0xa3c <turnRight+0x78>
     a34:	01 97       	sbiw	r24, 0x01	; 1
     a36:	8c 6f       	ori	r24, 0xFC	; 252
     a38:	9f 6f       	ori	r25, 0xFF	; 255
     a3a:	01 96       	adiw	r24, 0x01	; 1
     a3c:	90 93 53 02 	sts	0x0253, r25
     a40:	80 93 52 02 	sts	0x0252, r24
     a44:	08 95       	ret

00000a46 <turnLeft>:
     a46:	80 91 52 02 	lds	r24, 0x0252
     a4a:	90 91 53 02 	lds	r25, 0x0253
     a4e:	81 30       	cpi	r24, 0x01	; 1
     a50:	91 05       	cpc	r25, r1
     a52:	39 f4       	brne	.+14     	; 0xa62 <turnLeft+0x1c>
     a54:	80 91 54 02 	lds	r24, 0x0254
     a58:	90 91 55 02 	lds	r25, 0x0255
     a5c:	02 97       	sbiw	r24, 0x02	; 2
     a5e:	98 f4       	brcc	.+38     	; 0xa86 <turnLeft+0x40>
     a60:	09 c0       	rjmp	.+18     	; 0xa74 <turnLeft+0x2e>
     a62:	03 97       	sbiw	r24, 0x03	; 3
     a64:	81 f4       	brne	.+32     	; 0xa86 <turnLeft+0x40>
     a66:	80 91 54 02 	lds	r24, 0x0254
     a6a:	90 91 55 02 	lds	r25, 0x0255
     a6e:	02 97       	sbiw	r24, 0x02	; 2
     a70:	02 97       	sbiw	r24, 0x02	; 2
     a72:	48 f4       	brcc	.+18     	; 0xa86 <turnLeft+0x40>
     a74:	8f ef       	ldi	r24, 0xFF	; 255
     a76:	80 93 28 01 	sts	0x0128, r24
     a7a:	80 93 2a 01 	sts	0x012A, r24
     a7e:	8a e5       	ldi	r24, 0x5A	; 90
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	82 df       	rcall	.-252    	; 0x988 <left_degrees>
     a84:	0f c0       	rjmp	.+30     	; 0xaa4 <turnLeft+0x5e>
     a86:	8e e1       	ldi	r24, 0x1E	; 30
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	7e df       	rcall	.-260    	; 0x988 <left_degrees>
     a8c:	88 ec       	ldi	r24, 0xC8	; 200
     a8e:	80 93 28 01 	sts	0x0128, r24
     a92:	80 93 2a 01 	sts	0x012A, r24
     a96:	01 c0       	rjmp	.+2      	; 0xa9a <turnLeft+0x54>
     a98:	3f dd       	rcall	.-1410   	; 0x518 <left>
     a9a:	82 e0       	ldi	r24, 0x02	; 2
     a9c:	96 dd       	rcall	.-1236   	; 0x5ca <ADC_Conversion>
     a9e:	88 32       	cpi	r24, 0x28	; 40
     aa0:	d8 f3       	brcs	.-10     	; 0xa98 <turnLeft+0x52>
     aa2:	40 dd       	rcall	.-1408   	; 0x524 <stop>
     aa4:	80 91 52 02 	lds	r24, 0x0252
     aa8:	90 91 53 02 	lds	r25, 0x0253
     aac:	03 96       	adiw	r24, 0x03	; 3
     aae:	83 70       	andi	r24, 0x03	; 3
     ab0:	90 78       	andi	r25, 0x80	; 128
     ab2:	99 23       	and	r25, r25
     ab4:	24 f4       	brge	.+8      	; 0xabe <turnLeft+0x78>
     ab6:	01 97       	sbiw	r24, 0x01	; 1
     ab8:	8c 6f       	ori	r24, 0xFC	; 252
     aba:	9f 6f       	ori	r25, 0xFF	; 255
     abc:	01 96       	adiw	r24, 0x01	; 1
     abe:	90 93 53 02 	sts	0x0253, r25
     ac2:	80 93 52 02 	sts	0x0252, r24
     ac6:	08 95       	ret

00000ac8 <turn>:
     ac8:	8f ef       	ldi	r24, 0xFF	; 255
     aca:	80 93 28 01 	sts	0x0128, r24
     ace:	80 93 2a 01 	sts	0x012A, r24
     ad2:	84 eb       	ldi	r24, 0xB4	; 180
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	58 df       	rcall	.-336    	; 0x988 <left_degrees>
     ad8:	80 91 52 02 	lds	r24, 0x0252
     adc:	90 91 53 02 	lds	r25, 0x0253
     ae0:	02 96       	adiw	r24, 0x02	; 2
     ae2:	83 70       	andi	r24, 0x03	; 3
     ae4:	90 78       	andi	r25, 0x80	; 128
     ae6:	99 23       	and	r25, r25
     ae8:	24 f4       	brge	.+8      	; 0xaf2 <turn+0x2a>
     aea:	01 97       	sbiw	r24, 0x01	; 1
     aec:	8c 6f       	ori	r24, 0xFC	; 252
     aee:	9f 6f       	ori	r25, 0xFF	; 255
     af0:	01 96       	adiw	r24, 0x01	; 1
     af2:	90 93 53 02 	sts	0x0253, r25
     af6:	80 93 52 02 	sts	0x0252, r24
     afa:	08 95       	ret

00000afc <Delay>:
     afc:	0f 93       	push	r16
     afe:	1f 93       	push	r17
     b00:	cf 93       	push	r28
     b02:	df 93       	push	r29
     b04:	8c 01       	movw	r16, r24
     b06:	18 16       	cp	r1, r24
     b08:	19 06       	cpc	r1, r25
     b0a:	8c f4       	brge	.+34     	; 0xb2e <Delay+0x32>
     b0c:	c0 e0       	ldi	r28, 0x00	; 0
     b0e:	d0 e0       	ldi	r29, 0x00	; 0
     b10:	09 c0       	rjmp	.+18     	; 0xb24 <Delay+0x28>
     b12:	86 e6       	ldi	r24, 0x66	; 102
     b14:	9e e0       	ldi	r25, 0x0E	; 14
     b16:	01 97       	sbiw	r24, 0x01	; 1
     b18:	f1 f7       	brne	.-4      	; 0xb16 <Delay+0x1a>
     b1a:	00 00       	nop
     b1c:	21 96       	adiw	r28, 0x01	; 1
     b1e:	c0 17       	cp	r28, r16
     b20:	d1 07       	cpc	r29, r17
     b22:	39 f0       	breq	.+14     	; 0xb32 <Delay+0x36>
     b24:	82 e0       	ldi	r24, 0x02	; 2
     b26:	51 dd       	rcall	.-1374   	; 0x5ca <ADC_Conversion>
     b28:	89 32       	cpi	r24, 0x29	; 41
     b2a:	98 f3       	brcs	.-26     	; 0xb12 <Delay+0x16>
     b2c:	02 c0       	rjmp	.+4      	; 0xb32 <Delay+0x36>
     b2e:	c0 e0       	ldi	r28, 0x00	; 0
     b30:	d0 e0       	ldi	r29, 0x00	; 0
     b32:	f8 dc       	rcall	.-1552   	; 0x524 <stop>
     b34:	81 e0       	ldi	r24, 0x01	; 1
     b36:	c0 17       	cp	r28, r16
     b38:	d1 07       	cpc	r29, r17
     b3a:	0c f0       	brlt	.+2      	; 0xb3e <Delay+0x42>
     b3c:	80 e0       	ldi	r24, 0x00	; 0
     b3e:	df 91       	pop	r29
     b40:	cf 91       	pop	r28
     b42:	1f 91       	pop	r17
     b44:	0f 91       	pop	r16
     b46:	08 95       	ret

00000b48 <scan>:
     b48:	0f 93       	push	r16
     b4a:	1f 93       	push	r17
     b4c:	b9 dd       	rcall	.-1166   	; 0x6c0 <red_read>
     b4e:	07 de       	rcall	.-1010   	; 0x75e <blue_read>
     b50:	e3 dd       	rcall	.-1082   	; 0x718 <green_read>
     b52:	80 91 70 02 	lds	r24, 0x0270
     b56:	90 91 71 02 	lds	r25, 0x0271
     b5a:	aa 27       	eor	r26, r26
     b5c:	97 fd       	sbrc	r25, 7
     b5e:	a0 95       	com	r26
     b60:	ba 2f       	mov	r27, r26
     b62:	40 91 82 02 	lds	r20, 0x0282
     b66:	50 91 83 02 	lds	r21, 0x0283
     b6a:	60 91 84 02 	lds	r22, 0x0284
     b6e:	70 91 85 02 	lds	r23, 0x0285
     b72:	48 17       	cp	r20, r24
     b74:	59 07       	cpc	r21, r25
     b76:	6a 07       	cpc	r22, r26
     b78:	7b 07       	cpc	r23, r27
     b7a:	d8 f4       	brcc	.+54     	; 0xbb2 <scan+0x6a>
     b7c:	40 91 7e 02 	lds	r20, 0x027E
     b80:	50 91 7f 02 	lds	r21, 0x027F
     b84:	60 91 80 02 	lds	r22, 0x0280
     b88:	70 91 81 02 	lds	r23, 0x0281
     b8c:	48 17       	cp	r20, r24
     b8e:	59 07       	cpc	r21, r25
     b90:	6a 07       	cpc	r22, r26
     b92:	7b 07       	cpc	r23, r27
     b94:	70 f4       	brcc	.+28     	; 0xbb2 <scan+0x6a>
     b96:	40 91 72 02 	lds	r20, 0x0272
     b9a:	50 91 73 02 	lds	r21, 0x0273
     b9e:	60 91 74 02 	lds	r22, 0x0274
     ba2:	70 91 75 02 	lds	r23, 0x0275
     ba6:	48 17       	cp	r20, r24
     ba8:	59 07       	cpc	r21, r25
     baa:	6a 07       	cpc	r22, r26
     bac:	7b 07       	cpc	r23, r27
     bae:	08 f4       	brcc	.+2      	; 0xbb2 <scan+0x6a>
     bb0:	46 c0       	rjmp	.+140    	; 0xc3e <scan+0xf6>
     bb2:	40 91 82 02 	lds	r20, 0x0282
     bb6:	50 91 83 02 	lds	r21, 0x0283
     bba:	60 91 84 02 	lds	r22, 0x0284
     bbe:	70 91 85 02 	lds	r23, 0x0285
     bc2:	80 91 72 02 	lds	r24, 0x0272
     bc6:	90 91 73 02 	lds	r25, 0x0273
     bca:	a0 91 74 02 	lds	r26, 0x0274
     bce:	b0 91 75 02 	lds	r27, 0x0275
     bd2:	84 17       	cp	r24, r20
     bd4:	95 07       	cpc	r25, r21
     bd6:	a6 07       	cpc	r26, r22
     bd8:	b7 07       	cpc	r27, r23
     bda:	c8 f4       	brcc	.+50     	; 0xc0e <scan+0xc6>
     bdc:	00 91 82 02 	lds	r16, 0x0282
     be0:	10 91 83 02 	lds	r17, 0x0283
     be4:	20 91 84 02 	lds	r18, 0x0284
     be8:	30 91 85 02 	lds	r19, 0x0285
     bec:	40 91 7e 02 	lds	r20, 0x027E
     bf0:	50 91 7f 02 	lds	r21, 0x027F
     bf4:	60 91 80 02 	lds	r22, 0x0280
     bf8:	70 91 81 02 	lds	r23, 0x0281
     bfc:	81 e0       	ldi	r24, 0x01	; 1
     bfe:	90 e0       	ldi	r25, 0x00	; 0
     c00:	40 17       	cp	r20, r16
     c02:	51 07       	cpc	r21, r17
     c04:	62 07       	cpc	r22, r18
     c06:	73 07       	cpc	r23, r19
     c08:	f8 f4       	brcc	.+62     	; 0xc48 <scan+0x100>
     c0a:	80 e0       	ldi	r24, 0x00	; 0
     c0c:	1d c0       	rjmp	.+58     	; 0xc48 <scan+0x100>
     c0e:	40 91 72 02 	lds	r20, 0x0272
     c12:	50 91 73 02 	lds	r21, 0x0273
     c16:	60 91 74 02 	lds	r22, 0x0274
     c1a:	70 91 75 02 	lds	r23, 0x0275
     c1e:	80 91 7e 02 	lds	r24, 0x027E
     c22:	90 91 7f 02 	lds	r25, 0x027F
     c26:	a0 91 80 02 	lds	r26, 0x0280
     c2a:	b0 91 81 02 	lds	r27, 0x0281
     c2e:	84 17       	cp	r24, r20
     c30:	95 07       	cpc	r25, r21
     c32:	a6 07       	cpc	r26, r22
     c34:	b7 07       	cpc	r27, r23
     c36:	30 f4       	brcc	.+12     	; 0xc44 <scan+0xfc>
     c38:	82 e0       	ldi	r24, 0x02	; 2
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	05 c0       	rjmp	.+10     	; 0xc48 <scan+0x100>
     c3e:	83 e0       	ldi	r24, 0x03	; 3
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	02 c0       	rjmp	.+4      	; 0xc48 <scan+0x100>
     c44:	81 e0       	ldi	r24, 0x01	; 1
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	1f 91       	pop	r17
     c4a:	0f 91       	pop	r16
     c4c:	08 95       	ret

00000c4e <setIndicatorAndColor>:
     c4e:	cf 93       	push	r28
     c50:	df 93       	push	r29
     c52:	cf e9       	ldi	r28, 0x9F	; 159
     c54:	d2 e0       	ldi	r29, 0x02	; 2
     c56:	ef e8       	ldi	r30, 0x8F	; 143
     c58:	f2 e0       	ldi	r31, 0x02	; 2
     c5a:	a8 e6       	ldi	r26, 0x68	; 104
     c5c:	b2 e0       	ldi	r27, 0x02	; 2
     c5e:	80 e0       	ldi	r24, 0x00	; 0
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	2e ef       	ldi	r18, 0xFE	; 254
     c64:	3f ef       	ldi	r19, 0xFF	; 255
     c66:	89 93       	st	Y+, r24
     c68:	99 93       	st	Y+, r25
     c6a:	33 83       	std	Z+3, r19	; 0x03
     c6c:	22 83       	std	Z+2, r18	; 0x02
     c6e:	31 83       	std	Z+1, r19	; 0x01
     c70:	20 83       	st	Z, r18
     c72:	1d 92       	st	X+, r1
     c74:	1d 92       	st	X+, r1
     c76:	01 96       	adiw	r24, 0x01	; 1
     c78:	34 96       	adiw	r30, 0x04	; 4
     c7a:	84 30       	cpi	r24, 0x04	; 4
     c7c:	91 05       	cpc	r25, r1
     c7e:	99 f7       	brne	.-26     	; 0xc66 <setIndicatorAndColor+0x18>
     c80:	e0 91 9f 02 	lds	r30, 0x029F
     c84:	f0 91 a0 02 	lds	r31, 0x02A0
     c88:	ee 0f       	add	r30, r30
     c8a:	ff 1f       	adc	r31, r31
     c8c:	e9 55       	subi	r30, 0x59	; 89
     c8e:	fd 4f       	sbci	r31, 0xFD	; 253
     c90:	11 82       	std	Z+1, r1	; 0x01
     c92:	10 82       	st	Z, r1
     c94:	e0 91 a1 02 	lds	r30, 0x02A1
     c98:	f0 91 a2 02 	lds	r31, 0x02A2
     c9c:	ee 0f       	add	r30, r30
     c9e:	ff 1f       	adc	r31, r31
     ca0:	e9 55       	subi	r30, 0x59	; 89
     ca2:	fd 4f       	sbci	r31, 0xFD	; 253
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	91 83       	std	Z+1, r25	; 0x01
     caa:	80 83       	st	Z, r24
     cac:	e0 91 a3 02 	lds	r30, 0x02A3
     cb0:	f0 91 a4 02 	lds	r31, 0x02A4
     cb4:	ee 0f       	add	r30, r30
     cb6:	ff 1f       	adc	r31, r31
     cb8:	e9 55       	subi	r30, 0x59	; 89
     cba:	fd 4f       	sbci	r31, 0xFD	; 253
     cbc:	82 e0       	ldi	r24, 0x02	; 2
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	91 83       	std	Z+1, r25	; 0x01
     cc2:	80 83       	st	Z, r24
     cc4:	e0 91 a5 02 	lds	r30, 0x02A5
     cc8:	f0 91 a6 02 	lds	r31, 0x02A6
     ccc:	ee 0f       	add	r30, r30
     cce:	ff 1f       	adc	r31, r31
     cd0:	e9 55       	subi	r30, 0x59	; 89
     cd2:	fd 4f       	sbci	r31, 0xFD	; 253
     cd4:	83 e0       	ldi	r24, 0x03	; 3
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	91 83       	std	Z+1, r25	; 0x01
     cda:	80 83       	st	Z, r24
     cdc:	8f ef       	ldi	r24, 0xFF	; 255
     cde:	9f ef       	ldi	r25, 0xFF	; 255
     ce0:	90 93 8a 02 	sts	0x028A, r25
     ce4:	80 93 89 02 	sts	0x0289, r24
     ce8:	90 93 88 02 	sts	0x0288, r25
     cec:	80 93 87 02 	sts	0x0287, r24
     cf0:	90 93 b6 02 	sts	0x02B6, r25
     cf4:	80 93 b5 02 	sts	0x02B5, r24
     cf8:	90 93 b4 02 	sts	0x02B4, r25
     cfc:	80 93 b3 02 	sts	0x02B3, r24
     d00:	df 91       	pop	r29
     d02:	cf 91       	pop	r28
     d04:	08 95       	ret

00000d06 <set_color>:
     d06:	83 e0       	ldi	r24, 0x03	; 3
     d08:	60 dc       	rcall	.-1856   	; 0x5ca <ADC_Conversion>
     d0a:	80 93 51 02 	sts	0x0251, r24
     d0e:	82 e0       	ldi	r24, 0x02	; 2
     d10:	5c dc       	rcall	.-1864   	; 0x5ca <ADC_Conversion>
     d12:	80 93 50 02 	sts	0x0250, r24
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	58 dc       	rcall	.-1872   	; 0x5ca <ADC_Conversion>
     d1a:	80 93 4f 02 	sts	0x024F, r24
     d1e:	08 95       	ret

00000d20 <node>:
     d20:	88 ec       	ldi	r24, 0xC8	; 200
     d22:	80 93 28 01 	sts	0x0128, r24
     d26:	80 93 2a 01 	sts	0x012A, r24
     d2a:	80 91 50 02 	lds	r24, 0x0250
     d2e:	89 32       	cpi	r24, 0x29	; 41
     d30:	38 f4       	brcc	.+14     	; 0xd40 <node+0x20>
     d32:	0e c0       	rjmp	.+28     	; 0xd50 <node+0x30>
     d34:	eb db       	rcall	.-2090   	; 0x50c <forward>
     d36:	e7 df       	rcall	.-50     	; 0xd06 <set_color>
     d38:	80 91 50 02 	lds	r24, 0x0250
     d3c:	89 32       	cpi	r24, 0x29	; 41
     d3e:	40 f0       	brcs	.+16     	; 0xd50 <node+0x30>
     d40:	80 91 51 02 	lds	r24, 0x0251
     d44:	89 32       	cpi	r24, 0x29	; 41
     d46:	b0 f7       	brcc	.-20     	; 0xd34 <node+0x14>
     d48:	80 91 4f 02 	lds	r24, 0x024F
     d4c:	89 32       	cpi	r24, 0x29	; 41
     d4e:	90 f7       	brcc	.-28     	; 0xd34 <node+0x14>
     d50:	2f ef       	ldi	r18, 0xFF	; 255
     d52:	8f ef       	ldi	r24, 0xFF	; 255
     d54:	9a e1       	ldi	r25, 0x1A	; 26
     d56:	21 50       	subi	r18, 0x01	; 1
     d58:	80 40       	sbci	r24, 0x00	; 0
     d5a:	90 40       	sbci	r25, 0x00	; 0
     d5c:	e1 f7       	brne	.-8      	; 0xd56 <node+0x36>
     d5e:	00 c0       	rjmp	.+0      	; 0xd60 <node+0x40>
     d60:	00 00       	nop
     d62:	e0 cb       	rjmp	.-2112   	; 0x524 <stop>
     d64:	08 95       	ret

00000d66 <semiCorrect>:
     d66:	80 91 50 02 	lds	r24, 0x0250
     d6a:	88 32       	cpi	r24, 0x28	; 40
     d6c:	58 f5       	brcc	.+86     	; 0xdc4 <semiCorrect+0x5e>
     d6e:	80 91 51 02 	lds	r24, 0x0251
     d72:	89 32       	cpi	r24, 0x29	; 41
     d74:	98 f0       	brcs	.+38     	; 0xd9c <semiCorrect+0x36>
     d76:	90 91 4f 02 	lds	r25, 0x024F
     d7a:	98 32       	cpi	r25, 0x28	; 40
     d7c:	78 f4       	brcc	.+30     	; 0xd9c <semiCorrect+0x36>
     d7e:	cc db       	rcall	.-2152   	; 0x518 <left>
     d80:	c2 df       	rcall	.-124    	; 0xd06 <set_color>
     d82:	80 91 50 02 	lds	r24, 0x0250
     d86:	88 32       	cpi	r24, 0x28	; 40
     d88:	e8 f4       	brcc	.+58     	; 0xdc4 <semiCorrect+0x5e>
     d8a:	80 91 51 02 	lds	r24, 0x0251
     d8e:	89 32       	cpi	r24, 0x29	; 41
     d90:	c8 f0       	brcs	.+50     	; 0xdc4 <semiCorrect+0x5e>
     d92:	80 91 4f 02 	lds	r24, 0x024F
     d96:	88 32       	cpi	r24, 0x28	; 40
     d98:	90 f3       	brcs	.-28     	; 0xd7e <semiCorrect+0x18>
     d9a:	08 95       	ret
     d9c:	90 91 4f 02 	lds	r25, 0x024F
     da0:	99 32       	cpi	r25, 0x29	; 41
     da2:	80 f0       	brcs	.+32     	; 0xdc4 <semiCorrect+0x5e>
     da4:	88 32       	cpi	r24, 0x28	; 40
     da6:	70 f4       	brcc	.+28     	; 0xdc4 <semiCorrect+0x5e>
     da8:	ba db       	rcall	.-2188   	; 0x51e <right>
     daa:	ad df       	rcall	.-166    	; 0xd06 <set_color>
     dac:	80 91 50 02 	lds	r24, 0x0250
     db0:	88 32       	cpi	r24, 0x28	; 40
     db2:	40 f4       	brcc	.+16     	; 0xdc4 <semiCorrect+0x5e>
     db4:	80 91 51 02 	lds	r24, 0x0251
     db8:	88 32       	cpi	r24, 0x28	; 40
     dba:	20 f4       	brcc	.+8      	; 0xdc4 <semiCorrect+0x5e>
     dbc:	80 91 4f 02 	lds	r24, 0x024F
     dc0:	89 32       	cpi	r24, 0x29	; 41
     dc2:	90 f7       	brcc	.-28     	; 0xda8 <semiCorrect+0x42>
     dc4:	08 95       	ret

00000dc6 <correct>:
     dc6:	0f 93       	push	r16
     dc8:	1f 93       	push	r17
     dca:	cf 93       	push	r28
     dcc:	df 93       	push	r29
     dce:	85 e0       	ldi	r24, 0x05	; 5
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	90 93 77 02 	sts	0x0277, r25
     dd6:	80 93 76 02 	sts	0x0276, r24
     dda:	a4 db       	rcall	.-2232   	; 0x524 <stop>
     ddc:	80 91 4e 02 	lds	r24, 0x024E
     de0:	81 30       	cpi	r24, 0x01	; 1
     de2:	09 f0       	breq	.+2      	; 0xde6 <correct+0x20>
     de4:	34 c0       	rjmp	.+104    	; 0xe4e <correct+0x88>
     de6:	10 92 4e 02 	sts	0x024E, r1
     dea:	ce e3       	ldi	r28, 0x3E	; 62
     dec:	d0 e0       	ldi	r29, 0x00	; 0
     dee:	02 e0       	ldi	r16, 0x02	; 2
     df0:	10 e0       	ldi	r17, 0x00	; 0
     df2:	95 db       	rcall	.-2262   	; 0x51e <right>
     df4:	02 30       	cpi	r16, 0x02	; 2
     df6:	11 05       	cpc	r17, r1
     df8:	31 f4       	brne	.+12     	; 0xe06 <correct+0x40>
     dfa:	8e e1       	ldi	r24, 0x1E	; 30
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	7e de       	rcall	.-772    	; 0xafc <Delay>
     e00:	88 23       	and	r24, r24
     e02:	29 f0       	breq	.+10     	; 0xe0e <correct+0x48>
     e04:	58 c0       	rjmp	.+176    	; 0xeb6 <correct+0xf0>
     e06:	ce 01       	movw	r24, r28
     e08:	79 de       	rcall	.-782    	; 0xafc <Delay>
     e0a:	81 11       	cpse	r24, r1
     e0c:	54 c0       	rjmp	.+168    	; 0xeb6 <correct+0xf0>
     e0e:	8a db       	rcall	.-2284   	; 0x524 <stop>
     e10:	82 e0       	ldi	r24, 0x02	; 2
     e12:	db db       	rcall	.-2122   	; 0x5ca <ADC_Conversion>
     e14:	89 32       	cpi	r24, 0x29	; 41
     e16:	08 f0       	brcs	.+2      	; 0xe1a <correct+0x54>
     e18:	4d c0       	rjmp	.+154    	; 0xeb4 <correct+0xee>
     e1a:	a5 df       	rcall	.-182    	; 0xd66 <semiCorrect>
     e1c:	7d db       	rcall	.-2310   	; 0x518 <left>
     e1e:	02 30       	cpi	r16, 0x02	; 2
     e20:	11 05       	cpc	r17, r1
     e22:	31 f4       	brne	.+12     	; 0xe30 <correct+0x6a>
     e24:	8c e3       	ldi	r24, 0x3C	; 60
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	69 de       	rcall	.-814    	; 0xafc <Delay>
     e2a:	88 23       	and	r24, r24
     e2c:	29 f0       	breq	.+10     	; 0xe38 <correct+0x72>
     e2e:	43 c0       	rjmp	.+134    	; 0xeb6 <correct+0xf0>
     e30:	ce 01       	movw	r24, r28
     e32:	64 de       	rcall	.-824    	; 0xafc <Delay>
     e34:	81 11       	cpse	r24, r1
     e36:	3f c0       	rjmp	.+126    	; 0xeb6 <correct+0xf0>
     e38:	75 db       	rcall	.-2326   	; 0x524 <stop>
     e3a:	82 e0       	ldi	r24, 0x02	; 2
     e3c:	c6 db       	rcall	.-2164   	; 0x5ca <ADC_Conversion>
     e3e:	64 96       	adiw	r28, 0x14	; 20
     e40:	88 32       	cpi	r24, 0x28	; 40
     e42:	08 f4       	brcc	.+2      	; 0xe46 <correct+0x80>
     e44:	37 c0       	rjmp	.+110    	; 0xeb4 <correct+0xee>
     e46:	8f df       	rcall	.-226    	; 0xd66 <semiCorrect>
     e48:	0c 5e       	subi	r16, 0xEC	; 236
     e4a:	1f 4f       	sbci	r17, 0xFF	; 255
     e4c:	d2 cf       	rjmp	.-92     	; 0xdf2 <correct+0x2c>
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	80 93 4e 02 	sts	0x024E, r24
     e54:	ce e3       	ldi	r28, 0x3E	; 62
     e56:	d0 e0       	ldi	r29, 0x00	; 0
     e58:	02 e0       	ldi	r16, 0x02	; 2
     e5a:	10 e0       	ldi	r17, 0x00	; 0
     e5c:	5d db       	rcall	.-2374   	; 0x518 <left>
     e5e:	02 30       	cpi	r16, 0x02	; 2
     e60:	11 05       	cpc	r17, r1
     e62:	31 f4       	brne	.+12     	; 0xe70 <correct+0xaa>
     e64:	8e e1       	ldi	r24, 0x1E	; 30
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	49 de       	rcall	.-878    	; 0xafc <Delay>
     e6a:	88 23       	and	r24, r24
     e6c:	29 f0       	breq	.+10     	; 0xe78 <correct+0xb2>
     e6e:	23 c0       	rjmp	.+70     	; 0xeb6 <correct+0xf0>
     e70:	ce 01       	movw	r24, r28
     e72:	44 de       	rcall	.-888    	; 0xafc <Delay>
     e74:	81 11       	cpse	r24, r1
     e76:	1f c0       	rjmp	.+62     	; 0xeb6 <correct+0xf0>
     e78:	55 db       	rcall	.-2390   	; 0x524 <stop>
     e7a:	82 e0       	ldi	r24, 0x02	; 2
     e7c:	a6 db       	rcall	.-2228   	; 0x5ca <ADC_Conversion>
     e7e:	89 32       	cpi	r24, 0x29	; 41
     e80:	c8 f4       	brcc	.+50     	; 0xeb4 <correct+0xee>
     e82:	71 df       	rcall	.-286    	; 0xd66 <semiCorrect>
     e84:	4c db       	rcall	.-2408   	; 0x51e <right>
     e86:	02 30       	cpi	r16, 0x02	; 2
     e88:	11 05       	cpc	r17, r1
     e8a:	31 f4       	brne	.+12     	; 0xe98 <correct+0xd2>
     e8c:	8c e3       	ldi	r24, 0x3C	; 60
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	35 de       	rcall	.-918    	; 0xafc <Delay>
     e92:	88 23       	and	r24, r24
     e94:	29 f0       	breq	.+10     	; 0xea0 <correct+0xda>
     e96:	0f c0       	rjmp	.+30     	; 0xeb6 <correct+0xf0>
     e98:	ce 01       	movw	r24, r28
     e9a:	30 de       	rcall	.-928    	; 0xafc <Delay>
     e9c:	81 11       	cpse	r24, r1
     e9e:	0b c0       	rjmp	.+22     	; 0xeb6 <correct+0xf0>
     ea0:	41 db       	rcall	.-2430   	; 0x524 <stop>
     ea2:	82 e0       	ldi	r24, 0x02	; 2
     ea4:	92 db       	rcall	.-2268   	; 0x5ca <ADC_Conversion>
     ea6:	64 96       	adiw	r28, 0x14	; 20
     ea8:	88 32       	cpi	r24, 0x28	; 40
     eaa:	20 f0       	brcs	.+8      	; 0xeb4 <correct+0xee>
     eac:	5c df       	rcall	.-328    	; 0xd66 <semiCorrect>
     eae:	0c 5e       	subi	r16, 0xEC	; 236
     eb0:	1f 4f       	sbci	r17, 0xFF	; 255
     eb2:	d4 cf       	rjmp	.-88     	; 0xe5c <correct+0x96>
     eb4:	37 db       	rcall	.-2450   	; 0x524 <stop>
     eb6:	df 91       	pop	r29
     eb8:	cf 91       	pop	r28
     eba:	1f 91       	pop	r17
     ebc:	0f 91       	pop	r16
     ebe:	08 95       	ret

00000ec0 <noNatak>:
     ec0:	86 e9       	ldi	r24, 0x96	; 150
     ec2:	80 93 28 01 	sts	0x0128, r24
     ec6:	80 93 2a 01 	sts	0x012A, r24
     eca:	80 91 50 02 	lds	r24, 0x0250
     ece:	88 32       	cpi	r24, 0x28	; 40
     ed0:	70 f5       	brcc	.+92     	; 0xf2e <noNatak+0x6e>
     ed2:	80 91 51 02 	lds	r24, 0x0251
     ed6:	89 32       	cpi	r24, 0x29	; 41
     ed8:	98 f0       	brcs	.+38     	; 0xf00 <noNatak+0x40>
     eda:	90 91 4f 02 	lds	r25, 0x024F
     ede:	98 32       	cpi	r25, 0x28	; 40
     ee0:	78 f4       	brcc	.+30     	; 0xf00 <noNatak+0x40>
     ee2:	1a db       	rcall	.-2508   	; 0x518 <left>
     ee4:	10 df       	rcall	.-480    	; 0xd06 <set_color>
     ee6:	80 91 50 02 	lds	r24, 0x0250
     eea:	88 32       	cpi	r24, 0x28	; 40
     eec:	78 f5       	brcc	.+94     	; 0xf4c <noNatak+0x8c>
     eee:	80 91 51 02 	lds	r24, 0x0251
     ef2:	89 32       	cpi	r24, 0x29	; 41
     ef4:	58 f1       	brcs	.+86     	; 0xf4c <noNatak+0x8c>
     ef6:	80 91 4f 02 	lds	r24, 0x024F
     efa:	88 32       	cpi	r24, 0x28	; 40
     efc:	90 f3       	brcs	.-28     	; 0xee2 <noNatak+0x22>
     efe:	26 c0       	rjmp	.+76     	; 0xf4c <noNatak+0x8c>
     f00:	90 91 4f 02 	lds	r25, 0x024F
     f04:	99 32       	cpi	r25, 0x29	; 41
     f06:	88 f0       	brcs	.+34     	; 0xf2a <noNatak+0x6a>
     f08:	88 32       	cpi	r24, 0x28	; 40
     f0a:	78 f4       	brcc	.+30     	; 0xf2a <noNatak+0x6a>
     f0c:	08 db       	rcall	.-2544   	; 0x51e <right>
     f0e:	fb de       	rcall	.-522    	; 0xd06 <set_color>
     f10:	80 91 50 02 	lds	r24, 0x0250
     f14:	88 32       	cpi	r24, 0x28	; 40
     f16:	d0 f4       	brcc	.+52     	; 0xf4c <noNatak+0x8c>
     f18:	80 91 51 02 	lds	r24, 0x0251
     f1c:	88 32       	cpi	r24, 0x28	; 40
     f1e:	b0 f4       	brcc	.+44     	; 0xf4c <noNatak+0x8c>
     f20:	80 91 4f 02 	lds	r24, 0x024F
     f24:	89 32       	cpi	r24, 0x29	; 41
     f26:	90 f7       	brcc	.-28     	; 0xf0c <noNatak+0x4c>
     f28:	11 c0       	rjmp	.+34     	; 0xf4c <noNatak+0x8c>
     f2a:	4d df       	rcall	.-358    	; 0xdc6 <correct>
     f2c:	0f c0       	rjmp	.+30     	; 0xf4c <noNatak+0x8c>
     f2e:	80 91 51 02 	lds	r24, 0x0251
     f32:	89 32       	cpi	r24, 0x29	; 41
     f34:	20 f0       	brcs	.+8      	; 0xf3e <noNatak+0x7e>
     f36:	90 91 4f 02 	lds	r25, 0x024F
     f3a:	98 32       	cpi	r25, 0x28	; 40
     f3c:	40 f0       	brcs	.+16     	; 0xf4e <noNatak+0x8e>
     f3e:	88 32       	cpi	r24, 0x28	; 40
     f40:	20 f4       	brcc	.+8      	; 0xf4a <noNatak+0x8a>
     f42:	80 91 4f 02 	lds	r24, 0x024F
     f46:	89 32       	cpi	r24, 0x29	; 41
     f48:	10 f4       	brcc	.+4      	; 0xf4e <noNatak+0x8e>
     f4a:	3d df       	rcall	.-390    	; 0xdc6 <correct>
     f4c:	eb ca       	rjmp	.-2602   	; 0x524 <stop>
     f4e:	08 95       	ret

00000f50 <forwardJaa>:
     f50:	ff 92       	push	r15
     f52:	0f 93       	push	r16
     f54:	1f 93       	push	r17
     f56:	cf 93       	push	r28
     f58:	df 93       	push	r29
     f5a:	08 e2       	ldi	r16, 0x28	; 40
     f5c:	11 e0       	ldi	r17, 0x01	; 1
     f5e:	0f 2e       	mov	r0, r31
     f60:	f0 ef       	ldi	r31, 0xF0	; 240
     f62:	ff 2e       	mov	r15, r31
     f64:	f0 2d       	mov	r31, r0
     f66:	ca e2       	ldi	r28, 0x2A	; 42
     f68:	d1 e0       	ldi	r29, 0x01	; 1
     f6a:	d0 da       	rcall	.-2656   	; 0x50c <forward>
     f6c:	cc de       	rcall	.-616    	; 0xd06 <set_color>
     f6e:	80 91 50 02 	lds	r24, 0x0250
     f72:	89 32       	cpi	r24, 0x29	; 41
     f74:	50 f0       	brcs	.+20     	; 0xf8a <forwardJaa+0x3a>
     f76:	80 91 51 02 	lds	r24, 0x0251
     f7a:	89 32       	cpi	r24, 0x29	; 41
     f7c:	20 f4       	brcc	.+8      	; 0xf86 <forwardJaa+0x36>
     f7e:	80 91 4f 02 	lds	r24, 0x024F
     f82:	89 32       	cpi	r24, 0x29	; 41
     f84:	10 f0       	brcs	.+4      	; 0xf8a <forwardJaa+0x3a>
     f86:	cc de       	rcall	.-616    	; 0xd20 <node>
     f88:	11 c0       	rjmp	.+34     	; 0xfac <forwardJaa+0x5c>
     f8a:	f8 01       	movw	r30, r16
     f8c:	f0 82       	st	Z, r15
     f8e:	f8 82       	st	Y, r15
     f90:	80 91 50 02 	lds	r24, 0x0250
     f94:	89 32       	cpi	r24, 0x29	; 41
     f96:	40 f0       	brcs	.+16     	; 0xfa8 <forwardJaa+0x58>
     f98:	80 91 51 02 	lds	r24, 0x0251
     f9c:	88 32       	cpi	r24, 0x28	; 40
     f9e:	20 f4       	brcc	.+8      	; 0xfa8 <forwardJaa+0x58>
     fa0:	80 91 4f 02 	lds	r24, 0x024F
     fa4:	88 32       	cpi	r24, 0x28	; 40
     fa6:	08 f3       	brcs	.-62     	; 0xf6a <forwardJaa+0x1a>
     fa8:	8b df       	rcall	.-234    	; 0xec0 <noNatak>
     faa:	d2 df       	rcall	.-92     	; 0xf50 <forwardJaa>
     fac:	df 91       	pop	r29
     fae:	cf 91       	pop	r28
     fb0:	1f 91       	pop	r17
     fb2:	0f 91       	pop	r16
     fb4:	ff 90       	pop	r15
     fb6:	08 95       	ret

00000fb8 <front>:
     fb8:	cb df       	rcall	.-106    	; 0xf50 <forwardJaa>
     fba:	80 91 7a 02 	lds	r24, 0x027A
     fbe:	90 91 7b 02 	lds	r25, 0x027B
     fc2:	01 96       	adiw	r24, 0x01	; 1
     fc4:	90 93 7b 02 	sts	0x027B, r25
     fc8:	80 93 7a 02 	sts	0x027A, r24
     fcc:	08 95       	ret

00000fce <elevate>:
     fce:	61 11       	cpse	r22, r1
     fd0:	02 c0       	rjmp	.+4      	; 0xfd6 <elevate+0x8>
     fd2:	51 cb       	rjmp	.-2398   	; 0x676 <servo_1>
     fd4:	08 95       	ret
     fd6:	61 30       	cpi	r22, 0x01	; 1
     fd8:	31 f4       	brne	.+12     	; 0xfe6 <elevate+0x18>
     fda:	8d 32       	cpi	r24, 0x2D	; 45
     fdc:	11 f4       	brne	.+4      	; 0xfe2 <elevate+0x14>
     fde:	80 e0       	ldi	r24, 0x00	; 0
     fe0:	01 c0       	rjmp	.+2      	; 0xfe4 <elevate+0x16>
     fe2:	8d e2       	ldi	r24, 0x2D	; 45
     fe4:	48 cb       	rjmp	.-2416   	; 0x676 <servo_1>
     fe6:	08 95       	ret

00000fe8 <open>:
     fe8:	81 11       	cpse	r24, r1
     fea:	06 c0       	rjmp	.+12     	; 0xff8 <open+0x10>
     fec:	10 92 8b 00 	sts	0x008B, r1
     ff0:	83 e8       	ldi	r24, 0x83	; 131
     ff2:	80 93 8a 00 	sts	0x008A, r24
     ff6:	08 95       	ret
     ff8:	81 30       	cpi	r24, 0x01	; 1
     ffa:	29 f4       	brne	.+10     	; 0x1006 <open+0x1e>
     ffc:	10 92 8d 00 	sts	0x008D, r1
    1000:	83 e8       	ldi	r24, 0x83	; 131
    1002:	80 93 8c 00 	sts	0x008C, r24
    1006:	08 95       	ret

00001008 <close>:
    1008:	81 11       	cpse	r24, r1
    100a:	06 c0       	rjmp	.+12     	; 0x1018 <close+0x10>
    100c:	10 92 8b 00 	sts	0x008B, r1
    1010:	83 e2       	ldi	r24, 0x23	; 35
    1012:	80 93 8a 00 	sts	0x008A, r24
    1016:	08 95       	ret
    1018:	81 30       	cpi	r24, 0x01	; 1
    101a:	29 f4       	brne	.+10     	; 0x1026 <close+0x1e>
    101c:	10 92 8d 00 	sts	0x008D, r1
    1020:	83 e2       	ldi	r24, 0x23	; 35
    1022:	80 93 8c 00 	sts	0x008C, r24
    1026:	08 95       	ret

00001028 <buzzer>:
    1028:	c8 da       	rcall	.-2672   	; 0x5ba <buzzer_on>
    102a:	2f ef       	ldi	r18, 0xFF	; 255
    102c:	8f e7       	ldi	r24, 0x7F	; 127
    102e:	94 e0       	ldi	r25, 0x04	; 4
    1030:	21 50       	subi	r18, 0x01	; 1
    1032:	80 40       	sbci	r24, 0x00	; 0
    1034:	90 40       	sbci	r25, 0x00	; 0
    1036:	e1 f7       	brne	.-8      	; 0x1030 <buzzer+0x8>
    1038:	00 c0       	rjmp	.+0      	; 0x103a <buzzer+0x12>
    103a:	00 00       	nop
    103c:	c2 ca       	rjmp	.-2684   	; 0x5c2 <buzzer_off>
    103e:	08 95       	ret

00001040 <traverseToSort>:
    1040:	cf 93       	push	r28
    1042:	df 93       	push	r29
    1044:	ec 01       	movw	r28, r24
    1046:	80 91 58 02 	lds	r24, 0x0258
    104a:	90 91 59 02 	lds	r25, 0x0259
    104e:	01 97       	sbiw	r24, 0x01	; 1
    1050:	21 f4       	brne	.+8      	; 0x105a <traverseToSort+0x1a>
    1052:	10 92 59 02 	sts	0x0259, r1
    1056:	10 92 58 02 	sts	0x0258, r1
    105a:	ce 01       	movw	r24, r28
    105c:	04 97       	sbiw	r24, 0x04	; 4
    105e:	02 97       	sbiw	r24, 0x02	; 2
    1060:	88 f5       	brcc	.+98     	; 0x10c4 <traverseToSort+0x84>
    1062:	c4 30       	cpi	r28, 0x04	; 4
    1064:	d1 05       	cpc	r29, r1
    1066:	39 f4       	brne	.+14     	; 0x1076 <traverseToSort+0x36>
    1068:	80 91 52 02 	lds	r24, 0x0252
    106c:	90 91 53 02 	lds	r25, 0x0253
    1070:	89 2b       	or	r24, r25
    1072:	51 f0       	breq	.+20     	; 0x1088 <traverseToSort+0x48>
    1074:	0b c0       	rjmp	.+22     	; 0x108c <traverseToSort+0x4c>
    1076:	c5 30       	cpi	r28, 0x05	; 5
    1078:	d1 05       	cpc	r29, r1
    107a:	41 f4       	brne	.+16     	; 0x108c <traverseToSort+0x4c>
    107c:	80 91 52 02 	lds	r24, 0x0252
    1080:	90 91 53 02 	lds	r25, 0x0253
    1084:	02 97       	sbiw	r24, 0x02	; 2
    1086:	11 f4       	brne	.+4      	; 0x108c <traverseToSort+0x4c>
    1088:	9d dc       	rcall	.-1734   	; 0x9c4 <turnRight>
    108a:	01 c0       	rjmp	.+2      	; 0x108e <traverseToSort+0x4e>
    108c:	dc dc       	rcall	.-1608   	; 0xa46 <turnLeft>
    108e:	94 df       	rcall	.-216    	; 0xfb8 <front>
    1090:	93 df       	rcall	.-218    	; 0xfb8 <front>
    1092:	24 97       	sbiw	r28, 0x04	; 4
    1094:	39 f4       	brne	.+14     	; 0x10a4 <traverseToSort+0x64>
    1096:	85 e0       	ldi	r24, 0x05	; 5
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	90 93 55 02 	sts	0x0255, r25
    109e:	80 93 54 02 	sts	0x0254, r24
    10a2:	06 c0       	rjmp	.+12     	; 0x10b0 <traverseToSort+0x70>
    10a4:	84 e0       	ldi	r24, 0x04	; 4
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	90 93 55 02 	sts	0x0255, r25
    10ac:	80 93 54 02 	sts	0x0254, r24
    10b0:	80 91 7a 02 	lds	r24, 0x027A
    10b4:	90 91 7b 02 	lds	r25, 0x027B
    10b8:	02 96       	adiw	r24, 0x02	; 2
    10ba:	90 93 7b 02 	sts	0x027B, r25
    10be:	80 93 7a 02 	sts	0x027A, r24
    10c2:	2a c0       	rjmp	.+84     	; 0x1118 <traverseToSort+0xd8>
    10c4:	80 91 52 02 	lds	r24, 0x0252
    10c8:	90 91 53 02 	lds	r25, 0x0253
    10cc:	8d 7f       	andi	r24, 0xFD	; 253
    10ce:	01 97       	sbiw	r24, 0x01	; 1
    10d0:	09 f4       	brne	.+2      	; 0x10d4 <traverseToSort+0x94>
    10d2:	b9 dc       	rcall	.-1678   	; 0xa46 <turnLeft>
    10d4:	22 97       	sbiw	r28, 0x02	; 2
    10d6:	3c f4       	brge	.+14     	; 0x10e6 <traverseToSort+0xa6>
    10d8:	80 91 52 02 	lds	r24, 0x0252
    10dc:	90 91 53 02 	lds	r25, 0x0253
    10e0:	89 2b       	or	r24, r25
    10e2:	39 f0       	breq	.+14     	; 0x10f2 <traverseToSort+0xb2>
    10e4:	07 c0       	rjmp	.+14     	; 0x10f4 <traverseToSort+0xb4>
    10e6:	80 91 52 02 	lds	r24, 0x0252
    10ea:	90 91 53 02 	lds	r25, 0x0253
    10ee:	02 97       	sbiw	r24, 0x02	; 2
    10f0:	09 f4       	brne	.+2      	; 0x10f4 <traverseToSort+0xb4>
    10f2:	ea dc       	rcall	.-1580   	; 0xac8 <turn>
    10f4:	61 df       	rcall	.-318    	; 0xfb8 <front>
    10f6:	80 91 8b 02 	lds	r24, 0x028B
    10fa:	90 91 8c 02 	lds	r25, 0x028C
    10fe:	81 70       	andi	r24, 0x01	; 1
    1100:	90 78       	andi	r25, 0x80	; 128
    1102:	99 23       	and	r25, r25
    1104:	24 f4       	brge	.+8      	; 0x110e <traverseToSort+0xce>
    1106:	01 97       	sbiw	r24, 0x01	; 1
    1108:	8e 6f       	ori	r24, 0xFE	; 254
    110a:	9f 6f       	ori	r25, 0xFF	; 255
    110c:	01 96       	adiw	r24, 0x01	; 1
    110e:	04 96       	adiw	r24, 0x04	; 4
    1110:	90 93 55 02 	sts	0x0255, r25
    1114:	80 93 54 02 	sts	0x0254, r24
    1118:	df 91       	pop	r29
    111a:	cf 91       	pop	r28
    111c:	08 95       	ret

0000111e <terminalCheck2>:
    111e:	cf 93       	push	r28
    1120:	df 93       	push	r29
    1122:	80 91 58 02 	lds	r24, 0x0258
    1126:	90 91 59 02 	lds	r25, 0x0259
    112a:	89 2b       	or	r24, r25
    112c:	29 f5       	brne	.+74     	; 0x1178 <terminalCheck2+0x5a>
    112e:	80 91 52 02 	lds	r24, 0x0252
    1132:	90 91 53 02 	lds	r25, 0x0253
    1136:	89 2b       	or	r24, r25
    1138:	71 f4       	brne	.+28     	; 0x1156 <terminalCheck2+0x38>
    113a:	80 91 54 02 	lds	r24, 0x0254
    113e:	90 91 55 02 	lds	r25, 0x0255
    1142:	02 97       	sbiw	r24, 0x02	; 2
    1144:	20 f4       	brcc	.+8      	; 0x114e <terminalCheck2+0x30>
    1146:	8e e1       	ldi	r24, 0x1E	; 30
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	0c dc       	rcall	.-2024   	; 0x964 <forward_mm>
    114c:	11 c0       	rjmp	.+34     	; 0x1170 <terminalCheck2+0x52>
    114e:	8e e1       	ldi	r24, 0x1E	; 30
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	11 dc       	rcall	.-2014   	; 0x976 <back_mm>
    1154:	0d c0       	rjmp	.+26     	; 0x1170 <terminalCheck2+0x52>
    1156:	80 91 54 02 	lds	r24, 0x0254
    115a:	90 91 55 02 	lds	r25, 0x0255
    115e:	02 97       	sbiw	r24, 0x02	; 2
    1160:	20 f4       	brcc	.+8      	; 0x116a <terminalCheck2+0x4c>
    1162:	8e e1       	ldi	r24, 0x1E	; 30
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	07 dc       	rcall	.-2034   	; 0x976 <back_mm>
    1168:	03 c0       	rjmp	.+6      	; 0x1170 <terminalCheck2+0x52>
    116a:	8e e1       	ldi	r24, 0x1E	; 30
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	fa db       	rcall	.-2060   	; 0x964 <forward_mm>
    1170:	10 92 59 02 	sts	0x0259, r1
    1174:	10 92 58 02 	sts	0x0258, r1
    1178:	80 91 8b 02 	lds	r24, 0x028B
    117c:	90 91 8c 02 	lds	r25, 0x028C
    1180:	82 30       	cpi	r24, 0x02	; 2
    1182:	91 05       	cpc	r25, r1
    1184:	30 f4       	brcc	.+12     	; 0x1192 <terminalCheck2+0x74>
    1186:	20 91 52 02 	lds	r18, 0x0252
    118a:	30 91 53 02 	lds	r19, 0x0253
    118e:	23 2b       	or	r18, r19
    1190:	69 f0       	breq	.+26     	; 0x11ac <terminalCheck2+0x8e>
    1192:	9c 01       	movw	r18, r24
    1194:	22 50       	subi	r18, 0x02	; 2
    1196:	31 09       	sbc	r19, r1
    1198:	22 30       	cpi	r18, 0x02	; 2
    119a:	31 05       	cpc	r19, r1
    119c:	48 f4       	brcc	.+18     	; 0x11b0 <terminalCheck2+0x92>
    119e:	40 91 52 02 	lds	r20, 0x0252
    11a2:	50 91 53 02 	lds	r21, 0x0253
    11a6:	42 30       	cpi	r20, 0x02	; 2
    11a8:	51 05       	cpc	r21, r1
    11aa:	11 f4       	brne	.+4      	; 0x11b0 <terminalCheck2+0x92>
    11ac:	4c dc       	rcall	.-1896   	; 0xa46 <turnLeft>
    11ae:	14 c0       	rjmp	.+40     	; 0x11d8 <terminalCheck2+0xba>
    11b0:	02 97       	sbiw	r24, 0x02	; 2
    11b2:	30 f4       	brcc	.+12     	; 0x11c0 <terminalCheck2+0xa2>
    11b4:	80 91 52 02 	lds	r24, 0x0252
    11b8:	90 91 53 02 	lds	r25, 0x0253
    11bc:	02 97       	sbiw	r24, 0x02	; 2
    11be:	49 f0       	breq	.+18     	; 0x11d2 <terminalCheck2+0xb4>
    11c0:	22 30       	cpi	r18, 0x02	; 2
    11c2:	31 05       	cpc	r19, r1
    11c4:	40 f4       	brcc	.+16     	; 0x11d6 <terminalCheck2+0xb8>
    11c6:	80 91 52 02 	lds	r24, 0x0252
    11ca:	90 91 53 02 	lds	r25, 0x0253
    11ce:	89 2b       	or	r24, r25
    11d0:	11 f4       	brne	.+4      	; 0x11d6 <terminalCheck2+0xb8>
    11d2:	f8 db       	rcall	.-2064   	; 0x9c4 <turnRight>
    11d4:	01 c0       	rjmp	.+2      	; 0x11d8 <terminalCheck2+0xba>
    11d6:	78 dc       	rcall	.-1808   	; 0xac8 <turn>
    11d8:	c0 91 8b 02 	lds	r28, 0x028B
    11dc:	d0 91 8c 02 	lds	r29, 0x028C
    11e0:	b3 dc       	rcall	.-1690   	; 0xb48 <scan>
    11e2:	cc 0f       	add	r28, r28
    11e4:	dd 1f       	adc	r29, r29
    11e6:	cc 0f       	add	r28, r28
    11e8:	dd 1f       	adc	r29, r29
    11ea:	c1 57       	subi	r28, 0x71	; 113
    11ec:	dd 4f       	sbci	r29, 0xFD	; 253
    11ee:	9b 83       	std	Y+3, r25	; 0x03
    11f0:	8a 83       	std	Y+2, r24	; 0x02
    11f2:	80 91 8b 02 	lds	r24, 0x028B
    11f6:	90 91 8c 02 	lds	r25, 0x028C
    11fa:	fc 01       	movw	r30, r24
    11fc:	ee 0f       	add	r30, r30
    11fe:	ff 1f       	adc	r31, r31
    1200:	ee 0f       	add	r30, r30
    1202:	ff 1f       	adc	r31, r31
    1204:	e1 57       	subi	r30, 0x71	; 113
    1206:	fd 4f       	sbci	r31, 0xFD	; 253
    1208:	22 81       	ldd	r18, Z+2	; 0x02
    120a:	33 81       	ldd	r19, Z+3	; 0x03
    120c:	2f 3f       	cpi	r18, 0xFF	; 255
    120e:	4f ef       	ldi	r20, 0xFF	; 255
    1210:	34 07       	cpc	r19, r20
    1212:	51 f0       	breq	.+20     	; 0x1228 <terminalCheck2+0x10a>
    1214:	fc 01       	movw	r30, r24
    1216:	ee 0f       	add	r30, r30
    1218:	ff 1f       	adc	r31, r31
    121a:	e1 56       	subi	r30, 0x61	; 97
    121c:	fd 4f       	sbci	r31, 0xFD	; 253
    121e:	40 81       	ld	r20, Z
    1220:	51 81       	ldd	r21, Z+1	; 0x01
    1222:	24 17       	cp	r18, r20
    1224:	35 07       	cpc	r19, r21
    1226:	51 f4       	brne	.+20     	; 0x123c <terminalCheck2+0x11e>
    1228:	20 91 00 02 	lds	r18, 0x0200
    122c:	30 91 01 02 	lds	r19, 0x0201
    1230:	21 50       	subi	r18, 0x01	; 1
    1232:	31 09       	sbc	r19, r1
    1234:	30 93 01 02 	sts	0x0201, r19
    1238:	20 93 00 02 	sts	0x0200, r18
    123c:	fc 01       	movw	r30, r24
    123e:	ee 0f       	add	r30, r30
    1240:	ff 1f       	adc	r31, r31
    1242:	e8 59       	subi	r30, 0x98	; 152
    1244:	fd 4f       	sbci	r31, 0xFD	; 253
    1246:	81 e0       	ldi	r24, 0x01	; 1
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	91 83       	std	Z+1, r25	; 0x01
    124c:	80 83       	st	Z, r24
    124e:	80 91 56 02 	lds	r24, 0x0256
    1252:	90 91 57 02 	lds	r25, 0x0257
    1256:	01 96       	adiw	r24, 0x01	; 1
    1258:	90 93 57 02 	sts	0x0257, r25
    125c:	80 93 56 02 	sts	0x0256, r24
    1260:	df 91       	pop	r29
    1262:	cf 91       	pop	r28
    1264:	08 95       	ret

00001266 <position>:
    1266:	0f 93       	push	r16
    1268:	1f 93       	push	r17
    126a:	cf 93       	push	r28
    126c:	df 93       	push	r29
    126e:	8c 01       	movw	r16, r24
    1270:	eb 01       	movw	r28, r22
    1272:	20 91 8b 02 	lds	r18, 0x028B
    1276:	30 91 8c 02 	lds	r19, 0x028C
    127a:	40 91 54 02 	lds	r20, 0x0254
    127e:	50 91 55 02 	lds	r21, 0x0255
    1282:	24 17       	cp	r18, r20
    1284:	35 07       	cpc	r19, r21
    1286:	09 f0       	breq	.+2      	; 0x128a <position+0x24>
    1288:	88 c0       	rjmp	.+272    	; 0x139a <position+0x134>
    128a:	c9 01       	movw	r24, r18
    128c:	22 30       	cpi	r18, 0x02	; 2
    128e:	31 05       	cpc	r19, r1
    1290:	30 f4       	brcc	.+12     	; 0x129e <position+0x38>
    1292:	40 91 52 02 	lds	r20, 0x0252
    1296:	50 91 53 02 	lds	r21, 0x0253
    129a:	45 2b       	or	r20, r21
    129c:	61 f0       	breq	.+24     	; 0x12b6 <position+0x50>
    129e:	22 50       	subi	r18, 0x02	; 2
    12a0:	31 09       	sbc	r19, r1
    12a2:	22 30       	cpi	r18, 0x02	; 2
    12a4:	31 05       	cpc	r19, r1
    12a6:	68 f4       	brcc	.+26     	; 0x12c2 <position+0x5c>
    12a8:	40 91 52 02 	lds	r20, 0x0252
    12ac:	50 91 53 02 	lds	r21, 0x0253
    12b0:	42 30       	cpi	r20, 0x02	; 2
    12b2:	51 05       	cpc	r21, r1
    12b4:	31 f4       	brne	.+12     	; 0x12c2 <position+0x5c>
    12b6:	0c 17       	cp	r16, r28
    12b8:	1d 07       	cpc	r17, r29
    12ba:	09 f4       	brne	.+2      	; 0x12be <position+0x58>
    12bc:	ad c0       	rjmp	.+346    	; 0x1418 <position+0x1b2>
    12be:	04 dc       	rcall	.-2040   	; 0xac8 <turn>
    12c0:	ab c0       	rjmp	.+342    	; 0x1418 <position+0x1b2>
    12c2:	82 30       	cpi	r24, 0x02	; 2
    12c4:	91 05       	cpc	r25, r1
    12c6:	38 f4       	brcc	.+14     	; 0x12d6 <position+0x70>
    12c8:	40 91 52 02 	lds	r20, 0x0252
    12cc:	50 91 53 02 	lds	r21, 0x0253
    12d0:	42 30       	cpi	r20, 0x02	; 2
    12d2:	51 05       	cpc	r21, r1
    12d4:	49 f0       	breq	.+18     	; 0x12e8 <position+0x82>
    12d6:	22 30       	cpi	r18, 0x02	; 2
    12d8:	31 05       	cpc	r19, r1
    12da:	60 f4       	brcc	.+24     	; 0x12f4 <position+0x8e>
    12dc:	40 91 52 02 	lds	r20, 0x0252
    12e0:	50 91 53 02 	lds	r21, 0x0253
    12e4:	45 2b       	or	r20, r21
    12e6:	31 f4       	brne	.+12     	; 0x12f4 <position+0x8e>
    12e8:	0c 17       	cp	r16, r28
    12ea:	1d 07       	cpc	r17, r29
    12ec:	09 f0       	breq	.+2      	; 0x12f0 <position+0x8a>
    12ee:	94 c0       	rjmp	.+296    	; 0x1418 <position+0x1b2>
    12f0:	eb db       	rcall	.-2090   	; 0xac8 <turn>
    12f2:	92 c0       	rjmp	.+292    	; 0x1418 <position+0x1b2>
    12f4:	82 30       	cpi	r24, 0x02	; 2
    12f6:	91 05       	cpc	r25, r1
    12f8:	38 f4       	brcc	.+14     	; 0x1308 <position+0xa2>
    12fa:	40 91 52 02 	lds	r20, 0x0252
    12fe:	50 91 53 02 	lds	r21, 0x0253
    1302:	41 30       	cpi	r20, 0x01	; 1
    1304:	51 05       	cpc	r21, r1
    1306:	51 f0       	breq	.+20     	; 0x131c <position+0xb6>
    1308:	22 30       	cpi	r18, 0x02	; 2
    130a:	31 05       	cpc	r19, r1
    130c:	e8 f4       	brcc	.+58     	; 0x1348 <position+0xe2>
    130e:	40 91 52 02 	lds	r20, 0x0252
    1312:	50 91 53 02 	lds	r21, 0x0253
    1316:	43 30       	cpi	r20, 0x03	; 3
    1318:	51 05       	cpc	r21, r1
    131a:	b1 f4       	brne	.+44     	; 0x1348 <position+0xe2>
    131c:	80 91 58 02 	lds	r24, 0x0258
    1320:	90 91 59 02 	lds	r25, 0x0259
    1324:	01 97       	sbiw	r24, 0x01	; 1
    1326:	49 f4       	brne	.+18     	; 0x133a <position+0xd4>
    1328:	80 91 52 02 	lds	r24, 0x0252
    132c:	90 91 53 02 	lds	r25, 0x0253
    1330:	02 97       	sbiw	r24, 0x02	; 2
    1332:	18 f4       	brcc	.+6      	; 0x133a <position+0xd4>
    1334:	8e e1       	ldi	r24, 0x1E	; 30
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	1e db       	rcall	.-2500   	; 0x976 <back_mm>
    133a:	0c 17       	cp	r16, r28
    133c:	1d 07       	cpc	r17, r29
    133e:	11 f0       	breq	.+4      	; 0x1344 <position+0xde>
    1340:	41 db       	rcall	.-2430   	; 0x9c4 <turnRight>
    1342:	6a c0       	rjmp	.+212    	; 0x1418 <position+0x1b2>
    1344:	80 db       	rcall	.-2304   	; 0xa46 <turnLeft>
    1346:	68 c0       	rjmp	.+208    	; 0x1418 <position+0x1b2>
    1348:	02 97       	sbiw	r24, 0x02	; 2
    134a:	30 f4       	brcc	.+12     	; 0x1358 <position+0xf2>
    134c:	80 91 52 02 	lds	r24, 0x0252
    1350:	90 91 53 02 	lds	r25, 0x0253
    1354:	03 97       	sbiw	r24, 0x03	; 3
    1356:	59 f0       	breq	.+22     	; 0x136e <position+0x108>
    1358:	22 30       	cpi	r18, 0x02	; 2
    135a:	31 05       	cpc	r19, r1
    135c:	08 f0       	brcs	.+2      	; 0x1360 <position+0xfa>
    135e:	5c c0       	rjmp	.+184    	; 0x1418 <position+0x1b2>
    1360:	80 91 52 02 	lds	r24, 0x0252
    1364:	90 91 53 02 	lds	r25, 0x0253
    1368:	01 97       	sbiw	r24, 0x01	; 1
    136a:	09 f0       	breq	.+2      	; 0x136e <position+0x108>
    136c:	55 c0       	rjmp	.+170    	; 0x1418 <position+0x1b2>
    136e:	80 91 58 02 	lds	r24, 0x0258
    1372:	90 91 59 02 	lds	r25, 0x0259
    1376:	01 97       	sbiw	r24, 0x01	; 1
    1378:	49 f4       	brne	.+18     	; 0x138c <position+0x126>
    137a:	80 91 52 02 	lds	r24, 0x0252
    137e:	90 91 53 02 	lds	r25, 0x0253
    1382:	02 97       	sbiw	r24, 0x02	; 2
    1384:	18 f4       	brcc	.+6      	; 0x138c <position+0x126>
    1386:	8e e1       	ldi	r24, 0x1E	; 30
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	f5 da       	rcall	.-2582   	; 0x976 <back_mm>
    138c:	0c 17       	cp	r16, r28
    138e:	1d 07       	cpc	r17, r29
    1390:	11 f4       	brne	.+4      	; 0x1396 <position+0x130>
    1392:	18 db       	rcall	.-2512   	; 0x9c4 <turnRight>
    1394:	41 c0       	rjmp	.+130    	; 0x1418 <position+0x1b2>
    1396:	57 db       	rcall	.-2386   	; 0xa46 <turnLeft>
    1398:	3f c0       	rjmp	.+126    	; 0x1418 <position+0x1b2>
    139a:	e0 91 52 02 	lds	r30, 0x0252
    139e:	f0 91 53 02 	lds	r31, 0x0253
    13a2:	30 97       	sbiw	r30, 0x00	; 0
    13a4:	19 f0       	breq	.+6      	; 0x13ac <position+0x146>
    13a6:	32 97       	sbiw	r30, 0x02	; 2
    13a8:	79 f5       	brne	.+94     	; 0x1408 <position+0x1a2>
    13aa:	04 c0       	rjmp	.+8      	; 0x13b4 <position+0x14e>
    13ac:	22 30       	cpi	r18, 0x02	; 2
    13ae:	31 05       	cpc	r19, r1
    13b0:	a8 f4       	brcc	.+42     	; 0x13dc <position+0x176>
    13b2:	05 c0       	rjmp	.+10     	; 0x13be <position+0x158>
    13b4:	22 50       	subi	r18, 0x02	; 2
    13b6:	31 09       	sbc	r19, r1
    13b8:	22 30       	cpi	r18, 0x02	; 2
    13ba:	31 05       	cpc	r19, r1
    13bc:	78 f4       	brcc	.+30     	; 0x13dc <position+0x176>
    13be:	44 50       	subi	r20, 0x04	; 4
    13c0:	51 09       	sbc	r21, r1
    13c2:	42 30       	cpi	r20, 0x02	; 2
    13c4:	51 05       	cpc	r21, r1
    13c6:	10 f0       	brcs	.+4      	; 0x13cc <position+0x166>
    13c8:	3e db       	rcall	.-2436   	; 0xa46 <turnLeft>
    13ca:	f6 dd       	rcall	.-1044   	; 0xfb8 <front>
    13cc:	0c 17       	cp	r16, r28
    13ce:	1d 07       	cpc	r17, r29
    13d0:	11 f4       	brne	.+4      	; 0x13d6 <position+0x170>
    13d2:	f2 dd       	rcall	.-1052   	; 0xfb8 <front>
    13d4:	19 c0       	rjmp	.+50     	; 0x1408 <position+0x1a2>
    13d6:	f0 dd       	rcall	.-1056   	; 0xfb8 <front>
    13d8:	77 db       	rcall	.-2322   	; 0xac8 <turn>
    13da:	16 c0       	rjmp	.+44     	; 0x1408 <position+0x1a2>
    13dc:	0c 17       	cp	r16, r28
    13de:	1d 07       	cpc	r17, r29
    13e0:	59 f4       	brne	.+22     	; 0x13f8 <position+0x192>
    13e2:	44 50       	subi	r20, 0x04	; 4
    13e4:	51 09       	sbc	r21, r1
    13e6:	42 30       	cpi	r20, 0x02	; 2
    13e8:	51 05       	cpc	r21, r1
    13ea:	18 f0       	brcs	.+6      	; 0x13f2 <position+0x18c>
    13ec:	2c db       	rcall	.-2472   	; 0xa46 <turnLeft>
    13ee:	e4 dd       	rcall	.-1080   	; 0xfb8 <front>
    13f0:	01 c0       	rjmp	.+2      	; 0x13f4 <position+0x18e>
    13f2:	6a db       	rcall	.-2348   	; 0xac8 <turn>
    13f4:	e1 dd       	rcall	.-1086   	; 0xfb8 <front>
    13f6:	08 c0       	rjmp	.+16     	; 0x1408 <position+0x1a2>
    13f8:	44 50       	subi	r20, 0x04	; 4
    13fa:	51 09       	sbc	r21, r1
    13fc:	42 30       	cpi	r20, 0x02	; 2
    13fe:	51 05       	cpc	r21, r1
    1400:	10 f0       	brcs	.+4      	; 0x1406 <position+0x1a0>
    1402:	21 db       	rcall	.-2494   	; 0xa46 <turnLeft>
    1404:	d9 dd       	rcall	.-1102   	; 0xfb8 <front>
    1406:	d8 dd       	rcall	.-1104   	; 0xfb8 <front>
    1408:	80 91 8b 02 	lds	r24, 0x028B
    140c:	90 91 8c 02 	lds	r25, 0x028C
    1410:	90 93 55 02 	sts	0x0255, r25
    1414:	80 93 54 02 	sts	0x0254, r24
    1418:	df 91       	pop	r29
    141a:	cf 91       	pop	r28
    141c:	1f 91       	pop	r17
    141e:	0f 91       	pop	r16
    1420:	08 95       	ret

00001422 <predict>:
    1422:	80 91 8f 02 	lds	r24, 0x028F
    1426:	90 91 90 02 	lds	r25, 0x0290
    142a:	20 91 9f 02 	lds	r18, 0x029F
    142e:	30 91 a0 02 	lds	r19, 0x02A0
    1432:	82 17       	cp	r24, r18
    1434:	93 07       	cpc	r25, r19
    1436:	09 f0       	breq	.+2      	; 0x143a <predict+0x18>
    1438:	5f c0       	rjmp	.+190    	; 0x14f8 <predict+0xd6>
    143a:	20 91 91 02 	lds	r18, 0x0291
    143e:	30 91 92 02 	lds	r19, 0x0292
    1442:	82 17       	cp	r24, r18
    1444:	93 07       	cpc	r25, r19
    1446:	09 f0       	breq	.+2      	; 0x144a <predict+0x28>
    1448:	57 c0       	rjmp	.+174    	; 0x14f8 <predict+0xd6>
    144a:	80 91 93 02 	lds	r24, 0x0293
    144e:	90 91 94 02 	lds	r25, 0x0294
    1452:	20 91 a1 02 	lds	r18, 0x02A1
    1456:	30 91 a2 02 	lds	r19, 0x02A2
    145a:	82 17       	cp	r24, r18
    145c:	93 07       	cpc	r25, r19
    145e:	09 f0       	breq	.+2      	; 0x1462 <predict+0x40>
    1460:	4b c0       	rjmp	.+150    	; 0x14f8 <predict+0xd6>
    1462:	20 91 95 02 	lds	r18, 0x0295
    1466:	30 91 96 02 	lds	r19, 0x0296
    146a:	82 17       	cp	r24, r18
    146c:	93 07       	cpc	r25, r19
    146e:	09 f0       	breq	.+2      	; 0x1472 <predict+0x50>
    1470:	43 c0       	rjmp	.+134    	; 0x14f8 <predict+0xd6>
    1472:	80 91 8b 02 	lds	r24, 0x028B
    1476:	90 91 8c 02 	lds	r25, 0x028C
    147a:	fc 01       	movw	r30, r24
    147c:	ee 0f       	add	r30, r30
    147e:	ff 1f       	adc	r31, r31
    1480:	ee 0f       	add	r30, r30
    1482:	ff 1f       	adc	r31, r31
    1484:	e1 57       	subi	r30, 0x71	; 113
    1486:	fd 4f       	sbci	r31, 0xFD	; 253
    1488:	20 81       	ld	r18, Z
    148a:	31 81       	ldd	r19, Z+1	; 0x01
    148c:	fc 01       	movw	r30, r24
    148e:	ee 0f       	add	r30, r30
    1490:	ff 1f       	adc	r31, r31
    1492:	e1 56       	subi	r30, 0x61	; 97
    1494:	fd 4f       	sbci	r31, 0xFD	; 253
    1496:	40 81       	ld	r20, Z
    1498:	51 81       	ldd	r21, Z+1	; 0x01
    149a:	24 17       	cp	r18, r20
    149c:	35 07       	cpc	r19, r21
    149e:	61 f5       	brne	.+88     	; 0x14f8 <predict+0xd6>
    14a0:	fc 01       	movw	r30, r24
    14a2:	ee 0f       	add	r30, r30
    14a4:	ff 1f       	adc	r31, r31
    14a6:	ee 0f       	add	r30, r30
    14a8:	ff 1f       	adc	r31, r31
    14aa:	e1 57       	subi	r30, 0x71	; 113
    14ac:	fd 4f       	sbci	r31, 0xFD	; 253
    14ae:	82 81       	ldd	r24, Z+2	; 0x02
    14b0:	93 81       	ldd	r25, Z+3	; 0x03
    14b2:	28 17       	cp	r18, r24
    14b4:	39 07       	cpc	r19, r25
    14b6:	01 f5       	brne	.+64     	; 0x14f8 <predict+0xd6>
    14b8:	80 91 87 02 	lds	r24, 0x0287
    14bc:	90 91 88 02 	lds	r25, 0x0288
    14c0:	01 96       	adiw	r24, 0x01	; 1
    14c2:	d1 f4       	brne	.+52     	; 0x14f8 <predict+0xd6>
    14c4:	80 91 89 02 	lds	r24, 0x0289
    14c8:	90 91 8a 02 	lds	r25, 0x028A
    14cc:	01 96       	adiw	r24, 0x01	; 1
    14ce:	a1 f4       	brne	.+40     	; 0x14f8 <predict+0xd6>
    14d0:	80 91 b3 02 	lds	r24, 0x02B3
    14d4:	90 91 b4 02 	lds	r25, 0x02B4
    14d8:	01 96       	adiw	r24, 0x01	; 1
    14da:	71 f4       	brne	.+28     	; 0x14f8 <predict+0xd6>
    14dc:	80 91 b5 02 	lds	r24, 0x02B5
    14e0:	90 91 b6 02 	lds	r25, 0x02B6
    14e4:	01 96       	adiw	r24, 0x01	; 1
    14e6:	41 f4       	brne	.+16     	; 0x14f8 <predict+0xd6>
    14e8:	80 91 00 02 	lds	r24, 0x0200
    14ec:	90 91 01 02 	lds	r25, 0x0201
    14f0:	90 93 5b 02 	sts	0x025B, r25
    14f4:	80 93 5a 02 	sts	0x025A, r24
    14f8:	08 95       	ret

000014fa <lcd>:
    14fa:	cf 93       	push	r28
    14fc:	df 93       	push	r29
    14fe:	ec 01       	movw	r28, r24
    1500:	81 e0       	ldi	r24, 0x01	; 1
    1502:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <lcd_wr_command>
    1506:	61 e0       	ldi	r22, 0x01	; 1
    1508:	81 e0       	ldi	r24, 0x01	; 1
    150a:	0e 94 45 01 	call	0x28a	; 0x28a <lcd_cursor>
    150e:	ce 01       	movw	r24, r28
    1510:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_string>
    1514:	89 dd       	rcall	.-1262   	; 0x1028 <buzzer>
    1516:	2f ef       	ldi	r18, 0xFF	; 255
    1518:	8f ef       	ldi	r24, 0xFF	; 255
    151a:	9c e2       	ldi	r25, 0x2C	; 44
    151c:	21 50       	subi	r18, 0x01	; 1
    151e:	80 40       	sbci	r24, 0x00	; 0
    1520:	90 40       	sbci	r25, 0x00	; 0
    1522:	e1 f7       	brne	.-8      	; 0x151c <lcd+0x22>
    1524:	00 c0       	rjmp	.+0      	; 0x1526 <lcd+0x2c>
    1526:	00 00       	nop
    1528:	df 91       	pop	r29
    152a:	cf 91       	pop	r28
    152c:	08 95       	ret

0000152e <pick>:
	servo_2(0);
	else if (side == 1)
	servo_3(0);
}
void pick(int side)	//TODO delay
{
    152e:	cf 93       	push	r28
    1530:	df 93       	push	r29
    1532:	ec 01       	movw	r28, r24
	if(side==0)
    1534:	00 97       	sbiw	r24, 0x00	; 0
    1536:	21 f4       	brne	.+8      	; 0x1540 <pick+0x12>
		lcd("pickRight");
    1538:	8e e0       	ldi	r24, 0x0E	; 14
    153a:	92 e0       	ldi	r25, 0x02	; 2
    153c:	de df       	rcall	.-68     	; 0x14fa <lcd>
    153e:	03 c0       	rjmp	.+6      	; 0x1546 <pick+0x18>
	else
		lcd("pickLeft");
    1540:	88 e1       	ldi	r24, 0x18	; 24
    1542:	92 e0       	ldi	r25, 0x02	; 2
    1544:	da df       	rcall	.-76     	; 0x14fa <lcd>
	elevate(0, side);//lower
    1546:	6c 2f       	mov	r22, r28
    1548:	80 e0       	ldi	r24, 0x00	; 0
    154a:	41 dd       	rcall	.-1406   	; 0xfce <elevate>
	open(side);
    154c:	8c 2f       	mov	r24, r28
    154e:	4c dd       	rcall	.-1384   	; 0xfe8 <open>
	close(side);
    1550:	8c 2f       	mov	r24, r28
    1552:	5a dd       	rcall	.-1356   	; 0x1008 <close>
	elevate(45, side);//mid
    1554:	6c 2f       	mov	r22, r28
    1556:	8d e2       	ldi	r24, 0x2D	; 45
    1558:	3a dd       	rcall	.-1420   	; 0xfce <elevate>
	armCount--;
    155a:	80 91 02 02 	lds	r24, 0x0202
    155e:	90 91 03 02 	lds	r25, 0x0203
    1562:	01 97       	sbiw	r24, 0x01	; 1
    1564:	90 93 03 02 	sts	0x0203, r25
    1568:	80 93 02 02 	sts	0x0202, r24
}
    156c:	df 91       	pop	r29
    156e:	cf 91       	pop	r28
    1570:	08 95       	ret

00001572 <pickNode>:
void pickNode(int armNo, int side)
{
    1572:	0f 93       	push	r16
    1574:	1f 93       	push	r17
    1576:	cf 93       	push	r28
    1578:	df 93       	push	r29
    157a:	8c 01       	movw	r16, r24
    157c:	eb 01       	movw	r28, r22
	if(flag==1 && (dir==0 || dir==1))
    157e:	80 91 58 02 	lds	r24, 0x0258
    1582:	90 91 59 02 	lds	r25, 0x0259
    1586:	01 97       	sbiw	r24, 0x01	; 1
    1588:	49 f4       	brne	.+18     	; 0x159c <pickNode+0x2a>
    158a:	80 91 52 02 	lds	r24, 0x0252
    158e:	90 91 53 02 	lds	r25, 0x0253
    1592:	02 97       	sbiw	r24, 0x02	; 2
    1594:	18 f4       	brcc	.+6      	; 0x159c <pickNode+0x2a>
	{
			back_mm(30);
    1596:	8e e1       	ldi	r24, 0x1E	; 30
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	ed d9       	rcall	.-3110   	; 0x976 <back_mm>
			flag==0;
	}
	arm[armNo] = term[ct][side];
    159c:	f8 01       	movw	r30, r16
    159e:	ee 0f       	add	r30, r30
    15a0:	ff 1f       	adc	r31, r31
    15a2:	ed 54       	subi	r30, 0x4D	; 77
    15a4:	fd 4f       	sbci	r31, 0xFD	; 253
    15a6:	a0 91 8b 02 	lds	r26, 0x028B
    15aa:	b0 91 8c 02 	lds	r27, 0x028C
    15ae:	aa 0f       	add	r26, r26
    15b0:	bb 1f       	adc	r27, r27
    15b2:	ac 0f       	add	r26, r28
    15b4:	bd 1f       	adc	r27, r29
    15b6:	aa 0f       	add	r26, r26
    15b8:	bb 1f       	adc	r27, r27
    15ba:	a1 57       	subi	r26, 0x71	; 113
    15bc:	bd 4f       	sbci	r27, 0xFD	; 253
    15be:	8d 91       	ld	r24, X+
    15c0:	9c 91       	ld	r25, X
    15c2:	91 83       	std	Z+1, r25	; 0x01
    15c4:	80 83       	st	Z, r24
	position(armNo,side);
    15c6:	be 01       	movw	r22, r28
    15c8:	c8 01       	movw	r24, r16
    15ca:	4d de       	rcall	.-870    	; 0x1266 <position>
	pick(armNo);
    15cc:	c8 01       	movw	r24, r16
    15ce:	af df       	rcall	.-162    	; 0x152e <pick>
	term[ct][side] = -1;
    15d0:	80 91 8b 02 	lds	r24, 0x028B
    15d4:	90 91 8c 02 	lds	r25, 0x028C
    15d8:	88 0f       	add	r24, r24
    15da:	99 1f       	adc	r25, r25
    15dc:	c8 0f       	add	r28, r24
    15de:	d9 1f       	adc	r29, r25
    15e0:	cc 0f       	add	r28, r28
    15e2:	dd 1f       	adc	r29, r29
    15e4:	c1 57       	subi	r28, 0x71	; 113
    15e6:	dd 4f       	sbci	r29, 0xFD	; 253
    15e8:	8f ef       	ldi	r24, 0xFF	; 255
    15ea:	9f ef       	ldi	r25, 0xFF	; 255
    15ec:	99 83       	std	Y+1, r25	; 0x01
    15ee:	88 83       	st	Y, r24
	//..printf("Arm %d picked %d from term[%d][%d]\n", armNo, arm[armNo], ct, side);
}
    15f0:	df 91       	pop	r29
    15f2:	cf 91       	pop	r28
    15f4:	1f 91       	pop	r17
    15f6:	0f 91       	pop	r16
    15f8:	08 95       	ret

000015fa <dropPickup>:
	arm[armNo] = -1;
	//..printf("Arm %d dropped %d on sort[%d]\n", armNo, sort[sortNo], sortNo);
}

void dropPickup(int a1)
{
    15fa:	cf 93       	push	r28
    15fc:	df 93       	push	r29
	int a2 = (a1 + 1) % 2;
    15fe:	9c 01       	movw	r18, r24
    1600:	2f 5f       	subi	r18, 0xFF	; 255
    1602:	3f 4f       	sbci	r19, 0xFF	; 255
    1604:	21 70       	andi	r18, 0x01	; 1
    1606:	30 78       	andi	r19, 0x80	; 128
    1608:	33 23       	and	r19, r19
    160a:	34 f4       	brge	.+12     	; 0x1618 <dropPickup+0x1e>
    160c:	21 50       	subi	r18, 0x01	; 1
    160e:	31 09       	sbc	r19, r1
    1610:	2e 6f       	ori	r18, 0xFE	; 254
    1612:	3f 6f       	ori	r19, 0xFF	; 255
    1614:	2f 5f       	subi	r18, 0xFF	; 255
    1616:	3f 4f       	sbci	r19, 0xFF	; 255
    1618:	d2 2f       	mov	r29, r18
    161a:	c3 2f       	mov	r28, r19
	if ((term[ct][a2] == color[ct] || term[ct][a2] != color[adj]) && (term[ct][a1] != color[ct] && term[ct][a1] != -1))
    161c:	e0 91 8b 02 	lds	r30, 0x028B
    1620:	f0 91 8c 02 	lds	r31, 0x028C
    1624:	af 01       	movw	r20, r30
    1626:	44 0f       	add	r20, r20
    1628:	55 1f       	adc	r21, r21
    162a:	24 0f       	add	r18, r20
    162c:	35 1f       	adc	r19, r21
    162e:	d9 01       	movw	r26, r18
    1630:	aa 0f       	add	r26, r26
    1632:	bb 1f       	adc	r27, r27
    1634:	a1 57       	subi	r26, 0x71	; 113
    1636:	bd 4f       	sbci	r27, 0xFD	; 253
    1638:	2d 91       	ld	r18, X+
    163a:	3c 91       	ld	r19, X
    163c:	da 01       	movw	r26, r20
    163e:	a1 56       	subi	r26, 0x61	; 97
    1640:	bd 4f       	sbci	r27, 0xFD	; 253
    1642:	4d 91       	ld	r20, X+
    1644:	5c 91       	ld	r21, X
    1646:	24 17       	cp	r18, r20
    1648:	35 07       	cpc	r19, r21
    164a:	69 f0       	breq	.+26     	; 0x1666 <dropPickup+0x6c>
    164c:	a0 91 af 02 	lds	r26, 0x02AF
    1650:	b0 91 b0 02 	lds	r27, 0x02B0
    1654:	aa 0f       	add	r26, r26
    1656:	bb 1f       	adc	r27, r27
    1658:	a1 56       	subi	r26, 0x61	; 97
    165a:	bd 4f       	sbci	r27, 0xFD	; 253
    165c:	6d 91       	ld	r22, X+
    165e:	7c 91       	ld	r23, X
    1660:	26 17       	cp	r18, r22
    1662:	37 07       	cpc	r19, r23
    1664:	a9 f0       	breq	.+42     	; 0x1690 <dropPickup+0x96>
    1666:	ee 0f       	add	r30, r30
    1668:	ff 1f       	adc	r31, r31
    166a:	e8 0f       	add	r30, r24
    166c:	f9 1f       	adc	r31, r25
    166e:	ee 0f       	add	r30, r30
    1670:	ff 1f       	adc	r31, r31
    1672:	e1 57       	subi	r30, 0x71	; 113
    1674:	fd 4f       	sbci	r31, 0xFD	; 253
    1676:	01 90       	ld	r0, Z+
    1678:	f0 81       	ld	r31, Z
    167a:	e0 2d       	mov	r30, r0
    167c:	4e 17       	cp	r20, r30
    167e:	5f 07       	cpc	r21, r31
    1680:	39 f0       	breq	.+14     	; 0x1690 <dropPickup+0x96>
    1682:	31 96       	adiw	r30, 0x01	; 1
    1684:	29 f0       	breq	.+10     	; 0x1690 <dropPickup+0x96>
	pickNode(a2, a1);
    1686:	bc 01       	movw	r22, r24
    1688:	8d 2f       	mov	r24, r29
    168a:	9c 2f       	mov	r25, r28
    168c:	72 df       	rcall	.-284    	; 0x1572 <pickNode>
    168e:	0b c0       	rjmp	.+22     	; 0x16a6 <dropPickup+0xac>
	else		if (term[ct][a2] != color[ct] && term[ct][a2] != -1)
    1690:	24 17       	cp	r18, r20
    1692:	35 07       	cpc	r19, r21
    1694:	41 f0       	breq	.+16     	; 0x16a6 <dropPickup+0xac>
    1696:	2f 3f       	cpi	r18, 0xFF	; 255
    1698:	3f 4f       	sbci	r19, 0xFF	; 255
    169a:	29 f0       	breq	.+10     	; 0x16a6 <dropPickup+0xac>
	pickNode(a2, a2);
    169c:	6d 2f       	mov	r22, r29
    169e:	7c 2f       	mov	r23, r28
    16a0:	8d 2f       	mov	r24, r29
    16a2:	9c 2f       	mov	r25, r28
    16a4:	66 df       	rcall	.-308    	; 0x1572 <pickNode>
}
    16a6:	df 91       	pop	r29
    16a8:	cf 91       	pop	r28
    16aa:	08 95       	ret

000016ac <pickSort>:
	buzzer_off();	
}


void pickSort(int armNo, int sortNo)
{
    16ac:	0f 93       	push	r16
    16ae:	1f 93       	push	r17
    16b0:	cf 93       	push	r28
    16b2:	df 93       	push	r29
    16b4:	ec 01       	movw	r28, r24
    16b6:	8b 01       	movw	r16, r22
	lcd_print(2,10,armNo,1);
    16b8:	21 e0       	ldi	r18, 0x01	; 1
    16ba:	30 e0       	ldi	r19, 0x00	; 0
    16bc:	ac 01       	movw	r20, r24
    16be:	6a e0       	ldi	r22, 0x0A	; 10
    16c0:	82 e0       	ldi	r24, 0x02	; 2
    16c2:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
	lcd_print(2,12,sortNo,1);
    16c6:	21 e0       	ldi	r18, 0x01	; 1
    16c8:	30 e0       	ldi	r19, 0x00	; 0
    16ca:	a8 01       	movw	r20, r16
    16cc:	6c e0       	ldi	r22, 0x0C	; 12
    16ce:	82 e0       	ldi	r24, 0x02	; 2
    16d0:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
	buzzer();
    16d4:	a9 dc       	rcall	.-1710   	; 0x1028 <buzzer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    16d6:	2f ef       	ldi	r18, 0xFF	; 255
    16d8:	8f ef       	ldi	r24, 0xFF	; 255
    16da:	9c e2       	ldi	r25, 0x2C	; 44
    16dc:	21 50       	subi	r18, 0x01	; 1
    16de:	80 40       	sbci	r24, 0x00	; 0
    16e0:	90 40       	sbci	r25, 0x00	; 0
    16e2:	e1 f7       	brne	.-8      	; 0x16dc <pickSort+0x30>
    16e4:	00 c0       	rjmp	.+0      	; 0x16e6 <pickSort+0x3a>
    16e6:	00 00       	nop
	_delay_ms(1000);
	arm[armNo] = sort[sortNo];
    16e8:	fe 01       	movw	r30, r28
    16ea:	ee 0f       	add	r30, r30
    16ec:	ff 1f       	adc	r31, r31
    16ee:	ed 54       	subi	r30, 0x4D	; 77
    16f0:	fd 4f       	sbci	r31, 0xFD	; 253
    16f2:	d8 01       	movw	r26, r16
    16f4:	aa 0f       	add	r26, r26
    16f6:	bb 1f       	adc	r27, r27
    16f8:	a9 57       	subi	r26, 0x79	; 121
    16fa:	bd 4f       	sbci	r27, 0xFD	; 253
    16fc:	8d 91       	ld	r24, X+
    16fe:	9c 91       	ld	r25, X
    1700:	91 83       	std	Z+1, r25	; 0x01
    1702:	80 83       	st	Z, r24
	if (((armNo == sortNo) && dir == 0) || ((armNo != sortNo) && dir == 2))
    1704:	c0 17       	cp	r28, r16
    1706:	d1 07       	cpc	r29, r17
    1708:	39 f4       	brne	.+14     	; 0x1718 <pickSort+0x6c>
    170a:	80 91 52 02 	lds	r24, 0x0252
    170e:	90 91 53 02 	lds	r25, 0x0253
    1712:	89 2b       	or	r24, r25
    1714:	49 f4       	brne	.+18     	; 0x1728 <pickSort+0x7c>
    1716:	06 c0       	rjmp	.+12     	; 0x1724 <pickSort+0x78>
    1718:	80 91 52 02 	lds	r24, 0x0252
    171c:	90 91 53 02 	lds	r25, 0x0253
    1720:	02 97       	sbiw	r24, 0x02	; 2
    1722:	11 f4       	brne	.+4      	; 0x1728 <pickSort+0x7c>
	turn();
    1724:	d1 d9       	rcall	.-3166   	; 0xac8 <turn>
    1726:	0c c0       	rjmp	.+24     	; 0x1740 <pickSort+0x94>
	else
	{
		if (dir == 1 || dir == 3)
    1728:	80 91 52 02 	lds	r24, 0x0252
    172c:	90 91 53 02 	lds	r25, 0x0253
    1730:	8d 7f       	andi	r24, 0xFD	; 253
    1732:	01 97       	sbiw	r24, 0x01	; 1
    1734:	29 f4       	brne	.+10     	; 0x1740 <pickSort+0x94>
		{
			if (armNo == 0)
    1736:	20 97       	sbiw	r28, 0x00	; 0
    1738:	11 f4       	brne	.+4      	; 0x173e <pickSort+0x92>
			turnLeft();
    173a:	85 d9       	rcall	.-3318   	; 0xa46 <turnLeft>
    173c:	01 c0       	rjmp	.+2      	; 0x1740 <pickSort+0x94>
			else turnRight();
    173e:	42 d9       	rcall	.-3452   	; 0x9c4 <turnRight>
		}
	}
	pick(armNo);
    1740:	ce 01       	movw	r24, r28
    1742:	f5 de       	rcall	.-534    	; 0x152e <pick>
	sort[sortNo] = -1;
    1744:	f8 01       	movw	r30, r16
    1746:	ee 0f       	add	r30, r30
    1748:	ff 1f       	adc	r31, r31
    174a:	e9 57       	subi	r30, 0x79	; 121
    174c:	fd 4f       	sbci	r31, 0xFD	; 253
    174e:	8f ef       	ldi	r24, 0xFF	; 255
    1750:	9f ef       	ldi	r25, 0xFF	; 255
    1752:	91 83       	std	Z+1, r25	; 0x01
    1754:	80 83       	st	Z, r24
	//..printf("Arm %d picked %d from sort[%d]\n", armNo, arm[armNo], sortNo);
	lcd("exit picksort");
    1756:	81 e2       	ldi	r24, 0x21	; 33
    1758:	92 e0       	ldi	r25, 0x02	; 2
    175a:	cf de       	rcall	.-610    	; 0x14fa <lcd>
}
    175c:	df 91       	pop	r29
    175e:	cf 91       	pop	r28
    1760:	1f 91       	pop	r17
    1762:	0f 91       	pop	r16
    1764:	08 95       	ret

00001766 <drop>:
		}
	}
}

void drop(int side)	//TODO delay
{
    1766:	cf 93       	push	r28
    1768:	df 93       	push	r29
    176a:	ec 01       	movw	r28, r24
	if(side==0)
    176c:	00 97       	sbiw	r24, 0x00	; 0
    176e:	21 f4       	brne	.+8      	; 0x1778 <drop+0x12>
	lcd("dropRight");
    1770:	8f e2       	ldi	r24, 0x2F	; 47
    1772:	92 e0       	ldi	r25, 0x02	; 2
    1774:	c2 de       	rcall	.-636    	; 0x14fa <lcd>
    1776:	03 c0       	rjmp	.+6      	; 0x177e <drop+0x18>
	else
	lcd("dropLeft");
    1778:	89 e3       	ldi	r24, 0x39	; 57
    177a:	92 e0       	ldi	r25, 0x02	; 2
    177c:	be de       	rcall	.-644    	; 0x14fa <lcd>
	elevate(0, side);//lower
    177e:	6c 2f       	mov	r22, r28
    1780:	80 e0       	ldi	r24, 0x00	; 0
    1782:	25 dc       	rcall	.-1974   	; 0xfce <elevate>
	open(side);
    1784:	8c 2f       	mov	r24, r28
    1786:	30 dc       	rcall	.-1952   	; 0xfe8 <open>
	elevate(45, side);//mid
    1788:	6c 2f       	mov	r22, r28
    178a:	8d e2       	ldi	r24, 0x2D	; 45
    178c:	20 dc       	rcall	.-1984   	; 0xfce <elevate>
	close(side);
    178e:	8c 2f       	mov	r24, r28
    1790:	3b dc       	rcall	.-1930   	; 0x1008 <close>
	armCount++;
    1792:	80 91 02 02 	lds	r24, 0x0202
    1796:	90 91 03 02 	lds	r25, 0x0203
    179a:	01 96       	adiw	r24, 0x01	; 1
    179c:	90 93 03 02 	sts	0x0203, r25
    17a0:	80 93 02 02 	sts	0x0202, r24
}
    17a4:	df 91       	pop	r29
    17a6:	cf 91       	pop	r28
    17a8:	08 95       	ret

000017aa <nodeDrop>:
void nodeDrop(int armNo, int side)
{
    17aa:	ef 92       	push	r14
    17ac:	ff 92       	push	r15
    17ae:	0f 93       	push	r16
    17b0:	1f 93       	push	r17
    17b2:	cf 93       	push	r28
    17b4:	df 93       	push	r29
    17b6:	ec 01       	movw	r28, r24
    17b8:	7b 01       	movw	r14, r22
	
	if(flag==1 && (dir==0 || dir==1))
    17ba:	80 91 58 02 	lds	r24, 0x0258
    17be:	90 91 59 02 	lds	r25, 0x0259
    17c2:	01 97       	sbiw	r24, 0x01	; 1
    17c4:	49 f4       	brne	.+18     	; 0x17d8 <nodeDrop+0x2e>
    17c6:	80 91 52 02 	lds	r24, 0x0252
    17ca:	90 91 53 02 	lds	r25, 0x0253
    17ce:	02 97       	sbiw	r24, 0x02	; 2
    17d0:	18 f4       	brcc	.+6      	; 0x17d8 <nodeDrop+0x2e>
	{
		back_mm(30);
    17d2:	8e e1       	ldi	r24, 0x1E	; 30
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	cf d8       	rcall	.-3682   	; 0x976 <back_mm>
		flag==0;
	}
	term[ct][side] = arm[armNo];
    17d8:	e0 91 8b 02 	lds	r30, 0x028B
    17dc:	f0 91 8c 02 	lds	r31, 0x028C
    17e0:	ee 0f       	add	r30, r30
    17e2:	ff 1f       	adc	r31, r31
    17e4:	ee 0d       	add	r30, r14
    17e6:	ff 1d       	adc	r31, r15
    17e8:	ee 0f       	add	r30, r30
    17ea:	ff 1f       	adc	r31, r31
    17ec:	e1 57       	subi	r30, 0x71	; 113
    17ee:	fd 4f       	sbci	r31, 0xFD	; 253
    17f0:	8e 01       	movw	r16, r28
    17f2:	00 0f       	add	r16, r16
    17f4:	11 1f       	adc	r17, r17
    17f6:	0d 54       	subi	r16, 0x4D	; 77
    17f8:	1d 4f       	sbci	r17, 0xFD	; 253
    17fa:	d8 01       	movw	r26, r16
    17fc:	8d 91       	ld	r24, X+
    17fe:	9c 91       	ld	r25, X
    1800:	91 83       	std	Z+1, r25	; 0x01
    1802:	80 83       	st	Z, r24
	position(armNo,side);
    1804:	b7 01       	movw	r22, r14
    1806:	ce 01       	movw	r24, r28
    1808:	2e dd       	rcall	.-1444   	; 0x1266 <position>
	drop(armNo);
    180a:	ce 01       	movw	r24, r28
    180c:	ac df       	rcall	.-168    	; 0x1766 <drop>
	arm[armNo] = -1;
    180e:	8f ef       	ldi	r24, 0xFF	; 255
    1810:	9f ef       	ldi	r25, 0xFF	; 255
    1812:	f8 01       	movw	r30, r16
    1814:	91 83       	std	Z+1, r25	; 0x01
    1816:	80 83       	st	Z, r24
	//printf("Arm %d dropped %d on term[%d][%d]\n", armNo, term[ct][side], ct, side);
	sorted++;
    1818:	80 91 5a 02 	lds	r24, 0x025A
    181c:	90 91 5b 02 	lds	r25, 0x025B
    1820:	01 96       	adiw	r24, 0x01	; 1
    1822:	90 93 5b 02 	sts	0x025B, r25
    1826:	80 93 5a 02 	sts	0x025A, r24
}
    182a:	df 91       	pop	r29
    182c:	cf 91       	pop	r28
    182e:	1f 91       	pop	r17
    1830:	0f 91       	pop	r16
    1832:	ff 90       	pop	r15
    1834:	ef 90       	pop	r14
    1836:	08 95       	ret

00001838 <sortDrop>:
void sortDrop(int armNo, int sortNo)
{
    1838:	cf 93       	push	r28
    183a:	df 93       	push	r29
    183c:	ec 01       	movw	r28, r24
	sort[sortNo] = arm[armNo];
    183e:	fb 01       	movw	r30, r22
    1840:	ee 0f       	add	r30, r30
    1842:	ff 1f       	adc	r31, r31
    1844:	e9 57       	subi	r30, 0x79	; 121
    1846:	fd 4f       	sbci	r31, 0xFD	; 253
    1848:	dc 01       	movw	r26, r24
    184a:	aa 0f       	add	r26, r26
    184c:	bb 1f       	adc	r27, r27
    184e:	ad 54       	subi	r26, 0x4D	; 77
    1850:	bd 4f       	sbci	r27, 0xFD	; 253
    1852:	8d 91       	ld	r24, X+
    1854:	9c 91       	ld	r25, X
    1856:	91 83       	std	Z+1, r25	; 0x01
    1858:	80 83       	st	Z, r24
	if (((armNo == sortNo) && dir == 0) || ((armNo != sortNo) && dir == 2))
    185a:	c6 17       	cp	r28, r22
    185c:	d7 07       	cpc	r29, r23
    185e:	39 f4       	brne	.+14     	; 0x186e <sortDrop+0x36>
    1860:	80 91 52 02 	lds	r24, 0x0252
    1864:	90 91 53 02 	lds	r25, 0x0253
    1868:	89 2b       	or	r24, r25
    186a:	49 f4       	brne	.+18     	; 0x187e <sortDrop+0x46>
    186c:	06 c0       	rjmp	.+12     	; 0x187a <sortDrop+0x42>
    186e:	80 91 52 02 	lds	r24, 0x0252
    1872:	90 91 53 02 	lds	r25, 0x0253
    1876:	02 97       	sbiw	r24, 0x02	; 2
    1878:	11 f4       	brne	.+4      	; 0x187e <sortDrop+0x46>
	turn();
    187a:	26 d9       	rcall	.-3508   	; 0xac8 <turn>
    187c:	0c c0       	rjmp	.+24     	; 0x1896 <sortDrop+0x5e>
	else
	{
		if (dir == 1 || dir == 3)
    187e:	80 91 52 02 	lds	r24, 0x0252
    1882:	90 91 53 02 	lds	r25, 0x0253
    1886:	8d 7f       	andi	r24, 0xFD	; 253
    1888:	01 97       	sbiw	r24, 0x01	; 1
    188a:	29 f4       	brne	.+10     	; 0x1896 <sortDrop+0x5e>
		{
			if (armNo == 0)
    188c:	20 97       	sbiw	r28, 0x00	; 0
    188e:	11 f4       	brne	.+4      	; 0x1894 <sortDrop+0x5c>
			turnLeft();
    1890:	da d8       	rcall	.-3660   	; 0xa46 <turnLeft>
    1892:	01 c0       	rjmp	.+2      	; 0x1896 <sortDrop+0x5e>
			else turnRight();
    1894:	97 d8       	rcall	.-3794   	; 0x9c4 <turnRight>
		}
	}
	drop(armNo);
    1896:	ce 01       	movw	r24, r28
    1898:	66 df       	rcall	.-308    	; 0x1766 <drop>
	arm[armNo] = -1;
    189a:	cc 0f       	add	r28, r28
    189c:	dd 1f       	adc	r29, r29
    189e:	cd 54       	subi	r28, 0x4D	; 77
    18a0:	dd 4f       	sbci	r29, 0xFD	; 253
    18a2:	8f ef       	ldi	r24, 0xFF	; 255
    18a4:	9f ef       	ldi	r25, 0xFF	; 255
    18a6:	99 83       	std	Y+1, r25	; 0x01
    18a8:	88 83       	st	Y, r24
	//..printf("Arm %d dropped %d on sort[%d]\n", armNo, sort[sortNo], sortNo);
}
    18aa:	df 91       	pop	r29
    18ac:	cf 91       	pop	r28
    18ae:	08 95       	ret

000018b0 <terminalCheck1>:
		front();
		ot = ct % 2 + 4;
	}
}
void terminalCheck1()
{
    18b0:	cf 93       	push	r28
    18b2:	df 93       	push	r29
	forward_mm(30);
    18b4:	8e e1       	ldi	r24, 0x1E	; 30
    18b6:	90 e0       	ldi	r25, 0x00	; 0
    18b8:	55 d8       	rcall	.-3926   	; 0x964 <forward_mm>
	flag=1;
    18ba:	81 e0       	ldi	r24, 0x01	; 1
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	90 93 59 02 	sts	0x0259, r25
    18c2:	80 93 58 02 	sts	0x0258, r24
	if (ct != ot)
    18c6:	80 91 8b 02 	lds	r24, 0x028B
    18ca:	90 91 8c 02 	lds	r25, 0x028C
    18ce:	20 91 54 02 	lds	r18, 0x0254
    18d2:	30 91 55 02 	lds	r19, 0x0255
    18d6:	82 17       	cp	r24, r18
    18d8:	93 07       	cpc	r25, r19
    18da:	f9 f0       	breq	.+62     	; 0x191a <terminalCheck1+0x6a>





		if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    18dc:	82 30       	cpi	r24, 0x02	; 2
    18de:	91 05       	cpc	r25, r1
    18e0:	38 f4       	brcc	.+14     	; 0x18f0 <terminalCheck1+0x40>
    18e2:	20 91 52 02 	lds	r18, 0x0252
    18e6:	30 91 53 02 	lds	r19, 0x0253
    18ea:	22 30       	cpi	r18, 0x02	; 2
    18ec:	31 05       	cpc	r19, r1
    18ee:	49 f0       	breq	.+18     	; 0x1902 <terminalCheck1+0x52>
    18f0:	02 97       	sbiw	r24, 0x02	; 2
    18f2:	02 97       	sbiw	r24, 0x02	; 2
    18f4:	48 f4       	brcc	.+18     	; 0x1908 <terminalCheck1+0x58>
    18f6:	80 91 52 02 	lds	r24, 0x0252
    18fa:	90 91 53 02 	lds	r25, 0x0253
    18fe:	89 2b       	or	r24, r25
    1900:	19 f4       	brne	.+6      	; 0x1908 <terminalCheck1+0x58>

			back();
    1902:	0e 94 89 02 	call	0x512	; 0x512 <back>
    1906:	01 c0       	rjmp	.+2      	; 0x190a <terminalCheck1+0x5a>
		else front();
    1908:	57 db       	rcall	.-2386   	; 0xfb8 <front>
		ot = ct;
    190a:	80 91 8b 02 	lds	r24, 0x028B
    190e:	90 91 8c 02 	lds	r25, 0x028C
    1912:	90 93 55 02 	sts	0x0255, r25
    1916:	80 93 54 02 	sts	0x0254, r24
	}


	turnRight();
    191a:	54 d8       	rcall	.-3928   	; 0x9c4 <turnRight>
	term[ct][0]=scan();
    191c:	c0 91 8b 02 	lds	r28, 0x028B
    1920:	d0 91 8c 02 	lds	r29, 0x028C
    1924:	11 d9       	rcall	.-3550   	; 0xb48 <scan>
    1926:	cc 0f       	add	r28, r28
    1928:	dd 1f       	adc	r29, r29
    192a:	cc 0f       	add	r28, r28
    192c:	dd 1f       	adc	r29, r29
    192e:	c1 57       	subi	r28, 0x71	; 113
    1930:	dd 4f       	sbci	r29, 0xFD	; 253
    1932:	99 83       	std	Y+1, r25	; 0x01
    1934:	88 83       	st	Y, r24
	lcd_print(1,1,1111,4);
    1936:	24 e0       	ldi	r18, 0x04	; 4
    1938:	30 e0       	ldi	r19, 0x00	; 0
    193a:	47 e5       	ldi	r20, 0x57	; 87
    193c:	54 e0       	ldi	r21, 0x04	; 4
    193e:	61 e0       	ldi	r22, 0x01	; 1
    1940:	81 e0       	ldi	r24, 0x01	; 1
    1942:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
	//printf("Enter term[%d][%d]\n", ct, 0);
	//scanf("%d", &term[ct][0]);


	
	lcd((char*)term[ct][0]);
    1946:	e0 91 8b 02 	lds	r30, 0x028B
    194a:	f0 91 8c 02 	lds	r31, 0x028C
    194e:	ee 0f       	add	r30, r30
    1950:	ff 1f       	adc	r31, r31
    1952:	ee 0f       	add	r30, r30
    1954:	ff 1f       	adc	r31, r31
    1956:	e1 57       	subi	r30, 0x71	; 113
    1958:	fd 4f       	sbci	r31, 0xFD	; 253
    195a:	80 81       	ld	r24, Z
    195c:	91 81       	ldd	r25, Z+1	; 0x01
    195e:	cd dd       	rcall	.-1126   	; 0x14fa <lcd>
	if (term[ct][0] == -1 || term[ct][0] == color[ct])
    1960:	20 91 8b 02 	lds	r18, 0x028B
    1964:	30 91 8c 02 	lds	r19, 0x028C
    1968:	f9 01       	movw	r30, r18
    196a:	ee 0f       	add	r30, r30
    196c:	ff 1f       	adc	r31, r31
    196e:	ee 0f       	add	r30, r30
    1970:	ff 1f       	adc	r31, r31
    1972:	e1 57       	subi	r30, 0x71	; 113
    1974:	fd 4f       	sbci	r31, 0xFD	; 253
    1976:	80 81       	ld	r24, Z
    1978:	91 81       	ldd	r25, Z+1	; 0x01
    197a:	8f 3f       	cpi	r24, 0xFF	; 255
    197c:	4f ef       	ldi	r20, 0xFF	; 255
    197e:	94 07       	cpc	r25, r20
    1980:	51 f0       	breq	.+20     	; 0x1996 <terminalCheck1+0xe6>
    1982:	f9 01       	movw	r30, r18
    1984:	ee 0f       	add	r30, r30
    1986:	ff 1f       	adc	r31, r31
    1988:	e1 56       	subi	r30, 0x61	; 97
    198a:	fd 4f       	sbci	r31, 0xFD	; 253
    198c:	20 81       	ld	r18, Z
    198e:	31 81       	ldd	r19, Z+1	; 0x01
    1990:	82 17       	cp	r24, r18
    1992:	93 07       	cpc	r25, r19
    1994:	49 f4       	brne	.+18     	; 0x19a8 <terminalCheck1+0xf8>
	total--;
    1996:	80 91 00 02 	lds	r24, 0x0200
    199a:	90 91 01 02 	lds	r25, 0x0201
    199e:	01 97       	sbiw	r24, 0x01	; 1
    19a0:	90 93 01 02 	sts	0x0201, r25
    19a4:	80 93 00 02 	sts	0x0200, r24
}
    19a8:	df 91       	pop	r29
    19aa:	cf 91       	pop	r28
    19ac:	08 95       	ret

000019ae <pickup>:
	sort[sortNo] = -1;
	//..printf("Arm %d picked %d from sort[%d]\n", armNo, arm[armNo], sortNo);
	lcd("exit picksort");
}
void pickup()
{
    19ae:	ef 92       	push	r14
    19b0:	ff 92       	push	r15
    19b2:	0f 93       	push	r16
    19b4:	1f 93       	push	r17
    19b6:	cf 93       	push	r28
    19b8:	df 93       	push	r29
	
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    19ba:	20 91 8b 02 	lds	r18, 0x028B
    19be:	30 91 8c 02 	lds	r19, 0x028C
    19c2:	22 30       	cpi	r18, 0x02	; 2
    19c4:	31 05       	cpc	r19, r1
    19c6:	30 f4       	brcc	.+12     	; 0x19d4 <pickup+0x26>
    19c8:	80 91 52 02 	lds	r24, 0x0252
    19cc:	90 91 53 02 	lds	r25, 0x0253
    19d0:	02 97       	sbiw	r24, 0x02	; 2
    19d2:	79 f0       	breq	.+30     	; 0x19f2 <pickup+0x44>
    19d4:	c9 01       	movw	r24, r18
    19d6:	02 97       	sbiw	r24, 0x02	; 2
    19d8:	02 97       	sbiw	r24, 0x02	; 2
    19da:	80 f4       	brcc	.+32     	; 0x19fc <pickup+0x4e>
    19dc:	80 91 52 02 	lds	r24, 0x0252
    19e0:	90 91 53 02 	lds	r25, 0x0253
    19e4:	89 2b       	or	r24, r25
    19e6:	79 f0       	breq	.+30     	; 0x1a06 <pickup+0x58>
	lcd("exit picksort");
}
void pickup()
{
	
	int arm0 = 0, arm1 = 1;
    19e8:	c1 e0       	ldi	r28, 0x01	; 1
    19ea:	d0 e0       	ldi	r29, 0x00	; 0
    19ec:	00 e0       	ldi	r16, 0x00	; 0
    19ee:	10 e0       	ldi	r17, 0x00	; 0
    19f0:	0e c0       	rjmp	.+28     	; 0x1a0e <pickup+0x60>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    19f2:	c0 e0       	ldi	r28, 0x00	; 0
    19f4:	d0 e0       	ldi	r29, 0x00	; 0
{
	
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    19f6:	01 e0       	ldi	r16, 0x01	; 1
    19f8:	10 e0       	ldi	r17, 0x00	; 0
    19fa:	09 c0       	rjmp	.+18     	; 0x1a0e <pickup+0x60>
	lcd("exit picksort");
}
void pickup()
{
	
	int arm0 = 0, arm1 = 1;
    19fc:	c1 e0       	ldi	r28, 0x01	; 1
    19fe:	d0 e0       	ldi	r29, 0x00	; 0
    1a00:	00 e0       	ldi	r16, 0x00	; 0
    1a02:	10 e0       	ldi	r17, 0x00	; 0
    1a04:	04 c0       	rjmp	.+8      	; 0x1a0e <pickup+0x60>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    1a06:	c0 e0       	ldi	r28, 0x00	; 0
    1a08:	d0 e0       	ldi	r29, 0x00	; 0
{
	
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    1a0a:	01 e0       	ldi	r16, 0x01	; 1
    1a0c:	10 e0       	ldi	r17, 0x00	; 0
		arm1 = 0;
	}
	if (visited[ct] == 0)
    1a0e:	f9 01       	movw	r30, r18
    1a10:	ee 0f       	add	r30, r30
    1a12:	ff 1f       	adc	r31, r31
    1a14:	e8 59       	subi	r30, 0x98	; 152
    1a16:	fd 4f       	sbci	r31, 0xFD	; 253
    1a18:	40 81       	ld	r20, Z
    1a1a:	51 81       	ldd	r21, Z+1	; 0x01
    1a1c:	45 2b       	or	r20, r21
    1a1e:	09 f0       	breq	.+2      	; 0x1a22 <pickup+0x74>
    1a20:	24 c2       	rjmp	.+1096   	; 0x1e6a <pickup+0x4bc>
	{
		if (term[ct][0] == -2)
    1a22:	f9 01       	movw	r30, r18
    1a24:	ee 0f       	add	r30, r30
    1a26:	ff 1f       	adc	r31, r31
    1a28:	ee 0f       	add	r30, r30
    1a2a:	ff 1f       	adc	r31, r31
    1a2c:	e1 57       	subi	r30, 0x71	; 113
    1a2e:	fd 4f       	sbci	r31, 0xFD	; 253
    1a30:	80 81       	ld	r24, Z
    1a32:	91 81       	ldd	r25, Z+1	; 0x01
    1a34:	02 96       	adiw	r24, 0x02	; 2
    1a36:	19 f4       	brne	.+6      	; 0x1a3e <pickup+0x90>
		{
			terminalCheck1();
    1a38:	3b df       	rcall	.-394    	; 0x18b0 <terminalCheck1>
			terminalCheck2();
    1a3a:	71 db       	rcall	.-2334   	; 0x111e <terminalCheck2>
    1a3c:	01 c0       	rjmp	.+2      	; 0x1a40 <pickup+0x92>
		}
		else
		terminalCheck2();
    1a3e:	6f db       	rcall	.-2338   	; 0x111e <terminalCheck2>
		if ((term[ct][0] != color[ct] && term[ct][0] != -1) || (term[ct][1] != color[ct] && term[ct][1] != -1))
    1a40:	20 91 8b 02 	lds	r18, 0x028B
    1a44:	30 91 8c 02 	lds	r19, 0x028C
    1a48:	f9 01       	movw	r30, r18
    1a4a:	ee 0f       	add	r30, r30
    1a4c:	ff 1f       	adc	r31, r31
    1a4e:	ee 0f       	add	r30, r30
    1a50:	ff 1f       	adc	r31, r31
    1a52:	e1 57       	subi	r30, 0x71	; 113
    1a54:	fd 4f       	sbci	r31, 0xFD	; 253
    1a56:	80 81       	ld	r24, Z
    1a58:	91 81       	ldd	r25, Z+1	; 0x01
    1a5a:	f9 01       	movw	r30, r18
    1a5c:	ee 0f       	add	r30, r30
    1a5e:	ff 1f       	adc	r31, r31
    1a60:	e1 56       	subi	r30, 0x61	; 97
    1a62:	fd 4f       	sbci	r31, 0xFD	; 253
    1a64:	40 81       	ld	r20, Z
    1a66:	51 81       	ldd	r21, Z+1	; 0x01
    1a68:	84 17       	cp	r24, r20
    1a6a:	95 07       	cpc	r25, r21
    1a6c:	21 f0       	breq	.+8      	; 0x1a76 <pickup+0xc8>
    1a6e:	8f 3f       	cpi	r24, 0xFF	; 255
    1a70:	6f ef       	ldi	r22, 0xFF	; 255
    1a72:	96 07       	cpc	r25, r22
    1a74:	89 f4       	brne	.+34     	; 0x1a98 <pickup+0xea>
    1a76:	f9 01       	movw	r30, r18
    1a78:	ee 0f       	add	r30, r30
    1a7a:	ff 1f       	adc	r31, r31
    1a7c:	ee 0f       	add	r30, r30
    1a7e:	ff 1f       	adc	r31, r31
    1a80:	e1 57       	subi	r30, 0x71	; 113
    1a82:	fd 4f       	sbci	r31, 0xFD	; 253
    1a84:	62 81       	ldd	r22, Z+2	; 0x02
    1a86:	73 81       	ldd	r23, Z+3	; 0x03
    1a88:	46 17       	cp	r20, r22
    1a8a:	57 07       	cpc	r21, r23
    1a8c:	09 f4       	brne	.+2      	; 0x1a90 <pickup+0xe2>
    1a8e:	ed c1       	rjmp	.+986    	; 0x1e6a <pickup+0x4bc>
    1a90:	6f 3f       	cpi	r22, 0xFF	; 255
    1a92:	7f 4f       	sbci	r23, 0xFF	; 255
    1a94:	09 f4       	brne	.+2      	; 0x1a98 <pickup+0xea>
    1a96:	e9 c1       	rjmp	.+978    	; 0x1e6a <pickup+0x4bc>
		{
			if (armCount == 2)
    1a98:	60 91 02 02 	lds	r22, 0x0202
    1a9c:	70 91 03 02 	lds	r23, 0x0203
    1aa0:	62 30       	cpi	r22, 0x02	; 2
    1aa2:	71 05       	cpc	r23, r1
    1aa4:	09 f0       	breq	.+2      	; 0x1aa8 <pickup+0xfa>
    1aa6:	af c0       	rjmp	.+350    	; 0x1c06 <pickup+0x258>
			{
				if (term[ct][0] == color[adj] || term[ct][1] == color[adj])
    1aa8:	e0 91 af 02 	lds	r30, 0x02AF
    1aac:	f0 91 b0 02 	lds	r31, 0x02B0
    1ab0:	df 01       	movw	r26, r30
    1ab2:	aa 0f       	add	r26, r26
    1ab4:	bb 1f       	adc	r27, r27
    1ab6:	a1 56       	subi	r26, 0x61	; 97
    1ab8:	bd 4f       	sbci	r27, 0xFD	; 253
    1aba:	6d 91       	ld	r22, X+
    1abc:	7c 91       	ld	r23, X
    1abe:	86 17       	cp	r24, r22
    1ac0:	97 07       	cpc	r25, r23
    1ac2:	79 f0       	breq	.+30     	; 0x1ae2 <pickup+0x134>
    1ac4:	d9 01       	movw	r26, r18
    1ac6:	aa 0f       	add	r26, r26
    1ac8:	bb 1f       	adc	r27, r27
    1aca:	aa 0f       	add	r26, r26
    1acc:	bb 1f       	adc	r27, r27
    1ace:	a1 57       	subi	r26, 0x71	; 113
    1ad0:	bd 4f       	sbci	r27, 0xFD	; 253
    1ad2:	12 96       	adiw	r26, 0x02	; 2
    1ad4:	ed 90       	ld	r14, X+
    1ad6:	fc 90       	ld	r15, X
    1ad8:	13 97       	sbiw	r26, 0x03	; 3
    1ada:	6e 15       	cp	r22, r14
    1adc:	7f 05       	cpc	r23, r15
    1ade:	59 f4       	brne	.+22     	; 0x1af6 <pickup+0x148>
    1ae0:	05 c0       	rjmp	.+10     	; 0x1aec <pickup+0x13e>
				{
					if (term[ct][0] == color[adj])
					pickNode(arm0, 0);
    1ae2:	60 e0       	ldi	r22, 0x00	; 0
    1ae4:	70 e0       	ldi	r23, 0x00	; 0
    1ae6:	c8 01       	movw	r24, r16
    1ae8:	44 dd       	rcall	.-1400   	; 0x1572 <pickNode>
    1aea:	8d c0       	rjmp	.+282    	; 0x1c06 <pickup+0x258>
					else	pickNode(arm1, 1);
    1aec:	61 e0       	ldi	r22, 0x01	; 1
    1aee:	70 e0       	ldi	r23, 0x00	; 0
    1af0:	ce 01       	movw	r24, r28
    1af2:	3f dd       	rcall	.-1410   	; 0x1572 <pickNode>
    1af4:	88 c0       	rjmp	.+272    	; 0x1c06 <pickup+0x258>
				}
				else	if ((term[ct][1] != color[ct]) && term[ct][1] != -1)
    1af6:	4e 15       	cp	r20, r14
    1af8:	5f 05       	cpc	r21, r15
    1afa:	09 f4       	brne	.+2      	; 0x1afe <pickup+0x150>
    1afc:	4e c0       	rjmp	.+156    	; 0x1b9a <pickup+0x1ec>
    1afe:	ef 20       	and	r14, r15
    1b00:	e0 94       	com	r14
    1b02:	09 f4       	brne	.+2      	; 0x1b06 <pickup+0x158>
    1b04:	4a c0       	rjmp	.+148    	; 0x1b9a <pickup+0x1ec>
				{
					if (term[ct][0] != color[ct] && term[ct][0] != -1)
    1b06:	84 17       	cp	r24, r20
    1b08:	95 07       	cpc	r25, r21
    1b0a:	69 f0       	breq	.+26     	; 0x1b26 <pickup+0x178>
    1b0c:	8f 3f       	cpi	r24, 0xFF	; 255
    1b0e:	af ef       	ldi	r26, 0xFF	; 255
    1b10:	9a 07       	cpc	r25, r26
    1b12:	49 f0       	breq	.+18     	; 0x1b26 <pickup+0x178>
					{
						pickNode(arm1, 1);
    1b14:	61 e0       	ldi	r22, 0x01	; 1
    1b16:	70 e0       	ldi	r23, 0x00	; 0
    1b18:	ce 01       	movw	r24, r28
    1b1a:	2b dd       	rcall	.-1450   	; 0x1572 <pickNode>
						pickNode(arm0, 0);
    1b1c:	60 e0       	ldi	r22, 0x00	; 0
    1b1e:	70 e0       	ldi	r23, 0x00	; 0
    1b20:	c8 01       	movw	r24, r16
    1b22:	27 dd       	rcall	.-1458   	; 0x1572 <pickNode>
    1b24:	70 c0       	rjmp	.+224    	; 0x1c06 <pickup+0x258>
					}
					else if (sort[ct % 2] == -1 || ((term[adj][0] == color[adj] || term[adj][0] == -1) || (term[adj][1] == color[adj] || term[adj][1] == -1)) || (term[ct][0] == color[ct] || term[ct][1] == color[ct]))
    1b26:	21 70       	andi	r18, 0x01	; 1
    1b28:	30 78       	andi	r19, 0x80	; 128
    1b2a:	33 23       	and	r19, r19
    1b2c:	34 f4       	brge	.+12     	; 0x1b3a <pickup+0x18c>
    1b2e:	21 50       	subi	r18, 0x01	; 1
    1b30:	31 09       	sbc	r19, r1
    1b32:	2e 6f       	ori	r18, 0xFE	; 254
    1b34:	3f 6f       	ori	r19, 0xFF	; 255
    1b36:	2f 5f       	subi	r18, 0xFF	; 255
    1b38:	3f 4f       	sbci	r19, 0xFF	; 255
    1b3a:	d9 01       	movw	r26, r18
    1b3c:	aa 0f       	add	r26, r26
    1b3e:	bb 1f       	adc	r27, r27
    1b40:	a9 57       	subi	r26, 0x79	; 121
    1b42:	bd 4f       	sbci	r27, 0xFD	; 253
    1b44:	2d 91       	ld	r18, X+
    1b46:	3c 91       	ld	r19, X
    1b48:	2f 3f       	cpi	r18, 0xFF	; 255
    1b4a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b4c:	09 f1       	breq	.+66     	; 0x1b90 <pickup+0x1e2>
    1b4e:	df 01       	movw	r26, r30
    1b50:	aa 0f       	add	r26, r26
    1b52:	bb 1f       	adc	r27, r27
    1b54:	aa 0f       	add	r26, r26
    1b56:	bb 1f       	adc	r27, r27
    1b58:	a1 57       	subi	r26, 0x71	; 113
    1b5a:	bd 4f       	sbci	r27, 0xFD	; 253
    1b5c:	2d 91       	ld	r18, X+
    1b5e:	3c 91       	ld	r19, X
    1b60:	62 17       	cp	r22, r18
    1b62:	73 07       	cpc	r23, r19
    1b64:	a9 f0       	breq	.+42     	; 0x1b90 <pickup+0x1e2>
    1b66:	2f 3f       	cpi	r18, 0xFF	; 255
    1b68:	3f 4f       	sbci	r19, 0xFF	; 255
    1b6a:	91 f0       	breq	.+36     	; 0x1b90 <pickup+0x1e2>
    1b6c:	ee 0f       	add	r30, r30
    1b6e:	ff 1f       	adc	r31, r31
    1b70:	ee 0f       	add	r30, r30
    1b72:	ff 1f       	adc	r31, r31
    1b74:	e1 57       	subi	r30, 0x71	; 113
    1b76:	fd 4f       	sbci	r31, 0xFD	; 253
    1b78:	22 81       	ldd	r18, Z+2	; 0x02
    1b7a:	33 81       	ldd	r19, Z+3	; 0x03
    1b7c:	62 17       	cp	r22, r18
    1b7e:	73 07       	cpc	r23, r19
    1b80:	39 f0       	breq	.+14     	; 0x1b90 <pickup+0x1e2>
    1b82:	2f 3f       	cpi	r18, 0xFF	; 255
    1b84:	3f 4f       	sbci	r19, 0xFF	; 255
    1b86:	21 f0       	breq	.+8      	; 0x1b90 <pickup+0x1e2>
    1b88:	84 17       	cp	r24, r20
    1b8a:	95 07       	cpc	r25, r21
    1b8c:	09 f0       	breq	.+2      	; 0x1b90 <pickup+0x1e2>
    1b8e:	6d c1       	rjmp	.+730    	; 0x1e6a <pickup+0x4bc>
					pickNode(arm1, 1);
    1b90:	61 e0       	ldi	r22, 0x01	; 1
    1b92:	70 e0       	ldi	r23, 0x00	; 0
    1b94:	ce 01       	movw	r24, r28
    1b96:	ed dc       	rcall	.-1574   	; 0x1572 <pickNode>
    1b98:	36 c0       	rjmp	.+108    	; 0x1c06 <pickup+0x258>
				}
				else	if (term[ct][0] != color[ct] && term[ct][0] != -1)
    1b9a:	84 17       	cp	r24, r20
    1b9c:	95 07       	cpc	r25, r21
    1b9e:	09 f4       	brne	.+2      	; 0x1ba2 <pickup+0x1f4>
    1ba0:	64 c1       	rjmp	.+712    	; 0x1e6a <pickup+0x4bc>
    1ba2:	01 96       	adiw	r24, 0x01	; 1
    1ba4:	09 f4       	brne	.+2      	; 0x1ba8 <pickup+0x1fa>
    1ba6:	61 c1       	rjmp	.+706    	; 0x1e6a <pickup+0x4bc>
				{
					if (sort[ct % 2] == -1 || ((term[adj][0] == color[adj] || term[adj][0] == -1) || (term[adj][1] == color[adj] || term[adj][1] == -1)))
    1ba8:	21 70       	andi	r18, 0x01	; 1
    1baa:	30 78       	andi	r19, 0x80	; 128
    1bac:	33 23       	and	r19, r19
    1bae:	34 f4       	brge	.+12     	; 0x1bbc <pickup+0x20e>
    1bb0:	21 50       	subi	r18, 0x01	; 1
    1bb2:	31 09       	sbc	r19, r1
    1bb4:	2e 6f       	ori	r18, 0xFE	; 254
    1bb6:	3f 6f       	ori	r19, 0xFF	; 255
    1bb8:	2f 5f       	subi	r18, 0xFF	; 255
    1bba:	3f 4f       	sbci	r19, 0xFF	; 255
    1bbc:	d9 01       	movw	r26, r18
    1bbe:	aa 0f       	add	r26, r26
    1bc0:	bb 1f       	adc	r27, r27
    1bc2:	a9 57       	subi	r26, 0x79	; 121
    1bc4:	bd 4f       	sbci	r27, 0xFD	; 253
    1bc6:	8d 91       	ld	r24, X+
    1bc8:	9c 91       	ld	r25, X
    1bca:	01 96       	adiw	r24, 0x01	; 1
    1bcc:	c1 f0       	breq	.+48     	; 0x1bfe <pickup+0x250>
    1bce:	df 01       	movw	r26, r30
    1bd0:	aa 0f       	add	r26, r26
    1bd2:	bb 1f       	adc	r27, r27
    1bd4:	aa 0f       	add	r26, r26
    1bd6:	bb 1f       	adc	r27, r27
    1bd8:	a1 57       	subi	r26, 0x71	; 113
    1bda:	bd 4f       	sbci	r27, 0xFD	; 253
    1bdc:	8d 91       	ld	r24, X+
    1bde:	9c 91       	ld	r25, X
    1be0:	11 97       	sbiw	r26, 0x01	; 1
    1be2:	68 17       	cp	r22, r24
    1be4:	79 07       	cpc	r23, r25
    1be6:	59 f0       	breq	.+22     	; 0x1bfe <pickup+0x250>
    1be8:	01 96       	adiw	r24, 0x01	; 1
    1bea:	49 f0       	breq	.+18     	; 0x1bfe <pickup+0x250>
    1bec:	fd 01       	movw	r30, r26
    1bee:	82 81       	ldd	r24, Z+2	; 0x02
    1bf0:	93 81       	ldd	r25, Z+3	; 0x03
    1bf2:	68 17       	cp	r22, r24
    1bf4:	79 07       	cpc	r23, r25
    1bf6:	19 f0       	breq	.+6      	; 0x1bfe <pickup+0x250>
    1bf8:	01 96       	adiw	r24, 0x01	; 1
    1bfa:	09 f0       	breq	.+2      	; 0x1bfe <pickup+0x250>
    1bfc:	36 c1       	rjmp	.+620    	; 0x1e6a <pickup+0x4bc>
					pickNode(arm0, 0);
    1bfe:	60 e0       	ldi	r22, 0x00	; 0
    1c00:	70 e0       	ldi	r23, 0x00	; 0
    1c02:	c8 01       	movw	r24, r16
    1c04:	b6 dc       	rcall	.-1684   	; 0x1572 <pickNode>
				}
				else	if (term[ct][0] != color[ct] && term[ct][0] != -1)
				pickNode(arm0, 0);

			}
			if (armCount == 1)
    1c06:	80 91 02 02 	lds	r24, 0x0202
    1c0a:	90 91 03 02 	lds	r25, 0x0203
    1c0e:	01 97       	sbiw	r24, 0x01	; 1
    1c10:	09 f0       	breq	.+2      	; 0x1c14 <pickup+0x266>
    1c12:	2b c1       	rjmp	.+598    	; 0x1e6a <pickup+0x4bc>
			{
				int a1, a2;
				if (arm[arm0] == -1)
    1c14:	f8 01       	movw	r30, r16
    1c16:	ee 0f       	add	r30, r30
    1c18:	ff 1f       	adc	r31, r31
    1c1a:	ed 54       	subi	r30, 0x4D	; 77
    1c1c:	fd 4f       	sbci	r31, 0xFD	; 253
    1c1e:	80 81       	ld	r24, Z
    1c20:	91 81       	ldd	r25, Z+1	; 0x01
    1c22:	01 96       	adiw	r24, 0x01	; 1
    1c24:	09 f4       	brne	.+2      	; 0x1c28 <pickup+0x27a>
				a1 = arm0;
    1c26:	e8 01       	movw	r28, r16
				else a1 = arm1;
				a2 = (a1 + 1) % 2;
    1c28:	be 01       	movw	r22, r28
    1c2a:	6f 5f       	subi	r22, 0xFF	; 255
    1c2c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c2e:	61 70       	andi	r22, 0x01	; 1
    1c30:	70 78       	andi	r23, 0x80	; 128
    1c32:	77 23       	and	r23, r23
    1c34:	34 f4       	brge	.+12     	; 0x1c42 <pickup+0x294>
    1c36:	61 50       	subi	r22, 0x01	; 1
    1c38:	71 09       	sbc	r23, r1
    1c3a:	6e 6f       	ori	r22, 0xFE	; 254
    1c3c:	7f 6f       	ori	r23, 0xFF	; 255
    1c3e:	6f 5f       	subi	r22, 0xFF	; 255
    1c40:	7f 4f       	sbci	r23, 0xFF	; 255

				if (sort[ct % 2] == -1)
    1c42:	80 91 8b 02 	lds	r24, 0x028B
    1c46:	90 91 8c 02 	lds	r25, 0x028C
    1c4a:	9c 01       	movw	r18, r24
    1c4c:	21 70       	andi	r18, 0x01	; 1
    1c4e:	30 78       	andi	r19, 0x80	; 128
    1c50:	33 23       	and	r19, r19
    1c52:	34 f4       	brge	.+12     	; 0x1c60 <pickup+0x2b2>
    1c54:	21 50       	subi	r18, 0x01	; 1
    1c56:	31 09       	sbc	r19, r1
    1c58:	2e 6f       	ori	r18, 0xFE	; 254
    1c5a:	3f 6f       	ori	r19, 0xFF	; 255
    1c5c:	2f 5f       	subi	r18, 0xFF	; 255
    1c5e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c60:	f9 01       	movw	r30, r18
    1c62:	ee 0f       	add	r30, r30
    1c64:	ff 1f       	adc	r31, r31
    1c66:	e9 57       	subi	r30, 0x79	; 121
    1c68:	fd 4f       	sbci	r31, 0xFD	; 253
    1c6a:	20 81       	ld	r18, Z
    1c6c:	31 81       	ldd	r19, Z+1	; 0x01
    1c6e:	2f 3f       	cpi	r18, 0xFF	; 255
    1c70:	af ef       	ldi	r26, 0xFF	; 255
    1c72:	3a 07       	cpc	r19, r26
    1c74:	d9 f5       	brne	.+118    	; 0x1cec <pickup+0x33e>
				{
					if (term[ct][a1] != -1 && term[ct][a1] != color[ct])
    1c76:	fc 01       	movw	r30, r24
    1c78:	ee 0f       	add	r30, r30
    1c7a:	ff 1f       	adc	r31, r31
    1c7c:	ec 0f       	add	r30, r28
    1c7e:	fd 1f       	adc	r31, r29
    1c80:	ee 0f       	add	r30, r30
    1c82:	ff 1f       	adc	r31, r31
    1c84:	e1 57       	subi	r30, 0x71	; 113
    1c86:	fd 4f       	sbci	r31, 0xFD	; 253
    1c88:	20 81       	ld	r18, Z
    1c8a:	31 81       	ldd	r19, Z+1	; 0x01
    1c8c:	2f 3f       	cpi	r18, 0xFF	; 255
    1c8e:	ef ef       	ldi	r30, 0xFF	; 255
    1c90:	3e 07       	cpc	r19, r30
    1c92:	71 f0       	breq	.+28     	; 0x1cb0 <pickup+0x302>
    1c94:	fc 01       	movw	r30, r24
    1c96:	ee 0f       	add	r30, r30
    1c98:	ff 1f       	adc	r31, r31
    1c9a:	e1 56       	subi	r30, 0x61	; 97
    1c9c:	fd 4f       	sbci	r31, 0xFD	; 253
    1c9e:	40 81       	ld	r20, Z
    1ca0:	51 81       	ldd	r21, Z+1	; 0x01
    1ca2:	24 17       	cp	r18, r20
    1ca4:	35 07       	cpc	r19, r21
    1ca6:	21 f0       	breq	.+8      	; 0x1cb0 <pickup+0x302>
					pickNode(a1, a1);
    1ca8:	be 01       	movw	r22, r28
    1caa:	ce 01       	movw	r24, r28
    1cac:	62 dc       	rcall	.-1852   	; 0x1572 <pickNode>
    1cae:	dd c0       	rjmp	.+442    	; 0x1e6a <pickup+0x4bc>
					else if (term[ct][a2] != -1 && term[ct][a2] != color[ct])
    1cb0:	fc 01       	movw	r30, r24
    1cb2:	ee 0f       	add	r30, r30
    1cb4:	ff 1f       	adc	r31, r31
    1cb6:	e6 0f       	add	r30, r22
    1cb8:	f7 1f       	adc	r31, r23
    1cba:	ee 0f       	add	r30, r30
    1cbc:	ff 1f       	adc	r31, r31
    1cbe:	e1 57       	subi	r30, 0x71	; 113
    1cc0:	fd 4f       	sbci	r31, 0xFD	; 253
    1cc2:	20 81       	ld	r18, Z
    1cc4:	31 81       	ldd	r19, Z+1	; 0x01
    1cc6:	2f 3f       	cpi	r18, 0xFF	; 255
    1cc8:	4f ef       	ldi	r20, 0xFF	; 255
    1cca:	34 07       	cpc	r19, r20
    1ccc:	09 f4       	brne	.+2      	; 0x1cd0 <pickup+0x322>
    1cce:	cd c0       	rjmp	.+410    	; 0x1e6a <pickup+0x4bc>
    1cd0:	fc 01       	movw	r30, r24
    1cd2:	ee 0f       	add	r30, r30
    1cd4:	ff 1f       	adc	r31, r31
    1cd6:	e1 56       	subi	r30, 0x61	; 97
    1cd8:	fd 4f       	sbci	r31, 0xFD	; 253
    1cda:	80 81       	ld	r24, Z
    1cdc:	91 81       	ldd	r25, Z+1	; 0x01
    1cde:	28 17       	cp	r18, r24
    1ce0:	39 07       	cpc	r19, r25
    1ce2:	09 f4       	brne	.+2      	; 0x1ce6 <pickup+0x338>
    1ce4:	c2 c0       	rjmp	.+388    	; 0x1e6a <pickup+0x4bc>
					pickNode(a1, a2);
    1ce6:	ce 01       	movw	r24, r28
    1ce8:	44 dc       	rcall	.-1912   	; 0x1572 <pickNode>
    1cea:	bf c0       	rjmp	.+382    	; 0x1e6a <pickup+0x4bc>
				}
				else
				{
					if (term[ct][0] == color[adj] || term[ct][1] == color[adj])
    1cec:	40 91 af 02 	lds	r20, 0x02AF
    1cf0:	50 91 b0 02 	lds	r21, 0x02B0
    1cf4:	fa 01       	movw	r30, r20
    1cf6:	ee 0f       	add	r30, r30
    1cf8:	ff 1f       	adc	r31, r31
    1cfa:	e1 56       	subi	r30, 0x61	; 97
    1cfc:	fd 4f       	sbci	r31, 0xFD	; 253
    1cfe:	01 90       	ld	r0, Z+
    1d00:	f0 81       	ld	r31, Z
    1d02:	e0 2d       	mov	r30, r0
    1d04:	dc 01       	movw	r26, r24
    1d06:	aa 0f       	add	r26, r26
    1d08:	bb 1f       	adc	r27, r27
    1d0a:	aa 0f       	add	r26, r26
    1d0c:	bb 1f       	adc	r27, r27
    1d0e:	a1 57       	subi	r26, 0x71	; 113
    1d10:	bd 4f       	sbci	r27, 0xFD	; 253
    1d12:	0d 90       	ld	r0, X+
    1d14:	bc 91       	ld	r27, X
    1d16:	a0 2d       	mov	r26, r0
    1d18:	ae 17       	cp	r26, r30
    1d1a:	bf 07       	cpc	r27, r31
    1d1c:	71 f0       	breq	.+28     	; 0x1d3a <pickup+0x38c>
    1d1e:	dc 01       	movw	r26, r24
    1d20:	aa 0f       	add	r26, r26
    1d22:	bb 1f       	adc	r27, r27
    1d24:	aa 0f       	add	r26, r26
    1d26:	bb 1f       	adc	r27, r27
    1d28:	a1 57       	subi	r26, 0x71	; 113
    1d2a:	bd 4f       	sbci	r27, 0xFD	; 253
    1d2c:	12 96       	adiw	r26, 0x02	; 2
    1d2e:	0d 90       	ld	r0, X+
    1d30:	bc 91       	ld	r27, X
    1d32:	a0 2d       	mov	r26, r0
    1d34:	ea 17       	cp	r30, r26
    1d36:	fb 07       	cpc	r31, r27
    1d38:	d9 f5       	brne	.+118    	; 0x1db0 <pickup+0x402>
					{
						if ((visited[adj] == 1 && (term[adj][0] == -1 || term[adj][1] == -1)))
    1d3a:	da 01       	movw	r26, r20
    1d3c:	aa 0f       	add	r26, r26
    1d3e:	bb 1f       	adc	r27, r27
    1d40:	a8 59       	subi	r26, 0x98	; 152
    1d42:	bd 4f       	sbci	r27, 0xFD	; 253
    1d44:	2d 91       	ld	r18, X+
    1d46:	3c 91       	ld	r19, X
    1d48:	21 30       	cpi	r18, 0x01	; 1
    1d4a:	31 05       	cpc	r19, r1
    1d4c:	09 f0       	breq	.+2      	; 0x1d50 <pickup+0x3a2>
    1d4e:	8d c0       	rjmp	.+282    	; 0x1e6a <pickup+0x4bc>
    1d50:	da 01       	movw	r26, r20
    1d52:	aa 0f       	add	r26, r26
    1d54:	bb 1f       	adc	r27, r27
    1d56:	aa 0f       	add	r26, r26
    1d58:	bb 1f       	adc	r27, r27
    1d5a:	a1 57       	subi	r26, 0x71	; 113
    1d5c:	bd 4f       	sbci	r27, 0xFD	; 253
    1d5e:	2d 91       	ld	r18, X+
    1d60:	3c 91       	ld	r19, X
    1d62:	2f 3f       	cpi	r18, 0xFF	; 255
    1d64:	3f 4f       	sbci	r19, 0xFF	; 255
    1d66:	79 f0       	breq	.+30     	; 0x1d86 <pickup+0x3d8>
    1d68:	da 01       	movw	r26, r20
    1d6a:	aa 0f       	add	r26, r26
    1d6c:	bb 1f       	adc	r27, r27
    1d6e:	aa 0f       	add	r26, r26
    1d70:	bb 1f       	adc	r27, r27
    1d72:	a1 57       	subi	r26, 0x71	; 113
    1d74:	bd 4f       	sbci	r27, 0xFD	; 253
    1d76:	12 96       	adiw	r26, 0x02	; 2
    1d78:	2d 91       	ld	r18, X+
    1d7a:	3c 91       	ld	r19, X
    1d7c:	13 97       	sbiw	r26, 0x03	; 3
    1d7e:	2f 3f       	cpi	r18, 0xFF	; 255
    1d80:	3f 4f       	sbci	r19, 0xFF	; 255
    1d82:	09 f0       	breq	.+2      	; 0x1d86 <pickup+0x3d8>
    1d84:	72 c0       	rjmp	.+228    	; 0x1e6a <pickup+0x4bc>
						{
							if (term[ct][a1] == color[adj])
    1d86:	88 0f       	add	r24, r24
    1d88:	99 1f       	adc	r25, r25
    1d8a:	8c 0f       	add	r24, r28
    1d8c:	9d 1f       	adc	r25, r29
    1d8e:	dc 01       	movw	r26, r24
    1d90:	aa 0f       	add	r26, r26
    1d92:	bb 1f       	adc	r27, r27
    1d94:	a1 57       	subi	r26, 0x71	; 113
    1d96:	bd 4f       	sbci	r27, 0xFD	; 253
    1d98:	8d 91       	ld	r24, X+
    1d9a:	9c 91       	ld	r25, X
    1d9c:	e8 17       	cp	r30, r24
    1d9e:	f9 07       	cpc	r31, r25
    1da0:	21 f4       	brne	.+8      	; 0x1daa <pickup+0x3fc>
							pickNode(a1, a1);
    1da2:	be 01       	movw	r22, r28
    1da4:	ce 01       	movw	r24, r28
    1da6:	e5 db       	rcall	.-2102   	; 0x1572 <pickNode>
    1da8:	60 c0       	rjmp	.+192    	; 0x1e6a <pickup+0x4bc>
							else pickNode(a1, a2);
    1daa:	ce 01       	movw	r24, r28
    1dac:	e2 db       	rcall	.-2108   	; 0x1572 <pickNode>
    1dae:	5d c0       	rjmp	.+186    	; 0x1e6a <pickup+0x4bc>
						}
					}
					else
					{
						if (sort[ct % 2] != color[ct] && sort[ct % 2] != color[adj])
    1db0:	dc 01       	movw	r26, r24
    1db2:	aa 0f       	add	r26, r26
    1db4:	bb 1f       	adc	r27, r27
    1db6:	a1 56       	subi	r26, 0x61	; 97
    1db8:	bd 4f       	sbci	r27, 0xFD	; 253
    1dba:	0d 90       	ld	r0, X+
    1dbc:	bc 91       	ld	r27, X
    1dbe:	a0 2d       	mov	r26, r0
    1dc0:	2a 17       	cp	r18, r26
    1dc2:	3b 07       	cpc	r19, r27
    1dc4:	09 f4       	brne	.+2      	; 0x1dc8 <pickup+0x41a>
    1dc6:	51 c0       	rjmp	.+162    	; 0x1e6a <pickup+0x4bc>
    1dc8:	2e 17       	cp	r18, r30
    1dca:	3f 07       	cpc	r19, r31
    1dcc:	09 f4       	brne	.+2      	; 0x1dd0 <pickup+0x422>
    1dce:	4d c0       	rjmp	.+154    	; 0x1e6a <pickup+0x4bc>
						{
							if ((visited[adj] == 1 && ((term[adj][0] != color[ct]) && (term[adj][1] != color[ct]))))
    1dd0:	fa 01       	movw	r30, r20
    1dd2:	ee 0f       	add	r30, r30
    1dd4:	ff 1f       	adc	r31, r31
    1dd6:	e8 59       	subi	r30, 0x98	; 152
    1dd8:	fd 4f       	sbci	r31, 0xFD	; 253
    1dda:	20 81       	ld	r18, Z
    1ddc:	31 81       	ldd	r19, Z+1	; 0x01
    1dde:	21 30       	cpi	r18, 0x01	; 1
    1de0:	31 05       	cpc	r19, r1
    1de2:	09 f0       	breq	.+2      	; 0x1de6 <pickup+0x438>
    1de4:	42 c0       	rjmp	.+132    	; 0x1e6a <pickup+0x4bc>
    1de6:	fa 01       	movw	r30, r20
    1de8:	ee 0f       	add	r30, r30
    1dea:	ff 1f       	adc	r31, r31
    1dec:	ee 0f       	add	r30, r30
    1dee:	ff 1f       	adc	r31, r31
    1df0:	e1 57       	subi	r30, 0x71	; 113
    1df2:	fd 4f       	sbci	r31, 0xFD	; 253
    1df4:	20 81       	ld	r18, Z
    1df6:	31 81       	ldd	r19, Z+1	; 0x01
    1df8:	a2 17       	cp	r26, r18
    1dfa:	b3 07       	cpc	r27, r19
    1dfc:	b1 f1       	breq	.+108    	; 0x1e6a <pickup+0x4bc>
    1dfe:	fa 01       	movw	r30, r20
    1e00:	ee 0f       	add	r30, r30
    1e02:	ff 1f       	adc	r31, r31
    1e04:	ee 0f       	add	r30, r30
    1e06:	ff 1f       	adc	r31, r31
    1e08:	e1 57       	subi	r30, 0x71	; 113
    1e0a:	fd 4f       	sbci	r31, 0xFD	; 253
    1e0c:	22 81       	ldd	r18, Z+2	; 0x02
    1e0e:	33 81       	ldd	r19, Z+3	; 0x03
    1e10:	a2 17       	cp	r26, r18
    1e12:	b3 07       	cpc	r27, r19
    1e14:	51 f1       	breq	.+84     	; 0x1e6a <pickup+0x4bc>
							{
								if (term[ct][a1] != -1 && term[ct][a1] != color[ct])
    1e16:	fc 01       	movw	r30, r24
    1e18:	ee 0f       	add	r30, r30
    1e1a:	ff 1f       	adc	r31, r31
    1e1c:	ec 0f       	add	r30, r28
    1e1e:	fd 1f       	adc	r31, r29
    1e20:	ee 0f       	add	r30, r30
    1e22:	ff 1f       	adc	r31, r31
    1e24:	e1 57       	subi	r30, 0x71	; 113
    1e26:	fd 4f       	sbci	r31, 0xFD	; 253
    1e28:	20 81       	ld	r18, Z
    1e2a:	31 81       	ldd	r19, Z+1	; 0x01
    1e2c:	2f 3f       	cpi	r18, 0xFF	; 255
    1e2e:	ef ef       	ldi	r30, 0xFF	; 255
    1e30:	3e 07       	cpc	r19, r30
    1e32:	39 f0       	breq	.+14     	; 0x1e42 <pickup+0x494>
    1e34:	a2 17       	cp	r26, r18
    1e36:	b3 07       	cpc	r27, r19
    1e38:	21 f0       	breq	.+8      	; 0x1e42 <pickup+0x494>
								pickNode(a1, a1);
    1e3a:	be 01       	movw	r22, r28
    1e3c:	ce 01       	movw	r24, r28
    1e3e:	99 db       	rcall	.-2254   	; 0x1572 <pickNode>
    1e40:	14 c0       	rjmp	.+40     	; 0x1e6a <pickup+0x4bc>
								else	if (term[ct][a2] != -1 && term[ct][a2] != color[ct])
    1e42:	88 0f       	add	r24, r24
    1e44:	99 1f       	adc	r25, r25
    1e46:	86 0f       	add	r24, r22
    1e48:	97 1f       	adc	r25, r23
    1e4a:	fc 01       	movw	r30, r24
    1e4c:	ee 0f       	add	r30, r30
    1e4e:	ff 1f       	adc	r31, r31
    1e50:	e1 57       	subi	r30, 0x71	; 113
    1e52:	fd 4f       	sbci	r31, 0xFD	; 253
    1e54:	80 81       	ld	r24, Z
    1e56:	91 81       	ldd	r25, Z+1	; 0x01
    1e58:	8f 3f       	cpi	r24, 0xFF	; 255
    1e5a:	2f ef       	ldi	r18, 0xFF	; 255
    1e5c:	92 07       	cpc	r25, r18
    1e5e:	29 f0       	breq	.+10     	; 0x1e6a <pickup+0x4bc>
    1e60:	a8 17       	cp	r26, r24
    1e62:	b9 07       	cpc	r27, r25
    1e64:	11 f0       	breq	.+4      	; 0x1e6a <pickup+0x4bc>
								pickNode(a1, a2);
    1e66:	ce 01       	movw	r24, r28
    1e68:	84 db       	rcall	.-2296   	; 0x1572 <pickNode>
					}
				}
			}
		}
	}
}
    1e6a:	df 91       	pop	r29
    1e6c:	cf 91       	pop	r28
    1e6e:	1f 91       	pop	r17
    1e70:	0f 91       	pop	r16
    1e72:	ff 90       	pop	r15
    1e74:	ef 90       	pop	r14
    1e76:	08 95       	ret

00001e78 <canDrop>:
	else		if (term[ct][a2] != color[ct] && term[ct][a2] != -1)
	pickNode(a2, a2);
}

void canDrop()
{
    1e78:	0f 93       	push	r16
    1e7a:	1f 93       	push	r17
    1e7c:	cf 93       	push	r28
    1e7e:	df 93       	push	r29
	int arm0 = 0, arm1 = 1;

	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    1e80:	20 91 8b 02 	lds	r18, 0x028B
    1e84:	30 91 8c 02 	lds	r19, 0x028C
    1e88:	22 30       	cpi	r18, 0x02	; 2
    1e8a:	31 05       	cpc	r19, r1
    1e8c:	30 f4       	brcc	.+12     	; 0x1e9a <canDrop+0x22>
    1e8e:	80 91 52 02 	lds	r24, 0x0252
    1e92:	90 91 53 02 	lds	r25, 0x0253
    1e96:	02 97       	sbiw	r24, 0x02	; 2
    1e98:	79 f0       	breq	.+30     	; 0x1eb8 <canDrop+0x40>
    1e9a:	c9 01       	movw	r24, r18
    1e9c:	02 97       	sbiw	r24, 0x02	; 2
    1e9e:	02 97       	sbiw	r24, 0x02	; 2
    1ea0:	80 f4       	brcc	.+32     	; 0x1ec2 <canDrop+0x4a>
    1ea2:	80 91 52 02 	lds	r24, 0x0252
    1ea6:	90 91 53 02 	lds	r25, 0x0253
    1eaa:	89 2b       	or	r24, r25
    1eac:	79 f0       	breq	.+30     	; 0x1ecc <canDrop+0x54>
	pickNode(a2, a2);
}

void canDrop()
{
	int arm0 = 0, arm1 = 1;
    1eae:	01 e0       	ldi	r16, 0x01	; 1
    1eb0:	10 e0       	ldi	r17, 0x00	; 0
    1eb2:	c0 e0       	ldi	r28, 0x00	; 0
    1eb4:	d0 e0       	ldi	r29, 0x00	; 0
    1eb6:	0e c0       	rjmp	.+28     	; 0x1ed4 <canDrop+0x5c>

	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    1eb8:	00 e0       	ldi	r16, 0x00	; 0
    1eba:	10 e0       	ldi	r17, 0x00	; 0
{
	int arm0 = 0, arm1 = 1;

	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    1ebc:	c1 e0       	ldi	r28, 0x01	; 1
    1ebe:	d0 e0       	ldi	r29, 0x00	; 0
    1ec0:	09 c0       	rjmp	.+18     	; 0x1ed4 <canDrop+0x5c>
	pickNode(a2, a2);
}

void canDrop()
{
	int arm0 = 0, arm1 = 1;
    1ec2:	01 e0       	ldi	r16, 0x01	; 1
    1ec4:	10 e0       	ldi	r17, 0x00	; 0
    1ec6:	c0 e0       	ldi	r28, 0x00	; 0
    1ec8:	d0 e0       	ldi	r29, 0x00	; 0
    1eca:	04 c0       	rjmp	.+8      	; 0x1ed4 <canDrop+0x5c>

	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    1ecc:	00 e0       	ldi	r16, 0x00	; 0
    1ece:	10 e0       	ldi	r17, 0x00	; 0
{
	int arm0 = 0, arm1 = 1;

	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    1ed0:	c1 e0       	ldi	r28, 0x01	; 1
    1ed2:	d0 e0       	ldi	r29, 0x00	; 0
		arm1 = 0;
	}

	if (armCount == 2 || (arm[0] != color[ct] && arm[1] != color[ct]))
    1ed4:	40 91 02 02 	lds	r20, 0x0202
    1ed8:	50 91 03 02 	lds	r21, 0x0203
    1edc:	42 30       	cpi	r20, 0x02	; 2
    1ede:	51 05       	cpc	r21, r1
    1ee0:	09 f4       	brne	.+2      	; 0x1ee4 <canDrop+0x6c>
    1ee2:	3b c1       	rjmp	.+630    	; 0x215a <canDrop+0x2e2>
    1ee4:	f9 01       	movw	r30, r18
    1ee6:	ee 0f       	add	r30, r30
    1ee8:	ff 1f       	adc	r31, r31
    1eea:	e1 56       	subi	r30, 0x61	; 97
    1eec:	fd 4f       	sbci	r31, 0xFD	; 253
    1eee:	40 81       	ld	r20, Z
    1ef0:	51 81       	ldd	r21, Z+1	; 0x01
    1ef2:	80 91 b3 02 	lds	r24, 0x02B3
    1ef6:	90 91 b4 02 	lds	r25, 0x02B4
    1efa:	84 17       	cp	r24, r20
    1efc:	95 07       	cpc	r25, r21
    1efe:	41 f0       	breq	.+16     	; 0x1f10 <canDrop+0x98>
    1f00:	80 91 b5 02 	lds	r24, 0x02B5
    1f04:	90 91 b6 02 	lds	r25, 0x02B6
    1f08:	48 17       	cp	r20, r24
    1f0a:	59 07       	cpc	r21, r25
    1f0c:	09 f0       	breq	.+2      	; 0x1f10 <canDrop+0x98>
    1f0e:	25 c1       	rjmp	.+586    	; 0x215a <canDrop+0x2e2>
		return;
	else
	{
		if (visited[ct] == 0)
    1f10:	f9 01       	movw	r30, r18
    1f12:	ee 0f       	add	r30, r30
    1f14:	ff 1f       	adc	r31, r31
    1f16:	e8 59       	subi	r30, 0x98	; 152
    1f18:	fd 4f       	sbci	r31, 0xFD	; 253
    1f1a:	80 81       	ld	r24, Z
    1f1c:	91 81       	ldd	r25, Z+1	; 0x01
    1f1e:	89 2b       	or	r24, r25
    1f20:	09 f4       	brne	.+2      	; 0x1f24 <canDrop+0xac>

			terminalCheck1();
    1f22:	c6 dc       	rcall	.-1652   	; 0x18b0 <terminalCheck1>


		if (armCount == 0)
    1f24:	80 91 02 02 	lds	r24, 0x0202
    1f28:	90 91 03 02 	lds	r25, 0x0203
    1f2c:	89 2b       	or	r24, r25
    1f2e:	09 f0       	breq	.+2      	; 0x1f32 <canDrop+0xba>
    1f30:	48 c0       	rjmp	.+144    	; 0x1fc2 <canDrop+0x14a>
		{
			if (arm[arm0] == color[ct])
    1f32:	20 91 8b 02 	lds	r18, 0x028B
    1f36:	30 91 8c 02 	lds	r19, 0x028C
    1f3a:	f9 01       	movw	r30, r18
    1f3c:	ee 0f       	add	r30, r30
    1f3e:	ff 1f       	adc	r31, r31
    1f40:	e1 56       	subi	r30, 0x61	; 97
    1f42:	fd 4f       	sbci	r31, 0xFD	; 253
    1f44:	80 81       	ld	r24, Z
    1f46:	91 81       	ldd	r25, Z+1	; 0x01
    1f48:	fe 01       	movw	r30, r28
    1f4a:	ee 0f       	add	r30, r30
    1f4c:	ff 1f       	adc	r31, r31
    1f4e:	ed 54       	subi	r30, 0x4D	; 77
    1f50:	fd 4f       	sbci	r31, 0xFD	; 253
    1f52:	40 81       	ld	r20, Z
    1f54:	51 81       	ldd	r21, Z+1	; 0x01
    1f56:	48 17       	cp	r20, r24
    1f58:	59 07       	cpc	r21, r25
    1f5a:	a9 f4       	brne	.+42     	; 0x1f86 <canDrop+0x10e>

				if (term[ct][0] == -1)
    1f5c:	f9 01       	movw	r30, r18
    1f5e:	ee 0f       	add	r30, r30
    1f60:	ff 1f       	adc	r31, r31
    1f62:	ee 0f       	add	r30, r30
    1f64:	ff 1f       	adc	r31, r31
    1f66:	e1 57       	subi	r30, 0x71	; 113
    1f68:	fd 4f       	sbci	r31, 0xFD	; 253
    1f6a:	80 81       	ld	r24, Z
    1f6c:	91 81       	ldd	r25, Z+1	; 0x01
    1f6e:	01 96       	adiw	r24, 0x01	; 1
    1f70:	29 f4       	brne	.+10     	; 0x1f7c <canDrop+0x104>

					nodeDrop(arm0, 0);
    1f72:	60 e0       	ldi	r22, 0x00	; 0
    1f74:	70 e0       	ldi	r23, 0x00	; 0
    1f76:	ce 01       	movw	r24, r28
    1f78:	18 dc       	rcall	.-2000   	; 0x17aa <nodeDrop>
    1f7a:	23 c0       	rjmp	.+70     	; 0x1fc2 <canDrop+0x14a>
				else nodeDrop(arm0, 1);
    1f7c:	61 e0       	ldi	r22, 0x01	; 1
    1f7e:	70 e0       	ldi	r23, 0x00	; 0
    1f80:	ce 01       	movw	r24, r28
    1f82:	13 dc       	rcall	.-2010   	; 0x17aa <nodeDrop>
    1f84:	1e c0       	rjmp	.+60     	; 0x1fc2 <canDrop+0x14a>

			else if (arm[arm1] == color[ct])
    1f86:	f8 01       	movw	r30, r16
    1f88:	ee 0f       	add	r30, r30
    1f8a:	ff 1f       	adc	r31, r31
    1f8c:	ed 54       	subi	r30, 0x4D	; 77
    1f8e:	fd 4f       	sbci	r31, 0xFD	; 253
    1f90:	40 81       	ld	r20, Z
    1f92:	51 81       	ldd	r21, Z+1	; 0x01
    1f94:	84 17       	cp	r24, r20
    1f96:	95 07       	cpc	r25, r21
    1f98:	a1 f4       	brne	.+40     	; 0x1fc2 <canDrop+0x14a>

				if (term[ct][0] != -1)
    1f9a:	f9 01       	movw	r30, r18
    1f9c:	ee 0f       	add	r30, r30
    1f9e:	ff 1f       	adc	r31, r31
    1fa0:	ee 0f       	add	r30, r30
    1fa2:	ff 1f       	adc	r31, r31
    1fa4:	e1 57       	subi	r30, 0x71	; 113
    1fa6:	fd 4f       	sbci	r31, 0xFD	; 253
    1fa8:	80 81       	ld	r24, Z
    1faa:	91 81       	ldd	r25, Z+1	; 0x01
    1fac:	01 96       	adiw	r24, 0x01	; 1
    1fae:	29 f0       	breq	.+10     	; 0x1fba <canDrop+0x142>

					nodeDrop(arm1, 1);
    1fb0:	61 e0       	ldi	r22, 0x01	; 1
    1fb2:	70 e0       	ldi	r23, 0x00	; 0
    1fb4:	c8 01       	movw	r24, r16
    1fb6:	f9 db       	rcall	.-2062   	; 0x17aa <nodeDrop>
    1fb8:	04 c0       	rjmp	.+8      	; 0x1fc2 <canDrop+0x14a>
				else nodeDrop(arm1, 0);
    1fba:	60 e0       	ldi	r22, 0x00	; 0
    1fbc:	70 e0       	ldi	r23, 0x00	; 0
    1fbe:	c8 01       	movw	r24, r16
    1fc0:	f4 db       	rcall	.-2072   	; 0x17aa <nodeDrop>

		}
		if (arm[0] == color[ct] || arm[1] == color[ct])
    1fc2:	20 91 8b 02 	lds	r18, 0x028B
    1fc6:	30 91 8c 02 	lds	r19, 0x028C
    1fca:	f9 01       	movw	r30, r18
    1fcc:	ee 0f       	add	r30, r30
    1fce:	ff 1f       	adc	r31, r31
    1fd0:	e1 56       	subi	r30, 0x61	; 97
    1fd2:	fd 4f       	sbci	r31, 0xFD	; 253
    1fd4:	80 81       	ld	r24, Z
    1fd6:	91 81       	ldd	r25, Z+1	; 0x01
    1fd8:	40 91 b3 02 	lds	r20, 0x02B3
    1fdc:	50 91 b4 02 	lds	r21, 0x02B4
    1fe0:	48 17       	cp	r20, r24
    1fe2:	59 07       	cpc	r21, r25
    1fe4:	41 f0       	breq	.+16     	; 0x1ff6 <canDrop+0x17e>
    1fe6:	40 91 b5 02 	lds	r20, 0x02B5
    1fea:	50 91 b6 02 	lds	r21, 0x02B6
    1fee:	84 17       	cp	r24, r20
    1ff0:	95 07       	cpc	r25, r21
    1ff2:	09 f0       	breq	.+2      	; 0x1ff6 <canDrop+0x17e>
    1ff4:	b2 c0       	rjmp	.+356    	; 0x215a <canDrop+0x2e2>
		{
			if (term[ct][0] != -1 && term[ct][1] != -1)
    1ff6:	f9 01       	movw	r30, r18
    1ff8:	ee 0f       	add	r30, r30
    1ffa:	ff 1f       	adc	r31, r31
    1ffc:	ee 0f       	add	r30, r30
    1ffe:	ff 1f       	adc	r31, r31
    2000:	e1 57       	subi	r30, 0x71	; 113
    2002:	fd 4f       	sbci	r31, 0xFD	; 253
    2004:	80 81       	ld	r24, Z
    2006:	91 81       	ldd	r25, Z+1	; 0x01
    2008:	01 96       	adiw	r24, 0x01	; 1
    200a:	09 f4       	brne	.+2      	; 0x200e <canDrop+0x196>
    200c:	45 c0       	rjmp	.+138    	; 0x2098 <canDrop+0x220>
    200e:	f9 01       	movw	r30, r18
    2010:	ee 0f       	add	r30, r30
    2012:	ff 1f       	adc	r31, r31
    2014:	ee 0f       	add	r30, r30
    2016:	ff 1f       	adc	r31, r31
    2018:	e1 57       	subi	r30, 0x71	; 113
    201a:	fd 4f       	sbci	r31, 0xFD	; 253
    201c:	82 81       	ldd	r24, Z+2	; 0x02
    201e:	93 81       	ldd	r25, Z+3	; 0x03
    2020:	01 96       	adiw	r24, 0x01	; 1
    2022:	c9 f0       	breq	.+50     	; 0x2056 <canDrop+0x1de>
				if (visited[ct] == 0)
    2024:	f9 01       	movw	r30, r18
    2026:	ee 0f       	add	r30, r30
    2028:	ff 1f       	adc	r31, r31
    202a:	e8 59       	subi	r30, 0x98	; 152
    202c:	fd 4f       	sbci	r31, 0xFD	; 253
    202e:	80 81       	ld	r24, Z
    2030:	91 81       	ldd	r25, Z+1	; 0x01
    2032:	89 2b       	or	r24, r25
    2034:	81 f4       	brne	.+32     	; 0x2056 <canDrop+0x1de>
					terminalCheck2();
    2036:	73 d8       	rcall	.-3866   	; 0x111e <terminalCheck2>
			if (term[ct][0] != -1 && term[ct][1] != -1)
    2038:	20 91 8b 02 	lds	r18, 0x028B
    203c:	30 91 8c 02 	lds	r19, 0x028C
    2040:	f9 01       	movw	r30, r18
    2042:	ee 0f       	add	r30, r30
    2044:	ff 1f       	adc	r31, r31
    2046:	ee 0f       	add	r30, r30
    2048:	ff 1f       	adc	r31, r31
    204a:	e1 57       	subi	r30, 0x71	; 113
    204c:	fd 4f       	sbci	r31, 0xFD	; 253
    204e:	80 81       	ld	r24, Z
    2050:	91 81       	ldd	r25, Z+1	; 0x01
    2052:	01 96       	adiw	r24, 0x01	; 1
    2054:	09 f1       	breq	.+66     	; 0x2098 <canDrop+0x220>
    2056:	f9 01       	movw	r30, r18
    2058:	ee 0f       	add	r30, r30
    205a:	ff 1f       	adc	r31, r31
    205c:	ee 0f       	add	r30, r30
    205e:	ff 1f       	adc	r31, r31
    2060:	e1 57       	subi	r30, 0x71	; 113
    2062:	fd 4f       	sbci	r31, 0xFD	; 253
    2064:	82 81       	ldd	r24, Z+2	; 0x02
    2066:	93 81       	ldd	r25, Z+3	; 0x03
    2068:	01 96       	adiw	r24, 0x01	; 1
    206a:	b1 f0       	breq	.+44     	; 0x2098 <canDrop+0x220>
			{
				if (arm[arm0] == color[ct])
    206c:	de 01       	movw	r26, r28
    206e:	aa 0f       	add	r26, r26
    2070:	bb 1f       	adc	r27, r27
    2072:	ad 54       	subi	r26, 0x4D	; 77
    2074:	bd 4f       	sbci	r27, 0xFD	; 253
    2076:	f9 01       	movw	r30, r18
    2078:	ee 0f       	add	r30, r30
    207a:	ff 1f       	adc	r31, r31
    207c:	e1 56       	subi	r30, 0x61	; 97
    207e:	fd 4f       	sbci	r31, 0xFD	; 253
    2080:	4d 91       	ld	r20, X+
    2082:	5c 91       	ld	r21, X
    2084:	80 81       	ld	r24, Z
    2086:	91 81       	ldd	r25, Z+1	; 0x01
    2088:	48 17       	cp	r20, r24
    208a:	59 07       	cpc	r21, r25
    208c:	19 f4       	brne	.+6      	; 0x2094 <canDrop+0x21c>
					dropPickup(arm0);
    208e:	ce 01       	movw	r24, r28
    2090:	b4 da       	rcall	.-2712   	; 0x15fa <dropPickup>
    2092:	02 c0       	rjmp	.+4      	; 0x2098 <canDrop+0x220>
				else dropPickup(arm1);
    2094:	c8 01       	movw	r24, r16
    2096:	b1 da       	rcall	.-2718   	; 0x15fa <dropPickup>
			}

			if (arm[arm0] == color[ct] && term[ct][0] == -1)
    2098:	80 91 8b 02 	lds	r24, 0x028B
    209c:	90 91 8c 02 	lds	r25, 0x028C
    20a0:	fc 01       	movw	r30, r24
    20a2:	ee 0f       	add	r30, r30
    20a4:	ff 1f       	adc	r31, r31
    20a6:	e1 56       	subi	r30, 0x61	; 97
    20a8:	fd 4f       	sbci	r31, 0xFD	; 253
    20aa:	20 81       	ld	r18, Z
    20ac:	31 81       	ldd	r19, Z+1	; 0x01
    20ae:	fe 01       	movw	r30, r28
    20b0:	ee 0f       	add	r30, r30
    20b2:	ff 1f       	adc	r31, r31
    20b4:	ed 54       	subi	r30, 0x4D	; 77
    20b6:	fd 4f       	sbci	r31, 0xFD	; 253
    20b8:	40 81       	ld	r20, Z
    20ba:	51 81       	ldd	r21, Z+1	; 0x01
    20bc:	42 17       	cp	r20, r18
    20be:	53 07       	cpc	r21, r19
    20c0:	11 f5       	brne	.+68     	; 0x2106 <canDrop+0x28e>
    20c2:	fc 01       	movw	r30, r24
    20c4:	ee 0f       	add	r30, r30
    20c6:	ff 1f       	adc	r31, r31
    20c8:	ee 0f       	add	r30, r30
    20ca:	ff 1f       	adc	r31, r31
    20cc:	e1 57       	subi	r30, 0x71	; 113
    20ce:	fd 4f       	sbci	r31, 0xFD	; 253
    20d0:	40 81       	ld	r20, Z
    20d2:	51 81       	ldd	r21, Z+1	; 0x01
    20d4:	4f 3f       	cpi	r20, 0xFF	; 255
    20d6:	5f 4f       	sbci	r21, 0xFF	; 255
    20d8:	29 f4       	brne	.+10     	; 0x20e4 <canDrop+0x26c>

				nodeDrop(arm0, 0);
    20da:	60 e0       	ldi	r22, 0x00	; 0
    20dc:	70 e0       	ldi	r23, 0x00	; 0
    20de:	ce 01       	movw	r24, r28
    20e0:	64 db       	rcall	.-2360   	; 0x17aa <nodeDrop>
    20e2:	3b c0       	rjmp	.+118    	; 0x215a <canDrop+0x2e2>
			else if (arm[arm0] == color[ct] && term[ct][1] == -1)
    20e4:	fc 01       	movw	r30, r24
    20e6:	ee 0f       	add	r30, r30
    20e8:	ff 1f       	adc	r31, r31
    20ea:	ee 0f       	add	r30, r30
    20ec:	ff 1f       	adc	r31, r31
    20ee:	e1 57       	subi	r30, 0x71	; 113
    20f0:	fd 4f       	sbci	r31, 0xFD	; 253
    20f2:	42 81       	ldd	r20, Z+2	; 0x02
    20f4:	53 81       	ldd	r21, Z+3	; 0x03
    20f6:	4f 3f       	cpi	r20, 0xFF	; 255
    20f8:	5f 4f       	sbci	r21, 0xFF	; 255
    20fa:	29 f4       	brne	.+10     	; 0x2106 <canDrop+0x28e>
				nodeDrop(arm0, 1);
    20fc:	61 e0       	ldi	r22, 0x01	; 1
    20fe:	70 e0       	ldi	r23, 0x00	; 0
    2100:	ce 01       	movw	r24, r28
    2102:	53 db       	rcall	.-2394   	; 0x17aa <nodeDrop>
    2104:	2a c0       	rjmp	.+84     	; 0x215a <canDrop+0x2e2>
			else if (arm[arm1] == color[ct] && term[ct][0] == -1)
    2106:	f8 01       	movw	r30, r16
    2108:	ee 0f       	add	r30, r30
    210a:	ff 1f       	adc	r31, r31
    210c:	ed 54       	subi	r30, 0x4D	; 77
    210e:	fd 4f       	sbci	r31, 0xFD	; 253
    2110:	40 81       	ld	r20, Z
    2112:	51 81       	ldd	r21, Z+1	; 0x01
    2114:	24 17       	cp	r18, r20
    2116:	35 07       	cpc	r19, r21
    2118:	01 f5       	brne	.+64     	; 0x215a <canDrop+0x2e2>
    211a:	fc 01       	movw	r30, r24
    211c:	ee 0f       	add	r30, r30
    211e:	ff 1f       	adc	r31, r31
    2120:	ee 0f       	add	r30, r30
    2122:	ff 1f       	adc	r31, r31
    2124:	e1 57       	subi	r30, 0x71	; 113
    2126:	fd 4f       	sbci	r31, 0xFD	; 253
    2128:	20 81       	ld	r18, Z
    212a:	31 81       	ldd	r19, Z+1	; 0x01
    212c:	2f 3f       	cpi	r18, 0xFF	; 255
    212e:	3f 4f       	sbci	r19, 0xFF	; 255
    2130:	29 f4       	brne	.+10     	; 0x213c <canDrop+0x2c4>
				nodeDrop(arm1, 0);
    2132:	60 e0       	ldi	r22, 0x00	; 0
    2134:	70 e0       	ldi	r23, 0x00	; 0
    2136:	c8 01       	movw	r24, r16
    2138:	38 db       	rcall	.-2448   	; 0x17aa <nodeDrop>
    213a:	0f c0       	rjmp	.+30     	; 0x215a <canDrop+0x2e2>
			else if (arm[arm1] == color[ct] && term[ct][1] == -1)
    213c:	fc 01       	movw	r30, r24
    213e:	ee 0f       	add	r30, r30
    2140:	ff 1f       	adc	r31, r31
    2142:	ee 0f       	add	r30, r30
    2144:	ff 1f       	adc	r31, r31
    2146:	e1 57       	subi	r30, 0x71	; 113
    2148:	fd 4f       	sbci	r31, 0xFD	; 253
    214a:	82 81       	ldd	r24, Z+2	; 0x02
    214c:	93 81       	ldd	r25, Z+3	; 0x03
    214e:	01 96       	adiw	r24, 0x01	; 1
    2150:	21 f4       	brne	.+8      	; 0x215a <canDrop+0x2e2>

				nodeDrop(arm1, 1);
    2152:	61 e0       	ldi	r22, 0x01	; 1
    2154:	70 e0       	ldi	r23, 0x00	; 0
    2156:	c8 01       	movw	r24, r16
    2158:	28 db       	rcall	.-2480   	; 0x17aa <nodeDrop>

		}
	}
}
    215a:	df 91       	pop	r29
    215c:	cf 91       	pop	r28
    215e:	1f 91       	pop	r17
    2160:	0f 91       	pop	r16
    2162:	08 95       	ret

00002164 <newSort>:
		ot = ct;
	}
}

void newSort()
{
    2164:	ef 92       	push	r14
    2166:	ff 92       	push	r15
    2168:	0f 93       	push	r16
    216a:	1f 93       	push	r17
    216c:	cf 93       	push	r28
    216e:	df 93       	push	r29
	lcd("other sort");
    2170:	82 e4       	ldi	r24, 0x42	; 66
    2172:	92 e0       	ldi	r25, 0x02	; 2
    2174:	c2 d9       	rcall	.-3196   	; 0x14fa <lcd>
	int t1, t2, a1, a2;
	if (arm[0] != -1)
    2176:	20 91 b3 02 	lds	r18, 0x02B3
    217a:	30 91 b4 02 	lds	r19, 0x02B4
    217e:	2f 3f       	cpi	r18, 0xFF	; 255
    2180:	4f ef       	ldi	r20, 0xFF	; 255
    2182:	34 07       	cpc	r19, r20
    2184:	39 f0       	breq	.+14     	; 0x2194 <newSort+0x30>
	a1 = indicator[arm[0]];
    2186:	f9 01       	movw	r30, r18
    2188:	ee 0f       	add	r30, r30
    218a:	ff 1f       	adc	r31, r31
    218c:	e9 55       	subi	r30, 0x59	; 89
    218e:	fd 4f       	sbci	r31, 0xFD	; 253
    2190:	c0 81       	ld	r28, Z
    2192:	d1 81       	ldd	r29, Z+1	; 0x01
	if (arm[1] != -1)
    2194:	e0 91 b5 02 	lds	r30, 0x02B5
    2198:	f0 91 b6 02 	lds	r31, 0x02B6
    219c:	ef 3f       	cpi	r30, 0xFF	; 255
    219e:	6f ef       	ldi	r22, 0xFF	; 255
    21a0:	f6 07       	cpc	r31, r22
    21a2:	09 f4       	brne	.+2      	; 0x21a6 <newSort+0x42>
    21a4:	5d c1       	rjmp	.+698    	; 0x2460 <__stack+0x261>
	a2 = indicator[arm[1]];
    21a6:	df 01       	movw	r26, r30
    21a8:	aa 0f       	add	r26, r26
    21aa:	bb 1f       	adc	r27, r27
    21ac:	a9 55       	subi	r26, 0x59	; 89
    21ae:	bd 4f       	sbci	r27, 0xFD	; 253
    21b0:	0d 91       	ld	r16, X+
    21b2:	1c 91       	ld	r17, X

	t1 = (ct + 1) % 2;
    21b4:	80 91 8b 02 	lds	r24, 0x028B
    21b8:	90 91 8c 02 	lds	r25, 0x028C
    21bc:	01 96       	adiw	r24, 0x01	; 1
    21be:	81 70       	andi	r24, 0x01	; 1
    21c0:	90 78       	andi	r25, 0x80	; 128
    21c2:	99 23       	and	r25, r25
    21c4:	24 f4       	brge	.+8      	; 0x21ce <newSort+0x6a>
    21c6:	01 97       	sbiw	r24, 0x01	; 1
    21c8:	8e 6f       	ori	r24, 0xFE	; 254
    21ca:	9f 6f       	ori	r25, 0xFF	; 255
    21cc:	01 96       	adiw	r24, 0x01	; 1
    21ce:	bc 01       	movw	r22, r24
	t2 = t1 + 2;
    21d0:	02 96       	adiw	r24, 0x02	; 2
	if (arm[0] != -1 || arm[1] != -1)
	{
		ct = a1;
    21d2:	d0 93 8c 02 	sts	0x028C, r29
    21d6:	c0 93 8b 02 	sts	0x028B, r28
		if (arm[0] != -1 && (term[a1][0] == -1 || term[a1][1] == -1))
    21da:	2f 3f       	cpi	r18, 0xFF	; 255
    21dc:	af ef       	ldi	r26, 0xFF	; 255
    21de:	3a 07       	cpc	r19, r26
    21e0:	e1 f1       	breq	.+120    	; 0x225a <__stack+0x5b>
    21e2:	de 01       	movw	r26, r28
    21e4:	aa 0f       	add	r26, r26
    21e6:	bb 1f       	adc	r27, r27
    21e8:	aa 0f       	add	r26, r26
    21ea:	bb 1f       	adc	r27, r27
    21ec:	a1 57       	subi	r26, 0x71	; 113
    21ee:	bd 4f       	sbci	r27, 0xFD	; 253
    21f0:	4d 91       	ld	r20, X+
    21f2:	5c 91       	ld	r21, X
    21f4:	4f 3f       	cpi	r20, 0xFF	; 255
    21f6:	5f 4f       	sbci	r21, 0xFF	; 255
    21f8:	71 f0       	breq	.+28     	; 0x2216 <__stack+0x17>
    21fa:	de 01       	movw	r26, r28
    21fc:	aa 0f       	add	r26, r26
    21fe:	bb 1f       	adc	r27, r27
    2200:	aa 0f       	add	r26, r26
    2202:	bb 1f       	adc	r27, r27
    2204:	a1 57       	subi	r26, 0x71	; 113
    2206:	bd 4f       	sbci	r27, 0xFD	; 253
    2208:	12 96       	adiw	r26, 0x02	; 2
    220a:	4d 91       	ld	r20, X+
    220c:	5c 91       	ld	r21, X
    220e:	13 97       	sbiw	r26, 0x03	; 3
    2210:	4f 3f       	cpi	r20, 0xFF	; 255
    2212:	5f 4f       	sbci	r21, 0xFF	; 255
    2214:	11 f5       	brne	.+68     	; 0x225a <__stack+0x5b>
		{
			if (arm[1] == -1)
    2216:	31 96       	adiw	r30, 0x01	; 1
    2218:	09 f0       	breq	.+2      	; 0x221c <__stack+0x1d>
    221a:	10 c1       	rjmp	.+544    	; 0x243c <__stack+0x23d>
			{
				if (sort[t1] == color[t1] || sort[t1] == color[t2])
    221c:	66 0f       	add	r22, r22
    221e:	77 1f       	adc	r23, r23
    2220:	fb 01       	movw	r30, r22
    2222:	e9 57       	subi	r30, 0x79	; 121
    2224:	fd 4f       	sbci	r31, 0xFD	; 253
    2226:	20 81       	ld	r18, Z
    2228:	31 81       	ldd	r19, Z+1	; 0x01
    222a:	fb 01       	movw	r30, r22
    222c:	e1 56       	subi	r30, 0x61	; 97
    222e:	fd 4f       	sbci	r31, 0xFD	; 253
    2230:	40 81       	ld	r20, Z
    2232:	51 81       	ldd	r21, Z+1	; 0x01
    2234:	24 17       	cp	r18, r20
    2236:	35 07       	cpc	r19, r21
    2238:	59 f0       	breq	.+22     	; 0x2250 <__stack+0x51>
    223a:	fc 01       	movw	r30, r24
    223c:	ee 0f       	add	r30, r30
    223e:	ff 1f       	adc	r31, r31
    2240:	e1 56       	subi	r30, 0x61	; 97
    2242:	fd 4f       	sbci	r31, 0xFD	; 253
    2244:	80 81       	ld	r24, Z
    2246:	91 81       	ldd	r25, Z+1	; 0x01
    2248:	28 17       	cp	r18, r24
    224a:	39 07       	cpc	r19, r25
    224c:	09 f0       	breq	.+2      	; 0x2250 <__stack+0x51>
    224e:	f6 c0       	rjmp	.+492    	; 0x243c <__stack+0x23d>
				pickSort(1, a1);
    2250:	be 01       	movw	r22, r28
    2252:	81 e0       	ldi	r24, 0x01	; 1
    2254:	90 e0       	ldi	r25, 0x00	; 0
    2256:	2a da       	rcall	.-2988   	; 0x16ac <pickSort>
    2258:	f1 c0       	rjmp	.+482    	; 0x243c <__stack+0x23d>
			}
		}
		else if (arm[1] != -1 && (term[a2][0] == -1 || term[a2][1] == -1))
    225a:	ef 3f       	cpi	r30, 0xFF	; 255
    225c:	4f ef       	ldi	r20, 0xFF	; 255
    225e:	f4 07       	cpc	r31, r20
    2260:	09 f4       	brne	.+2      	; 0x2264 <__stack+0x65>
    2262:	52 c0       	rjmp	.+164    	; 0x2308 <__stack+0x109>
    2264:	d8 01       	movw	r26, r16
    2266:	aa 0f       	add	r26, r26
    2268:	bb 1f       	adc	r27, r27
    226a:	aa 0f       	add	r26, r26
    226c:	bb 1f       	adc	r27, r27
    226e:	a1 57       	subi	r26, 0x71	; 113
    2270:	bd 4f       	sbci	r27, 0xFD	; 253
    2272:	4d 91       	ld	r20, X+
    2274:	5c 91       	ld	r21, X
    2276:	4f 3f       	cpi	r20, 0xFF	; 255
    2278:	5f 4f       	sbci	r21, 0xFF	; 255
    227a:	09 f4       	brne	.+2      	; 0x227e <__stack+0x7f>
    227c:	13 c1       	rjmp	.+550    	; 0x24a4 <__stack+0x2a5>
    227e:	d8 01       	movw	r26, r16
    2280:	aa 0f       	add	r26, r26
    2282:	bb 1f       	adc	r27, r27
    2284:	aa 0f       	add	r26, r26
    2286:	bb 1f       	adc	r27, r27
    2288:	a1 57       	subi	r26, 0x71	; 113
    228a:	bd 4f       	sbci	r27, 0xFD	; 253
    228c:	12 96       	adiw	r26, 0x02	; 2
    228e:	4d 91       	ld	r20, X+
    2290:	5c 91       	ld	r21, X
    2292:	13 97       	sbiw	r26, 0x03	; 3
    2294:	4f 3f       	cpi	r20, 0xFF	; 255
    2296:	5f 4f       	sbci	r21, 0xFF	; 255
    2298:	b9 f5       	brne	.+110    	; 0x2308 <__stack+0x109>
    229a:	f2 c0       	rjmp	.+484    	; 0x2480 <__stack+0x281>
		{
			ct = a2;
			if (term[a2][0] == -1 || term[a2][1] == -1)
			{
				if (arm[0] == -1)
    229c:	2f 3f       	cpi	r18, 0xFF	; 255
    229e:	3f 4f       	sbci	r19, 0xFF	; 255
    22a0:	09 f0       	breq	.+2      	; 0x22a4 <__stack+0xa5>
    22a2:	cc c0       	rjmp	.+408    	; 0x243c <__stack+0x23d>
				{
					if (sort[t1] == color[t1] && sort[t1] == color[t2])
    22a4:	9b 01       	movw	r18, r22
    22a6:	22 0f       	add	r18, r18
    22a8:	33 1f       	adc	r19, r19
    22aa:	f9 01       	movw	r30, r18
    22ac:	e9 57       	subi	r30, 0x79	; 121
    22ae:	fd 4f       	sbci	r31, 0xFD	; 253
    22b0:	40 81       	ld	r20, Z
    22b2:	51 81       	ldd	r21, Z+1	; 0x01
    22b4:	f9 01       	movw	r30, r18
    22b6:	e1 56       	subi	r30, 0x61	; 97
    22b8:	fd 4f       	sbci	r31, 0xFD	; 253
    22ba:	20 81       	ld	r18, Z
    22bc:	31 81       	ldd	r19, Z+1	; 0x01
    22be:	42 17       	cp	r20, r18
    22c0:	53 07       	cpc	r21, r19
    22c2:	09 f0       	breq	.+2      	; 0x22c6 <__stack+0xc7>
    22c4:	bb c0       	rjmp	.+374    	; 0x243c <__stack+0x23d>
    22c6:	fc 01       	movw	r30, r24
    22c8:	ee 0f       	add	r30, r30
    22ca:	ff 1f       	adc	r31, r31
    22cc:	e1 56       	subi	r30, 0x61	; 97
    22ce:	fd 4f       	sbci	r31, 0xFD	; 253
    22d0:	80 81       	ld	r24, Z
    22d2:	91 81       	ldd	r25, Z+1	; 0x01
    22d4:	48 17       	cp	r20, r24
    22d6:	59 07       	cpc	r21, r25
    22d8:	09 f0       	breq	.+2      	; 0x22dc <__stack+0xdd>
    22da:	b0 c0       	rjmp	.+352    	; 0x243c <__stack+0x23d>
					pickSort(1, t1);
    22dc:	81 e0       	ldi	r24, 0x01	; 1
    22de:	90 e0       	ldi	r25, 0x00	; 0
    22e0:	e5 d9       	rcall	.-3126   	; 0x16ac <pickSort>
    22e2:	ac c0       	rjmp	.+344    	; 0x243c <__stack+0x23d>
				}
			}
			else	if (sort[t1] == -1 && arm[0] != -1)
    22e4:	fb 01       	movw	r30, r22
    22e6:	ee 0f       	add	r30, r30
    22e8:	ff 1f       	adc	r31, r31
    22ea:	e9 57       	subi	r30, 0x79	; 121
    22ec:	fd 4f       	sbci	r31, 0xFD	; 253
    22ee:	80 81       	ld	r24, Z
    22f0:	91 81       	ldd	r25, Z+1	; 0x01
    22f2:	01 96       	adiw	r24, 0x01	; 1
    22f4:	09 f0       	breq	.+2      	; 0x22f8 <__stack+0xf9>
    22f6:	a2 c0       	rjmp	.+324    	; 0x243c <__stack+0x23d>
    22f8:	2f 3f       	cpi	r18, 0xFF	; 255
    22fa:	3f 4f       	sbci	r19, 0xFF	; 255
    22fc:	09 f4       	brne	.+2      	; 0x2300 <__stack+0x101>
    22fe:	9e c0       	rjmp	.+316    	; 0x243c <__stack+0x23d>
			sortDrop(1, t1);
    2300:	81 e0       	ldi	r24, 0x01	; 1
    2302:	90 e0       	ldi	r25, 0x00	; 0
    2304:	99 da       	rcall	.-2766   	; 0x1838 <sortDrop>
    2306:	9a c0       	rjmp	.+308    	; 0x243c <__stack+0x23d>
		}
		else	if (arm[0] != -1 && (sort[t1] == -1 && arm[1] != -1))
    2308:	2f 3f       	cpi	r18, 0xFF	; 255
    230a:	af ef       	ldi	r26, 0xFF	; 255
    230c:	3a 07       	cpc	r19, r26
    230e:	a1 f0       	breq	.+40     	; 0x2338 <__stack+0x139>
    2310:	db 01       	movw	r26, r22
    2312:	aa 0f       	add	r26, r26
    2314:	bb 1f       	adc	r27, r27
    2316:	a9 57       	subi	r26, 0x79	; 121
    2318:	bd 4f       	sbci	r27, 0xFD	; 253
    231a:	8d 91       	ld	r24, X+
    231c:	9c 91       	ld	r25, X
    231e:	01 96       	adiw	r24, 0x01	; 1
    2320:	31 f4       	brne	.+12     	; 0x232e <__stack+0x12f>
    2322:	31 96       	adiw	r30, 0x01	; 1
    2324:	21 f0       	breq	.+8      	; 0x232e <__stack+0x12f>
		sortDrop(1, t1);
    2326:	81 e0       	ldi	r24, 0x01	; 1
    2328:	90 e0       	ldi	r25, 0x00	; 0
    232a:	86 da       	rcall	.-2804   	; 0x1838 <sortDrop>
    232c:	87 c0       	rjmp	.+270    	; 0x243c <__stack+0x23d>
		else if (arm[0] != -1)
		ct = arm[0];
    232e:	30 93 8c 02 	sts	0x028C, r19
    2332:	20 93 8b 02 	sts	0x028B, r18
    2336:	82 c0       	rjmp	.+260    	; 0x243c <__stack+0x23d>
		else ct = arm[1];
    2338:	f0 93 8c 02 	sts	0x028C, r31
    233c:	e0 93 8b 02 	sts	0x028B, r30
    2340:	7d c0       	rjmp	.+250    	; 0x243c <__stack+0x23d>
	}
	else
	{
		if ((sort[t1] == color[t1] || sort[t1] == color[t2]) && sort[t1] != -1)
    2342:	a7 01       	movw	r20, r14
    2344:	44 0f       	add	r20, r20
    2346:	55 1f       	adc	r21, r21
    2348:	fa 01       	movw	r30, r20
    234a:	e9 57       	subi	r30, 0x79	; 121
    234c:	fd 4f       	sbci	r31, 0xFD	; 253
    234e:	20 81       	ld	r18, Z
    2350:	31 81       	ldd	r19, Z+1	; 0x01
    2352:	fa 01       	movw	r30, r20
    2354:	e1 56       	subi	r30, 0x61	; 97
    2356:	fd 4f       	sbci	r31, 0xFD	; 253
    2358:	40 81       	ld	r20, Z
    235a:	51 81       	ldd	r21, Z+1	; 0x01
    235c:	24 17       	cp	r18, r20
    235e:	35 07       	cpc	r19, r21
    2360:	51 f0       	breq	.+20     	; 0x2376 <__stack+0x177>
    2362:	fc 01       	movw	r30, r24
    2364:	ee 0f       	add	r30, r30
    2366:	ff 1f       	adc	r31, r31
    2368:	e1 56       	subi	r30, 0x61	; 97
    236a:	fd 4f       	sbci	r31, 0xFD	; 253
    236c:	60 81       	ld	r22, Z
    236e:	71 81       	ldd	r23, Z+1	; 0x01
    2370:	26 17       	cp	r18, r22
    2372:	37 07       	cpc	r19, r23
    2374:	81 f4       	brne	.+32     	; 0x2396 <__stack+0x197>
    2376:	2f 3f       	cpi	r18, 0xFF	; 255
    2378:	af ef       	ldi	r26, 0xFF	; 255
    237a:	3a 07       	cpc	r19, r26
    237c:	71 f1       	breq	.+92     	; 0x23da <__stack+0x1db>
		ct = indicator[sort[t1]];
    237e:	f9 01       	movw	r30, r18
    2380:	ee 0f       	add	r30, r30
    2382:	ff 1f       	adc	r31, r31
    2384:	e9 55       	subi	r30, 0x59	; 89
    2386:	fd 4f       	sbci	r31, 0xFD	; 253
    2388:	80 81       	ld	r24, Z
    238a:	91 81       	ldd	r25, Z+1	; 0x01
    238c:	90 93 8c 02 	sts	0x028C, r25
    2390:	80 93 8b 02 	sts	0x028B, r24
    2394:	53 c0       	rjmp	.+166    	; 0x243c <__stack+0x23d>
		else if (sort[t1] != -1)
    2396:	2f 3f       	cpi	r18, 0xFF	; 255
    2398:	3f 4f       	sbci	r19, 0xFF	; 255
    239a:	f9 f0       	breq	.+62     	; 0x23da <__stack+0x1db>
		{
			pickSort(0, t1);
    239c:	b7 01       	movw	r22, r14
    239e:	80 e0       	ldi	r24, 0x00	; 0
    23a0:	90 e0       	ldi	r25, 0x00	; 0
    23a2:	84 d9       	rcall	.-3320   	; 0x16ac <pickSort>
			ct = (t1 + 1) % 2 + 4;
    23a4:	2f ef       	ldi	r18, 0xFF	; 255
    23a6:	e2 1a       	sub	r14, r18
    23a8:	f2 0a       	sbc	r15, r18
    23aa:	41 e0       	ldi	r20, 0x01	; 1
    23ac:	e4 22       	and	r14, r20
    23ae:	40 e8       	ldi	r20, 0x80	; 128
    23b0:	f4 22       	and	r15, r20
    23b2:	ff 20       	and	r15, r15
    23b4:	54 f4       	brge	.+20     	; 0x23ca <__stack+0x1cb>
    23b6:	61 e0       	ldi	r22, 0x01	; 1
    23b8:	e6 1a       	sub	r14, r22
    23ba:	f1 08       	sbc	r15, r1
    23bc:	8e ef       	ldi	r24, 0xFE	; 254
    23be:	e8 2a       	or	r14, r24
    23c0:	ff 24       	eor	r15, r15
    23c2:	fa 94       	dec	r15
    23c4:	af ef       	ldi	r26, 0xFF	; 255
    23c6:	ea 1a       	sub	r14, r26
    23c8:	fa 0a       	sbc	r15, r26
    23ca:	e4 e0       	ldi	r30, 0x04	; 4
    23cc:	ee 0e       	add	r14, r30
    23ce:	f1 1c       	adc	r15, r1
    23d0:	f0 92 8c 02 	sts	0x028C, r15
    23d4:	e0 92 8b 02 	sts	0x028B, r14
    23d8:	31 c0       	rjmp	.+98     	; 0x243c <__stack+0x23d>
		}
		else if (visited[t1] == 1 && (term[t1][0] == color[t1] || term[t1][0] == -1) && (term[t1][1] == color[t1] || term[t1][1] == -1))
    23da:	f7 01       	movw	r30, r14
    23dc:	ee 0f       	add	r30, r30
    23de:	ff 1f       	adc	r31, r31
    23e0:	e8 59       	subi	r30, 0x98	; 152
    23e2:	fd 4f       	sbci	r31, 0xFD	; 253
    23e4:	20 81       	ld	r18, Z
    23e6:	31 81       	ldd	r19, Z+1	; 0x01
    23e8:	21 30       	cpi	r18, 0x01	; 1
    23ea:	31 05       	cpc	r19, r1
    23ec:	19 f5       	brne	.+70     	; 0x2434 <__stack+0x235>
    23ee:	f7 01       	movw	r30, r14
    23f0:	ee 0f       	add	r30, r30
    23f2:	ff 1f       	adc	r31, r31
    23f4:	ee 0f       	add	r30, r30
    23f6:	ff 1f       	adc	r31, r31
    23f8:	e1 57       	subi	r30, 0x71	; 113
    23fa:	fd 4f       	sbci	r31, 0xFD	; 253
    23fc:	20 81       	ld	r18, Z
    23fe:	31 81       	ldd	r19, Z+1	; 0x01
    2400:	42 17       	cp	r20, r18
    2402:	53 07       	cpc	r21, r19
    2404:	19 f0       	breq	.+6      	; 0x240c <__stack+0x20d>
    2406:	2f 3f       	cpi	r18, 0xFF	; 255
    2408:	3f 4f       	sbci	r19, 0xFF	; 255
    240a:	a1 f4       	brne	.+40     	; 0x2434 <__stack+0x235>
    240c:	f7 01       	movw	r30, r14
    240e:	ee 0f       	add	r30, r30
    2410:	ff 1f       	adc	r31, r31
    2412:	ee 0f       	add	r30, r30
    2414:	ff 1f       	adc	r31, r31
    2416:	e1 57       	subi	r30, 0x71	; 113
    2418:	fd 4f       	sbci	r31, 0xFD	; 253
    241a:	22 81       	ldd	r18, Z+2	; 0x02
    241c:	33 81       	ldd	r19, Z+3	; 0x03
    241e:	42 17       	cp	r20, r18
    2420:	53 07       	cpc	r21, r19
    2422:	19 f0       	breq	.+6      	; 0x242a <__stack+0x22b>
    2424:	2f 3f       	cpi	r18, 0xFF	; 255
    2426:	3f 4f       	sbci	r19, 0xFF	; 255
    2428:	29 f4       	brne	.+10     	; 0x2434 <__stack+0x235>
		ct = t2;
    242a:	90 93 8c 02 	sts	0x028C, r25
    242e:	80 93 8b 02 	sts	0x028B, r24
    2432:	04 c0       	rjmp	.+8      	; 0x243c <__stack+0x23d>
		else ct = t1;
    2434:	f0 92 8c 02 	sts	0x028C, r15
    2438:	e0 92 8b 02 	sts	0x028B, r14
/**************************************************
******************SORT*****************************
**************************************************/
int adjCount(int ct)
{
	return (ct + 2) % 4;
    243c:	80 91 8b 02 	lds	r24, 0x028B
    2440:	90 91 8c 02 	lds	r25, 0x028C
    2444:	02 96       	adiw	r24, 0x02	; 2
    2446:	83 70       	andi	r24, 0x03	; 3
    2448:	90 78       	andi	r25, 0x80	; 128
    244a:	99 23       	and	r25, r25
    244c:	24 f4       	brge	.+8      	; 0x2456 <__stack+0x257>
    244e:	01 97       	sbiw	r24, 0x01	; 1
    2450:	8c 6f       	ori	r24, 0xFC	; 252
    2452:	9f 6f       	ori	r25, 0xFF	; 255
    2454:	01 96       	adiw	r24, 0x01	; 1
		else if (visited[t1] == 1 && (term[t1][0] == color[t1] || term[t1][0] == -1) && (term[t1][1] == color[t1] || term[t1][1] == -1))
		ct = t2;
		else ct = t1;

	}
	adj = adjCount(ct);
    2456:	90 93 b0 02 	sts	0x02B0, r25
    245a:	80 93 af 02 	sts	0x02AF, r24
    245e:	2c c0       	rjmp	.+88     	; 0x24b8 <__stack+0x2b9>
	if (arm[0] != -1)
	a1 = indicator[arm[0]];
	if (arm[1] != -1)
	a2 = indicator[arm[1]];

	t1 = (ct + 1) % 2;
    2460:	80 91 8b 02 	lds	r24, 0x028B
    2464:	90 91 8c 02 	lds	r25, 0x028C
    2468:	01 96       	adiw	r24, 0x01	; 1
    246a:	62 e0       	ldi	r22, 0x02	; 2
    246c:	70 e0       	ldi	r23, 0x00	; 0
    246e:	59 d4       	rcall	.+2226   	; 0x2d22 <__divmodhi4>
    2470:	7c 01       	movw	r14, r24
    2472:	bc 01       	movw	r22, r24
	t2 = t1 + 2;
    2474:	02 96       	adiw	r24, 0x02	; 2
	if (arm[0] != -1 || arm[1] != -1)
    2476:	2f 3f       	cpi	r18, 0xFF	; 255
    2478:	4f ef       	ldi	r20, 0xFF	; 255
    247a:	34 07       	cpc	r19, r20
    247c:	c1 f4       	brne	.+48     	; 0x24ae <__stack+0x2af>
    247e:	61 cf       	rjmp	.-318    	; 0x2342 <__stack+0x143>
				pickSort(1, a1);
			}
		}
		else if (arm[1] != -1 && (term[a2][0] == -1 || term[a2][1] == -1))
		{
			ct = a2;
    2480:	10 93 8c 02 	sts	0x028C, r17
    2484:	00 93 8b 02 	sts	0x028B, r16
			if (term[a2][0] == -1 || term[a2][1] == -1)
    2488:	f8 01       	movw	r30, r16
    248a:	ee 0f       	add	r30, r30
    248c:	ff 1f       	adc	r31, r31
    248e:	ee 0f       	add	r30, r30
    2490:	ff 1f       	adc	r31, r31
    2492:	e1 57       	subi	r30, 0x71	; 113
    2494:	fd 4f       	sbci	r31, 0xFD	; 253
    2496:	42 81       	ldd	r20, Z+2	; 0x02
    2498:	53 81       	ldd	r21, Z+3	; 0x03
    249a:	4f 3f       	cpi	r20, 0xFF	; 255
    249c:	5f 4f       	sbci	r21, 0xFF	; 255
    249e:	09 f0       	breq	.+2      	; 0x24a2 <__stack+0x2a3>
    24a0:	21 cf       	rjmp	.-446    	; 0x22e4 <__stack+0xe5>
    24a2:	fc ce       	rjmp	.-520    	; 0x229c <__stack+0x9d>
				pickSort(1, a1);
			}
		}
		else if (arm[1] != -1 && (term[a2][0] == -1 || term[a2][1] == -1))
		{
			ct = a2;
    24a4:	10 93 8c 02 	sts	0x028C, r17
    24a8:	00 93 8b 02 	sts	0x028B, r16
    24ac:	f7 ce       	rjmp	.-530    	; 0x229c <__stack+0x9d>

	t1 = (ct + 1) % 2;
	t2 = t1 + 2;
	if (arm[0] != -1 || arm[1] != -1)
	{
		ct = a1;
    24ae:	d0 93 8c 02 	sts	0x028C, r29
    24b2:	c0 93 8b 02 	sts	0x028B, r28
    24b6:	95 ce       	rjmp	.-726    	; 0x21e2 <newSort+0x7e>
		ct = t2;
		else ct = t1;

	}
	adj = adjCount(ct);
}
    24b8:	df 91       	pop	r29
    24ba:	cf 91       	pop	r28
    24bc:	1f 91       	pop	r17
    24be:	0f 91       	pop	r16
    24c0:	ff 90       	pop	r15
    24c2:	ef 90       	pop	r14
    24c4:	08 95       	ret

000024c6 <sortCheck>:
void sortCheck()
{
    24c6:	8f 92       	push	r8
    24c8:	9f 92       	push	r9
    24ca:	af 92       	push	r10
    24cc:	bf 92       	push	r11
    24ce:	cf 92       	push	r12
    24d0:	df 92       	push	r13
    24d2:	ef 92       	push	r14
    24d4:	ff 92       	push	r15
    24d6:	0f 93       	push	r16
    24d8:	1f 93       	push	r17
    24da:	cf 93       	push	r28
    24dc:	df 93       	push	r29
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
    24de:	40 91 8b 02 	lds	r20, 0x028B
    24e2:	50 91 8c 02 	lds	r21, 0x028C
    24e6:	42 30       	cpi	r20, 0x02	; 2
    24e8:	51 05       	cpc	r21, r1
    24ea:	30 f4       	brcc	.+12     	; 0x24f8 <sortCheck+0x32>
    24ec:	80 91 52 02 	lds	r24, 0x0252
    24f0:	90 91 53 02 	lds	r25, 0x0253
    24f4:	02 97       	sbiw	r24, 0x02	; 2
    24f6:	79 f0       	breq	.+30     	; 0x2516 <sortCheck+0x50>
    24f8:	ca 01       	movw	r24, r20
    24fa:	02 97       	sbiw	r24, 0x02	; 2
    24fc:	02 97       	sbiw	r24, 0x02	; 2
    24fe:	80 f4       	brcc	.+32     	; 0x2520 <sortCheck+0x5a>
    2500:	80 91 52 02 	lds	r24, 0x0252
    2504:	90 91 53 02 	lds	r25, 0x0253
    2508:	89 2b       	or	r24, r25
    250a:	79 f0       	breq	.+30     	; 0x252a <sortCheck+0x64>
	adj = adjCount(ct);
}
void sortCheck()
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
    250c:	01 e0       	ldi	r16, 0x01	; 1
    250e:	10 e0       	ldi	r17, 0x00	; 0
    2510:	c0 e0       	ldi	r28, 0x00	; 0
    2512:	d0 e0       	ldi	r29, 0x00	; 0
    2514:	0e c0       	rjmp	.+28     	; 0x2532 <sortCheck+0x6c>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    2516:	00 e0       	ldi	r16, 0x00	; 0
    2518:	10 e0       	ldi	r17, 0x00	; 0
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    251a:	c1 e0       	ldi	r28, 0x01	; 1
    251c:	d0 e0       	ldi	r29, 0x00	; 0
    251e:	09 c0       	rjmp	.+18     	; 0x2532 <sortCheck+0x6c>
	adj = adjCount(ct);
}
void sortCheck()
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
    2520:	01 e0       	ldi	r16, 0x01	; 1
    2522:	10 e0       	ldi	r17, 0x00	; 0
    2524:	c0 e0       	ldi	r28, 0x00	; 0
    2526:	d0 e0       	ldi	r29, 0x00	; 0
    2528:	04 c0       	rjmp	.+8      	; 0x2532 <sortCheck+0x6c>
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
		arm1 = 0;
    252a:	00 e0       	ldi	r16, 0x00	; 0
    252c:	10 e0       	ldi	r17, 0x00	; 0
{
	//int a1, a2;
	int arm0 = 0, arm1 = 1;
	if (((ct == 0 || ct == 1) && dir == 2) || ((ct == 2 || ct == 3) && dir == 0))
	{
		arm0 = 1;
    252e:	c1 e0       	ldi	r28, 0x01	; 1
    2530:	d0 e0       	ldi	r29, 0x00	; 0
		arm1 = 0;
	}
	if ((sort[ct % 2] == color[ct] || sort[ct % 2] == color[adj]))
    2532:	9a 01       	movw	r18, r20
    2534:	21 70       	andi	r18, 0x01	; 1
    2536:	30 78       	andi	r19, 0x80	; 128
    2538:	33 23       	and	r19, r19
    253a:	34 f4       	brge	.+12     	; 0x2548 <sortCheck+0x82>
    253c:	21 50       	subi	r18, 0x01	; 1
    253e:	31 09       	sbc	r19, r1
    2540:	2e 6f       	ori	r18, 0xFE	; 254
    2542:	3f 6f       	ori	r19, 0xFF	; 255
    2544:	2f 5f       	subi	r18, 0xFF	; 255
    2546:	3f 4f       	sbci	r19, 0xFF	; 255
    2548:	b2 2e       	mov	r11, r18
    254a:	a3 2e       	mov	r10, r19
    254c:	f9 01       	movw	r30, r18
    254e:	ee 0f       	add	r30, r30
    2550:	ff 1f       	adc	r31, r31
    2552:	e9 57       	subi	r30, 0x79	; 121
    2554:	fd 4f       	sbci	r31, 0xFD	; 253
    2556:	20 81       	ld	r18, Z
    2558:	31 81       	ldd	r19, Z+1	; 0x01
    255a:	fa 01       	movw	r30, r20
    255c:	ee 0f       	add	r30, r30
    255e:	ff 1f       	adc	r31, r31
    2560:	e1 56       	subi	r30, 0x61	; 97
    2562:	fd 4f       	sbci	r31, 0xFD	; 253
    2564:	80 81       	ld	r24, Z
    2566:	91 81       	ldd	r25, Z+1	; 0x01
    2568:	28 17       	cp	r18, r24
    256a:	39 07       	cpc	r19, r25
    256c:	79 f0       	breq	.+30     	; 0x258c <sortCheck+0xc6>
    256e:	80 91 af 02 	lds	r24, 0x02AF
    2572:	90 91 b0 02 	lds	r25, 0x02B0
    2576:	fc 01       	movw	r30, r24
    2578:	ee 0f       	add	r30, r30
    257a:	ff 1f       	adc	r31, r31
    257c:	e1 56       	subi	r30, 0x61	; 97
    257e:	fd 4f       	sbci	r31, 0xFD	; 253
    2580:	40 81       	ld	r20, Z
    2582:	51 81       	ldd	r21, Z+1	; 0x01
    2584:	24 17       	cp	r18, r20
    2586:	35 07       	cpc	r19, r21
    2588:	09 f0       	breq	.+2      	; 0x258c <sortCheck+0xc6>
    258a:	a6 c0       	rjmp	.+332    	; 0x26d8 <sortCheck+0x212>
	{
		if (armCount>0)
    258c:	80 91 02 02 	lds	r24, 0x0202
    2590:	90 91 03 02 	lds	r25, 0x0203
    2594:	18 16       	cp	r1, r24
    2596:	19 06       	cpc	r1, r25
    2598:	0c f0       	brlt	.+2      	; 0x259c <sortCheck+0xd6>
    259a:	95 c0       	rjmp	.+298    	; 0x26c6 <sortCheck+0x200>
		{
			ct = indicator[sort[ct % 2]];
    259c:	f9 01       	movw	r30, r18
    259e:	ee 0f       	add	r30, r30
    25a0:	ff 1f       	adc	r31, r31
    25a2:	e9 55       	subi	r30, 0x59	; 89
    25a4:	fd 4f       	sbci	r31, 0xFD	; 253
    25a6:	60 81       	ld	r22, Z
    25a8:	71 81       	ldd	r23, Z+1	; 0x01
    25aa:	70 93 8c 02 	sts	0x028C, r23
    25ae:	60 93 8b 02 	sts	0x028B, r22
			if (arm[arm0] == -1)
    25b2:	fe 01       	movw	r30, r28
    25b4:	ee 0f       	add	r30, r30
    25b6:	ff 1f       	adc	r31, r31
    25b8:	ed 54       	subi	r30, 0x4D	; 77
    25ba:	fd 4f       	sbci	r31, 0xFD	; 253
    25bc:	80 81       	ld	r24, Z
    25be:	91 81       	ldd	r25, Z+1	; 0x01
    25c0:	01 96       	adiw	r24, 0x01	; 1
    25c2:	69 f4       	brne	.+26     	; 0x25de <sortCheck+0x118>
			pickSort(arm0, ct % 2);
    25c4:	61 70       	andi	r22, 0x01	; 1
    25c6:	70 78       	andi	r23, 0x80	; 128
    25c8:	77 23       	and	r23, r23
    25ca:	34 f4       	brge	.+12     	; 0x25d8 <sortCheck+0x112>
    25cc:	61 50       	subi	r22, 0x01	; 1
    25ce:	71 09       	sbc	r23, r1
    25d0:	6e 6f       	ori	r22, 0xFE	; 254
    25d2:	7f 6f       	ori	r23, 0xFF	; 255
    25d4:	6f 5f       	subi	r22, 0xFF	; 255
    25d6:	7f 4f       	sbci	r23, 0xFF	; 255
    25d8:	ce 01       	movw	r24, r28
    25da:	68 d8       	rcall	.-3888   	; 0x16ac <pickSort>
    25dc:	15 c0       	rjmp	.+42     	; 0x2608 <sortCheck+0x142>
			else if (arm[arm1] == -1)
    25de:	f8 01       	movw	r30, r16
    25e0:	ee 0f       	add	r30, r30
    25e2:	ff 1f       	adc	r31, r31
    25e4:	ed 54       	subi	r30, 0x4D	; 77
    25e6:	fd 4f       	sbci	r31, 0xFD	; 253
    25e8:	80 81       	ld	r24, Z
    25ea:	91 81       	ldd	r25, Z+1	; 0x01
    25ec:	01 96       	adiw	r24, 0x01	; 1
    25ee:	61 f4       	brne	.+24     	; 0x2608 <sortCheck+0x142>
			pickSort(arm1, ct % 2);
    25f0:	61 70       	andi	r22, 0x01	; 1
    25f2:	70 78       	andi	r23, 0x80	; 128
    25f4:	77 23       	and	r23, r23
    25f6:	34 f4       	brge	.+12     	; 0x2604 <sortCheck+0x13e>
    25f8:	61 50       	subi	r22, 0x01	; 1
    25fa:	71 09       	sbc	r23, r1
    25fc:	6e 6f       	ori	r22, 0xFE	; 254
    25fe:	7f 6f       	ori	r23, 0xFF	; 255
    2600:	6f 5f       	subi	r22, 0xFF	; 255
    2602:	7f 4f       	sbci	r23, 0xFF	; 255
    2604:	c8 01       	movw	r24, r16
    2606:	52 d8       	rcall	.-3932   	; 0x16ac <pickSort>
			if (armCount != 1 && term[ct][0] != -1 && term[ct][1] != -1 && sort[ct % 2] == -1)
    2608:	80 91 02 02 	lds	r24, 0x0202
    260c:	90 91 03 02 	lds	r25, 0x0203
    2610:	01 97       	sbiw	r24, 0x01	; 1
    2612:	09 f4       	brne	.+2      	; 0x2616 <sortCheck+0x150>
    2614:	6f c1       	rjmp	.+734    	; 0x28f4 <sortCheck+0x42e>
    2616:	80 91 8b 02 	lds	r24, 0x028B
    261a:	90 91 8c 02 	lds	r25, 0x028C
    261e:	fc 01       	movw	r30, r24
    2620:	ee 0f       	add	r30, r30
    2622:	ff 1f       	adc	r31, r31
    2624:	ee 0f       	add	r30, r30
    2626:	ff 1f       	adc	r31, r31
    2628:	e1 57       	subi	r30, 0x71	; 113
    262a:	fd 4f       	sbci	r31, 0xFD	; 253
    262c:	20 81       	ld	r18, Z
    262e:	31 81       	ldd	r19, Z+1	; 0x01
    2630:	2f 3f       	cpi	r18, 0xFF	; 255
    2632:	3f 4f       	sbci	r19, 0xFF	; 255
    2634:	09 f4       	brne	.+2      	; 0x2638 <sortCheck+0x172>
    2636:	5e c1       	rjmp	.+700    	; 0x28f4 <sortCheck+0x42e>
    2638:	fc 01       	movw	r30, r24
    263a:	ee 0f       	add	r30, r30
    263c:	ff 1f       	adc	r31, r31
    263e:	ee 0f       	add	r30, r30
    2640:	ff 1f       	adc	r31, r31
    2642:	e1 57       	subi	r30, 0x71	; 113
    2644:	fd 4f       	sbci	r31, 0xFD	; 253
    2646:	22 81       	ldd	r18, Z+2	; 0x02
    2648:	33 81       	ldd	r19, Z+3	; 0x03
    264a:	2f 3f       	cpi	r18, 0xFF	; 255
    264c:	3f 4f       	sbci	r19, 0xFF	; 255
    264e:	09 f4       	brne	.+2      	; 0x2652 <sortCheck+0x18c>
    2650:	51 c1       	rjmp	.+674    	; 0x28f4 <sortCheck+0x42e>
    2652:	9c 01       	movw	r18, r24
    2654:	21 70       	andi	r18, 0x01	; 1
    2656:	30 78       	andi	r19, 0x80	; 128
    2658:	33 23       	and	r19, r19
    265a:	34 f4       	brge	.+12     	; 0x2668 <sortCheck+0x1a2>
    265c:	21 50       	subi	r18, 0x01	; 1
    265e:	31 09       	sbc	r19, r1
    2660:	2e 6f       	ori	r18, 0xFE	; 254
    2662:	3f 6f       	ori	r19, 0xFF	; 255
    2664:	2f 5f       	subi	r18, 0xFF	; 255
    2666:	3f 4f       	sbci	r19, 0xFF	; 255
    2668:	62 2f       	mov	r22, r18
    266a:	73 2f       	mov	r23, r19
    266c:	f9 01       	movw	r30, r18
    266e:	ee 0f       	add	r30, r30
    2670:	ff 1f       	adc	r31, r31
    2672:	e9 57       	subi	r30, 0x79	; 121
    2674:	fd 4f       	sbci	r31, 0xFD	; 253
    2676:	20 81       	ld	r18, Z
    2678:	31 81       	ldd	r19, Z+1	; 0x01
    267a:	2f 3f       	cpi	r18, 0xFF	; 255
    267c:	3f 4f       	sbci	r19, 0xFF	; 255
    267e:	09 f0       	breq	.+2      	; 0x2682 <sortCheck+0x1bc>
    2680:	39 c1       	rjmp	.+626    	; 0x28f4 <sortCheck+0x42e>
			{
				if (arm[arm0] == color[ct])
    2682:	fc 01       	movw	r30, r24
    2684:	ee 0f       	add	r30, r30
    2686:	ff 1f       	adc	r31, r31
    2688:	e1 56       	subi	r30, 0x61	; 97
    268a:	fd 4f       	sbci	r31, 0xFD	; 253
    268c:	80 81       	ld	r24, Z
    268e:	91 81       	ldd	r25, Z+1	; 0x01
    2690:	fe 01       	movw	r30, r28
    2692:	ee 0f       	add	r30, r30
    2694:	ff 1f       	adc	r31, r31
    2696:	ed 54       	subi	r30, 0x4D	; 77
    2698:	fd 4f       	sbci	r31, 0xFD	; 253
    269a:	20 81       	ld	r18, Z
    269c:	31 81       	ldd	r19, Z+1	; 0x01
    269e:	28 17       	cp	r18, r24
    26a0:	39 07       	cpc	r19, r25
    26a2:	19 f4       	brne	.+6      	; 0x26aa <sortCheck+0x1e4>
				sortDrop(arm1, ct % 2);
    26a4:	c8 01       	movw	r24, r16
    26a6:	c8 d8       	rcall	.-3696   	; 0x1838 <sortDrop>
    26a8:	25 c1       	rjmp	.+586    	; 0x28f4 <sortCheck+0x42e>
				else if (arm[arm1] == color[ct])
    26aa:	f8 01       	movw	r30, r16
    26ac:	ee 0f       	add	r30, r30
    26ae:	ff 1f       	adc	r31, r31
    26b0:	ed 54       	subi	r30, 0x4D	; 77
    26b2:	fd 4f       	sbci	r31, 0xFD	; 253
    26b4:	20 81       	ld	r18, Z
    26b6:	31 81       	ldd	r19, Z+1	; 0x01
    26b8:	82 17       	cp	r24, r18
    26ba:	93 07       	cpc	r25, r19
    26bc:	09 f0       	breq	.+2      	; 0x26c0 <sortCheck+0x1fa>
    26be:	1a c1       	rjmp	.+564    	; 0x28f4 <sortCheck+0x42e>
				sortDrop(arm0, ct % 2);
    26c0:	ce 01       	movw	r24, r28
    26c2:	ba d8       	rcall	.-3724   	; 0x1838 <sortDrop>
    26c4:	17 c1       	rjmp	.+558    	; 0x28f4 <sortCheck+0x42e>
			}
		}
		else ct = adj;
    26c6:	80 91 af 02 	lds	r24, 0x02AF
    26ca:	90 91 b0 02 	lds	r25, 0x02B0
    26ce:	90 93 8c 02 	sts	0x028C, r25
    26d2:	80 93 8b 02 	sts	0x028B, r24
    26d6:	0e c1       	rjmp	.+540    	; 0x28f4 <sortCheck+0x42e>
	}
	else if (arm[arm0] != color[adj] && arm[arm1] != color[adj])
    26d8:	fe 01       	movw	r30, r28
    26da:	ee 0f       	add	r30, r30
    26dc:	ff 1f       	adc	r31, r31
    26de:	ed 54       	subi	r30, 0x4D	; 77
    26e0:	fd 4f       	sbci	r31, 0xFD	; 253
    26e2:	01 90       	ld	r0, Z+
    26e4:	f0 81       	ld	r31, Z
    26e6:	e0 2d       	mov	r30, r0
    26e8:	4e 17       	cp	r20, r30
    26ea:	5f 07       	cpc	r21, r31
    26ec:	09 f4       	brne	.+2      	; 0x26f0 <sortCheck+0x22a>
    26ee:	8f c0       	rjmp	.+286    	; 0x280e <sortCheck+0x348>
    26f0:	d8 01       	movw	r26, r16
    26f2:	aa 0f       	add	r26, r26
    26f4:	bb 1f       	adc	r27, r27
    26f6:	ad 54       	subi	r26, 0x4D	; 77
    26f8:	bd 4f       	sbci	r27, 0xFD	; 253
    26fa:	8d 90       	ld	r8, X+
    26fc:	9c 90       	ld	r9, X
    26fe:	48 15       	cp	r20, r8
    2700:	59 05       	cpc	r21, r9
    2702:	09 f4       	brne	.+2      	; 0x2706 <sortCheck+0x240>
    2704:	84 c0       	rjmp	.+264    	; 0x280e <sortCheck+0x348>
	{
		if (armCount == 0 || (armCount == 1 && sort[ct % 2] != -1) || ((armCount == 2 || armCount == 1) && (term[adj][0] == color[adj] || term[adj][0] == -1) && (term[adj][1] == color[adj] || term[adj][1] == -1)))
    2706:	e0 90 02 02 	lds	r14, 0x0202
    270a:	f0 90 03 02 	lds	r15, 0x0203
    270e:	e1 14       	cp	r14, r1
    2710:	f1 04       	cpc	r15, r1
    2712:	09 f4       	brne	.+2      	; 0x2716 <sortCheck+0x250>
    2714:	4e c0       	rjmp	.+156    	; 0x27b2 <sortCheck+0x2ec>
    2716:	b1 e0       	ldi	r27, 0x01	; 1
    2718:	eb 16       	cp	r14, r27
    271a:	f1 04       	cpc	r15, r1
    271c:	29 f4       	brne	.+10     	; 0x2728 <sortCheck+0x262>
    271e:	2f 3f       	cpi	r18, 0xFF	; 255
    2720:	6f ef       	ldi	r22, 0xFF	; 255
    2722:	36 07       	cpc	r19, r22
    2724:	b1 f5       	brne	.+108    	; 0x2792 <sortCheck+0x2cc>
    2726:	09 c0       	rjmp	.+18     	; 0x273a <sortCheck+0x274>
    2728:	67 01       	movw	r12, r14
    272a:	71 e0       	ldi	r23, 0x01	; 1
    272c:	c7 1a       	sub	r12, r23
    272e:	d1 08       	sbc	r13, r1
    2730:	a2 e0       	ldi	r26, 0x02	; 2
    2732:	ca 16       	cp	r12, r26
    2734:	d1 04       	cpc	r13, r1
    2736:	08 f0       	brcs	.+2      	; 0x273a <sortCheck+0x274>
    2738:	65 c0       	rjmp	.+202    	; 0x2804 <sortCheck+0x33e>
    273a:	6c 01       	movw	r12, r24
    273c:	cc 0c       	add	r12, r12
    273e:	dd 1c       	adc	r13, r13
    2740:	cc 0c       	add	r12, r12
    2742:	dd 1c       	adc	r13, r13
    2744:	b6 01       	movw	r22, r12
    2746:	61 57       	subi	r22, 0x71	; 113
    2748:	7d 4f       	sbci	r23, 0xFD	; 253
    274a:	db 01       	movw	r26, r22
    274c:	cd 90       	ld	r12, X+
    274e:	dc 90       	ld	r13, X
    2750:	4c 15       	cp	r20, r12
    2752:	5d 05       	cpc	r21, r13
    2754:	21 f0       	breq	.+8      	; 0x275e <sortCheck+0x298>
    2756:	cd 20       	and	r12, r13
    2758:	c0 94       	com	r12
    275a:	09 f0       	breq	.+2      	; 0x275e <sortCheck+0x298>
    275c:	53 c0       	rjmp	.+166    	; 0x2804 <sortCheck+0x33e>
    275e:	6c 01       	movw	r12, r24
    2760:	cc 0c       	add	r12, r12
    2762:	dd 1c       	adc	r13, r13
    2764:	cc 0c       	add	r12, r12
    2766:	dd 1c       	adc	r13, r13
    2768:	b6 01       	movw	r22, r12
    276a:	61 57       	subi	r22, 0x71	; 113
    276c:	7d 4f       	sbci	r23, 0xFD	; 253
    276e:	db 01       	movw	r26, r22
    2770:	12 96       	adiw	r26, 0x02	; 2
    2772:	cd 90       	ld	r12, X+
    2774:	dc 90       	ld	r13, X
    2776:	13 97       	sbiw	r26, 0x03	; 3
    2778:	4c 15       	cp	r20, r12
    277a:	5d 05       	cpc	r21, r13
    277c:	21 f0       	breq	.+8      	; 0x2786 <sortCheck+0x2c0>
    277e:	cd 20       	and	r12, r13
    2780:	c0 94       	com	r12
    2782:	09 f0       	breq	.+2      	; 0x2786 <sortCheck+0x2c0>
    2784:	3f c0       	rjmp	.+126    	; 0x2804 <sortCheck+0x33e>
		{
			if (armCount>0)
    2786:	1e 14       	cp	r1, r14
    2788:	1f 04       	cpc	r1, r15
    278a:	9c f4       	brge	.+38     	; 0x27b2 <sortCheck+0x2ec>
			{
				if(sort[ct % 2] != -1)
    278c:	2f 3f       	cpi	r18, 0xFF	; 255
    278e:	3f 4f       	sbci	r19, 0xFF	; 255
    2790:	81 f0       	breq	.+32     	; 0x27b2 <sortCheck+0x2ec>
				{
					
					if (arm[arm0] == -1)
    2792:	31 96       	adiw	r30, 0x01	; 1
    2794:	31 f4       	brne	.+12     	; 0x27a2 <sortCheck+0x2dc>
					pickSort(arm0, ct % 2);
    2796:	6b 2d       	mov	r22, r11
    2798:	7a 2d       	mov	r23, r10
    279a:	ce 01       	movw	r24, r28
    279c:	0e 94 56 0b 	call	0x16ac	; 0x16ac <pickSort>
    27a0:	08 c0       	rjmp	.+16     	; 0x27b2 <sortCheck+0x2ec>
					else if (arm[arm1] == -1)
    27a2:	89 20       	and	r8, r9
    27a4:	80 94       	com	r8
    27a6:	29 f4       	brne	.+10     	; 0x27b2 <sortCheck+0x2ec>
					pickSort(arm1, ct % 2);
    27a8:	6b 2d       	mov	r22, r11
    27aa:	7a 2d       	mov	r23, r10
    27ac:	c8 01       	movw	r24, r16
    27ae:	0e 94 56 0b 	call	0x16ac	; 0x16ac <pickSort>
				}
			}
			traverseToSort(ct % 2 + 4, (ct + 1) % 2 + 4);
    27b2:	80 91 8b 02 	lds	r24, 0x028B
    27b6:	90 91 8c 02 	lds	r25, 0x028C
    27ba:	bc 01       	movw	r22, r24
    27bc:	6f 5f       	subi	r22, 0xFF	; 255
    27be:	7f 4f       	sbci	r23, 0xFF	; 255
    27c0:	61 70       	andi	r22, 0x01	; 1
    27c2:	70 78       	andi	r23, 0x80	; 128
    27c4:	77 23       	and	r23, r23
    27c6:	34 f4       	brge	.+12     	; 0x27d4 <sortCheck+0x30e>
    27c8:	61 50       	subi	r22, 0x01	; 1
    27ca:	71 09       	sbc	r23, r1
    27cc:	6e 6f       	ori	r22, 0xFE	; 254
    27ce:	7f 6f       	ori	r23, 0xFF	; 255
    27d0:	6f 5f       	subi	r22, 0xFF	; 255
    27d2:	7f 4f       	sbci	r23, 0xFF	; 255
    27d4:	6c 5f       	subi	r22, 0xFC	; 252
    27d6:	7f 4f       	sbci	r23, 0xFF	; 255
    27d8:	81 70       	andi	r24, 0x01	; 1
    27da:	90 78       	andi	r25, 0x80	; 128
    27dc:	99 23       	and	r25, r25
    27de:	24 f4       	brge	.+8      	; 0x27e8 <sortCheck+0x322>
    27e0:	01 97       	sbiw	r24, 0x01	; 1
    27e2:	8e 6f       	ori	r24, 0xFE	; 254
    27e4:	9f 6f       	ori	r25, 0xFF	; 255
    27e6:	01 96       	adiw	r24, 0x01	; 1
    27e8:	04 96       	adiw	r24, 0x04	; 4
    27ea:	0e 94 20 08 	call	0x1040	; 0x1040 <traverseToSort>
			newSort();
    27ee:	ba dc       	rcall	.-1676   	; 0x2164 <newSort>
			if (ct == 4 || ct == 5)
    27f0:	80 91 8b 02 	lds	r24, 0x028B
    27f4:	90 91 8c 02 	lds	r25, 0x028C
    27f8:	04 97       	sbiw	r24, 0x04	; 4
    27fa:	02 97       	sbiw	r24, 0x02	; 2
    27fc:	08 f0       	brcs	.+2      	; 0x2800 <sortCheck+0x33a>
    27fe:	a0 c0       	rjmp	.+320    	; 0x2940 <sortCheck+0x47a>
			newSort();
    2800:	b1 dc       	rcall	.-1694   	; 0x2164 <newSort>
    2802:	9e c0       	rjmp	.+316    	; 0x2940 <sortCheck+0x47a>
			return;
		}
		else ct = adj;
    2804:	90 93 8c 02 	sts	0x028C, r25
    2808:	80 93 8b 02 	sts	0x028B, r24
		}
		else ct = adj;
	}
	else if (arm[arm0] != color[adj] && arm[arm1] != color[adj])
	{
		if (armCount == 0 || (armCount == 1 && sort[ct % 2] != -1) || ((armCount == 2 || armCount == 1) && (term[adj][0] == color[adj] || term[adj][0] == -1) && (term[adj][1] == color[adj] || term[adj][1] == -1)))
    280c:	73 c0       	rjmp	.+230    	; 0x28f4 <sortCheck+0x42e>
		}
		else ct = adj;
	}
	else
	{
		if (armCount == 0 && ((visited[adj] == 1 && (term[adj][0] != -1 && term[adj][1] != -1)) || visited[adj] == 0) && sort[ct % 2] == -1)
    280e:	a0 91 02 02 	lds	r26, 0x0202
    2812:	b0 91 03 02 	lds	r27, 0x0203
    2816:	10 97       	sbiw	r26, 0x00	; 0
    2818:	d1 f5       	brne	.+116    	; 0x288e <sortCheck+0x3c8>
    281a:	dc 01       	movw	r26, r24
    281c:	aa 0f       	add	r26, r26
    281e:	bb 1f       	adc	r27, r27
    2820:	a8 59       	subi	r26, 0x98	; 152
    2822:	bd 4f       	sbci	r27, 0xFD	; 253
    2824:	0d 90       	ld	r0, X+
    2826:	bc 91       	ld	r27, X
    2828:	a0 2d       	mov	r26, r0
    282a:	a1 30       	cpi	r26, 0x01	; 1
    282c:	b1 05       	cpc	r27, r1
    282e:	d9 f4       	brne	.+54     	; 0x2866 <sortCheck+0x3a0>
    2830:	dc 01       	movw	r26, r24
    2832:	aa 0f       	add	r26, r26
    2834:	bb 1f       	adc	r27, r27
    2836:	aa 0f       	add	r26, r26
    2838:	bb 1f       	adc	r27, r27
    283a:	a1 57       	subi	r26, 0x71	; 113
    283c:	bd 4f       	sbci	r27, 0xFD	; 253
    283e:	0d 90       	ld	r0, X+
    2840:	bc 91       	ld	r27, X
    2842:	a0 2d       	mov	r26, r0
    2844:	11 96       	adiw	r26, 0x01	; 1
    2846:	09 f4       	brne	.+2      	; 0x284a <sortCheck+0x384>
    2848:	4d c0       	rjmp	.+154    	; 0x28e4 <sortCheck+0x41e>
    284a:	dc 01       	movw	r26, r24
    284c:	aa 0f       	add	r26, r26
    284e:	bb 1f       	adc	r27, r27
    2850:	aa 0f       	add	r26, r26
    2852:	bb 1f       	adc	r27, r27
    2854:	a1 57       	subi	r26, 0x71	; 113
    2856:	bd 4f       	sbci	r27, 0xFD	; 253
    2858:	12 96       	adiw	r26, 0x02	; 2
    285a:	8d 91       	ld	r24, X+
    285c:	9c 91       	ld	r25, X
    285e:	13 97       	sbiw	r26, 0x03	; 3
    2860:	01 96       	adiw	r24, 0x01	; 1
    2862:	19 f4       	brne	.+6      	; 0x286a <sortCheck+0x3a4>
    2864:	3f c0       	rjmp	.+126    	; 0x28e4 <sortCheck+0x41e>
    2866:	ab 2b       	or	r26, r27
    2868:	e9 f5       	brne	.+122    	; 0x28e4 <sortCheck+0x41e>
    286a:	2f 3f       	cpi	r18, 0xFF	; 255
    286c:	3f 4f       	sbci	r19, 0xFF	; 255
    286e:	d1 f5       	brne	.+116    	; 0x28e4 <sortCheck+0x41e>
		if (arm[arm0] == color[adj])
    2870:	4e 17       	cp	r20, r30
    2872:	5f 07       	cpc	r21, r31
    2874:	31 f4       	brne	.+12     	; 0x2882 <sortCheck+0x3bc>
		sortDrop(arm1, ct % 2);
    2876:	6b 2d       	mov	r22, r11
    2878:	7a 2d       	mov	r23, r10
    287a:	c8 01       	movw	r24, r16
    287c:	0e 94 1c 0c 	call	0x1838	; 0x1838 <sortDrop>
    2880:	31 c0       	rjmp	.+98     	; 0x28e4 <sortCheck+0x41e>
		else sortDrop(arm0, ct % 2);
    2882:	6b 2d       	mov	r22, r11
    2884:	7a 2d       	mov	r23, r10
    2886:	ce 01       	movw	r24, r28
    2888:	0e 94 1c 0c 	call	0x1838	; 0x1838 <sortDrop>
    288c:	2b c0       	rjmp	.+86     	; 0x28e4 <sortCheck+0x41e>
		else if (armCount == 1 && (term[adj][0] == -1 || term[adj][1] == -1) && sort[ct % 2] != -1)
    288e:	11 97       	sbiw	r26, 0x01	; 1
    2890:	49 f5       	brne	.+82     	; 0x28e4 <sortCheck+0x41e>
    2892:	dc 01       	movw	r26, r24
    2894:	aa 0f       	add	r26, r26
    2896:	bb 1f       	adc	r27, r27
    2898:	aa 0f       	add	r26, r26
    289a:	bb 1f       	adc	r27, r27
    289c:	a1 57       	subi	r26, 0x71	; 113
    289e:	bd 4f       	sbci	r27, 0xFD	; 253
    28a0:	4d 91       	ld	r20, X+
    28a2:	5c 91       	ld	r21, X
    28a4:	4f 3f       	cpi	r20, 0xFF	; 255
    28a6:	5f 4f       	sbci	r21, 0xFF	; 255
    28a8:	69 f0       	breq	.+26     	; 0x28c4 <sortCheck+0x3fe>
    28aa:	dc 01       	movw	r26, r24
    28ac:	aa 0f       	add	r26, r26
    28ae:	bb 1f       	adc	r27, r27
    28b0:	aa 0f       	add	r26, r26
    28b2:	bb 1f       	adc	r27, r27
    28b4:	a1 57       	subi	r26, 0x71	; 113
    28b6:	bd 4f       	sbci	r27, 0xFD	; 253
    28b8:	12 96       	adiw	r26, 0x02	; 2
    28ba:	8d 91       	ld	r24, X+
    28bc:	9c 91       	ld	r25, X
    28be:	13 97       	sbiw	r26, 0x03	; 3
    28c0:	01 96       	adiw	r24, 0x01	; 1
    28c2:	81 f4       	brne	.+32     	; 0x28e4 <sortCheck+0x41e>
    28c4:	2f 3f       	cpi	r18, 0xFF	; 255
    28c6:	3f 4f       	sbci	r19, 0xFF	; 255
    28c8:	69 f0       	breq	.+26     	; 0x28e4 <sortCheck+0x41e>
		if (arm[arm0] == -1)
    28ca:	31 96       	adiw	r30, 0x01	; 1
    28cc:	31 f4       	brne	.+12     	; 0x28da <sortCheck+0x414>
		pickSort(arm0, ct % 2);
    28ce:	6b 2d       	mov	r22, r11
    28d0:	7a 2d       	mov	r23, r10
    28d2:	ce 01       	movw	r24, r28
    28d4:	0e 94 56 0b 	call	0x16ac	; 0x16ac <pickSort>
    28d8:	05 c0       	rjmp	.+10     	; 0x28e4 <sortCheck+0x41e>
		else	pickSort(arm1, ct % 2);
    28da:	6b 2d       	mov	r22, r11
    28dc:	7a 2d       	mov	r23, r10
    28de:	c8 01       	movw	r24, r16
    28e0:	0e 94 56 0b 	call	0x16ac	; 0x16ac <pickSort>
		ct = adj;
    28e4:	80 91 af 02 	lds	r24, 0x02AF
    28e8:	90 91 b0 02 	lds	r25, 0x02B0
    28ec:	90 93 8c 02 	sts	0x028C, r25
    28f0:	80 93 8b 02 	sts	0x028B, r24
	}
	lcd_print(2,15,ct,1);
    28f4:	40 91 8b 02 	lds	r20, 0x028B
    28f8:	50 91 8c 02 	lds	r21, 0x028C
    28fc:	21 e0       	ldi	r18, 0x01	; 1
    28fe:	30 e0       	ldi	r19, 0x00	; 0
    2900:	6f e0       	ldi	r22, 0x0F	; 15
    2902:	82 e0       	ldi	r24, 0x02	; 2
    2904:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_print>
	buzzer();
    2908:	0e 94 14 08 	call	0x1028	; 0x1028 <buzzer>
    290c:	7f ef       	ldi	r23, 0xFF	; 255
    290e:	8f ef       	ldi	r24, 0xFF	; 255
    2910:	9c e2       	ldi	r25, 0x2C	; 44
    2912:	71 50       	subi	r23, 0x01	; 1
    2914:	80 40       	sbci	r24, 0x00	; 0
    2916:	90 40       	sbci	r25, 0x00	; 0
    2918:	e1 f7       	brne	.-8      	; 0x2912 <sortCheck+0x44c>
    291a:	00 c0       	rjmp	.+0      	; 0x291c <sortCheck+0x456>
    291c:	00 00       	nop
/**************************************************
******************SORT*****************************
**************************************************/
int adjCount(int ct)
{
	return (ct + 2) % 4;
    291e:	80 91 8b 02 	lds	r24, 0x028B
    2922:	90 91 8c 02 	lds	r25, 0x028C
    2926:	02 96       	adiw	r24, 0x02	; 2
    2928:	83 70       	andi	r24, 0x03	; 3
    292a:	90 78       	andi	r25, 0x80	; 128
    292c:	99 23       	and	r25, r25
    292e:	24 f4       	brge	.+8      	; 0x2938 <sortCheck+0x472>
    2930:	01 97       	sbiw	r24, 0x01	; 1
    2932:	8c 6f       	ori	r24, 0xFC	; 252
    2934:	9f 6f       	ori	r25, 0xFF	; 255
    2936:	01 96       	adiw	r24, 0x01	; 1
		ct = adj;
	}
	lcd_print(2,15,ct,1);
	buzzer();
	_delay_ms(1000);
	adj = adjCount(ct);
    2938:	90 93 b0 02 	sts	0x02B0, r25
    293c:	80 93 af 02 	sts	0x02AF, r24
}
    2940:	df 91       	pop	r29
    2942:	cf 91       	pop	r28
    2944:	1f 91       	pop	r17
    2946:	0f 91       	pop	r16
    2948:	ff 90       	pop	r15
    294a:	ef 90       	pop	r14
    294c:	df 90       	pop	r13
    294e:	cf 90       	pop	r12
    2950:	bf 90       	pop	r11
    2952:	af 90       	pop	r10
    2954:	9f 90       	pop	r9
    2956:	8f 90       	pop	r8
    2958:	08 95       	ret

0000295a <main>:
	_delay_ms(1000);
}
int main()
{
	int i=0;
	init_devices();
    295a:	0e 94 d6 04 	call	0x9ac	; 0x9ac <init_devices>
	lcd_set_4bit();
    295e:	0e 94 94 00 	call	0x128	; 0x128 <lcd_set_4bit>
	lcd_init();
    2962:	0e 94 fe 00 	call	0x1fc	; 0x1fc <lcd_init>
	color_sensor_scaling();
    2966:	0e 94 5d 03 	call	0x6ba	; 0x6ba <color_sensor_scaling>
	stop();
	lcd_print(2,11,scan(),1);
	stop();
	while(1);
	*/
	setIndicatorAndColor();
    296a:	0e 94 27 06 	call	0xc4e	; 0xc4e <setIndicatorAndColor>
	threshold=6000;
    296e:	80 e7       	ldi	r24, 0x70	; 112
    2970:	97 e1       	ldi	r25, 0x17	; 23
    2972:	90 93 71 02 	sts	0x0271, r25
    2976:	80 93 70 02 	sts	0x0270, r24
	ct = 0; adj = 2;
    297a:	10 92 8c 02 	sts	0x028C, r1
    297e:	10 92 8b 02 	sts	0x028B, r1
    2982:	82 e0       	ldi	r24, 0x02	; 2
    2984:	90 e0       	ldi	r25, 0x00	; 0
    2986:	90 93 b0 02 	sts	0x02B0, r25
    298a:	80 93 af 02 	sts	0x02AF, r24
	//lcd("Begin");
	while (sorted<total)
    298e:	20 91 5a 02 	lds	r18, 0x025A
    2992:	30 91 5b 02 	lds	r19, 0x025B
    2996:	80 91 00 02 	lds	r24, 0x0200
    299a:	90 91 01 02 	lds	r25, 0x0201
    299e:	28 17       	cp	r18, r24
    29a0:	39 07       	cpc	r19, r25
    29a2:	ac f5       	brge	.+106    	; 0x2a0e <main+0xb4>
	{
		canDrop();
    29a4:	69 da       	rcall	.-2862   	; 0x1e78 <canDrop>
		//buzzer_on();
		//_delay_ms(500);
		//buzzer_off();
		if (visitedCount == 3)
    29a6:	80 91 56 02 	lds	r24, 0x0256
    29aa:	90 91 57 02 	lds	r25, 0x0257
    29ae:	03 97       	sbiw	r24, 0x03	; 3
    29b0:	11 f4       	brne	.+4      	; 0x29b6 <main+0x5c>
			predict();
    29b2:	0e 94 11 0a 	call	0x1422	; 0x1422 <predict>
		if (sorted == total)
    29b6:	20 91 5a 02 	lds	r18, 0x025A
    29ba:	30 91 5b 02 	lds	r19, 0x025B
    29be:	80 91 00 02 	lds	r24, 0x0200
    29c2:	90 91 01 02 	lds	r25, 0x0201
    29c6:	28 17       	cp	r18, r24
    29c8:	39 07       	cpc	r19, r25
    29ca:	09 f1       	breq	.+66     	; 0x2a0e <main+0xb4>
			break;
		pickup();
    29cc:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <pickup>
		traverseToSort(ct, ct % 2 + 4);
    29d0:	80 91 8b 02 	lds	r24, 0x028B
    29d4:	90 91 8c 02 	lds	r25, 0x028C
    29d8:	bc 01       	movw	r22, r24
    29da:	61 70       	andi	r22, 0x01	; 1
    29dc:	70 78       	andi	r23, 0x80	; 128
    29de:	77 23       	and	r23, r23
    29e0:	34 f4       	brge	.+12     	; 0x29ee <main+0x94>
    29e2:	61 50       	subi	r22, 0x01	; 1
    29e4:	71 09       	sbc	r23, r1
    29e6:	6e 6f       	ori	r22, 0xFE	; 254
    29e8:	7f 6f       	ori	r23, 0xFF	; 255
    29ea:	6f 5f       	subi	r22, 0xFF	; 255
    29ec:	7f 4f       	sbci	r23, 0xFF	; 255
    29ee:	6c 5f       	subi	r22, 0xFC	; 252
    29f0:	7f 4f       	sbci	r23, 0xFF	; 255
    29f2:	0e 94 20 08 	call	0x1040	; 0x1040 <traverseToSort>
		sortCheck();
    29f6:	67 dd       	rcall	.-1330   	; 0x24c6 <sortCheck>
	*/
	setIndicatorAndColor();
	threshold=6000;
	ct = 0; adj = 2;
	//lcd("Begin");
	while (sorted<total)
    29f8:	20 91 5a 02 	lds	r18, 0x025A
    29fc:	30 91 5b 02 	lds	r19, 0x025B
    2a00:	80 91 00 02 	lds	r24, 0x0200
    2a04:	90 91 01 02 	lds	r25, 0x0201
    2a08:	28 17       	cp	r18, r24
    2a0a:	39 07       	cpc	r19, r25
    2a0c:	5c f2       	brlt	.-106    	; 0x29a4 <main+0x4a>
		//..printf("%d %d\n", term[i][0], term[i][1]);
	//..printf("Sort 0=%dSort 1=%d\nArm 0=%dArm 1=%d\n", sort[0], sort[1], arm[0], arm[1]);
	//..printf("Cost=%d\nSORTED!!!!!\n", cost + 7);
	//getch();
	return 0;
    2a0e:	80 e0       	ldi	r24, 0x00	; 0
    2a10:	90 e0       	ldi	r25, 0x00	; 0
    2a12:	08 95       	ret

00002a14 <__subsf3>:
    2a14:	50 58       	subi	r21, 0x80	; 128

00002a16 <__addsf3>:
    2a16:	bb 27       	eor	r27, r27
    2a18:	aa 27       	eor	r26, r26
    2a1a:	0e d0       	rcall	.+28     	; 0x2a38 <__addsf3x>
    2a1c:	48 c1       	rjmp	.+656    	; 0x2cae <__fp_round>
    2a1e:	39 d1       	rcall	.+626    	; 0x2c92 <__fp_pscA>
    2a20:	30 f0       	brcs	.+12     	; 0x2a2e <__addsf3+0x18>
    2a22:	3e d1       	rcall	.+636    	; 0x2ca0 <__fp_pscB>
    2a24:	20 f0       	brcs	.+8      	; 0x2a2e <__addsf3+0x18>
    2a26:	31 f4       	brne	.+12     	; 0x2a34 <__addsf3+0x1e>
    2a28:	9f 3f       	cpi	r25, 0xFF	; 255
    2a2a:	11 f4       	brne	.+4      	; 0x2a30 <__addsf3+0x1a>
    2a2c:	1e f4       	brtc	.+6      	; 0x2a34 <__addsf3+0x1e>
    2a2e:	2e c1       	rjmp	.+604    	; 0x2c8c <__fp_nan>
    2a30:	0e f4       	brtc	.+2      	; 0x2a34 <__addsf3+0x1e>
    2a32:	e0 95       	com	r30
    2a34:	e7 fb       	bst	r30, 7
    2a36:	24 c1       	rjmp	.+584    	; 0x2c80 <__fp_inf>

00002a38 <__addsf3x>:
    2a38:	e9 2f       	mov	r30, r25
    2a3a:	4a d1       	rcall	.+660    	; 0x2cd0 <__fp_split3>
    2a3c:	80 f3       	brcs	.-32     	; 0x2a1e <__addsf3+0x8>
    2a3e:	ba 17       	cp	r27, r26
    2a40:	62 07       	cpc	r22, r18
    2a42:	73 07       	cpc	r23, r19
    2a44:	84 07       	cpc	r24, r20
    2a46:	95 07       	cpc	r25, r21
    2a48:	18 f0       	brcs	.+6      	; 0x2a50 <__addsf3x+0x18>
    2a4a:	71 f4       	brne	.+28     	; 0x2a68 <__addsf3x+0x30>
    2a4c:	9e f5       	brtc	.+102    	; 0x2ab4 <__addsf3x+0x7c>
    2a4e:	62 c1       	rjmp	.+708    	; 0x2d14 <__fp_zero>
    2a50:	0e f4       	brtc	.+2      	; 0x2a54 <__addsf3x+0x1c>
    2a52:	e0 95       	com	r30
    2a54:	0b 2e       	mov	r0, r27
    2a56:	ba 2f       	mov	r27, r26
    2a58:	a0 2d       	mov	r26, r0
    2a5a:	0b 01       	movw	r0, r22
    2a5c:	b9 01       	movw	r22, r18
    2a5e:	90 01       	movw	r18, r0
    2a60:	0c 01       	movw	r0, r24
    2a62:	ca 01       	movw	r24, r20
    2a64:	a0 01       	movw	r20, r0
    2a66:	11 24       	eor	r1, r1
    2a68:	ff 27       	eor	r31, r31
    2a6a:	59 1b       	sub	r21, r25
    2a6c:	99 f0       	breq	.+38     	; 0x2a94 <__addsf3x+0x5c>
    2a6e:	59 3f       	cpi	r21, 0xF9	; 249
    2a70:	50 f4       	brcc	.+20     	; 0x2a86 <__addsf3x+0x4e>
    2a72:	50 3e       	cpi	r21, 0xE0	; 224
    2a74:	68 f1       	brcs	.+90     	; 0x2ad0 <__addsf3x+0x98>
    2a76:	1a 16       	cp	r1, r26
    2a78:	f0 40       	sbci	r31, 0x00	; 0
    2a7a:	a2 2f       	mov	r26, r18
    2a7c:	23 2f       	mov	r18, r19
    2a7e:	34 2f       	mov	r19, r20
    2a80:	44 27       	eor	r20, r20
    2a82:	58 5f       	subi	r21, 0xF8	; 248
    2a84:	f3 cf       	rjmp	.-26     	; 0x2a6c <__addsf3x+0x34>
    2a86:	46 95       	lsr	r20
    2a88:	37 95       	ror	r19
    2a8a:	27 95       	ror	r18
    2a8c:	a7 95       	ror	r26
    2a8e:	f0 40       	sbci	r31, 0x00	; 0
    2a90:	53 95       	inc	r21
    2a92:	c9 f7       	brne	.-14     	; 0x2a86 <__addsf3x+0x4e>
    2a94:	7e f4       	brtc	.+30     	; 0x2ab4 <__addsf3x+0x7c>
    2a96:	1f 16       	cp	r1, r31
    2a98:	ba 0b       	sbc	r27, r26
    2a9a:	62 0b       	sbc	r22, r18
    2a9c:	73 0b       	sbc	r23, r19
    2a9e:	84 0b       	sbc	r24, r20
    2aa0:	ba f0       	brmi	.+46     	; 0x2ad0 <__addsf3x+0x98>
    2aa2:	91 50       	subi	r25, 0x01	; 1
    2aa4:	a1 f0       	breq	.+40     	; 0x2ace <__addsf3x+0x96>
    2aa6:	ff 0f       	add	r31, r31
    2aa8:	bb 1f       	adc	r27, r27
    2aaa:	66 1f       	adc	r22, r22
    2aac:	77 1f       	adc	r23, r23
    2aae:	88 1f       	adc	r24, r24
    2ab0:	c2 f7       	brpl	.-16     	; 0x2aa2 <__addsf3x+0x6a>
    2ab2:	0e c0       	rjmp	.+28     	; 0x2ad0 <__addsf3x+0x98>
    2ab4:	ba 0f       	add	r27, r26
    2ab6:	62 1f       	adc	r22, r18
    2ab8:	73 1f       	adc	r23, r19
    2aba:	84 1f       	adc	r24, r20
    2abc:	48 f4       	brcc	.+18     	; 0x2ad0 <__addsf3x+0x98>
    2abe:	87 95       	ror	r24
    2ac0:	77 95       	ror	r23
    2ac2:	67 95       	ror	r22
    2ac4:	b7 95       	ror	r27
    2ac6:	f7 95       	ror	r31
    2ac8:	9e 3f       	cpi	r25, 0xFE	; 254
    2aca:	08 f0       	brcs	.+2      	; 0x2ace <__addsf3x+0x96>
    2acc:	b3 cf       	rjmp	.-154    	; 0x2a34 <__addsf3+0x1e>
    2ace:	93 95       	inc	r25
    2ad0:	88 0f       	add	r24, r24
    2ad2:	08 f0       	brcs	.+2      	; 0x2ad6 <__addsf3x+0x9e>
    2ad4:	99 27       	eor	r25, r25
    2ad6:	ee 0f       	add	r30, r30
    2ad8:	97 95       	ror	r25
    2ada:	87 95       	ror	r24
    2adc:	08 95       	ret

00002ade <__divsf3>:
    2ade:	0c d0       	rcall	.+24     	; 0x2af8 <__divsf3x>
    2ae0:	e6 c0       	rjmp	.+460    	; 0x2cae <__fp_round>
    2ae2:	de d0       	rcall	.+444    	; 0x2ca0 <__fp_pscB>
    2ae4:	40 f0       	brcs	.+16     	; 0x2af6 <__divsf3+0x18>
    2ae6:	d5 d0       	rcall	.+426    	; 0x2c92 <__fp_pscA>
    2ae8:	30 f0       	brcs	.+12     	; 0x2af6 <__divsf3+0x18>
    2aea:	21 f4       	brne	.+8      	; 0x2af4 <__divsf3+0x16>
    2aec:	5f 3f       	cpi	r21, 0xFF	; 255
    2aee:	19 f0       	breq	.+6      	; 0x2af6 <__divsf3+0x18>
    2af0:	c7 c0       	rjmp	.+398    	; 0x2c80 <__fp_inf>
    2af2:	51 11       	cpse	r21, r1
    2af4:	10 c1       	rjmp	.+544    	; 0x2d16 <__fp_szero>
    2af6:	ca c0       	rjmp	.+404    	; 0x2c8c <__fp_nan>

00002af8 <__divsf3x>:
    2af8:	eb d0       	rcall	.+470    	; 0x2cd0 <__fp_split3>
    2afa:	98 f3       	brcs	.-26     	; 0x2ae2 <__divsf3+0x4>

00002afc <__divsf3_pse>:
    2afc:	99 23       	and	r25, r25
    2afe:	c9 f3       	breq	.-14     	; 0x2af2 <__divsf3+0x14>
    2b00:	55 23       	and	r21, r21
    2b02:	b1 f3       	breq	.-20     	; 0x2af0 <__divsf3+0x12>
    2b04:	95 1b       	sub	r25, r21
    2b06:	55 0b       	sbc	r21, r21
    2b08:	bb 27       	eor	r27, r27
    2b0a:	aa 27       	eor	r26, r26
    2b0c:	62 17       	cp	r22, r18
    2b0e:	73 07       	cpc	r23, r19
    2b10:	84 07       	cpc	r24, r20
    2b12:	38 f0       	brcs	.+14     	; 0x2b22 <__divsf3_pse+0x26>
    2b14:	9f 5f       	subi	r25, 0xFF	; 255
    2b16:	5f 4f       	sbci	r21, 0xFF	; 255
    2b18:	22 0f       	add	r18, r18
    2b1a:	33 1f       	adc	r19, r19
    2b1c:	44 1f       	adc	r20, r20
    2b1e:	aa 1f       	adc	r26, r26
    2b20:	a9 f3       	breq	.-22     	; 0x2b0c <__divsf3_pse+0x10>
    2b22:	33 d0       	rcall	.+102    	; 0x2b8a <__divsf3_pse+0x8e>
    2b24:	0e 2e       	mov	r0, r30
    2b26:	3a f0       	brmi	.+14     	; 0x2b36 <__divsf3_pse+0x3a>
    2b28:	e0 e8       	ldi	r30, 0x80	; 128
    2b2a:	30 d0       	rcall	.+96     	; 0x2b8c <__divsf3_pse+0x90>
    2b2c:	91 50       	subi	r25, 0x01	; 1
    2b2e:	50 40       	sbci	r21, 0x00	; 0
    2b30:	e6 95       	lsr	r30
    2b32:	00 1c       	adc	r0, r0
    2b34:	ca f7       	brpl	.-14     	; 0x2b28 <__divsf3_pse+0x2c>
    2b36:	29 d0       	rcall	.+82     	; 0x2b8a <__divsf3_pse+0x8e>
    2b38:	fe 2f       	mov	r31, r30
    2b3a:	27 d0       	rcall	.+78     	; 0x2b8a <__divsf3_pse+0x8e>
    2b3c:	66 0f       	add	r22, r22
    2b3e:	77 1f       	adc	r23, r23
    2b40:	88 1f       	adc	r24, r24
    2b42:	bb 1f       	adc	r27, r27
    2b44:	26 17       	cp	r18, r22
    2b46:	37 07       	cpc	r19, r23
    2b48:	48 07       	cpc	r20, r24
    2b4a:	ab 07       	cpc	r26, r27
    2b4c:	b0 e8       	ldi	r27, 0x80	; 128
    2b4e:	09 f0       	breq	.+2      	; 0x2b52 <__divsf3_pse+0x56>
    2b50:	bb 0b       	sbc	r27, r27
    2b52:	80 2d       	mov	r24, r0
    2b54:	bf 01       	movw	r22, r30
    2b56:	ff 27       	eor	r31, r31
    2b58:	93 58       	subi	r25, 0x83	; 131
    2b5a:	5f 4f       	sbci	r21, 0xFF	; 255
    2b5c:	2a f0       	brmi	.+10     	; 0x2b68 <__divsf3_pse+0x6c>
    2b5e:	9e 3f       	cpi	r25, 0xFE	; 254
    2b60:	51 05       	cpc	r21, r1
    2b62:	68 f0       	brcs	.+26     	; 0x2b7e <__divsf3_pse+0x82>
    2b64:	8d c0       	rjmp	.+282    	; 0x2c80 <__fp_inf>
    2b66:	d7 c0       	rjmp	.+430    	; 0x2d16 <__fp_szero>
    2b68:	5f 3f       	cpi	r21, 0xFF	; 255
    2b6a:	ec f3       	brlt	.-6      	; 0x2b66 <__divsf3_pse+0x6a>
    2b6c:	98 3e       	cpi	r25, 0xE8	; 232
    2b6e:	dc f3       	brlt	.-10     	; 0x2b66 <__divsf3_pse+0x6a>
    2b70:	86 95       	lsr	r24
    2b72:	77 95       	ror	r23
    2b74:	67 95       	ror	r22
    2b76:	b7 95       	ror	r27
    2b78:	f7 95       	ror	r31
    2b7a:	9f 5f       	subi	r25, 0xFF	; 255
    2b7c:	c9 f7       	brne	.-14     	; 0x2b70 <__divsf3_pse+0x74>
    2b7e:	88 0f       	add	r24, r24
    2b80:	91 1d       	adc	r25, r1
    2b82:	96 95       	lsr	r25
    2b84:	87 95       	ror	r24
    2b86:	97 f9       	bld	r25, 7
    2b88:	08 95       	ret
    2b8a:	e1 e0       	ldi	r30, 0x01	; 1
    2b8c:	66 0f       	add	r22, r22
    2b8e:	77 1f       	adc	r23, r23
    2b90:	88 1f       	adc	r24, r24
    2b92:	bb 1f       	adc	r27, r27
    2b94:	62 17       	cp	r22, r18
    2b96:	73 07       	cpc	r23, r19
    2b98:	84 07       	cpc	r24, r20
    2b9a:	ba 07       	cpc	r27, r26
    2b9c:	20 f0       	brcs	.+8      	; 0x2ba6 <__divsf3_pse+0xaa>
    2b9e:	62 1b       	sub	r22, r18
    2ba0:	73 0b       	sbc	r23, r19
    2ba2:	84 0b       	sbc	r24, r20
    2ba4:	ba 0b       	sbc	r27, r26
    2ba6:	ee 1f       	adc	r30, r30
    2ba8:	88 f7       	brcc	.-30     	; 0x2b8c <__divsf3_pse+0x90>
    2baa:	e0 95       	com	r30
    2bac:	08 95       	ret

00002bae <__fixunssfsi>:
    2bae:	98 d0       	rcall	.+304    	; 0x2ce0 <__fp_splitA>
    2bb0:	88 f0       	brcs	.+34     	; 0x2bd4 <__fixunssfsi+0x26>
    2bb2:	9f 57       	subi	r25, 0x7F	; 127
    2bb4:	90 f0       	brcs	.+36     	; 0x2bda <__fixunssfsi+0x2c>
    2bb6:	b9 2f       	mov	r27, r25
    2bb8:	99 27       	eor	r25, r25
    2bba:	b7 51       	subi	r27, 0x17	; 23
    2bbc:	a0 f0       	brcs	.+40     	; 0x2be6 <__fixunssfsi+0x38>
    2bbe:	d1 f0       	breq	.+52     	; 0x2bf4 <__fixunssfsi+0x46>
    2bc0:	66 0f       	add	r22, r22
    2bc2:	77 1f       	adc	r23, r23
    2bc4:	88 1f       	adc	r24, r24
    2bc6:	99 1f       	adc	r25, r25
    2bc8:	1a f0       	brmi	.+6      	; 0x2bd0 <__fixunssfsi+0x22>
    2bca:	ba 95       	dec	r27
    2bcc:	c9 f7       	brne	.-14     	; 0x2bc0 <__fixunssfsi+0x12>
    2bce:	12 c0       	rjmp	.+36     	; 0x2bf4 <__fixunssfsi+0x46>
    2bd0:	b1 30       	cpi	r27, 0x01	; 1
    2bd2:	81 f0       	breq	.+32     	; 0x2bf4 <__fixunssfsi+0x46>
    2bd4:	9f d0       	rcall	.+318    	; 0x2d14 <__fp_zero>
    2bd6:	b1 e0       	ldi	r27, 0x01	; 1
    2bd8:	08 95       	ret
    2bda:	9c c0       	rjmp	.+312    	; 0x2d14 <__fp_zero>
    2bdc:	67 2f       	mov	r22, r23
    2bde:	78 2f       	mov	r23, r24
    2be0:	88 27       	eor	r24, r24
    2be2:	b8 5f       	subi	r27, 0xF8	; 248
    2be4:	39 f0       	breq	.+14     	; 0x2bf4 <__fixunssfsi+0x46>
    2be6:	b9 3f       	cpi	r27, 0xF9	; 249
    2be8:	cc f3       	brlt	.-14     	; 0x2bdc <__fixunssfsi+0x2e>
    2bea:	86 95       	lsr	r24
    2bec:	77 95       	ror	r23
    2bee:	67 95       	ror	r22
    2bf0:	b3 95       	inc	r27
    2bf2:	d9 f7       	brne	.-10     	; 0x2bea <__fixunssfsi+0x3c>
    2bf4:	3e f4       	brtc	.+14     	; 0x2c04 <__fixunssfsi+0x56>
    2bf6:	90 95       	com	r25
    2bf8:	80 95       	com	r24
    2bfa:	70 95       	com	r23
    2bfc:	61 95       	neg	r22
    2bfe:	7f 4f       	sbci	r23, 0xFF	; 255
    2c00:	8f 4f       	sbci	r24, 0xFF	; 255
    2c02:	9f 4f       	sbci	r25, 0xFF	; 255
    2c04:	08 95       	ret

00002c06 <__floatunsisf>:
    2c06:	e8 94       	clt
    2c08:	09 c0       	rjmp	.+18     	; 0x2c1c <__floatsisf+0x12>

00002c0a <__floatsisf>:
    2c0a:	97 fb       	bst	r25, 7
    2c0c:	3e f4       	brtc	.+14     	; 0x2c1c <__floatsisf+0x12>
    2c0e:	90 95       	com	r25
    2c10:	80 95       	com	r24
    2c12:	70 95       	com	r23
    2c14:	61 95       	neg	r22
    2c16:	7f 4f       	sbci	r23, 0xFF	; 255
    2c18:	8f 4f       	sbci	r24, 0xFF	; 255
    2c1a:	9f 4f       	sbci	r25, 0xFF	; 255
    2c1c:	99 23       	and	r25, r25
    2c1e:	a9 f0       	breq	.+42     	; 0x2c4a <__floatsisf+0x40>
    2c20:	f9 2f       	mov	r31, r25
    2c22:	96 e9       	ldi	r25, 0x96	; 150
    2c24:	bb 27       	eor	r27, r27
    2c26:	93 95       	inc	r25
    2c28:	f6 95       	lsr	r31
    2c2a:	87 95       	ror	r24
    2c2c:	77 95       	ror	r23
    2c2e:	67 95       	ror	r22
    2c30:	b7 95       	ror	r27
    2c32:	f1 11       	cpse	r31, r1
    2c34:	f8 cf       	rjmp	.-16     	; 0x2c26 <__floatsisf+0x1c>
    2c36:	fa f4       	brpl	.+62     	; 0x2c76 <__floatsisf+0x6c>
    2c38:	bb 0f       	add	r27, r27
    2c3a:	11 f4       	brne	.+4      	; 0x2c40 <__floatsisf+0x36>
    2c3c:	60 ff       	sbrs	r22, 0
    2c3e:	1b c0       	rjmp	.+54     	; 0x2c76 <__floatsisf+0x6c>
    2c40:	6f 5f       	subi	r22, 0xFF	; 255
    2c42:	7f 4f       	sbci	r23, 0xFF	; 255
    2c44:	8f 4f       	sbci	r24, 0xFF	; 255
    2c46:	9f 4f       	sbci	r25, 0xFF	; 255
    2c48:	16 c0       	rjmp	.+44     	; 0x2c76 <__floatsisf+0x6c>
    2c4a:	88 23       	and	r24, r24
    2c4c:	11 f0       	breq	.+4      	; 0x2c52 <__floatsisf+0x48>
    2c4e:	96 e9       	ldi	r25, 0x96	; 150
    2c50:	11 c0       	rjmp	.+34     	; 0x2c74 <__floatsisf+0x6a>
    2c52:	77 23       	and	r23, r23
    2c54:	21 f0       	breq	.+8      	; 0x2c5e <__floatsisf+0x54>
    2c56:	9e e8       	ldi	r25, 0x8E	; 142
    2c58:	87 2f       	mov	r24, r23
    2c5a:	76 2f       	mov	r23, r22
    2c5c:	05 c0       	rjmp	.+10     	; 0x2c68 <__floatsisf+0x5e>
    2c5e:	66 23       	and	r22, r22
    2c60:	71 f0       	breq	.+28     	; 0x2c7e <__floatsisf+0x74>
    2c62:	96 e8       	ldi	r25, 0x86	; 134
    2c64:	86 2f       	mov	r24, r22
    2c66:	70 e0       	ldi	r23, 0x00	; 0
    2c68:	60 e0       	ldi	r22, 0x00	; 0
    2c6a:	2a f0       	brmi	.+10     	; 0x2c76 <__floatsisf+0x6c>
    2c6c:	9a 95       	dec	r25
    2c6e:	66 0f       	add	r22, r22
    2c70:	77 1f       	adc	r23, r23
    2c72:	88 1f       	adc	r24, r24
    2c74:	da f7       	brpl	.-10     	; 0x2c6c <__floatsisf+0x62>
    2c76:	88 0f       	add	r24, r24
    2c78:	96 95       	lsr	r25
    2c7a:	87 95       	ror	r24
    2c7c:	97 f9       	bld	r25, 7
    2c7e:	08 95       	ret

00002c80 <__fp_inf>:
    2c80:	97 f9       	bld	r25, 7
    2c82:	9f 67       	ori	r25, 0x7F	; 127
    2c84:	80 e8       	ldi	r24, 0x80	; 128
    2c86:	70 e0       	ldi	r23, 0x00	; 0
    2c88:	60 e0       	ldi	r22, 0x00	; 0
    2c8a:	08 95       	ret

00002c8c <__fp_nan>:
    2c8c:	9f ef       	ldi	r25, 0xFF	; 255
    2c8e:	80 ec       	ldi	r24, 0xC0	; 192
    2c90:	08 95       	ret

00002c92 <__fp_pscA>:
    2c92:	00 24       	eor	r0, r0
    2c94:	0a 94       	dec	r0
    2c96:	16 16       	cp	r1, r22
    2c98:	17 06       	cpc	r1, r23
    2c9a:	18 06       	cpc	r1, r24
    2c9c:	09 06       	cpc	r0, r25
    2c9e:	08 95       	ret

00002ca0 <__fp_pscB>:
    2ca0:	00 24       	eor	r0, r0
    2ca2:	0a 94       	dec	r0
    2ca4:	12 16       	cp	r1, r18
    2ca6:	13 06       	cpc	r1, r19
    2ca8:	14 06       	cpc	r1, r20
    2caa:	05 06       	cpc	r0, r21
    2cac:	08 95       	ret

00002cae <__fp_round>:
    2cae:	09 2e       	mov	r0, r25
    2cb0:	03 94       	inc	r0
    2cb2:	00 0c       	add	r0, r0
    2cb4:	11 f4       	brne	.+4      	; 0x2cba <__fp_round+0xc>
    2cb6:	88 23       	and	r24, r24
    2cb8:	52 f0       	brmi	.+20     	; 0x2cce <__fp_round+0x20>
    2cba:	bb 0f       	add	r27, r27
    2cbc:	40 f4       	brcc	.+16     	; 0x2cce <__fp_round+0x20>
    2cbe:	bf 2b       	or	r27, r31
    2cc0:	11 f4       	brne	.+4      	; 0x2cc6 <__fp_round+0x18>
    2cc2:	60 ff       	sbrs	r22, 0
    2cc4:	04 c0       	rjmp	.+8      	; 0x2cce <__fp_round+0x20>
    2cc6:	6f 5f       	subi	r22, 0xFF	; 255
    2cc8:	7f 4f       	sbci	r23, 0xFF	; 255
    2cca:	8f 4f       	sbci	r24, 0xFF	; 255
    2ccc:	9f 4f       	sbci	r25, 0xFF	; 255
    2cce:	08 95       	ret

00002cd0 <__fp_split3>:
    2cd0:	57 fd       	sbrc	r21, 7
    2cd2:	90 58       	subi	r25, 0x80	; 128
    2cd4:	44 0f       	add	r20, r20
    2cd6:	55 1f       	adc	r21, r21
    2cd8:	59 f0       	breq	.+22     	; 0x2cf0 <__fp_splitA+0x10>
    2cda:	5f 3f       	cpi	r21, 0xFF	; 255
    2cdc:	71 f0       	breq	.+28     	; 0x2cfa <__fp_splitA+0x1a>
    2cde:	47 95       	ror	r20

00002ce0 <__fp_splitA>:
    2ce0:	88 0f       	add	r24, r24
    2ce2:	97 fb       	bst	r25, 7
    2ce4:	99 1f       	adc	r25, r25
    2ce6:	61 f0       	breq	.+24     	; 0x2d00 <__fp_splitA+0x20>
    2ce8:	9f 3f       	cpi	r25, 0xFF	; 255
    2cea:	79 f0       	breq	.+30     	; 0x2d0a <__fp_splitA+0x2a>
    2cec:	87 95       	ror	r24
    2cee:	08 95       	ret
    2cf0:	12 16       	cp	r1, r18
    2cf2:	13 06       	cpc	r1, r19
    2cf4:	14 06       	cpc	r1, r20
    2cf6:	55 1f       	adc	r21, r21
    2cf8:	f2 cf       	rjmp	.-28     	; 0x2cde <__fp_split3+0xe>
    2cfa:	46 95       	lsr	r20
    2cfc:	f1 df       	rcall	.-30     	; 0x2ce0 <__fp_splitA>
    2cfe:	08 c0       	rjmp	.+16     	; 0x2d10 <__fp_splitA+0x30>
    2d00:	16 16       	cp	r1, r22
    2d02:	17 06       	cpc	r1, r23
    2d04:	18 06       	cpc	r1, r24
    2d06:	99 1f       	adc	r25, r25
    2d08:	f1 cf       	rjmp	.-30     	; 0x2cec <__fp_splitA+0xc>
    2d0a:	86 95       	lsr	r24
    2d0c:	71 05       	cpc	r23, r1
    2d0e:	61 05       	cpc	r22, r1
    2d10:	08 94       	sec
    2d12:	08 95       	ret

00002d14 <__fp_zero>:
    2d14:	e8 94       	clt

00002d16 <__fp_szero>:
    2d16:	bb 27       	eor	r27, r27
    2d18:	66 27       	eor	r22, r22
    2d1a:	77 27       	eor	r23, r23
    2d1c:	cb 01       	movw	r24, r22
    2d1e:	97 f9       	bld	r25, 7
    2d20:	08 95       	ret

00002d22 <__divmodhi4>:
    2d22:	97 fb       	bst	r25, 7
    2d24:	07 2e       	mov	r0, r23
    2d26:	16 f4       	brtc	.+4      	; 0x2d2c <__divmodhi4+0xa>
    2d28:	00 94       	com	r0
    2d2a:	06 d0       	rcall	.+12     	; 0x2d38 <__divmodhi4_neg1>
    2d2c:	77 fd       	sbrc	r23, 7
    2d2e:	08 d0       	rcall	.+16     	; 0x2d40 <__divmodhi4_neg2>
    2d30:	1a d0       	rcall	.+52     	; 0x2d66 <__udivmodhi4>
    2d32:	07 fc       	sbrc	r0, 7
    2d34:	05 d0       	rcall	.+10     	; 0x2d40 <__divmodhi4_neg2>
    2d36:	3e f4       	brtc	.+14     	; 0x2d46 <__divmodhi4_exit>

00002d38 <__divmodhi4_neg1>:
    2d38:	90 95       	com	r25
    2d3a:	81 95       	neg	r24
    2d3c:	9f 4f       	sbci	r25, 0xFF	; 255
    2d3e:	08 95       	ret

00002d40 <__divmodhi4_neg2>:
    2d40:	70 95       	com	r23
    2d42:	61 95       	neg	r22
    2d44:	7f 4f       	sbci	r23, 0xFF	; 255

00002d46 <__divmodhi4_exit>:
    2d46:	08 95       	ret

00002d48 <__umulhisi3>:
    2d48:	a2 9f       	mul	r26, r18
    2d4a:	b0 01       	movw	r22, r0
    2d4c:	b3 9f       	mul	r27, r19
    2d4e:	c0 01       	movw	r24, r0
    2d50:	a3 9f       	mul	r26, r19
    2d52:	70 0d       	add	r23, r0
    2d54:	81 1d       	adc	r24, r1
    2d56:	11 24       	eor	r1, r1
    2d58:	91 1d       	adc	r25, r1
    2d5a:	b2 9f       	mul	r27, r18
    2d5c:	70 0d       	add	r23, r0
    2d5e:	81 1d       	adc	r24, r1
    2d60:	11 24       	eor	r1, r1
    2d62:	91 1d       	adc	r25, r1
    2d64:	08 95       	ret

00002d66 <__udivmodhi4>:
    2d66:	aa 1b       	sub	r26, r26
    2d68:	bb 1b       	sub	r27, r27
    2d6a:	51 e1       	ldi	r21, 0x11	; 17
    2d6c:	07 c0       	rjmp	.+14     	; 0x2d7c <__udivmodhi4_ep>

00002d6e <__udivmodhi4_loop>:
    2d6e:	aa 1f       	adc	r26, r26
    2d70:	bb 1f       	adc	r27, r27
    2d72:	a6 17       	cp	r26, r22
    2d74:	b7 07       	cpc	r27, r23
    2d76:	10 f0       	brcs	.+4      	; 0x2d7c <__udivmodhi4_ep>
    2d78:	a6 1b       	sub	r26, r22
    2d7a:	b7 0b       	sbc	r27, r23

00002d7c <__udivmodhi4_ep>:
    2d7c:	88 1f       	adc	r24, r24
    2d7e:	99 1f       	adc	r25, r25
    2d80:	5a 95       	dec	r21
    2d82:	a9 f7       	brne	.-22     	; 0x2d6e <__udivmodhi4_loop>
    2d84:	80 95       	com	r24
    2d86:	90 95       	com	r25
    2d88:	bc 01       	movw	r22, r24
    2d8a:	cd 01       	movw	r24, r26
    2d8c:	08 95       	ret

00002d8e <_exit>:
    2d8e:	f8 94       	cli

00002d90 <__stop_program>:
    2d90:	ff cf       	rjmp	.-2      	; 0x2d90 <__stop_program>
